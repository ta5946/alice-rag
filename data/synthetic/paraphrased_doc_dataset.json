{
    "a9a6980e9a0fbd534b9dd891bd289edd534b663f0867acf4d389e63b3a83e555": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# O2 Simulation Documentation\n\nWelcome to the O2 simulation documentation page! Use the links below to quickly navigate to the content you need.\n\nTo track the performance status of detectors in the MC, refer to this [Detector Status](https://codimd.web.cern.ch/gd7dbsjnQYC730WxnqJjPQ).\n\nThe documentation includes an introduction to the overall simulation workflow, along with dedicated sections for various specific topics.\n\n{% include horizontalcontents.html %}",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/README.md"
        }
    ],
    "67e303b6bdf52e0f5c9b9103ea621896657bddde32775a4161261a41b2f25238": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 5\ntitle: MCStepLogger\n---\n\n# MCStepLogger\n\nThis section provides an overview of the fundamental features of MCStepLogger. For a comprehensive explanation, consult the package's [readme](https://github.com/AliceO2Group/VMCStepLogger/tree/master/MCStepLogger).\nMCStepLogger is designed to log and analyze the individual steps generated by detector simulation engines based on the [Virtual Monte Carlo (VMC)](https://vmc-project.github.io/).\n\nTo integrate it with O2 simulations, ensure you use `o2-sim-serial` **instead of** `o2-sim`.\n\n## Basic usage\n\n```bash\nLD_PRELOAD=path_to/libMCStepLoggerInterceptSteps.so o2-sim-serial -m PIPE ITS TPC -n 10\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/mcsteplogger/README.md"
        }
    ],
    "fd192db1cb289bc9abdf1a6f220a730b674ab5f8394b6ecbc8fc17a87f56d9f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```bash\n[MCLOGGER:] START FLUSHING ----\n[STEPLOGGER]: executed 28 steps\n[STEPLOGGER]: moved 1 unique tracks\n[STEPLOGGER]: handled 1 unique types\n[STEPLOGGER]: VolName cave COUNT 23 SECONDARIES 0\n[STEPLOGGER]: VolName normalPCB1 COUNT 3 SECONDARIES 0\n[STEPLOGGER]: ----- END OF EVENT ------\n[FIELDLOGGER]: performed 21 steps\n[FIELDLOGGER]: VolName cave COUNT 20\n[FIELDLOGGER]: ----- END OF EVENT ------\n[MCLOGGER:] END FLUSHING ----\n```\n\nThe stepping logger data can also be written to an output tree for more detailed analysis. By default, the output file is named `MCStepLoggerOutput.root` (which can be modified by adjusting the `MCSTEPLOG_OUTFILE` environment variable). To activate this feature, use:\n\n```bash\nMCSTEPLOG_TTREE=1 LD_PRELOAD=path_to/libMCStepLogger.so o2-sim-serial ...\n```\n\n### Special case on macOS\n\nOn macOS, replace `LD_PRELOAD` with `DYLD_INSERT_LIBRARIES`, for example:\n```bash\nMCSTEPLOG_TTREE=1 DYLD_INSERT_LIBRARIES=path_to/libMCStepLogger.so o2-sim-serial ...\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/mcsteplogger/README.md"
        }
    ],
    "b5f2bfc2749dd8037d146b6f2fd3b8d0ea96d52bfc5d0c89180e575c06576bee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Special case on macOS\n\n`LD_PRELOAD` needs to be substituted with `DYLD_INSERT_LIBRARIES`, for example:\n\n```bash\nDYLD_INSERT_LIBRARIES=/Users/laurent/alice/sw/osx_x86-64/O2/latest-clion-o2/lib/libMCStepLogger.dylib MCSTEPLOG_TTREE=1 MCSTEPLOG_OUTFILE=toto.root o2-sim-serial -m MCH -g fwmugen -n 1\n```\n\n`LD_DEBUG=libs` should be replaced with `DYLD_PRINT_LIBRARIES=1`\n\n`LD_DEBUG=statistics` should be replaced with `DYLD_PRINT_STATISTICS=1`\n\n{% include list.liquid all=true %}",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/mcsteplogger/README.md"
        }
    ],
    "4ccd891c060b18b034731a1285c612e5c5c2a6980ddc562406b8fa3519fcd959": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\n\nsort: 4\ntitle: Generator configuration\n\n---\n\n# Generator configuration\n\nMultiple methods exist to provide specific generator configurations for the simulation run. For example:\n```bash\no2-sim --configFile <path/to/config.ini>\n```\n\nLikewise, this can be done for the [`o2dpg_sim_workflow.py`](../o2dpgworkflow/README.md/#workflow-creation) using:\n```bash\no2dpg_sim_workflow.py -gen pythia8 -ini <path/to/config.ini>\n```\n\nThis method is recommended and we are currently in a transition period, after which it will be the sole accepted method for generator configuration in official GRID productions. Furthermore, configuration files must now be located in the [O2DPG Git repository](https://github.com/AliceO2Group/O2DPG). As a result, a new CI process has been implemented to test all these files (hereafter simply referred to as `ini` files).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "cad7939874a42b78bbd35ebed4ae79054b9ee50b4835d80b0cd15527c8052e13": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The configuration files are typically stored in `O2DPG/MC/config/<PWG>/ini/<config>.ini`. They can include various sections for configuring generators, and they also allow for the addition of extra triggers on the generated particles (refer to [this](https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGDQ/ini/GeneratorHF_ccbarToMuonsSemileptonic_fwdy.ini) example for more details).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "8d6a9edccd800bbff1a1e574b487728a2bc9fa334eeeecda4f124d6a49d90859": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In the provided example, `Pythia8` and `External` are specified in the file, indicating that these configurations will be utilized based on the `-g <generator>` argument in `o2-sim`. It's important to note that multiple configurations can be active simultaneously. For example, if your `external` generator inherits from `GeneratorPythia8`, both the `External` and `Pythia8` sections of your configuration will be applied. The `ini` files utilize the `O2DPG_MC_CONFIG_ROOT` environment variable, which defaults to the `O2DPG_ROOT` directory of the currently loaded build. However, this variable can be modified with `export O2DPG_MC_CONFIG_ROOT=<new/path/here>` after setting up the environment, allowing users to run older committed configurations with a newer O2DPG version and vice versa.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "6e2f85a99817ba96472b8fd89a36c6f9e4edf72bc7ae0bf282108854f3591847": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Indicators for particle tracking in the O2 simulation\n\nParticles generated typically carry a status code. In O2, two status codes are utilized: the **HepMC** code (refer to [this](https://arxiv.org/pdf/1912.08005.pdf) for details) and the **native** code specific to the generator. For example, Pythia8 employs numerous distinct [status codes](https://pythia.org/latest-manual/ParticleProperties.html).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "4abb32ec547883cfeb3546d4e12c9fed83d4b29c38b814faa041d7a9c7469e65": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In the O2 framework, `TParticle` objects are utilized to represent particles on the internal stack. These objects contain only one integer member to hold a potential status code. To accommodate two status codes simultaneously, they are **encoded into a single integer**. Furthermore, a `TParticle` object can be marked for transport. Here is an example code snippet:\n```cpp\nTParticle p(pdg, statusCode, parent1, parent2, child1, child2, px, py, pz, e, vx, vy, vz, t);\n// Encode HepMC and native codes, and set the tracking flag\no2::mcutils::MCGenHelper::encodeParticleStatusAndTracking(p, hepMCCode, nativeCode, hepMCCode == 1);\n```\nIt is important to note that calling `p.GetStatusCode()` will now return a seemingly unusual integer. This is due to the two status codes being combined into a single number.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "c12b01feee78a7c82f5009d19bb895d2879084300126eefaa6b36d951f169f64": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WHEN YOU CREATE A PARTICLE IN A C++ CONTAINER LIKE `std::vector` IN PLACE, ENSURE YOU SET THE APPROPRIATE PROPERTIES FOR THE OBJECT IN THAT CONTAINER. FOR EXAMPLE:\n\n```cpp\naVector.push_back(TParticle(pdg, statusCode, parent1, parent2, child1, child2, px, py, pz, e, vx, vy, vz, t));\no2::mcutils::MCGenHelper::encodeParticleStatusAndTracking(aVector.back(), hepMCCode, nativeCode, hepMCCode == 1);\n```\n\nTHE [O2 ANALYSIS DATA MODEL](https://aliceo2group.github.io/analysis-framework/docs/datamodel/ao2dTables.html) OFFERS FEATURES TO RETRIEVE THE STATUS CODES IN A DISTINCT WAY IN ANALYSIS CODE. FOR AN `o2::aod::mcparticle`, USE THE GETTERS `getHepMCStatusCode()` AND `getGenStatusCode()`.\n\n## Generator Identifiers\n\nGENERATOR IDENTIFIERS CAN BE ASSIGNED TO GENERATORS. THESE IDENTIFIERS ARE SET PER EVENT TO SHOW WHICH GENERATOR WAS RESPONSIBLE FOR THAT EVENT.\n\nTWO TYPES OF GENERATOR IDENTIFIERS EXIST: A GLOBAL ID AND A \"SUB-GENERATOR\" ID.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "ec90d96b3fc319ce4d817ae5733cf83206dd0ddde1c8826d5190d1b96b4eb5d1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Global ID\n\nA unique global ID is assigned to a single generator. This ID can be specified through a configuration key-value pair, as in the following example:\n```bash\no2-sim <your-args> --configKeyValues \"PrimaryGenerator.id=42\"\n```\n\nTo retrieve this ID during the analysis, the `mcCollisions` table provides the method `getGeneratorID()`.\n\n### Sub-generator IDs\n\nIn this context, consider a scenario involving multiple generators, such as a cocktail generator. For instance, here is a simplified implementation of the `o2::eventgen::Generator` class:\n\n```c++\nclass MyGenerator : public o2::eventgen::Generator\n{\n    MyGenerator() : o2::eventgen::Generator(\"myName\", \"myName\")\n    {\n        // Additional setup if needed\n        // ...\n        // Define sub-generators\n        addSubGenerator(0, \"specificSubGen0\");\n        addSubGenerator(1, \"specificSubGen1\");\n        addSubGenerator(2, \"specificSubGen2\");\n        // Continue defining sub-generators\n        addSubGenerator(N, \"specificSubGenN\");\n        // Additional construction steps\n    }\n}\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "a0a982f5fc325b5fb1679344342cac9feb90bbd0e218ae0585b3527cf3d9a448": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\nbool importImpl(int sampledSubGenID) {\n    // carry out the actual import based on the sampled ID\n}\n\nbool importParticles()\n{\n    // e.g., sample a condition and then derive the ID to be set from that condition\n    int sampledSubGenID = sampleSubGenID();\n    notifySubGenerator(sampledSubGenID);\n    return importImpl(sampledSubGenID);\n}\n\n```\n\nTo retrieve this ID for analysis, the `mcCollisions` table offers the getter `getSubGeneratorID()`.\n\n### Origin ID\n\nThe origin ID pertains to the source in [embedding simulations](../o2dpgworkflow/README.md#embedding). For example, if a particular signal is embedded within background, the origin ID of the signal collision would be `0`, while the background collision would have the value `1`.\n\n**Note** that users do not have the capability to modify these values directly.\n\nTo retrieve that ID during analysis, the `mcCollisions` table provides the getter `mcCollision::getSourceId()`.\n\n### In Development\n\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "4fdfcb23aa87aa8cf5aa93a2d7322ad126019aef90c54e4e9d8c5c068ae5b179": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Ongoing Work\n\n* Establish a consistent framework for global generator IDs [O2-3963](https://alice.its.cern.ch/jira/browse/O2-3963). The goal is to have clear and standardized IDs for all event generators in our system.\n* As mentioned, a sub-generator ID and a brief description are included. This is mirrored in the global generator setup (`o2-sim --configKeyValues \"PrimaryGenerator.description=a short description\"`). We intend to integrate these annotations into the AOD metadata so that a lookup from generator and sub-generator IDs to their descriptions becomes feasible.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "4b0fb0a59bbd27bc8c4f8a7f01397ab03316c3389f69083987c8ac4b6663d4d3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Generator Tests\n\nAt least one generator configured by an `ini` file should have a corresponding test in O2DPG. This test should be placed in `O2DPG/MC/config/<PWG>/ini/tests/<config>.C`, matching the name of the configuration file one directory above. The test aims to verify the integrity of the `o2sim_Kine.root` file, which is generated during a simulation run.\nYou can assume the file is in the current directory when performing the test. For more details on MC kinematic files, refer to [MC Kinematic Files](../transport/mckine.md).\n\nA test macro typically follows this structure:\n```cpp\nint Pythia8()\n{\n    // potential preparation steps\n\n    // example of opening the kinematics file and reading MC tracks\n    std::string path{\"o2sim_Kine.root\"};\n    TFile file(path.c_str(), \"READ\");\n\n    o2::steer::MCKinematicsReader reader(\"o2sim\", o2::steer::MCKinematicsReader::Mode::kMCKine);\n    auto nEvents = reader.getNEvents(0); // retrieve events from source 0, the sole source for this example\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "d03aa391e3d96180cab3acdeae611f8da2cdbadf027db822fabecab64c36313d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```cpp\n// example of iterating through events and tracks\nfor (int i = 0; i < nEvents; i++) {\n    const std::vector<o2::MCTrack>& tracks = reader.getTracks(i); // this is a shortcut, implicitly using source 0\n    for (auto& track : tracks) {\n        // perform the checks\n        // assume something fails\n        if (!trackNotPassed) {\n            return 1;\n        }\n    }\n    // optionally test the MCHeader\n    const o2::dataformats::MCEventHeader& header = reader.getMCEventHeader(0, i); // the first parameter is the source, and we have only one source\n    // ...\n}\n\nreturn 0;\n}\n\nint External()\n{\n    // similar logic as above\n}\n```\n\n**The CI test will fail if no generators are tested.** The return value must be an integer, with `0` indicating success and any other value indicating failure.\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "1fe87141a85704e72f2e74cffe12b7f4fda8ac540af1bae2f8d4351776359325": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In addition, the `o2sim_Kine.root` file undergoes automatic testing by several generic tests. For example, it confirms that there are particles designated for transport. If such particles are missing, the test will fail. Furthermore, it ensures that the particles' status codes are accurately set (for detailed information on status codes, refer to [this section](#generator-status-codes-flagging-particles-to-be-trackedtransported)).\n\nFor a practical example of a test, see [this test](https://github.com/AliceO2Group/O2DPG/blob/546ec5d03a57d189b4ea3c92c5a8e1d7af812d41/MC/config/PWGDQ/ini/tests/GeneratorHF_JPsiToMuons_fwdy.C).\n\n**Note** that the tests are run whenever macros in a configuration file are modified or when the tests themselves are updated.\n\n### Execute the test locally",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "ed3d420c4bc0c8d51cb27d0bd421684d51fdc8bb7e0212bcad82ec4531a739d9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Execute the test locally\n\nYou don't need to wait for the CI; instead, you can verify that everything is functioning correctly on your development machine if possible. This requires having the appropriate software environment set up; ideally, this is `O2sim`, but `O2` alongside `O2DPG` will work as well (unless you need additional packages, such as [AEGIS](https://github.com/AliceO2Group/AEGIS)).\n\nLet's clarify some terms for clarity:\n* `${O2DPG_SOURCE}` refers to the directory where you are developing,\n* `HEAD` in `git` terminology refers to a specific state in your `git` history, typically the latest commit,\n* \"unstaged changes\" in `git` are modifications that haven't been added to the next commit (whenever you are developing but haven't yet run `git add`).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "9e9e3dadb4108d814d2caf8a0f675de6c8317f09298fcc7976aca7599fd6d5f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The test aims to validate code modifications and assess their effects. To identify the modified files, the script uses `git diff` between specified pairs of commits.\n* When there are uncommitted changes, the test compares them relative to `HEAD`.\n* If there are no uncommitted changes in `${O2DPG_SOURCE}`, the test will, by default, compare `HEAD` (assuming this reflects the changes you made) with `HEAD~1`.\n* To test the changes between two specific commits, you must set `O2DPG_TEST_HASH_BASE=<base-commit>` and `O2DPG_TEST_HASH_HEAD=<later-commit>` (refer to the example below).\n\nThe full command is\n```bash\nO2DPT_TEST_REPO_DIR=${O2DPG_SOURCE} O2DPG_TEST_HASH_BASE=<base-commit> O2DPG_TEST_HASH_HEAD=<later-commit> ${O2DPG_ROOT}/test/run_generator_tests.sh\n```\n\nThe results will be recorded in `o2dpg_tests`.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "b077c670f3ff360efaf5b0f99f78dcab5cf97f5854510d3ecae313aadbfd44f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The results will be stored in `o2dpg_tests`.\n\nTo see the available additional environment variables and options, run\n```bash\n${O2DPG_ROOT}/test/run_generator_tests.sh -h\n\nusage: run_tests.sh [--fail-immediately] [--keep-artifacts]\n\n  FLAGS:\n\n  --fail-immediately : stop immediately if a test fails\n  --keep-artifacts : retain simulation and test artifacts; otherwise, only logs are kept after each test\n\n  ENVIRONMENT VARIABLES:\n\n  O2DPG_TEST_REPO_DIR : Specify the source repository to test. (required if the current or parent directory is not the git repository being tested)\n  O2DPG_TEST_HASH_BASE : The base hash for comparison (optional)\n  O2DPG_TEST_HASH_HEAD : The head hash for comparison (optional)\n\n  If O2DPG_TEST_HASH_BASE is not set, it will check for ALIBUILD_BASE_HASH.\n  If that is also not set, it will default to HEAD~1. However, if there are uncommitted changes, it will use HEAD instead.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "48a3dac871dd1c71716f6386523932185a62e23cc90fe18168f5f6a52dec8513": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If O2DPG_TEST_HASH_HEAD is not defined, the system will check for ALIBUILD_HEAD_HASH. If that is also not defined, it will default to HEAD. However, if there are any unstaged changes, it will remain blank.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorconfig.md"
        }
    ],
    "04711f134b15e090b0d58dfba8f2c36d95fd3b086d1eb1bbe2984bec1f709e8a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 2\ntitle: Generators in O2DPG\n---\n\n# Generators in O2DPG\n\n**...under construction...**",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2dpg.md"
        }
    ],
    "f201d17102876a6ea461ecadbb94eafe62e796c779f92586da0d785d55f42455": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Develop a Custom Primary Generator\n\nUsers can create their own primary generator. To incorporate it into the O2 simulation framework, it should at least extend from the `FairGenerator` class. However, for convenience and ease of use, it is recommended to derive from the `Generator` class or even from `GeneratorTGenerator`. Familiarizing yourself with the O2-specific implementations in the [O2DPG repository](https://github.com/AliceO2Group/O2DPG) could be helpful, and you might find inspiration in [this example](https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGDQ/external/generator/GeneratorCocktailPromptCharmoniaToMuonEvtGen_pp13TeV.C).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorscustom.md"
        }
    ],
    "8605a66b8f528fad7e0607e8ec9a8a1dcaa8db34aae6e7288e13d4364532fdf3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The key step to ensure that generated particles are directed to the particle stack involves adding the corresponding `TParticle` objects to the `Generator::mParticles` member, which is a `std::vector`. If you manually add particles to this member or override the `Generator::importParticles()` method, it is essential to ensure that the particles' status codes and tracking flags are set appropriately (refer to [here](README.md#generator-status-codes-flagging-particles-to-be-trackedtransported)). Therefore, it is the duty of the user implementing the custom generator to ensure that particles are correctly marked as to be tracked or not, and that they have the correct status code encoding.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorscustom.md"
        }
    ],
    "6efdedc34adc31a560b6eabebef990668f92053fa694f786eac5fdfd2976d67b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If you inherit from `GeneratorTGenerator` without overriding `Generator::importParticles` or altering `Generator::mParticles`, be aware that all particles will be automatically checked for correct status encoding. If the status is found to be unencoded, the `TParticle`'s status code is **assumed to be the HepMC code**. Furthermore, only particles with a HepMC status of 1 will be tracked—this mirrors the default behavior of Run2 simulations.\n\n## Customize Existing Generators\n\nAlternatively, you can derive from existing fully-functional generator implementations, such as `GeneratorPythia8` as seen [here](https://github.com/AliceO2Group/AliceO2/blob/dev/Generators/include/Generators/GeneratorPythia8.h).\n\n## Resolve Common Issues\n\nBelow are some additional tips and solutions for issues you may encounter.\n\n### ROOTCLING/CLING-Related Problems\n\n---",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorscustom.md"
        }
    ],
    "8160cb466932c2630cddc1b3dc8d6d97f90466d1f2b38a6e41201b37a10da757": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### ROOTCLING/CLING-Related Issues\n\nIf you include headers in your macro, you may encounter warnings and errors at runtime, similar to these:\n```bash\nwarning: 'ENABLE_UPGRADES' macro redefined [-Wmacro-redefined]\n#define ENABLE_UPGRADES\n...\nnote: expanded from macro 'FAIR_LOGF'\n#define FAIR_LOGF(severity, ...) LOG(severity) << fmt::sprintf(__VA_ARGS__)\n```\nThe root cause is that `ROOT` already knows about numerous header files, libraries, and dictionaries, which leads to redefinition warnings. To address this, an include guard must be added at the top of your macro. Here's how it should look:\n```c++\n#if !defined(__CLING__) || defined(__ROOTCLING__)\n\n# ..the headers go here.\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorscustom.md"
        }
    ],
    "ce53a4fd814fc44e0488582efe75a3432ab91249145ea150850695de202d6883": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ..the headers go here.\n\n#endif\n```\nIt applies to `O2` headers as well as `FairRoot` and other software packages that expose their classes and functions through `ROOT` dictionaries and are included in `ROOT_INCLUDE_PATH`. For other headers and libraries without dictionaries, you may need to include them and load the libraries.\nAn example can be found [here](https://github.com/njacazio/O2DPG/blob/8b6feb295867394663c2a1b01a736cfaed8449c1/MC/config/PWGDQ/EvtGen/GeneratorEvtGen.C) on how the `EvtGen` package/library is included and utilized.\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorscustom.md"
        }
    ],
    "ac6023a711b8d9c9b577ab0e79e953b20e718ebcb037066216937c09eed49a84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 1\ntitle: Generators implemented in O2\n---\n\n# Generators Implemented in O2\n\nSeveral generators can be utilized in O2 by specifying them with `o2-sim -g <generator>`, as detailed below. In certain instances, additional parameters need to be set using `--configKeyValues`. Similarly, there could be extra optional parameters that can be configured via `--configKeyValues`.\n\n## Pythia8\n\nPythia8 serves as the default generator for ALICE Run3 and is the sole generator with a direct interface in the O2 codebase, through the [GeneratorPythia8](https://github.com/AliceO2Group/AliceO2/blob/dev/Generators/include/Generators/GeneratorPythia8.h) class.\n\nFor Pythia8, five distinct options/values can be directly employed as `<generator>` in `o2-sim -g <generator>`:",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "754a1c4ae6f93fb8a0156058414eaaba422347785bfe98e634902c55295ca5d5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### pythia8\n\nThis option selects Pythia8 as the simulation generator, but a Pythia8 configuration file must be provided, for example:\n```text\n### beams\nBeams:idA 2212\t\t\t# proton\nBeams:idB 2212 \t\t\t# proton\nBeams:eCM 14000. \t\t# GeV\n\n### processes\nSoftQCD:inelastic on\t\t# all inelastic processes\n\n### decays\nParticleDecays:limitTau0 on\t\nParticleDecays:tau0Max 10.\n```\nto set up the Pythia8 instance.\n\nThe configuration file is passed through the parameter `GeneratorPythia8`. For simplicity, you can use `--configKeyValues \"GeneratorPythia8.config=<path/to/config>\"`.\n\nBeyond specifying the configuration file, the parameter `GeneratorPythia8` (source code available [here](https://github.com/AliceO2Group/AliceO2/blob/dev/Generators/include/Generators/GeneratorPythia8Param.h)) offers additional settings to configure Pythia8 within O2. The key configuration options are detailed in the relevant class documentation.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "cec377af22805d32a1c85f369a84313f95da0123c6f7e11ef610d9cf900ee17e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "* `config` : the specification of the Pythia8 configuration file\n* `includePartonEvent = [true|false]` : determines if the partonic part of the event is retained or excluded (default is false)\n* `hooksFileName` : a string to indicate a ROOT macro file with a trigger function (optional)\n* `hooksFuncName` : a string to denote the name of the function associated with the trigger function (optional)\n\n\n### pythia8pp\n\nA customized version of `<pythia8>` for pp collisions, utilizing default Pythia8 with the configuration found [here](https://github.com/AliceO2Group/AliceO2/blob/dev/Generators/share/egconfig/pythia8_inel.cfg).\n\n### pythia8hf\n\nA customized version of `<pythia8>` for HF, employing default Pythia8 with the configuration available [here](https://github.com/AliceO2Group/AliceO2/blob/dev/Generators/share/egconfig/pythia8_hf.cfg).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "15adb9d199e933f6e4424add9881090b20c7d6fbb8644c8f124895c06d1bf5e6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### pythia8hi\n\nA specific setup of `<pythia8>` tailored for PbPb collisions (utilizing the Agantyr model). It defaults to Pythia8 with the configuration found [here](https://github.com/AliceO2Group/AliceO2/blob/dev/Generators/share/egconfig/pythia8_hi.cfg).\n\n### pythia8powheg\n\nThis setup employs default Pythia8 with the configuration available [here](https://github.com/AliceO2Group/AliceO2/blob/dev/Generators/share/egconfig/pythia8_powheg.cfg). Additionally, it requires a POWHEG output file named `powheg.lhe` to be present in the working directory where Pythia8 will read from.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "3c88a2faa6740c9ec08592ebc53eef4d971b7e0b8b2985441e7d2ec52f37b83e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Box Generators\n\nMultiple box or gun generators are available:\n\n* `boxgen`: A generic box generator that defaults to producing 10 pions per event; this can be customized (details below),\n* `fwmugen`: A forward muon generator,\n* `hmpidgun`: An HMPID pion generator,\n* `fwpigen`: A forward pion generator,\n* `fwrootino`: A forward rootino generator,\n* `zdcgen`: A ZDC (A and C side) neutron generator,\n* `emcgenele` and `emcgenphoton`: Electron and photon generators for the EMC, respectively,\n* `fddgen`: An FDD (A and C side) muon generator.\n\n### Customising your box generator\n\nFor the generic `boxgen` generator, a user can adjust parameters such as PDG, eta range, etc., using `--configKeyValues \"BoxGun.<param>=<value>;...\"`. For a complete list of settings, see this [header file](https://github.com/AliceO2Group/AliceO2/blob/dev/Generators/include/Generators/BoxGunParam.h).\n\nExample:\n```bash\no2-sim -m PIPE ITS MFT -g boxgen -n 10 --configKeyValues 'BoxGun.pdg=13 ; BoxGun.eta[0]=-3.6 ; BoxGun.eta[1]=-2.45; BoxGun.number=100'\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "060f3af0fdfbe038406c705fb1e00b3521b5169f698dd2766d2fcc406cf571ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This command will produce 10 events containing 100 forward muons, focusing solely on the beam pipe, ITS, and MFT during the simulation.\n\n## Reading from File\n\nEvents, along with their primaries and secondaries, can alternatively be loaded from a file and then introduced into the transport process.\n\n### extkinO2",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "82ecb3d07958f18faf4d656529aa2a83e7b4bb8fb84a5fccd8826f4f1bc3fad7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### extkinO2\n\nThis module imports primaries from an MC kinematics file generated by a previous `o2-sim` run. The file path must be specified. An example command is:\n```bash\no2-sim -g extkinO2 --extKinFile <path/to/o2sim_Kine.root>\n```\nAlien file paths are also supported, using the syntax `alien:///path/to/file.root`, which will be accessed on-the-fly without local download, though this may increase simulation time. Alternatively, the `GeneratorFromO2Kine.fileName` parameter can be set:\n```bash\no2-sim -g extkinO2 --configKeyValues \"GeneratorFromO2Kine.fileName=<path/to/o2sim_Kine.root>\"\n```\nThis parameter takes precedence when both methods are used simultaneously.\n\n### evtpool\n\nThis module is an optimized version of extkinO2, specifically designed for handling event pools. It provides enhanced functionality for managing event pools.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "e7ec12af05d11cd6a14bd1ebf1e15e2f0fda975ca76c139ebf1be747cbc766b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "* choose a file from a pool manually\n* find available files in a pool on AliEn or local storage\n* simplifies the creation of generic JSON configurations; users no longer need to specify the full file path, which would be cumbersome for large-scale operations.\nAn example usage with evtpool is shown below:\n```bash\no2-sim -g evtpool --configKeyValues \"GeneratorEventPool.eventPoolPath=<path/to/evtpools>\"\n```\nwhere `evtpools`, located on AliEn or local storage, can be:\n* a directory &rarr; the system searches within this path for `evtpool.root` files\n* a `evtpool.root` file directly.\n\nAdditionally, a `.txt` file can be placed on the local disk to list the event pool files.\nThe simulation requires that event pool files be named `evtpool.root`; otherwise, it will fail (due to a hardcoded requirement).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "5c897a3dbe6710b157f176889d02ffbd7ca2b4a4cf8f499009bd61081eb1694d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### hepmc\n\nThis module reads primary particles from a HepMC file. An example command is:\n```bash\no2-sim -g hepmc --configKeyValues \"HepMC.fileName=<path/to/HepMC/file>\"\n```\nIt's crucial to specify the HepMC version being used; by default, `o2-sim` uses HepMC3. If you're working with HepMC version 2 (as in the case of EPOS4), you need to include `HepMC.version=2` in the configuration keys to avoid simulation failure.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "c24f957f45d6303a7aff2679e10dc09689ebb59c20bbda55a801fa3422735698": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Utilizing FIFOs for Data Flow\n\nFIFOs enable the direct transfer of data from generators to o2-sim without the need for storage, and they can be employed both *manually*—by creating a FIFO and feeding it as a HepMC file to both your generator and the o2-sim script—or *automatically* through the `GeneratorHepMC` tool using the `cmd` parameter.  \nThe latter method is **strongly recommended** and several examples can be found in the `HepMC*` directories within the [O2](https://github.com/AliceO2Group/AliceO2/tree/dev/run/SimExamples) repository.  \nThis approach initiates a simulation task using an external generator that must:\n- Output HepMC data either to a file or to stdout &rarr; this is the primary requirement.\n- Accept a `-s` flag to specify the generation seed.\n- Control the number of events using a `-n` flag or an alternative mechanism.\n- Offer the ability to set the impact parameter via a `-b` flag.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "dafa789773143266676883c3a57ba3b7807b00c10ca4e17aff0c4ce20ed385aa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "These flags are automatically passed to the executable (or script) specified with `GeneratorFileOrCmd.cmd=<scriptname>`. In most generators, these conditions are readily available or can be met through a simple steering script. The main challenge in using this approach is ensuring that HepMC is output to stdout or redirected to a file; however, users should be cautious of how other flags in the provided generator might be interpreted, potentially leading to unexpected outcomes. To avoid setting an impact parameter limit, one can use `GeneratorFileOrCmd.bMaxSwitch=none` in the configuration keys, which is helpful if your generator does not support configuring this option by default. An example command to run with automatically generated FIFOs, where the generator prints data to stdout, is:\n```bash\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "8ba8e7b41071952c7a2d6da0053c751c1f6240b8dff4d9eb6fe02692b23395f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```bash\no2-sim -n 100 -g hepmc --seed 12345 --configKeyValues \"GeneratorFileOrCmd.cmd=epos.sh -i <optnsFileName>;GeneratorFileOrCmd.bMaxSwitch=none;\"\n```\nuses the EPOS4 steering script `epos.sh`, which can be accessed [here](https://github.com/AliceO2Group/AliceO2/tree/dev/run/SimExamples/HepMC_EPOS4). The `-i` flag in the `cmd` parameter is essential for loading the `.optns` file required for the generator configuration. Only the filename needs to be specified, and the file must be in the current working directory, as paths are not supported in the original epos executable for configuration files. The epos.sh script can be run with a full path, and environment variables are also supported. For more details, refer to the README files in each HepMC example folder.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "cd1cad07743961c203b48973aacc31889820958c5ef8b1419a681b9bc2cd3666": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The spawning of the generator can also be carried out using O2 external generators (explained further in the subsequent section), similar to how it is done with EPOS4 in the provided [example](https://github.com/AliceO2Group/O2DPG/tree/master/MC/config/examples/epos4). This capability is crucial as it enables the use of HepMC-based generators with hyperloop trains through real-time event generation. If your generator outputs data to disk, you must define the FIFO filename where the FIFO will be automatically created via the `GeneratorFileOrCmd.fileNames` parameter. A comprehensive example can be found with the JETSCAPE generator [here](https://github.com/AliceO2Group/AliceO2/tree/dev/run/SimExamples/HepMC_JETSCAPE).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "e7e5bc2ec811f6b16483fc9e7a8765538f3e3ffd42a2369d8d4ca2422c3af614": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## External Generators\n\nExternal generators are typically specified in macros that get evaluated at runtime. These generators enable users to create entirely customized generator setups and integrate other generators, such as those beyond Pythia8, into the simulation. Examples of external generators can include specialized versions of Pythia8 (through class inheritance), cocktail configurations, and more.\n\nFor a detailed explanation of their implementation, please also refer to the [custom generators page](generatorscustom.md).\n\nTo invoke such a custom generator, use the following command:\n```bash\no2-sim -g external --configKeyValues \"GeneratorExternal.fileName=<path/to/macro.C>;GeneratorExternal.funcName=<function-signature-to-call(...)>\"\n```\n\n## Hybrid Generator",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "3996f5d015a3afe13ab5566dc1641a22a58aa843aac951b6551101340b08da42": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Hybrid Generator\n\nMany of the generators covered in the tutorial can be run concurrently to produce a simulation with multiple event sources. A simple example is running Pythia8 alongside occasional events from a cache introduced by the extkinO2 generator. The complete list of available generators includes:\n- pythia8\n- pythia8pp\n- pythia8hf\n- pythia8hi\n- pythia8powheg\n- boxgen\n- hepmc\n- evtpool\n- extkinO2\n- external\n\nThe hybrid generator is set up using three parameters:\n- configFile &rarr; the file path for the JSON configuration file that specifies the generators to be included in the hybrid run\n- randomize &rarr; true to randomize the execution order of the generators (false by default)\n- num_workers &rarr; the number of threads used for parallel generation when enabled",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "776d7210576a48710fa88144b53e2c9db49600bd01f57cfb4567ff6c57d8669e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "An example JSON configuration file is available in the hybrid [example folder](https://github.com/AliceO2Group/AliceO2/tree/dev/run/SimExamples/Hybrid), and the runo2sim.sh script can serve as a starting point to run the generator for the first time. This script includes similar guidance as follows:\n```\n${O2_ROOT}/bin/o2-sim --noGeant -j 4 --run 300000 --configKeyValues \"GeneratorHybrid.configFile=/path/to/file.json;GeneratorHybrid.randomize=true\" -g hybrid -o genevents --seed 836302859 -n 10\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "82093a7029882e6e5d400cbef78eaa10ca652ec9ba98332978b2ac2f27e79661": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "A configuration file template can be generated using the O2DPG script [${O2DPG_ROOT}/MC/bin/o2_hybrid_gen.py](https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py) by providing the **gen** flag with a list of the desired generators. This template generator necessitates that O2 is loaded in your environment, as it retrieves the necessary generators and default values dynamically from the ROOT dictionary, which is essential for the script to function correctly. The output file will include all required parameters (with default values pre-set) and a fractions field, which is an array where each element is set to unity by default. This field corresponds to the number of events generated by each respective generator before transitioning to the next generator during simulation, without randomization. If the fractions field is absent, all elements are assumed to be unity; however, if it is present, it is crucial that the array's size matches the number of generators.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "8605293ec8429f4b878ed71f5d55b2f66ca5af0fa71fa5951f3ba123dfd3aef8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Elements are assumed to have a value of unity, but if specified, their array size must match the number of generators being initialized, or the simulation will not proceed. These elements also influence the randomization distribution, altering the percentage of usage for each generator as declared. If left unspecified or if each generator receives the same fraction, the randomization will be uniform.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "9b0617e74374363771782b36b551eea246c9602525ee5176f9feef8566054acd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "For additional guidance on using runo2sim.sh and o2_hybrid_gen.py, you can utilize the \\-\\-help option or review the brief description at the start of their source code.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/generatorso2.md"
        }
    ],
    "b88b98df9758b213d67c5b75ed5d30853e0d95167ad01f861a3766986a44b234": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 5\ntitle: Generator triggers\n---\n\n# Generator triggers\n\n**Under construction...**",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/trigger.md"
        }
    ],
    "3c775ebac74deccb6864fd947f0dd32eaf2fe629ffddd3a8b7cd5ba938d15d10": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 1\ntitle: Generators\n---\n\n# Generators\n\nThis section outlines the documentation and usage of primary generators in O2.\n\nMultiple [generator implementations](https://github.com/AliceO2Group/AliceO2/tree/dev/Generators/include/Generators) are available in O2, including the commonly used [Pythia8](https://pythia.org). These predefined generators can be invoked with the command:\n```bash\no2-sim -g <generator-name> [<additionalOptions>]\n```\n\nFor more detailed information on configurations and testing of generators, refer to [this page](generatorconfig.md).\n\n{% include list.liquid all=true %}",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/generators/README.md"
        }
    ],
    "520e9c0fc542aa36860e3fe2bc0fa70216f782d43893548b505b1c262c65e162": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 8\ntitle: MC Software Releases\n---\n\n# MC Software Releases\n\nThis page enumerates the current release of the MC software suite intended for use in GRID productions.\n\nThe current production version for MC is `O2PDPSuite::MC-prod-2025-v9-1`.\n\n## Reliable MC Software Releases",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/mc-software-releases/README.md"
        }
    ],
    "002dc761ae9266b5a1178159730ea2ffa49a4372a721de8f1e9ef06ca7c9dc18": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| Version                         | Status  | Date       | Comments                                                                                       |\n|---------------------------------|---------|------------|------------------------------------------------------------------------------------------------|\n| `O2PDPSuite::MC-prod-2025-v1-2` | Stable  | —          | Derived from the master/dev branch                                                             |\n| `O2PDPSuite::MC-prod-2025-v2-1` | Stable  | 30/06/2025 | Stemming from the master/dev branch                                                            |\n| `O2PDPSuite::MC-prod-2025-v3-1` | Stable  | 04/07/2025 | Generated from MC-prod-2025-v2-1 by integrating pull requests [#2042](https://github.com/AliceO2Group/O2DPG/pull/2042) and [#2045](https://github.com/AliceO2Group/O2DPG/pull/2045) |\n| `O2PDPSuite::MC-prod-2025-v4-1` | Stable  | 15/07/2025 | Originated from the daily tag `O2DPGSuite::daily-20250715-1012-1`, addressing specific run issues. |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/mc-software-releases/README.md"
        }
    ],
    "2f6d3a44fb6021db2a58c7087a1c5d58bd37697a083dba4d5f97fce585429a9d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `O2PDPSuite::MC-prod-2025-v5-1` | Stable | 18/07/2025 | Created from the daily tag `O2DPGSuite::daily-20250718-0000-1`, with corrections for special runs and AOD production tags. |\n| `O2PDPSuite::MC-prod-2025-v9-1` | **Current** | 06/08/2025 | Generated from the daily tag `O2DPGSuite::daily-20250806-0000-1`, with fixes for 2tag and Geant4 modulefiles. |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/mc-software-releases/README.md"
        }
    ],
    "ee9f173caccb31dfff06967b72d2a68b60f98ea05530b60db4d911b60fa18123": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 3\ntitle: Digitisation\n---\n\n# Digitisation\n\n...still in development...\n\n{% include list.liquid all=true %}",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/digitisation/README.md"
        }
    ],
    "f792e2b3f571048b1d9257469ba72e71d1381a74832b0786d470fa09b4f38c81": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 2\ntitle: MC Kinematics\n---\n\n# MC Kinematics\n\nThe MC kinematics is consistently generated whenever `o2-sim` is executed. It includes the initial kinematic data of both primaries (originating from the [generator](../generators/)) and secondaries (produced during the transport process) at their respective production vertices. This also encompasses particles that do not undergo transport, such as intermediary particles from the generator like quarks and gluons, or very short-lived particles generated during the transport phase.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/mckine.md"
        }
    ],
    "33bf395021ec4694e372dc958946bba0746767a66e603696a35434f4a6acdc29": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "It is highly beneficial to inspect the contents, especially if issues with the simulation pipeline are anticipated later, such as:\n* a particular particle being absent,\n* certain tracks having unusual kinematics,\n* expected energy depositions being incorrect or missing,\n* etc.\nIn fact, it is essential to verify that the initial stages of the simulation are correct before running a full simulation or a large-scale production.\n\n## Navigating the Kinematics File",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/mckine.md"
        }
    ],
    "24b9399c2db1d85049caaab1638bc00549afa70630f297c08c0ab203a3f64afd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Navigating the Kinematics File\n\nTypically, the file is named `<prefix>_Kine.root` and includes a tree called `o2sim`. The branch that is most crucial to examine is `MCTracks`, which stores per event `std::vector<o2::MCTrack>`. An initial example macro might start like this:\n```cpp\nint analyseKine(const char* path)\n{\n    TFile inputKine(path, \"READ\");\n    auto tree = (TTree*)inputKine.Get(\"o2sim\");\n    std::vector<o2::MCTrack>* tracks{};\n    tree->SetBranchAddress(\"MCTrack\", &tracks);\n    for (int ev = 0; ev < tree->GetEntries(); ++ev) {\n        tree->GetEntry(ev);\n        for (auto& track : *tracks) {\n            // perform actions for each track\n        }\n    }\n\n    return 0;\n}\n```\n\nAnother recommended approach is to utilize the MCKinematicsReader class:\n```c++\n// initialize the reader from the transport kinematics file (assuming the prefix is o2sim)\no2::steer::MCKinematicsReader reader(\"o2sim\", o2::steer::MCKinematicsReader::Mode::kMCKine);\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/mckine.md"
        }
    ],
    "0c55483e01d1ae4077cee79b9057d6b312aa129c334a940b958bee083252cb91": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\n// iterate through all events in the file\nfor (int event = 0; event < reader.getNEvents(0); ++event) {\n  // obtain all Monte Carlo tracks for this event; note that this is a shortened version of\n  // std::vector<MCTrack> const& tracks = reader.getTracks(source, event);\n  std::vector<MCTrack> const& tracks = reader.getTracks(event);\n\n  // process the tracks\n}\nNext to handling pure kinematic files, the MCKinematicsReader provides the capability to fetch tracks based on a specific MC label.\n\nWithin the track loop, a variety of analyses can be performed:\n* examine PDG codes,\n* review kinematic details or production vertices,\n* assess parent-child relationships between particles,\n* etc.\nA range of methods exists to access properties of an `o2::MCTrack` object, as detailed in the [source code](https://github.com/AliceO2Group/AliceO2/blob/dev/DataFormats/simulation/include/SimulationDataFormat/MCTrack.h).\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/mckine.md"
        }
    ],
    "f8cab49c3ec7d7f440c44f31747f0eb4f4427b8ab64ca89978a0cc94ee59250f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "A helpful tool is the `o2::mcutils::MCTrackNavigator` class, primarily comprising static functions designed for navigating through tracks, particularly for resolving parent-child relationships. For example, to find the child tracks, you can use the following code within a track loop:\n\n```cpp\n// within the track loop\nauto child0 = o2::mcutils::MCTrackNavigator::getDaughter0(track, *tracks);\nauto child1 = o2::mcutils::MCTrackNavigator::getDaughter1(track, *tracks);\n```\n\nThis class offers many additional useful methods, as detailed in the [source code](https://github.com/AliceO2Group/AliceO2/blob/dev/DataFormats/simulation/include/SimulationDataFormat/MCUtils.h).\n\n## Specific Examples\n\nHere are a few small snippets with more specific examples:\n\n### Checking if a track left hits\n\nFor instance, to check if a track left any hits, you might use a method like:\n\n```cpp\nbool hasLeftHits = o2::mcutils::MCTrackNavigator::checkLeftHits(track, *tracks);\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/mckine.md"
        }
    ],
    "6fbac490c6ad976d984ca4579cbf7c371cb275d6f01a19962b337005de2dcfbb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Here are some concise examples with more detailed scenarios.\n\n### Verify if a track has hits on the left\n\nThis segment illustrates how to determine if a track left any hits, and specifically, if it left a hit in the FV0 detector.\n```c++\n// Initialize the reader from the transport kinematics file (assuming the prefix is \"o2sim\")\no2::steer::MCKinematicsReader reader(\"o2sim\", o2::steer::MCKinematicsReader::Mode::kMCKine);\n\n// This assumes a straightforward signal MC, meaning one generator and no embedding\nint source = 0;\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/mckine.md"
        }
    ],
    "d9575022c3d14c24eda10b0e21b11c6aa7d5dbf4b5095080b021d104946e7f30": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "// assuming a basic signal MC scenario, meaning one generator with no embedding\nint source = 0;\n\n// iterate through each event in the file\nfor (int event = 0; event < reader.getNEvents(0); ++event) {\n  // retrieve all Monte Carlo tracks for the current event; note that this is a shorthand for\n  // std::vector<MCTrack> const& tracks = reader.getTracks(source, event);\n  std::vector<MCTrack> const& tracks = reader.getTracks(event);\n  o2::dataformats::MCEventHeader const& header = reader.getMCEventHeader(source, event);\n  // determine the detector mask for the event\n  std::vector<int> const& detId2HitBitLUT = header.getDetId2HitBitLUT();\n  // analyze the tracks\n  for (auto& track : *tracks) {\n    if (track.hasHits()) {\n      // perform an action if the track has at least one hit\n    }\n    if (track.leftTrace(o2::detectors::DetID::FV0, detId2HitBitLUT)) {\n      // execute a specific action if there is a hit in FV0\n    }\n  }\n}\n```\n\n## Simulate based on MC kinematics\n\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/mckine.md"
        }
    ],
    "74a1a638e156f3c9667ac7da3972cf0efccde17ef516520ad7ea3084112838ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Simulate Based on MC Kinematics\n\nIf you aim to introduce the same initial particles as in a previous simulation, refer to the [generator section](../generators/generatorso2.md#extkino2).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/mckine.md"
        }
    ],
    "aaea65964acb446a1d63858be66c0855fdaaefc455462c841c0e04ecfdd288e5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 1\ntitle: Transport engines\n---\n\n# Transport engines\n\n## GEANT4\n\n### Adjusting hadronic cross sections\n\nHadronic cross sections can be adjusted by specifying a particular Geant4 configuration during the transport simulation. [Here is an example](https://github.com/AliceO2Group/O2DPG/blob/eb3591632fe75ba65ff68353984839c22826a89c/MC/config/PWGLF/xsection/g4config_had_x2.in#L66-L72) illustrating the scaling of various hadronic cross sections.\n\n## FLUKA\n\nDetails regarding FLUKA.\n\n## GEANT3\n\nInformation concerning GEANT3.\n\n## MCReplay engine\n\nThe MCReplay engine is employed to replay a simulation using steps recorded by the [MCStepLogger](../mcsteplogger/). While it simulates the injection of each step sequentially, it is not a true simulation engine but rather a tool that mimics one.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/engines.md"
        }
    ],
    "3cf3ae97fea07180b0a33efcbcc47e023c3708dcbea3d14891cf7f64293a68f6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To execute this, start by following the instructions in [MCStepLogger](../mcsteplogger/) to generate a file with logged steps. For replaying these steps, use the command:\n```bash\no2-sim-serial -n <ref_nevents> -e MCReplay -g extkinO2 --extKinFile o2sim_Kine.root -o replay\n```\nBe aware that the script will search for the recorded steps in the current directory, looking for a file named `MCStepLoggerOutput.root`. If the file name or path differs, you can specify it using `--configKeyValues=\"MCReplayParam.stepFilename=<path/step/file/name>\"`.\n\nIt is recommended to use a different output prefix, such as `-o replay`, to avoid overwriting previous output files. Alternatively, run the simulation in a different directory.\n\nAdditionally, you can set a minimum energy cut (in GeV) for particles that are produced. For instance, to discard particles produced with energy below `0.1 GeV`, use `--configKeyValues=\"MCReplayParam.energyCut=0.1\"`.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/engines.md"
        }
    ],
    "3f09d3c09f004a30f3329e99310aef62c17e88144d1832f9f79fe9542cb88d5e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Energy cuts can also be configured for each simulation medium and type. **Further details on this will be provided soon.**\n\n### Key Points\n\nEnsure that the same modules are used or excluded as in the reference run (`-m` and `--skipModules` flags, see [here](README.md/#simulation-geometry-modules-and-detectors)).\n\nIt is important to note that the number of events that can be simulated cannot exceed the number simulated during the step logging.\n\n### Use Cases\n\nBy comparing the generated hits with those from the reference run, you can omit steps or particle production that have a minimal effect on the hits and, consequently, on the digits. This allows the detector simulation to be optimized for speed and efficiency.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/engines.md"
        }
    ],
    "457b407029875c3c59e3b750c6891b47f4ce8324aeaedf7fd010af647734be32": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## O2TrivialMCEngine\n\nThis entity acts as a placeholder rather than an actual engine, used primarily in scenarios where a real engine is unnecessary. At present, its main application is when only the [kinematics](mckine.md) of the primaries are required. Such runs can be started with\n```bash\no2-sim --noGeant\n```\nThe engine is automatically configured and does not need to be specified explicitly.\n\n**...under construction...**",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/engines.md"
        }
    ],
    "96189c4fd2f06ae60e7e5e0cf71e91fd35eee4cb9bacba2288e7e2d7f1e244e9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 3\ntitle: Detector geometry\n---\n\n# Detector geometry\n\nEach module is composed of multiple volumes, typically a large number of them. Each volume is associated with a specific medium that determines its physical properties (such as steel, air, vacuum, concrete, or a custom mixture).\n\n## Examining the geometry\n\nAfter a simulation run, the used geometry is saved in `<prefix>_geometry.root`. This file can be explored using ROOT, allowing for the visualization of volumes. For example, to visualize the geometry, use the following code:\n```cpp\nauto geoMgr = TGeoManager::Import(\"<prefix>_geometry.root\");\ngeoMgr->GetTopVolume()->Draw();\n```\nThis can be done both in a non-interactive and interactive ROOT session.\n\n## Adjusting material densities\n\nMaterial densities can be modified during runtime from external sources. Both a global setting and a module-specific setting are available. The local settings have priority over the global ones. The default value for all parameters is `1`.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/geometry.md"
        }
    ],
    "5fa4eba463f208da6d79883cffdd2fc6c6ef2f197902210300d5873614f7cd68": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To scale the overall density of the geometry by a factor of 2, for example, run the simulation using\n```bash\no2-sim <args> --configKeyValues \"SimMaterialParams.globalDensityFactor=2\"\n```\n\nTo adjust densities per module, one can do so, for instance, for the TPC and ITS by executing\n```bash\no2-sim <args> --configKeyValues \"SimMaterialParams.localDensityFactor=ITS:1.5,TPC:1.2\"\n```\n\n\n## Medium Properties\n\nAs noted, a medium specifies the physical characteristics of a volume. Some of these properties can be modified during runtime, as demonstrated below.\n\n### Energy Thresholds",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/geometry.md"
        }
    ],
    "63f2f34acb2122f21ab8ee5359ef51eb8a7abb7b5b36c403620f44490786eb98": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Energy Thresholds\n\nAs a particle moves through the detector, it can interact with the material, resulting in the creation of secondary particles. In reality, all such particles would be generated, but in the simulation, one can disable the production of particles with energies below a specified threshold. The available cut parameters include:\n* `CUTGAM` for photons,\n* `CUTELE` for electrons,\n* `CUTNEU` for neutral hadrons,\n* `CUTHAD` for charged hadrons,\n* `CUTMUO` for muons,\n* `BCUTE` for electron bremsstrahlung,\n* `BCUTM` for bremsstrahlung from muons and hadrons,\n* `DCUTE` for delta-rays produced by electrons,\n* `DCUTM` for delta-rays produced by muons,\n* `PPCUTM` for direct pair production by muons.\n\nThese parameters are defined globally [here](https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/gconfig/src/SetCuts.cxx).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/geometry.md"
        }
    ],
    "a6236b9bb3ac6f294a1ba4b9ce4dc9ff7e74761901ae6686362bdf80d1387f74": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "It is possible to customize parameters for each medium. For most modules, a text file is available that gets parsed at runtime. For instance, the files for passive modules can be found [here](https://github.com/AliceO2Group/AliceO2/tree/dev/Detectors/Passive/data).\n\nParameters can also be modified dynamically. Begin by extracting a JSON file containing all current parameters using:\n```bash\no2-sim-serial -n0 --configKeyValues \"MaterialManagerParam.outputFile=o2_medium_params.json\"\n```\nThis process will create the `o2_medium_params.json`, which includes all media per module and allows users to adjust parameters as needed. To apply a new configuration, use:\n```bash\no2-sim --configKeyValues \"MaterialManagerParam.inputFile=o2_medium_params_modified.json\" [<additional_arguments>]\n```\n\n### Special Controls\n\nCertain physics processes can be toggled on or off. The global default settings are documented [here](https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/gconfig/src/SetCuts.cxx).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/geometry.md"
        }
    ],
    "3c42d4807db7be5eb7a152e5b90c3eb81dd45fea6b9892e5f337b39f3b4d53cc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "同样地，能量阈值也可以在运行时通过修改 `o2_medium_params.json` 并重新注入来进行调整。\n\n**重要提示**: 当前，使用 Geant4 时，对特殊介质控制的任何本地更改将无效。只有**全局设置**会影响传输代码的行为。\n\n## 磁场\n\n**...正在建设中...**",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/geometry.md"
        }
    ],
    "943a0d0056af57e6cf6b6b224c3e848ee683f773540d445c7cb244255be0da95": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 4\ntitle: Transport in Run5\n---\n\n# Transport in Run5\n\n**...some general information...**\n\n## Detectors\n\n### FCT\n\n**...still in development...**",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/run5.md"
        }
    ],
    "d9d6a38d79a098d411a77d0474b0137aeba64b0ffc2d7d073718c543456005f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 2\ntitle: Transport\n\n---\n\n# Transport\n\nThe detector simulation is initiated using the command:\n\n```bash\no2-sim <args>\n```\n\nThe simulation generates the following output files:",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "7dd7c90910fdfda37e955b3fb40b6637175371e8c61eafb28b8315e8e6268206": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| File                      | Description                                                                            |\n|---------------------------|----------------------------------------------------------------------------------------|\n| `o2sim_Kine.root`         | includes particle kinematics and event metadata                                         |\n| `o2sim_geometry.root`     | contains the final ROOT geometry used in the simulation run                            |\n| `o2sim_grp.root`          | holds global run parameters (grp), including magnetic field settings                    |\n| `o2sim_XXXHits.root`      | hit data for each active detector involved in the simulation                            |\n| `o2sim_configuration.ini` | a summary of the simulation parameters used                                            |\n| `o2sim_serverlog`         | log generated by the particle generator server                                         |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "a421cd926d24f545ca78d73be626dd1a6f63607dec354c834af796568f2ba799": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `o2sim_workerlog0`        | log file generated by the transportation processes                                     |\n| `o2sim_hitmergerlog`      | log file resulting from the IO process                                                  |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "d90a67333538435ad121ab6bcfe5660b539d30f6f1174ced423e4d58f461182b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Available Command Line Options\n\nThe following options can be used:\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "23b4bd3b381bb481b731def7696b31014d427e19a7e35df873531ce3d005ad90": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| OPTION                                         | DESCRIPTION                                                                                                                                                                                                                             |\n|------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `-h [ --help ]`                                | Displays the list of available command line options along with their default values.                                                                                                                                                   |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "4c40694f78960f7f83d89039554c69e32dbfe2daf857e37141aa416e655853e7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `-e [ --mcEngine ] arg (=TGeant4)`             | The simulation backend to use, which can be either TGeant3 or TGeant4. Refer to the [transport section](../transport/) for more details.                                                                                                      |\n| `-g [ --generator ] arg (=boxgen)`             | The event generator to employ. For further information, see the [generators section](../generators/).                                                                                                                                    |\n| `-t [ --trigger ] arg`                         | The event generator trigger to use. More details can be found in the [trigger section](../generators/trigger.md).                                                                                                                        |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "caf508c92fbb9187b9b50fbf6e932ad4671c02edcecede35509f9270e86d7825": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `-m [ --modules ] arg (=all modules)`          | Specify a list of modules/geometries to include (default is ALL); for instance, -m PIPE ITS TPC                                                                                                                                          |\n| `--skipModules arg`                            | List of modules to exclude from the geometry (takes precedence over -m); see [transport section](../transport/)                                                                                                                        |\n| `--readoutDetectors arg`                       | List of detectors that create hits, with all detectors active if not specified; these are added to the active modules. See [transport section](../transport/)                                                                        |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "ea2f6d0d486d1dac0461911d85ee171b152583a1e56fc8fe933d6197e0d2aec5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `--skipReadoutDetectors arg`                   | a list of detectors to skip hit creation (takes precedence over --readoutDetectors); see [transport section](../transport/)                                                                                                                     |\n| `-n [ --nEvents ] arg (=0)`                    | the number of events to be processed                                                                                                                                                                                                                        |\n| `--startEvent arg (=0)`                        | the index of the first event to use (relevant when applicable, e.g., for the `hepmc` generator); see [generators section](../generators/)                                                                                                                 |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "0441e58d2042b2e38a3c668e6a5b360114dc3a4d7a62d6944a8284691cf9d618": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `--extKinFile arg (=Kinematics.root)`          | specifies the name of the kinematics file for event generator data when sourced from a file (refer to the [generators section](../generators/) for more details).                                                                 |\n| `--embedIntoFile arg`                          | provides the filename that contains the reference events for the embedding process.                                                                                                                                                       |\n| `-b [ --bMax ] arg (=0)`                       | sets the maximum value for the impact parameter sampling (when applicable).                                                                                                                                                             |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "61da8b4caeb1e98a9ccc02b338d084398ffbf817d968777564ef66b335c251e1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `--isMT arg (=0)`                              | multi-threaded mode (Geant4 only)                                                                                                                                                                                                       |\n| `-o [ --outPrefix ] arg (=o2sim)`              | prefix for output files                                                                                                                                                                                                                  |\n| `--logseverity arg (=INFO)`                    | severity level for FairLogger                                                                                                                                                                                                           |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "36062bf8fc28525ecd85b5e5dc7b064a00838c35754f173b062debd99cf93a25": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `--logverbosity arg (=medium)`                 | Specifies the verbosity level for FairLogger (options: low, medium, high, veryhigh).                                                                                                                                                                         |\n| `--configKeyValues`                            | Similar to `--configFile`, but enables setting parameters directly via the command line as a string sequence. Example: `--configKeyValues \"Stack.pruneKine=false\"`. Overrides `--configFile`. Parameters must be recognized by ConfigurableParams. |\n| `--configFile arg`                             | Path to a configuration file in INI or JSON format.                                                                                                                                                                                               |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "74258bd6896e2b7806c479c31d4d15bb56c0fd5a4f511edbcd136680c720cc3a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `--chunkSize arg (=500)`                       | maximum size of the primary chunk (subevent) distributed by the server                                                                                                                                                                    |\n| `--chunkSizeI arg (=-1)`                       | internalChunkSize                                                                                                                                                                                                                         |\n| `--seed arg (=0)`                              | initial seed as ULong_t (default: 0 which means random)                                                                                                                                                                                    |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "c5237ba3eaf7cb1489ede5dd1944a9dafb76c5793faed2e21e122db39e013ed3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `--field arg (=-5)`                            | The L3 magnetic field is given in kGauss, with allowed values of ±2, ±5, and 0; or \"ccdb\" to retrieve it from the CCDB; the format \"intKGaussU\" is used for a uniform field.                                                                 |\n| `-j [ --nworkers ] arg (=4)`                   | Specifies the number of parallel simulation workers (applicable only in parallel mode).                                                                                                                                                   |\n| `--noemptyevents`                              | Ensures that only events containing at least one hit are written.                                                                                                                                                                       |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "560667e5abf287850f63973eb091b8e633eeed7193c4fe20116ce9682d4fb3b7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `--CCDBUrl arg (=<http://alice-ccdb.cern.ch)>` | URL for accessing the CCDB - default is set to <http://alice-ccdb.cern.ch>.                                                                                                                                               \n- `--timestamp arg`                              | global timestamp in milliseconds for anchoring - the default is the current time or the start of the run if the ALICE run number is specified.                                                                                    \n- `--run arg (=-1)`                              | ALICE run number",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "944808c478a15ed8786a203d691665986c63e1618d2bf8fe50c2eff269c8da27": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `--asservice arg (=0)`                         | execute in service/server mode                                                                                                                                                                                                              |\n| `--noGeant`                                    | avoids any Geant transport/physics                                                                                                                                                                                                         |\n| `--forwardKine`                                | applies forward kinematics via a FairMQ channel                                                                                                                                                                                            |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "05d13ae5a2ad528bf26939d360abb2c72c5932f69d97757220da45a2b77e8375": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `--noDiscOutput`                               | Disable writing simulation results to disk (useful when combined with forwardKine).                                                                                                                                                         |\n| `--fromCollContext arg`                        | Utilize a pregenerated collision context to determine the number of events to simulate, how to embed them, and the vertex position, overriding other options like \"--nEvents\".                                                         |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "0058ec73ac622434bd261a7e4d119f956630369fa7784f6c2a9533218c7e0677": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "There are additional resources on [generators](../generators/) and [transport engines](../transport/engines.md). For information on the structure of modules and detectors, please refer [here](#simulation-geometry-modules-and-detectors).\n\n## Expert Control through Environment Variables\n\n`o2-sim` can be configured using the following environment variables:\n\n| Variable              | Description                                                                                                                        |\n|-----------------------|------------------------------------------------------------------------------------------------------------------------------------|\n| `ALICE_O2SIM_DUMPLOG` | If set, all output from FairMQ components will be displayed on the screen and can be redirected to a user logfile.                  |\n| `ALICE_NOSIMSHM`      | If set, communication between simulation processes will be conducted without using shared memory, instead opting for ROOT serialization. |\n\n## Adjustable Parameters",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "c377b831b4a026ba76bdaac44f959d7de4fdccd8d35a03f80984bac9996bbadd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Adjustable Parameters\n\nThe simulation employs `adjustable parameters` as detailed in the [ConfigurableParam.md](https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md) documentation. Both the detector code and the general simulation code declare these parameters, which can be accessed during runtime. After a parameter is defined, it can be modified or set externally through configuration files or command-line options, such as `--configFile` and `--configKeyValues`. The full list of parameters and their default values can be reviewed in the `o2sim_configuration.ini` file generated by an empty run with `o2-sim -n 0 -m CAVE`.\n\nKey parameters that affect the transport simulation include:",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "a883265c1902b437b7fa4c4263f877ff9213723476db6c56412dbe72fb1819a0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| Main Parameter Key | Description                                                                                                                                  |\n|--------------------|----------------------------------------------------------------------------------------------------------------------------------------------|\n| `G4`               | Settings that affect the Geant4 simulation, such as the physics list. For instance, \"G4.physicsmode=kFTFP_BERT_optical_biasing\"              |\n| `Stack`            | Settings that impact the particle stack, including options for kinematics pruning and retention of secondary particles.                   |\n| `SimCutParams`     | Parameters to define some simulation geometry stepping cuts in R, Z, etc.                                                                    |\n| `Diamond`          | Parameter to specify the interaction vertex location and its spread/width, utilized in all event generators.                                 |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "f52631b5914567e9efdaaefc421ba11171ee16e6c4403c192cb45eb29fd4a43a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `Pythia6`          | Settings affecting the Pythia6 generator.                                                                                                   |\n| `Pythia8`          | Settings affecting the Pythia8 generator.                                                                                                   |\n| `HepMC`            | Settings impacting the HepMC generator.                                                                                                     |\n| `TriggerParticle`  | Parameters that affect the trigger process in particle generators.                                                                         |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "133873aa7c35f6c9e7047ad7145c4952aa2fad027de5a6dfe80aee00bdc8d44f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Geometry, Modules, and Detectors in the Simulation\n\n---\n\n## Simulation Setup, Components, and Detectors\n\n---\n\n## Overview of Simulation Geometry, Modules, and Detectors\n\n---",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "422a25f03b349d1eb21e7f534d0e38e9bab5d1eb6aee911e71b5d0cdd0e56bee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In the simulation of the ALICE experiment, a **\"module\"** is a self-contained entity made up of several smaller volumes, each designed for a specific function, capable of operating independently. A key distinction between simulation and the actual experiment is that in simulation, modules can be removed without affecting the overall material budget, whereas this is not feasible in the real setup.\n\nThe complete assembly of all modules, often contained within a \"world volume,\" forms the simulation geometry. As particles pass through a module, their interaction with the material can result in energy deposition, contingent on their type, position, and momentum.\n\nA **\"detector\"** in this context refers to a special type of module that includes sensitive volumes capable of detecting these energy depositions. In the simulation, the recorded energy depositions are referred to as \"hits.\" All modules that are not detectors are termed **\"passive modules.\"**",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "f58042ac78918046b358861ea473a21087eb7482eb053eaf7c34328d265e68f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "BY DEFAULT, `o2-sim` EXECUTES A SIMULATION WITH THE FULL RUN3 GEOMETRY. TO EXCLUDE MODULES FROM THE GEOMETRY, USE THE `--skipModules <mod1> [<mod2> [...]]` OPTION. IN THIS CASE, THESE MODULES DO NOT AFFECT THE SIMULATION'S MATERIAL BUDGET. IF YOU WISH TO INCLUDE ONLY SPECIFIC MODULES, USE `-m|--modules <mod1> [<mod2> [...]]`. IMPORTANTLY, `--skipModules` HAS PRIORITY OVER `-m`.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "7120669c89956e0957aaf9d7393953fc5d569430679c06ebb1a82af46afaccb6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "BY DEFAULT, ALL DETECTORS PRODUCE HITS AND ARE TREATED AS READ-OUT. YOU CAN DISABLE THE READ-OUT FOR SPECIFIC DETECTORS USING `--skipReadoutDetectors <det1> [<det2> [...]]`. TO READ-OUT ONLY A SELECTED GROUP OF DETECTORS, USE `-readoutDetectors <det1> [<det2> [...]]`. REMEMBER THAT `--skipReadoutDetectors` HAS PRECEDENCE OVER `--readoutDetectors`. REGARDLESS OF THE READ-OUT SETTINGS:\nIF A DETECTOR IS LISTED AS A MODULE, ITS MATERIAL WILL BE INCLUDED IN THE GEOMETRY AND MATERIAL BUDGET. THESE OPTIONS ARE USEFUL TO SAVE TIME AND RESOURCES IF YOU ONLY NEED TO READ-OUT CERTAIN DETECTORS.\nTHE HEADER FILES FOR ALL PASSIVE MODULES AND THEIR GEOMETRY DESCRIPTIONS CAN BE FOUND [HERE](https://github.com/AliceO2Group/AliceO2/tree/dev/Detectors/Passive/include/DetectorsPassive), WHILE THE DETAILS OF THE DETECTORS THEMSELVES ARE AVAILABLE [HERE](https://github.com/AliceO2Group/AliceO2/tree/dev/Detectors).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "9fd2ba68c5fe3874e6625edec023ee16161f1a82da6172f507ac1b77f39b1ca6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In the latter scenario, the file structure becomes more intricate, and typically, the geometry description is found within a `simulation` sub-directory. O2 employs a specific [base class for detectors](https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/Base/include/DetectorsBase/Detector.h).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "5056096c1874711a5114342db8fb4dead8dc724fdf48f2139883ebe936e2387b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Available Run3 Modules\n\nDetector names are [centralized](https://github.com/AliceO2Group/AliceO2/blob/dev/DataFormats/Detectors/Common/include/DetectorsCommonDataFormats/DetID.h). You can use any of these names with the `--redoutDetectors` and `-m` options, as well as their corresponding `--skip` alternatives.\n\nPassive modules are not yet centrally defined. Currently, they include:\n* `HALL`: the experimental cavern,\n* `MAG`: the L3 magnet,\n* `PIPE`: the beampipe,\n* `ABSO`: the absorber,\n* `DIPO`: the dipole magnet,\n* `COMP`: the compensator in the very forward region,\n* `SHIL`: the shield to filter muons.\n\nFor ALICE Run5 development modules, see [here](run5.md).\n\n**..under construction...**\n\n{% include list.liquid all=true %}",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/transport/README.md"
        }
    ],
    "e45459c2c69a8843f453f94586cda70c8c24d179e0194754114c4b3ae9638d3d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 7\ntitle: ReleaseValidation\n---\n\n# ReleaseValidation (RelVal)\n\nThe Release Validation documentation has been relocated to: [https://aliceo2group.github.io/dpg-documentation/docs/relval/](https://aliceo2group.github.io/dpg-documentation/docs/relval/).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/relval/README.md"
        }
    ],
    "df2cc07a31487037acb38012293220e35ecd41690a88b824c39e4efb481626a3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 2\ntitle: Resources - External links\n---\n\nThis list offers an overview of additional resources and platforms for exchanging information related to simulation topics:\n\n\n## Communication\n\nThe following channels are utilized for discussions on simulation topics:\n\n* [Mattermost O2DPG channel](https://mattermost.web.cern.ch/alice/channels/o2dpg) - for conversations on the O2DPG MC production system\n\n* [Mattermost Run3 Simulation channel](https://mattermost.web.cern.ch/alice/channels/o2-simulation) - for addressing questions about ALICE simulation in general\n\n* [ALICE Talk](https://alice-talk.web.cern.ch/) - a Discourse-style discussion forum\n\n\n## Meetings\n\nDetector simulation meetings are conducted as \"WP12 / WP13 meetings\" within this [indico category](https://indico.cern.ch/category/4868/). Announcements are distributed through the `alice-o2-wp12` CERN E-group. These meetings usually occur on Wednesdays at 3pm, every 2 or 3 weeks.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gettingstarted/otherresources.md"
        }
    ],
    "8944e930e18066da1fbfac634a4339a68d60d53e992917a85abdf67b5e1773d9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ALICE3-related simulation discussions are addressed through a specific [meeting category](https://indico.cern.ch/category/12828/) as well.\n\n## JIRA Bug Tracking\n\nIssues or feature requests should be managed using tickets in our [JIRA system](https://alice.its.cern.ch/jira/projects/O2) (with the simulation component selected). It's recommended to open these tickets rather than using private email.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gettingstarted/otherresources.md"
        }
    ],
    "a1b054b269f6dabee240a8c71bf50aa7bf15ffe8c0f89ca150311983df11af81": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\n\n# Contribute\n\nThe documentation is managed at <https://github.com/AliceO2Group/simulation>. To contribute and improve this page, please submit a pull request to the repository.\n\n# Test/host the documentation locally\n\nBefore submitting changes, you can test or preview the documentation locally. Use the provided docker setup by running `docker-compose up` at the root of this source tree. The site will be available at http://0.0.0.0:4000/",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gettingstarted/contribute.md"
        }
    ],
    "29fd48b77e2f309855261948490cc90d0c3358feb657290bdf702a977a7e3af5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 3\ntitle: Troubleshooting\n\n---\n\n# Troubleshooting\n\n## You are encountering a problem\n\nYou may find the solution to your issue within this documentation. If not, please refer to [here](othreresources.md#contact) for guidance on contacting the development team. Please provide a detailed description of your issue and include a minimal reproducer (e.g., scripts, necessary input files), along with any available log files.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gettingstarted/troubleshooting.md"
        }
    ],
    "c28cfcc471ea25a01f3691d560b2edbfc757dcd6dd2aa36d7ea3d42bacbeab13": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Depending on the complexity of the issue, you may be requested to create a ticket on [JIRA](otherresources.md#jira-bug-tracking) to monitor your problem. This improves transparency and allows other experts to join the discussion when necessary.\nWhen filling out such a ticket, ensure you provide comprehensive details and links to necessary resources for reproducing the issue.\nIf the problem is more complex, you are encouraged to request a slot in the [WP12/13 meeting](otherresources.md#meetings) to explain and discuss the issue with a broader group of experts.\n\n## Documentation is incomplete\n\nIf you possess the knowledge, consider [contributing](contribute.md) to this documentation by submitting a PR to address the gaps you identify.\nIf you are still facing difficulties, refer to [here](otherresources.md#contact) for guidance on contacting developers about the missing documentation.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gettingstarted/troubleshooting.md"
        }
    ],
    "c6dadbff39f3edf1259a3b8552d98130980a1bab059de1fa63232adc32acaa2b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 0\ntitle: Getting started\n---\n\n# Getting started\n\nThe `o2-sim` executable is designed to simulate particles produced in a collision as they interact with the detector, generating energy deposits or hits that can be translated into detectable signals. It acts as the main executable, initiating a network of sub-processes that communicate through messages in a distributed system.\n\n## Usage overview\n\nThere are two executables used to manage a simulation run:\n1. `o2-sim`: This runs the simulation across multiple worker processes. It includes a dedicated process for particle generation and another for collecting all detector hits created in each simulation process. This is the default executable used for all examples in this documentation.\n1. `o2-sim-serial`: This runs only a single simulation process and is required for certain specialized simulations. Its usage will be explicitly noted when `o2-sim` is not suitable.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gettingstarted/README.md"
        }
    ],
    "548b3ee1f774b734d50781f9ada54295e818302d70e1a63c26c189f53b63d8d4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Quick Start Example\n\nA standard (example) command line invocation looks like this:\n\n```bash\no2-sim -n 10 -g pythia8pp -e TGeant4 -j 2 --skipModules ZDC,PHS\n```\nThis command initiates a simulation of 10 pythia8 events across the full ALICE detector, except for the ZDC and PHOS modules, utilizing Geant4 on 2 parallel worker processes. The simulation can be customized with various command-line options; for a comprehensive list, see the [transport section](../transport/).\n\n### Alien GRID Token\n\nTo run the simulation, you need a valid Alien token. If you lack a certificate, follow the [instructions](https://alice-doc.github.io/alice-analysis-tutorial/start/cert.html) provided, especially the step on [converting your certificate for grid tools usage](https://alice-doc.github.io/alice-analysis-tutorial/start/cert.html#convert-your-certificate-for-using-the-grid-tools).\n\nObtain the token by executing:\n```bash\nalien-token-init\n```\nafter setting up your `alienv` environment.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gettingstarted/README.md"
        }
    ],
    "b2a46b812fa2c55b3dc8a7676f38cc95359600658b4ac7ee034e6555a693dcbb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 1\ntitle: Anchored MC\n---\n\n# Anchored MC\n\nPlease be aware that anchoring MCs is currently unsupported on Mac systems!\n\n## Requirements\n\nEnsure you install or load one of the following `alidist` packages:\n\n- `O2sim`\n- `O2PDPSuite`\n\nThese are meta-packages that include all necessary components.\n\nThe steering script for anchored simulations is named `anchoredMC.sh` and can be found at this link: [O2DPG/MC/run/ANCHOR/anchorMC.sh](https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh). This script acknowledges several environment variables, which are further detailed in the test scripts (refer to the links [below](#run-an-anchored-simulation)). A particularly useful and powerful variable is `ALIEN_JDL_ANCHOR_SIM_OPTIONS`, which allows you to add configurations to the simulation workflow (for a specific example, see [below](#run-pythia-with-a-different-collision-system)).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "b683de3278f16bfaccc475828e1da63c7b2e925607ceaeb912222931ca3854e3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "**NOTE** that the `anchorMC.sh` script should not be modified to incorporate new configurations or features. If you require something that isn't covered in this documentation, please reach out to the developers and provide your specific request.\n\n## Execute an anchored simulation\n\nIn \"anchored\" Monte Carlo (MC) simulations, conditions are configured to mirror those during a real data-taking run, such as the LHC filling schedule, the active ALICE detectors, and the interaction rate. Anchored MC productions are essential for physics analyses to ensure realistic simulated datasets.\n\nAn anchored simulation is linked to a specific run, identified by a run number, which covers the period from the start-of-run (SOR) to the end-of-run (EOR). This is illustrated in the figure.\n![anchored split cycle](../images/anchored_split_cycle.png)",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "3042c41f1f45d2335a5775a724c21b31a1b3fe83330e056e098a87547e261c24": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ONE ANCHORED SIMULATION RUN CORRESPONDS TO A PARTICULAR `CYCLE` OF A `SPLITID` AND COMPRISSES A SPECIFIED NUMBER OF TIMEFRAMES AS SHOWN BY THE LARGE BLUE BOX IN THE LOWER RIGHT CORNER.\nA COMPLETE `RUN` IS CONSIDERED FINISHED WHEN ALL `CYCLES` FOR EVERY `SPLITID` HAVE BEEN GENERATED.\n\nTHERE ARE TWO EXAMPLES OF ANCHORED SIMULATIONS:\n\n* [PbPb](https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2023_apass2_PbPb.sh),\n* [pp](https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2023_apass2_pp.sh).\n\nALTHOUGH NOT IMPLEMENTED IN THE SCRIPTS MENTIONED, THE ENVIRONMENT VARIABLE `ALIEN_JDL_ANCHOR_SIM_OPTIONS` CAN BE USED TO EXECUTE AN `EXTERNAL` GENERATOR CONFIGURED VIA AN `INI` FILE. THIS CAN BE ACCOMPLISHED BY ADDING THE FOLLOWING TO YOUR ENVIRONMENT:\n```bash\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini <path/to/config.ini>\"\n```\n\n## PRE- AND POST-PROCESSING STEPS, SPECIAL CONFIGURATIONS",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "63a753edc0f78d529044000b9f9123b0cb6839e75ca32d5c5836b413971c249c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Pre- and Post-Processing Steps, Special Configurations\n\nTo incorporate any additional functionality through pre- or post-processing steps in the simulation, avoid directly modifying core O2DPG scripts or files. Instead, there are two designated areas to implement such changes. Notably, using custom O2DPG scripts for production requests and tests will prevent official productions from running successfully.\n\n1. Execute the `anchorMC.sh` steering script within your own shell script. Before or after running `anchorMC.sh`, you can include additional pre- or post-processing steps.\n    * For example, you may need to copy specific files to or from another location before or after the simulation.\n1. Include specific arguments to be passed to the simulation workflow creation by setting the environment variable `ALIEN_JDL_ANCHOR_SIM_OPTIONS` (refer to the examples provided in the sections below).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "874f3105d1f8537c8820add108b02d8b120eab9b4c90596f49b17a2db07b6c51": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Run Pythia with a Different Collision System\n\nTo run Pythia8 with a different collision system than the one used during data collection, you can follow the outlined procedure.\nFirst, supply your own `cfg` file for Pythia8. You can find examples at [this link](https://github.com/AliceO2Group/AliceO2/tree/dev/Generators/share/egconfig).\nNext, configure it using\n```bash\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen pythia8 -confKey GeneratorPythia8.config=<path/to/pythia_config.cfg>\"\n```\n\nAlternatively, you can create such a configuration using the script `mkpy8cfg.py` from [here](https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py). For example, you can generate your configuration and use it as follows:\n```bash\n${O2DPG_ROOT}/MC/config/common/pythia8/utils/mkpy8cfg.py --output pythia8.cfg --seed 5 --idA 2212 --idB 2212 --eCM 5020 --process jets\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "4c834df39925899ad7e24dad6e4555b7ff46c17930c9be3e569748a85413cd17": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# required ALIEN_JDL_* variables\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen pythia8 -confKey GeneratorPythia8.config=$(pwd)/pythia8.cfg\"\n\n# example values provided\nexport NTIMEFRAMES=2\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this variable is set; for our specific case, we can imitate any job ID\nexport ALIEN_PROC_ID=2963436952\n\n# execute the central anchor steering script, which performs the following tasks:\n# * calculates the timestamp\n# * determines the interaction rate\n# * retrieves and prepares configurations (identifying which detectors are included in the run)\n# * executes the simulation and quality control\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh\n```\n\nFurther customization is possible, such as adjusting the center-of-mass energy in addition to the collision system.\n\n## Environment Variables\n\nThe `anchorMC.sh` script relies on these environment variables. Make sure to export them, particularly if they are necessary.\n\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "2b5a01f1f56c3d8a21550c0ad29664ffcfb3463bb0362fbef086596c529d3eb1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| Variable | Required | Default | Comments |\n| -------- | -------- | ------- | -------- |\n| `ALIEN_JDL_LPMANCHORPASSNAME` | yes | | Identifies the reconstruction pass/cycle for setting reconstruction parameters, e.g., apass4 |\n| `ALIEN_JDL_MCANCHOR` | yes | | | \n| `ALIEN_JDL_LPMRUNNUMBER` | yes | | The ALICE run number that this MC job is associated with. |\n| `ALIEN_JDL_LPMANCHORRUN` | yes | | | \n| `ALIEN_JDL_LPMPRODUCTIONTAG` | yes | | The name of this MC production on the ALICE Grid. |\n| `ALIEN_JDL_LPMANCHORPRODUCTION` | yes | | | \n| `ALIEN_JDL_LPMANCHORYEAR` | yes | | The data taking year corresponding to this job. |\n| `ALIEN_JDL_LPMPRODUCTIONTYPE` | yes | | Must be set to `MC`. Currently, it needs to be manually set, but it is planned to make it default to `MC` and no longer configurable. |\n| `ALIEN_JDL_LPMINTERACTIONTYPE` | yes | | Specifies the interaction type, choose between `pp` or `PbPb`. |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "36b407441d33d77ec53811d082ac8a6f19cfb55abefe924365b52b56d9b9b1a3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `ALIEN_JDL_LPMINTERACTIONTYPE` | yes | | The interaction type, select either `pp` or `PbPb`. |\n| `ALIEN_JDL_CPULIMIT` | no | 8 | The CPU limit assumed by the workflow runner; the actual limit varies depending on the machine. |\n| `ALIEN_JDL_SIMENGINE` | no | `TGeant4` | The simulation engine for particle transport. |\n| `ALIEN_JDL_WORKFLOWDETECTORS` | no | `ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,EMC,PHS,CPV,HMP,CTP` | These can be a selection of detectors active during reconstruction. Detectors not used in reconstruction will be disregarded. |\n| `ALIEN_JDL_ANCHOR_SIM_OPTIONS` | no | *empty* | Additional simulation options for custom user settings, often used to define the event generator or pass extra configurations. Refer to the [example](#run-pythia-with-a-different-collision-system) above for more details. |\n| `ALIEN_JDL_ADDTIMESERIESINMC` | no | `1` | Enable TPC time series by setting this to `1`; set to `0` to disable. |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "259a4723b2f9b4c421c6d13b5614d21e62aa20028b637815dc8f6b482ec88ccd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `ALIEN_JDL_MC_ORBITS_PER_TF` | no | *empty* | Configure the timeframe length in orbits (or use the default from GRPECS). |\n| `ALIEN_JDL_RUN_TIME_SPAN_FILE` | no | *empty* | Specify the file name with periods of bad/good data taking (same as in asynchronous reconstruction). |\n| `ALIEN_JDL_INVERT_IRFRAME_SELECTION` | no | *empty* | When enabled, inverts the selection based on the ALIEN_JDL_RUN_TIME_SPAN_FILE. |\n| `ALIEN_JDL_O2DPGWORKFLOWTARGET` | no | \"aod\" | Define the target task for the O2DPG MC workflow, up to which the workflow will be executed. Refer to workflow.json for available tasks. |\n| `ALIEN_JDL_O2DPG_ASYNC_RECO_TAG` | no | *empty* | Identify the software package for running reconstruction steps and configuration setup (e.g., O2PDPSuite::async-async-20240229.pp.2b-slc9-alidist-O2PDPSuite-daily-20231208-0100-async1-1). |\n| `ALIEN_JDL_CCDB_CONDITION_NOT_AFTER` | no | *empty* | Set the condition_not_after timestamp for CCDB queries (to ensure objects with a state before that timestamp are fetched). |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "0d906d23b7a794ad6172a9479ed7b9f626291e03ae2977c1d77650ea22960c60": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `SEED` | no | `${ALIEN_PROC_ID:-1}` | Used to seed the simulation. |\n| `SPLITID` | yes | | Select the split to simulate, which corresponds to a specific timestamp within a run. SPLITID ranges from 1 to PRODSPLIT. See [terminology](#run-an-anchored-simulation) above. |\n| `PRODSPLIT` | yes | | Indicates the total number of MC jobs in this production, equally distributed throughout the run. See [terminology](#run-an-anchored-simulation) above. |\n| `CYCLE` | no | 0 | Specify the cycle to be simulated. Defaults to 0. See [terminology](#run-an-anchored-simulation) above. |\n| `NTIMEFRAMES` | yes | | Determines the number of timeframes to be simulated for this split. |\n| `NSIGEVENTS` | no | 10000 | Sets the upper limit for the number of signal events to simulate per timeframe. The actual number of events is recalculated based on the interaction rate determined for this split. |",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "43c074f9f81504db08c39c2d06971805c648216ee9bf4183f03250f4ee95682e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## The Background Process\n\nThe intricate process occurring behind the scenes is outlined in the following diagram.\n\n![anchored run](../images/anchored_run.png)\n\n## The 2-Software Tag Method for Anchored MC Productions\n\nA **two-tag software methodology** is available for anchored Monte Carlo (MC) productions. This allows different tasks within an MC job to utilize distinct CVMFS software releases.\n\n### Rationale\n\nThe main goal is to ensure that reconstruction algorithms run on **stable software releases** and configurations, which are also employed in data-reconstruction processes. Additionally, this method facilitates incorporating new developments in:\n\n- Event generators  \n- GEANT-based simulations  \n- Anchoring logic  \n- Workflow execution frameworks\n\nThis approach minimizes the necessity to integrate enhancements into older software releases.\n\n---\n\n### Implementing the 2-Tag Setup\n\nIn practice, all you need to do is:\n\n-",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "b1b3d7f8f54ede66dc5f0a64e6cc4c311b5cf9666c8260cde0e062f482fca56e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\n\n### Guide for the 2-Tag Configuration\n\nYou need to perform these steps:\n\n**(a)** Select a current (verified) software release in the `Packages` field of your JDL:\n\n- Fetches the latest **O2DPG logic**\n- Utilizes the most recent **generator code**\n- Incorporates updated **GEANT and digitization algorithms**\n\n**(b)** Configure the environment variable `ALIEN_JDL_O2DPG_ASYNC_RECO_TAG` to specify the release used for **reconstruction**.\n\n- Guarantees that reconstruction employs the right version for anchoring and configuration\n\n---\n\n### Example JDL Code\n\n```jdl\nPackages = {\n  \"VO_ALICE@O2PDPSuite::daily-20250408-0000-1\"\n};\n\nJDLVariables = {\n  ...\n  O2DPG_ASYNC_RECO_TAG\n  ...\n};\n\nO2DPG_ASYNC_RECO_TAG = \"VO_ALICE@O2PDPSuite::async-async-v1-02-10-slc9-alidist-async-v1-02-01-1\"\n...\n```\n\n### Key Considerations\n\nAlthough this method is effective and user-friendly, it has **potential drawbacks**.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "e3a2a58576c6251881d1ba8b1bb3a3f1f146c2dfefd2f86823e909cd8383ca85": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "While this method is robust and user-friendly, it does carry some **potential risks**:\n\n* Incompatibilities between the two software versions (e.g., data formats, configuration options, etc.)\n    \n* Such incompatibilities should be **verified in pilot jobs** before scaling up to larger operations.\n    \n\nAny identified problems should be reported through the standard channels:\n\n* [Mattermost simulation forums]\n    \n* [JIRA issues]",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/anchored.md"
        }
    ],
    "8d17941379d40d3de763b042796359d86b6aabfc273adafc4aeb82700236f32a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 2\ntitle: CCDB\n---\n\n# CCDB\n\nSimilar to other `O2` executables, the simulation relies on the CCDB to fetch configurations, metadata, or objects needed during the run.\n\n## Prerequisites\n\nA valid GRID **token** is required. For details, see [here](../gettingstarted/README.md#alien-grid-token)\n\n## CCDB snapshots\n\nWhile running the simulation workflow, various tasks require CCDB objects. Since the simulation spans different timeframes and tasks can run in parallel, requiring the same objects, we utilize **snapshots**. When an object is requested for the first time, it is downloaded and **stored** in a cache, which is then used for subsequent requests to avoid repeated queries to the CCDB. By default, the cache is located at `${CWD}/ccdb`, but you can change this by setting:\n```bash\nexport ALICEO2_CCDB_LOCALCACHE=/path/to/snapshot_cache\n```\n**NOTE**: Ensure that the path specified is absolute.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/ccdb.md"
        }
    ],
    "3360c712a5f3eb584a6f4432dcb227218bdf826c89f983543060f03182454f1d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This feature can also be utilized to run a simulation without accessing the CCDB: Just point to or duplicate a snapshot directory from a previous simulation run into the directory where you are currently running the simulation.\n\n**NOTE**: There is no verification of the timestamp of your simulation relative to the cached objects; these will be used as-is, and are identified solely by their path.\n\n## Utilize custom objects/snapshots",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/ccdb.md"
        }
    ],
    "a6ac32a5ebb8ff950ad620010eb0267cd60965738ef8ad0bf23f457b16ffd347": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Utilizing Custom Objects/Snapshots\n\nThe caching system isn't just beneficial for reducing unnecessary queries to the CCDB; it also enables the incorporation of custom objects into your workflow that wouldn't otherwise be retrieved based on the timestamp.\n\nFor instance, you may need a specific alignment at a particular timestamp `<timestamp>`, which doesn't necessarily align with the simulation's timestamp. Assuming your cache is located at `${ALICEO2_CCDB_LOCALCACHE}`, you can download a specific TPC alignment by executing:\n```bash\n${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch -p TPC/Calib/Align --timestamp <timestamp> -d ${ALICEO2_CCDB_LOCALCACHE}\n```\nAfter running this command, you can proceed with the simulation, and the desired TPC alignment will be utilized.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/ccdb.md"
        }
    ],
    "6e27a0603660f093e847ea1fecda3970b9da67f2d83b4f34aec890c7ed0fd6cc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 4\ntitle: Run3 production setup - O2DPG MC Workflows\n---\n\n# Run3 production setup - O2DPG MC Workflows\n\nThe [O2DPG repository](https://github.com/AliceO2Group/O2DPG) supplies the definitive setup for official MC productions for ALICE-Run3, integrating all necessary simulation tasks into a unified and coherent framework. This framework delivers a comprehensive simulation pipeline, encompassing event generation, Geant transport, reconstruction, AOD creation, and running QC or analysis tasks.\n\nWithin O2DPG, the logic and configuration of a MC job are decoupled from the runtime engine responsible for executing the job on a compute node.\n\nFor this purpose, O2DPG offers two crucial scripts:\n1. [o2dpg_sim_workflow.py](https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py),\n2. [o2_dpg_workflow_runner.py](https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "45929048d7c6e0785ee1332f8cf7e7c8e7ab18d1f87b9141e85a06f59c703ee1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The initial script generates a workflow tree in JSON format, detailing the steps and dependencies from simulation through to the final AOD creation. The second component is the runtime engine, which handles the execution of this workflow on a compute node.\n\nExamples can be accessed at <https://gitlab.cern.ch/aliperf/alibibenchtasks>. **N.B.** These tasks are executed nightly on a test machine, ensuring these scripts remain continuously updated.\n\nFor best results, it is recommended to build and load the `O2sim` environment via `alienv`.\n\n## Prerequisites\n\nWhile not all use cases can be covered here, a few key points and useful pointers are summarized below.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "c86b1990d34fe77a83590eaae6037d0950709a832db3d3661ea5bcf7ff48f379": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The workflows demand a minimum of `16 GB` of RAM and an `8`-core processor. If your machine has precisely `16 GB` of RAM, consult [these guidelines](#adjusting-resources). To access CCDB objects/alien, you must have a valid GRID token. For setting this up, refer to https://alice-doc.github.io/alice-analysis-tutorial/start/cert.html.\n\n## Workflow Setup\n\nTo run a workflow, use the following minimal command:\n```bash\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -gen <generator> -eCM <collision energy [GeV]>\n# OR\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -gen <generator> -eA <energy of first beam [GeV]> -eB <energy of second beam [GeV]>\n```\nThis command requires at least the beam energies and the generator to be specified.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "916df0f587e48723c6407ed417a2101b15052beb8e496dd200e69926c8abbc4c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If you utilize `pythia8` as your generator **and do not** specify a process with `-proc <process>`, the simulation will fail due to a lack of necessary configuration (refer to [here](../generators/generatorso2.md#pythia8) for more details). Therefore, a valid configuration must be passed, which should be done as follows:\n```bash\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -gen pythia8 -eCM <emc energy [GeV]> -confKey \"GeneratorPythia8.config=<path/to/config>\"\n```\n\nSimulations executed via a workflow operate in timeframes, and the number of timeframes to simulate is defined with `-tf <nTFs>`. The number of events generated per timeframe can be specified with `-ns <nEvents>` (this is optional as it has a default value).\n\nBy default, the workflow description is saved to `workflow.json`.\n\n### Event pools",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "0c8640eb2a91e87dfdb77bf435cba7fb656ba2389e58c624ec17aa7dbcbb1791": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "BY DEFAULT, THE SIMULATION WORKFLOW DESCRIPTION IS STORED IN `workflow.json`.\n\n### Event Pools\n\nTo create a workflow for event pools, use the `--make-evtpool` flag.\n```bash\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -gen <generator> -eCM <emc energy [GeV]> -tf <nTFs> --ns <nEvents> --make-evtpool\n```\nThis command will bypass all steps following signal generation (no transport), set the beam-spot vertex to kNoVertex, and include a final step named `poolmerge` to merge all `Kine.root` files produced for the `nTFs` timeframes into a single `evtpool.root` file.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "ad59ed9677e124e3660e8fffa5cc3a4cbd78063018643be9a4c57da4e9ea381d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Embedding\n\nThe process can also be configured to simulate signal type events embedded within a specified type of background events. To activate this option, use the flag `--embedding`. For the background events, the following parameters are available:\n* `-nb <nEvents>`: specifies the number of background events to simulate,\n* `-genBkg <generator>`: identifies the generator used for background event generation,\n* `-colBkg <system>`: defines the collision system for the background events,\n* `-procBkg <proc>`: specifies the process for background generation (only applicable if the background generator is Pythia8),\n* `-confKeyBkg <confKeyValuePairs>`: allows additional key-value pairs to be passed to the background generation and transport steps.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "29553c7d575e774ab3596e71e3a12665d97a7efd4ebbd2390b942499060ca297": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Workflow Execution\n\nThe basic command to run the workflow is\n```bash\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json\n```\nHowever, there are several useful command-line options available:\n- `-tt <regex>` to specify the \"target task\" until which the workflow should be executed,\n- `--mem-limit <mem limit [MB]` to ensure the memory limit is not exceeded by only running tasks that fit within the limit,\n- `--cpu-limit <number of CPUs>` to limit the CPU usage by only running tasks that fit within the CPU limit,\n- `--rerun-from <regex>` to instruct the runner to start from tasks whose names match the `<regex>` pattern,\n- `--target-labels <list> <of> <target> <labels>` to run all tasks that have at least one of the specified labels.\n\nThe runner is designed to execute as many tasks in parallel as possible. Initially, the transport process may take some time, but soon your terminal will display numerous tasks running on top of the simulation results.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "da35de6ee89b61552792bfe2bfacc65e39fd5f3ab18144e6b06f22099103841e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sometimes, you may wish to execute the entire chain to generate the final `AO2D.root` file. For this purpose, and to avoid running unnecessary tasks, use the `-tt aod` option. \n\n### Utilization of Event Pools",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "43d65ae3b047fe599b2ea97ed58c65ad7d4317c93ca7f704a26a5e87a563f9ff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "When working with event pools, it's important to adhere to certain guidelines, especially when creating an event cache. The workflow runner needs to be configured to reach the poolmerge step, as in:\n```bash\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt pool\n```\nAlternatively, when incorporating the pool into an O2DPG workflow (using `extkinO2` as the generator), users should be aware that by default, events will be randomized (using the same seed within each timeframe), but phi randomization is not active by default.\nTo run a workflow that includes phi angle random rotation, the command should be:\n```bash\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM <emc energy  [GeV]> -gen extkinO2 -tf <nTFs> --ns <nEvents>\n                                           -confKey \"GeneratorFromO2Kine.randomphi=true;GeneratorFromO2Kine.fileName=/path/to/file/filename.root\"\n                                           -gen extkinO2 -interactionRate 500000\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "3dfc412825b32f545f737dac474a0db765b083b17201b508b44d874a9a12fae7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Use -gen extkinO2 with an interactionRate of 500000\n# Then run\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod\n```\nTo disable event randomisation, the user can edit the JSON file manually. A complete example of event pools is available in the [${O2DPG_ROOT}/MC/run/examples/event_pool.sh](https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/event_pool.sh) script (refer to the `--help` flag or the source code for instructions).\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "fb2c07b5e5626c9f7c102a19f4de2bdb51307ed425892305dcc009c73d9ee0e4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Regarding Completed Tasks\n\nAfter a task completes, it won't be rerun unless you delete the `<task_name>_log_done` file in the directory. If you delete that file and rerun, ensure all dependent tasks are correctly re-executed by using\n```bash\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --rerun-from <task_name> -tt <your_target_task>\n```\nand you do not need to remove `<task_name>_log_done`.\n\nAlternatively, you can rerun from a specific task and set it as the target task without deleting any files. Just run\n```bash\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --rerun-from <task_name> -tt <task_name>\n```\n\n## Quality Control and Extra Steps\n\nTo include standard Quality Control (QC) steps in the workflow, use the `--include-qc` flag. To run all QC tasks, execute\n```bash\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels QC\n```",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "73b70e434b02b6eaf133279257475ddf8f25aa9be4026b6576013e46a56d8bff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In addition, there is a small collection of analyses that can be incorporated into the workflow. These analyses are intended for testing and their configuration is not optimized for generating top-tier analysis outcomes. However, they can be used to verify that the AODs are generally in a sane state. To set up a workflow, use the `--include-analysis` option and then run the following command:\n\n```bash\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels Analysis\n```\n\n## Modifying Resources\n\nIf you encounter the runner terminating with the message:\n```bash\nruntime error: Not able to make progress: Nothing scheduled although non-zero candidate set\n\n**** Pipeline done with failures (global_runtime : 250.285s) *****\n```\n\nand your system has `16 GB` of RAM, you might need to artificially increase the memory limit for the runner by using the following command:\n\n```bash\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --mem-limit 18000\n```\n\n## Resolving Issues\n\n### Identifying Useful Log Files",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "2cb0c21e99bf2dd57d5f4bf1c4ee0a53594e6cd6677a4fc0b21bce010212b195": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Troubleshooting\n\n### Identifying Relevant Log Files\n\nWhen a specific stage in the workflow encounters an error and the workflow runner exits with a non-zero code, as in the example:\n```bash\ncommand ${O2_ROOT}/bin/o2-sim-digitizer-workflow -b --run --condition-not-after 3385078236000 -n 1 --sims sgn_1 --onlyDet FT0,FV0,CTP --interactionRate 50000 --incontext collisioncontext.root --disable-write-ini --configKeyValues \"HBFUtils.orbitFirstSampled=0;HBFUtils.nHBFPerTF=128;HBFUtils.orbitFirst=0;HBFUtils.runNumber=310000;HBFUtils.startTime=1550600800000\" --combine-devices had a non-zero exit code 1\nStop on failure  True\nsetting up ROOT system\nft0fv0ctp_digi_1 failed ... checking retry\n```\nThe `<i>` in the suffix `_<i>` indicates the timeframe of the issue, so the log file to focus on would be `tf1/ft0fv0ctp_digi_1.log`.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "2b49076be18a46be2bf4775ab1780abc66377cf9d2ba0635c3e19e24b117481f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "There is a specific scenario where the detector transport fails, and in that case, the log file reported would be `tf<i>/sgnsim_<i>.log` or `bkgsim.log`. Given that the detector simulation runs multiple workers, there are extra log files where the workers' outputs are directed. These include:\n1. `tf<i>/sgn_<i>_workerlog0`,\n2. `tf<i>/sgn_<i>_serverlog`,\n3. `tf<i>/sgn_<i>_mergerlog`.\n\n### In the Event of a Workflow Crash",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "3fc12b932291daf9a1305846a4a8489fdca859311af26e3fddaef16cd5a119cc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### When a workflow run encounters issues\n\n1. Verify that O2 and O2DPG are compatible. Even though O2DPG includes mostly scripts that **run** O2 code, some O2 features (like specific arguments for certain executables) might be incompatible between the versions of O2 and O2DPG you are using.\n1. If you have a custom local installation of the software but still expect the workflow to run successfully, then\n    1. ensure the integrity of your installation,\n    1. possibly update your installation (not just the development packages, but also `alidist`),\n    1. execute the workflow using a version from `cvmfs` (available on `lxplus`),\n    1. try a different machine or working environment (for instance, `lxplus` could be suitable if the workflow is not resource-intensive).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "0b7f1d2ad3c5eab10abe387878765f0783fba8170c728f7e7fb7cab6cb6c2b9c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "1. If corrupt CCDB objects are an issue, it may be a real problem, but a hickup could lead to a corrupted object being saved in the local CCDB snapshot, typically located in a hidden `.ccdb` directory.\n1. Try deleting the problematic snapshot and then rerunning the process from your current position.\n1. Completely remove all files, including the `.ccdb` directory, as simply using `rm -r *` will not delete the hidden directory.\n1. If the problem continues and you believe it to be genuine, please contact support.\n\n### When a workflow run hangs\n\n1. Ensure O2 and O2DPG are compatible versions. Although O2DPG consists primarily of scripts that utilize or execute O2 code, certain O2 features (like specific arguments for certain executables) might be incompatible between the versions of O2 and O2DPG you are using.\n1. Terminate the hung task and review the log files (refer to [above](#what-are-the-interesting-log-files) for more details).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "bfb57beab6e5756142287e152e2729f26cd743e963f90215f28119d50f1a315a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "{% include list.liquid all=true %}",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/o2dpgworkflow/README.md"
        }
    ],
    "771afc3db20a42c00d665619f7c734e44376e666141dfaccdf3f1e1f6eb46a85": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\nsort: 6\ntitle: MC GRID productions\n---\n\n# MC GRID productions\n\nMonte Carlo simulations often require extensive statistics, necessitating their distribution and execution across large compute farms.\nBy default, we utilize the Worldwide LHC Computing Grid (WLCG) <https://wlcg.web.cern.ch/>, which effectively aggregates various compute farms into a collaborative, abstract layer where simulation jobs can be submitted.\n\nALICE's interface to this system is referred to as AliEn <https://jalien.docs.cern.ch/>.\n\nSeveral methods are available to leverage GRID computing for simulations:\n\n## Official (large scale) productions\n\nFor official simulations conducted by ALICE physics working groups or larger research and development efforts (like detector groups), these should be managed through the Data Processing Group (DPG).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gridproductions/README.md"
        }
    ],
    "da5fae7a3635525809128ef3bdd65a93d6eeecb9a1bd37fff193023b70879c26": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "A ticket of type \"Production Request\" must be submitted in [JIRA](https://alice.its.cern.ch/jira/projects/O2), detailing the purpose, setup, and the software version required. The production process will be managed by the DPG production manager. It is important to note that a ticket is necessary for test requests as well; no requests via email will be processed.\n\nDepending on resource usage, productions might need approval from the Physics Board. The CPU limit for tests or productions without Physics Board approval is set at 1 day equivalent to 10,000 CPU hours.\n\n## Personal (development or test) productions\n\nALICE collaboration members have a personal compute quota allowing the submission of jobs that utilize approximately 100 CPUs for development and testing. This provides a substantial resource pool for such activities.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gridproductions/README.md"
        }
    ],
    "b4534b49f28f6d5264da50f5277e5f7c97352f90eeebcd0233d8b254a8098e9d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Here, one must create a JDL file to describe the job, upload executables to the GRID, and utilize a tool like `alien.py` to interact with the GRID services. More details can be found [here](https://jalien.docs.cern.ch/), with the JDL job reference available [here](https://alien.web.cern.ch/content/documentation/howto/user/jobs).\n\nSetting up JDLs and transferring necessary files can be a tedious task. Fortunately, there is also a [tool](https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh) called `grid_submit.sh` that enables submitting a locally existing script for GRID execution with minimal boilerplate. While the tool is still under development and requires further generalization, it can serve as a good starting point.\n\n### Configuring `grid_submit.sh`",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gridproductions/README.md"
        }
    ],
    "ca66de5e3f7f7a04d7ac633137d19aee9aff3b706d8281a9bf808fd5801da06c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Adjusting `grid_submit.sh`\n\n* Modify the TTL setting for your job by using `--ttl <ttl>`.\n* If your local user name differs from the GRID user name, set it with `--asuser <alien-user>`.\n* Production MC simulations are executed in `SPLITs`. Further details can be found [here](../o2dpgworkflow/anchored.md). Use `--prodsplit <prodsplit>` to change the number of splits, with a default of `1`.\n\n### Key Recommendation\n\nIt is strongly advised, whenever feasible, to test any custom developments or new implementations locally or on `lxplus` before deploying them on the GRID. This can help in several ways, including:",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gridproductions/README.md"
        }
    ],
    "75bbb54623517a96a8891da4d62dafa0f125e83ce36be42d1e1455c8db55d92a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "* no waste of GRID quota,\n* all output files, such as ROOT or log files, are readily accessible (some may be missing if you overlook or have incorrect output specifications in the JDL for the GRID run),\n* easy access and inspections, no need for downloads or uploads,\n* potentially as quick or even faster than GRID testing (no waiting or additional saving time),\n* easier to reconfigure, rerun, modify the code, and run again.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/docs/gridproductions/README.md"
        }
    ],
    "fdfab8ecc7522ba595f0e3d0be67621a5f36bb321dcdddb91d51513b87ac51f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sandro Wenzel, 26.4.2023\n\nRunning Run3 Simulations\n\nALICE Analysis Tutorial\n\fAgenda\n\n• Gain an overview of the ALICE Run3 simulation environment and understand the necessary steps\n\n• Familiarize yourself with basic functionalities of o2-sim, including event generation and transport simulation\n\n• Learn about the use and configuration of basic event generators\n\n• Be introduced to O2DPG – the official integrated MC production pipeline from event generation to AOD and analysis\n\nIntroductory overview for “analysts”; Additional details in PWG tutorials\n\n2\n\fContact Information\n\n• Learn how to contact the simulation developers\n\n• Use the simulation e-group for meeting announcements and participate in WP12 meetings\n\n• Utilize collaborative Mattermost channels (preferable over private email): O2-simulation and O2DPG\n\n• Report feature requests or bug reports via JIRA tickets (for simulation or O2DPG components)\n\n• Find information about the simulation\n\n• Refer to the new documentation project: https://aliceo2group.github.io/simulation/\n\n• Previous documentation in AliceO2: DetectorSimulation.md",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "f420c5ad3268a8353f2e37036f223816ce41bbde51ca1aeb669962b9eff30c38": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Previous documentation in AliceO2: DetectorSimulation.md\n\n• Information on O2DPG can be found in WorkﬂowRunner.md\n\n• Various examples are available at O2/SimExamples or nightly-tests\n\n3\n\fContact information\n\n• How to reach the simulation developers\n\n\n• Simulation e-group for meeting announcements, plus WP12 meetings\n\n\n• Prefer collaborative Mattermost channels: O2-simulation and O2DPG\n\n\n•\n\nJIRA tickets for feature requests or bug reports (components: simulation or O2DPG)\n\n\n• Where to find simulation information\n\n\n• A new documentation project: https://aliceo2group.github.io/simulation/\n\n\n• Previous documentation in AliceO2: DetectorSimulation.md\n\n• Some information in O2DPG: WorkﬂowRunner.md\n\n• Various examples at O2/SimExamples or nightly-tests\n\n👈 Still in early stages: give feedback, ask questions, contribute!\n\n3\n\fSoftware environment reminder\n\nlocal build\n\naliBuild build O2sim -–defaults o2 \n\nalienv enter O2sim/latest\n\nnightly precompiled builds (CentOS)",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "16c9e184077200ef114f1c16a827fc086a8215b417c271e579134bc0a4d4dcd2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    alienv enter O2sim/latest\n\nnightly precompiled builds (CentOS)\n\n/cvmfs/alice.cern.ch/bin/alienv enter O2sim::v20230419-1\n\n4\n\fA reminder of the traditional workflow in high-energy physics and the importance of simulation\n\nReal particle collisions\n\n~TB/s\n\nsensor data\n\nReconstruction\n\nTakes sensor data and reconstructs the particle states immediately following collisions\n\nPetaBytes\n\nAOD data\n(Structured) high-level physics data for querying and analysis\n\nPhysics Analysis\n\nData analysis to identify physics results and generate papers\n\n\fA reminder of the traditional workflow in high-energy physics and the importance of simulation\n\nReal particle collisions\n\n~TB/s\n\nsensor data\n\nReconstruction\n\nTakes sensor data and reconstructs the particle states immediately following collisions\n\nPetaBytes\n\nAOD data\n(Structured) high-level physics data for querying and analysis\n\nPhysics Analysis\n\nData analysis to identify physics results and generate papers\n\nWe are simulating for\n\n• detector and system design",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "a6c5f1431c1122a6325eb7e47a748d03d3ab7ffcffca2ddc9141c210db349398": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "We are simulating for\n\n• detector and systems design\n\n• calibrating reconstruction algorithms\n\n• understanding reconstruction algorithm efficiency\n\n• practicing data-taking system with synthetic data\n\n• assessing background effects\n\n• radiation studies\n\n• etc.\n\nVirtual particle collisions \n+ (detector) simulation \nbased on physics models\n\fInsight into the ALICE Run3 simulation framework\n\n• The framework includes multiple elements\n\n\n• The core simulation section includes\n\n\n• Event generation\n\n\n• Transport simulation\n\n\n• Digitization\n\n\n• Additionally, MC workflows can test\n\n\n• Reconstruction, Quality Control, Analysis, and more\n\n\n• Individual components are managed in O2 and O2Physics repositories\n\nEvent generators\nTransport/Detector \nsimulation\n\nDetector digitisation\n\nDetector and global \nreconstruction code \n\nAOD creation\n\nQC\n\nAnalysis\n\n…\n\n6",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "18bbc057b42c0a77370c7edef9887a3bfd7ff2ab64b33a48bd276fc368c1fd41": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "OF VARIOUS COMPONENTS\n\n\n• Core simulation part:\n\n\n• Event generation\n\n\n• Transport simulation\n\n\n• Digitization\n\n\n• Moreover, MC workflows may engage all\n\n\n• Reconstruction, QC, Analysis, etc.\n\n\nEvent generation and transport/simulation\n\nDigitization of detectors\n\nCode for detector and global reconstruction\n\nAOD creation\n\nQC\n\nAnalysis\n\n...\n\nPWG configurations\n\nIntegration of all components into coherent workflows, accomplished through:\n\n\n• Individual parts stored in O2 and O2Physics repositories\n\n• O2DPG repository (primarily for physics studies on GRID)\n\n• full_system_test (mainly for data-taking simulations)\n\n6\n\fData products within the simulation pipeline\n\nEvent generation and transport simulation\n\nDigitization\n\nReconstruction\n\nPhysics analysis\n\n• Geometry file\n\n• Kinematics file\n\n• Detector response files (hits)\n\n• Digits == detector sub-timeframes\n\n• Similar to or close to raw detector output\n\n• Global reconstructed tracks\n\n• Primary and secondary vertexes\n\n\n• etc.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "7da9cf27daa07a7416dc51e68efa92943125708a7ec16efd63ecc61537b6e289": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Global reconstructed tracks\n\n• Primary and secondary vertexes\n\n\n• etc.\n\n• AOD (analysis object data)\n\n\no2-sim: The ALICE Run3 transport simulator\n• o2-sim serves as the particle-detector simulator for ALICE Run3\n\n\n• It integrates ALICE detector simulations with established particle-transport engines that include physics models and particle tracking\n\n\n• It supports Geant4, Geant3, and FLUKA through the Virtual Monte Carlo API\n\n\n• Key responsibilities of o2-sim include:\n\n• Creation of ALICE detector geometry\n\n\n• Event generation (primary particle creation)\n\n\n• Simulation of particle interactions with detector material (secondary particle creation, etc.), and tracking particles until they exit the detector or come to a stop\n\n\n• Generation of hits (energy deposits) as a precursor to detector response following particle passage",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "2cab46a0952174a39bd49a913fd95cbf2162e4f22864bce42588b077527594b7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• The ALICE detector is integrated into well-known particle-transport engines that incorporate actual physics models and particle transport mechanisms.\n\n• Geant4, Geant3, and FLUKA can be utilized interchangeably via the Virtual Monte Carlo API.\n\n• The primary functions of o2-sim include:\n\n• Creation of ALICE detector geometry\n\n\n• Event generation (primary particle creation)\n\n\n• Simulation of particle interactions with detector material (secondary particle production, etc.) and particle transport until they exit the detector or stop\n\n\n• Formation of hits (energy depositions) as a preliminary step for detector response following particle passage\n\n• In Run3, o2-sim introduces scalable, multi-core simulation with sub-event parallelism, enabling rapid results for large events on powerful servers\n\n\n• Notably, o2-sim processes events in complete isolation—no timeframe concept is applied during simulation (only during digitization)\n\n8\n\fExamples of o2-sim usage\n\n• Several examples demonstrating how to use o2-sim ...\n\no2-sim -n 10 -g pythia8pp",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "50ebdb41427668a085c25c681dffba7b364563501b57607460af46ab0e552474": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• examples demonstrating the use of o2-sim …\n\no2-sim -n 10 -g pythia8pp\n\n“Create 10 standard Pythia8 \npp events and propagate them \nthrough the entire ALICE \ndetector”\n\n9\n\fBasic examples for o2-sim usage\n\n• examples demonstrating the use of o2-sim …\n\no2-sim -n 10 -g pythia8pp\n\no2-sim -n 10 -g pythia8pp -j 8     \n—-skipModules ZDC —-field 2 -e \nTGeant3\n\n“Generate 10 standard Pythia8 \npp events and propagate them \nthrough the whole ALICE \ndetector”\n\n“Produce 10 standard Pythia8 pp events \nand propagate them with 8 Geant3 \nworkers, excluding ZDC, and apply a magnetic field \nof 2kGauss”\n\n9\n\fBasic examples for o2-sim usage\n\n• examples demonstrating the use of o2-sim …\n\no2-sim -n 10 -g pythia8pp\n\no2-sim -n 10 -g pythia8pp -j 8     \n—-skipModules ZDC —-field 2 -e \nTGeant3\n\n o2-sim -n 10 -g pythia8pp \\          \n        —-noGeant\n\n“Create 10 standard Pythia8 \npp events and propagate them \nthrough the entire ALICE \ndetector”",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "15ccfa897b7d948f194669c4df6c41cb34bc5fe6a02a998ddd42384fecdd2f65": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"Create 10 default Pythia8 pp events and pass them through the entire ALICE detector.\n\nCreate 10 default Pythia8 pp events and route them via 8 Geant3 workers through the ALICE detector except for ZDC, applying a L3-field of 2kGauss.\n\nSimply generate 10 default Pythia8 pp events without further processing.\n\n(o2-sim basic usage in examples)\n\n• Some examples of o2-sim usage:\n\no2-sim -n 10 -g pythia8pp\n\no2-sim -n 10 -g pythia8pp -j 8     \n—-skipModules ZDC —-field 2 -e \nTGeant3\n\n o2-sim -n 10 -g pythia8pp \\          \n        —-noGeant\n\n\"Create 10 default Pythia8 pp events and pass them through the entire ALICE detector.\n\nCreate 10 default Pythia8 pp events and route them via 8 Geant3 workers through the ALICE detector except for ZDC, applying a L3-field of 2kGauss.\n\nSimply generate 10 default Pythia8 pp events without further processing.\n\n(o2-sim basic usage in examples)\n\n• o2-sim --help lists main options and shows defaults\"",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "921e3d7bc079941ceba77fe90dc50cf77b15343e0803630d537316c16f6391f6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "(pure generator output)\n\n• o2-sim --help provides an overview of primary options and displays default settings.\n\n9\n\fo2-sim: Monitoring the Simulation Process\n\n• o2-sim generates three internal log files (one from each micro-service), which are useful for observing the simulation process or troubleshooting.\n\no2sim_serverlog\no2sim_workerlog0\n(o2sim_mergerlog)\n\n10\n\fo2-sim: Kinematics Data Output\n\n• The default kinematics output file, o2sim_Kine.root, from the transport simulation is the most pertinent for physics analysis.\n\n• It includes information on the creation vertices, momenta, and other details of primary (generated) and secondary (transported) particles created during the simulation.\n\n• It also contains information on the physics creation process, including particle origins and lineage.\n\n• Based on the o2::MCTrack class, which is essentially a simplified version of TParticle.\n\n• For each event, there is one entry of vector<MCTracks> in a TTree.\n\n• By default, kinematics data is pruned to retain only relevant particles.\n\n• Additionally, it provides event-level metadata for each event.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "0c8132c539e3ec57a222c329c7ed9f775cc0a4d596175fce65a855c33a75199f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Furthermore, detailed event-level metadata for each generated event is found in a distinct file (o2sim_MCHeader.root).\n\n\n•\n\nFor example, the impact parameter in PbPb collisions.\n\n“a histogram showing the production vertex-y of all MC tracks (both primary and secondary)”\n\n\n11\n\fKey helper classes for accessing Monte Carlo (MC) kinematics\n\n👉 Example: Run/SimExamples/\nJet_Embedding_Pythia8\n\n• Manually reading and navigating through kinematics data can be tedious (ROOT-IO boilerplate).\n\n\n• Provide two main utility classes to simplify this process for users.\n\n\n• MCKinematicsReader - A class designed to easily read and retrieve tracks for a specific event or Monte Carlo label.\n\n\n• MCTrackNavigator - A class for navigating through the mother-daughter tree of MC tracks and querying physics properties.\n\n“Load all MC tracks from the stored kinematics file for event id 1, then loop through each track to identify the direct mother particle and the primary ancestor in every case”",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "16a9d4f9a939d30debecb20b2068d5fc0c93f3ae805dce4d5896e9897865f8ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "12\n\nusing o2::steer; using o2; // access kinematics file with simulation prefix o2sim MCKinematicsReader reader(\"o2sim\", MCKinematicsReader::Mode::kMCKine); // retrieve all Monte Carlo tracks for the current event std::vector<MCTrack> const& tracks = reader.getTracks(event); for (auto& t : tracks) {    // process tracks; locate the mother track of each track (among all tracks)    auto mother = o2::mcutil::MCTrackNavigator::getMother(t, tracks);    if (mother) {       std::cout << \"This track has a mother\\n\";    }    // find the (backward first) primary particle from which this track originates    auto primary = o2::mcutil::MCTrackNavigator::getFirstPrimary(t, tracks); }\n\fGenerators: Basic\n\n• o2-sim provides a few predefined generators (choose with the -g option)\n\n\n• phythia8pp       (pre-configured Pythia8 for pp)\n\n\n• phythia8hi        (pre-configured Pythia8 for PbPb)\n\n\n• boxgen             (a simple mono-PDG generator)",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "503f12912ad696d682d11eb7425dba9c0df3b07f5a51c8158206a87ae7060cc3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• boxgen             (a straightforward single-PDG generator)\n\n\n• extkinO2           (utilize an external kinematics file, e.g., created in a previous step)\n\n\n• hepmc              (import events from a HepMC file)\n\no2-sim -g [ pythia8pp | pythia8hi | boxgen | extkinO2 | hepmc ] …\n\n13\n\fGenerators: Basic\n\n• o2-sim includes several pre-configured generators (choose one using the -g option)\n\n\n• pythia8pp       (a pre-set Pythia8 configuration for pp interactions)\n\n\n• pythia8hi        (a pre-set Pythia8 configuration for PbPb interactions)\n\n\n• boxgen             (a simple single-PDG generator)\n\n\n• extkinO2           (use an external kinematics file, e.g., generated in a pre-step)\n\n\n👉 Example: run/SimExamples/JustPrimaryKinematics\n\n• hepmc              (import events from a HepMC file)\n\n👉 Example: run/SimExamples/HepMC_STARlight\n\no2-sim -g [ pythia8pp | pythia8hi | boxgen | extkinO2 | hepmc ] …\n\n13\n\fGenerators: Pythia8\n\n• Pythia8 is more tightly integrated into O2 \n\n(compared to other generators) and is recommended \n\nfor use whenever possible\n\n\n• When Pythia8 is employed, it allows for full",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "1fd9a0be658f520f100b974699c5f40993262d260505c32bb908f2891d94f9f6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• When Pythia8 is employed, it can be thoroughly configured through a dedicated text file and the GeneratorPythia8 parameter.\n\n\n• Detailed valid settings are available in the Pythia8 reference manual.\n\n\n• Additionally, we offer a tool named mkpy8cfg.py to assist in the configuration file creation process.\n\n\n👉 Example: Run/SimExamples/\nJet_Embedding_Pythia8\n\npythia8.cfg\n\n### random  \nRandom:setSeed = on  \nRandom:seed = 130145275  \n\n### beams  \nBeams:idA = 1000822080  \nBeams:idB = 1000822080  \nBeams:eCM = 5020.000000  \n\n### processes  \n\n### heavy-ion settings (valid for Pb-Pb 5520 only)  \nHeavyIon:SigFitNGen = 0  \nHeavyIon:SigFitDefPar = 13.88,1.84,0.22,0.0,0.0,0.0,0.0,0.0  \nHeavyIon:bWidth = 14.48  \n\n### decays  \nParticleDecays:limitTau0 = on  \nParticleDecays:tau0Max = 10.  \n\n### phase space cuts  \nPhaseSpace:pTHatMin = 0.000000  \nPhaseSpace:pTHatMax = -1.000000 \n\nrun with this config\n\no2-sim -n 10 -g pythia8 —-configKeyValues \n“GeneratorPythia8.config=pythia8.cfg”",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "f9dc6edd4164d212bfa4b601d4e6b11ab9da1cdbd21f242f4fee76e66de6ab84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "14\n\fExternal Generators\n\n👉 Example: Run/SimExamples/\nAliRoot_AMPT\n\n👉 Example: Run/SimExamples/\nAliRoot_Hĳing\n\n• In O2, direct integration of specific generators, aside from Pythia, is minimal to decouple PWG generator code and configurations from the data-taking process.\n\n“invoke o2-sim with -g external and specify the external file and function name”\n\no2-sim -n 10 -g external --configKeyValues \n'GeneratorExternal.fileName=myGen.C;GeneratorExternal.funcName=\"gen(5020)\"'\n\n• This avoids the need for recompilation.\n\n• Instead, “external” generators can be interfaced in o2-sim through just-in-time ROOT macros that, for example, implement a GeneratorTGenerator class.\n\n•\n\nconfigure the generator at “use-time” in C++.\n\n•\n\nthe generator setup turns into a “configuration problem.”\n\n•\n\nthis approach is utilized to set up PWG-specific generation within the O2DPG production system.\n\n•\n\nreference the PWGDQ cocktail generator \n\n“snippet of the ROOT macro file myGen.C”",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "95c813c8b3153ce3fe8c558fa86cf2c21a8ee84fb3d8d231afddbd6cc6222c2a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Link to PWGDQ cocktail generator \n\n“stub content of ROOT macro file myGen.C”\n\n// my fully custom generator \nclass MyCustomGen : o2::generator::GeneratorTGenerator { \n  void Init() override; \n  bool generateEvent() override; \n}; \n\nFairGenerator* createGenerator(double energy) { \n  return new MyCustomGen(energy); \n}\n\n15\n\fEvent Filtering and Triggering\n\n• Event filtering or triggering can also be flexibly managed at the generator level\n\n• For instance, events with specific properties can be selectively generated and simulated\n\n• Users can implement a configurable \"external\" trigger using the \"external\" generator framework\n\n• This involves creating a trigger function in a separate ROOT macro and passing it to o2-sim with the `-t external` option\n\n• The trigger function evaluates the vector of all generated particles\n\n• Advanced: DeepTriggers enable triggering based on the collection of primary particles and additional internal details from the generator\n\n👉 Example: Run/SimExamples/\nSelective_Transport_pi0",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "53f8f9c73af38293ebdaa324fbc07f56cb1a2f29440a3b77c3fdd50195c07e4c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "👉 Example: Run/SimExamples/\nSelective_Transport_pi0\n\n“run o2-sim with the pythia8pp generator, passing only events that meet the trigger criteria defined in the file Trigger.C”\n\no2-sim -n 10 -g pythia8pp -t external --\nconfigKeyValues \n‘TriggerExternal.fileName=myTrigger.C;TriggerExternal.funcName=“trigger”'\n\n“content of the ROOT macro file myTrigger.C”\n\n// provides a fully customizable event trigger function \no2::eventgen::Trigger trigger() \n{ \n  return [](const std::vector<TParticle>& particles) \n-> bool { \n    return true; // triggered \n  } \n}\n\n16\n\fo2-sim as an On-the-Fly Event Generator for Analysis\n\n👉 Example: Run/SimExamples/\nMCTrackToDPL\n\n• o2-sim can serve as a generator within the DPL (analysis) framework, directly injecting events without storing them in between.\n\n• beneficial for rapid simulation studies within the analysis setup or for primary-only analysis tasks.\n\n• will be featured in the tutorial for PWG-EM\n\nA Large Ion Collider Experiment",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "af789fff33ef2efe1033b4f5af2b23162c303eb1fe2f5a5c69c84381c6957784": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "tasks\n\n\n• will be included in the tutorial for PWG-EM\n\nA Large Ion Collider Experiment\n\nPrimary goal: Integration and reproducibility of ALICE3 \npipelines, encompassing full and fast-simulation tools\n\no2-sim \nprocesses\n\nVMC \nworker\ntransport\nworker\n\nwriter\n\ngenerator\n\nasynchronous reconstruction\n\nMC information\n\nstored on disk\n\nDigitization and reconstruction\n\nAO2D producer\n\nDPL\n\nMC collisions, MC tracks\n(without transport)\n\nProxy\n\nDPL\n\nMC information\n\nkept in memory\n\nOn-the-fly \ndetector\n\n•\n\n•\n\n•\n\nFull simulation alongside…\nCellular automaton tracker\nACTS\n\n• Detector parameterization\n\n•\n\nSomething we overlooked…\n\nSimulation parameters\n\nlookup \ntable\n\nDelphes track \nsmearing\n\nPID performance \nparameters\n\nAny \n\nconfiguration\n\nParticle identification \nparametrization\n\nAny converter from \n\nMC generated to \n\nreconstruction\n\nVersatile and flexible!\n\nALICE3 CERN Evian Workshop | January 31, 2023 |  M. Concas, S. Wenzel\n\nReconstruction\n\nMC information\n\non disk\n\nReconstruction\n\nMC information\n\nin memory\n\nUser task\n\nStandard route:\nFull simulation\n\nDPL\n\nUser task\n\nAlternative route:\nEnhanced \nsimulation \n\non disk",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "96eff591d15a32df50bd28d2a549822a98a83e4d2c8401d67f2fbd4d22a0173e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "USER TASK\n\nNormal path:\nFull simulation\n\nDPL\n\nUser task\n\nNew path:\nUpgrade \nsimulation \n\non disk\n\nStandard O2 derived data\n(for small tests)\n@D. Chinellato \n\nImprove data models for enhanced service integration!\n\nSupply code/systems as part of \n\nthe official global MC processing \n\nenvironment for reproducibility!\n\n10\n\n17\n\fIntegrated workflows: O2DPG MC\n\nTo generate simulated AODs, it is necessary to extend \n\nthe usage of o2-sim and event generation to encompass the entire \n\nalgorithmic pipeline, including digitization and reconstruction \n\nsteps.\n\n\nThis is a sophisticated system comprising numerous executables or \ntasks, necessitating consistent application and propagation of \nsettings/configurations to function harmoniously.\n\n\nFor instance, a full-system-test for data-taking.\n\n\nIt's challenging to get right on your own —> leverage a maintained setup!\n\n\nFor ALICE Run3, the official production system aimed at \n\nGRID productions is the O2DPG repository (MC component).\n\n\nO2DPG also includes scripts and setup for data-taking (DATA component).",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "b5284bf429cc388359a7636ef2392d7c02f63c39122203dad2b234456406a46d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• O2DPG includes scripts and setup for data-taking operations (DATA part).\n\nThe interaction among algorithms forms a complex system (DPL topology).\n\nO2DPG:\n\n• offers a definitive setup for official MC productions for ALICE-Run3 and provides a runtime environment for executing MC jobs on the GRID.\n\n• ensures all necessary processing tasks are integrated into a cohesive and consistent framework, enabling a seamless pipeline from event generation through AOD and beyond.\n\n• manages PWG generator configurations as versioned code.\n\n• conducts testing and CI on PWG generator configurations.\n\nFor more details, see: https://github.com/AliceO2Group/O2DPG\n\nKey directories:\n\n• MC/bin (workflow creation/execution)\n\n• MC/run (PWG-specific run scripts)\n\n• MC/config (PWG-specific generator configurations)\n\n19\n\fBasics of O2DPG-MC\n\n• Running an MC job involves two distinct steps to separate configuration logic from execution logic.\n\n• Step One: Develop a valid and configured description of the MC job, referred to as a “workflow.”\n\n• Step Two: Execute the MC job using a dynamic graph scheduler.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "eff2d68fd97e88a1eed73ca2b2d4e550d98e2c4457dc74cc139242d851bc286c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Step Two: Execute the MC job using a dynamic graph scheduler\n\nWorkﬂow creator\n\nWorkﬂow executor\n\nOutput (AOD) \n\n20\n\fFundamentals of O2DPG-MC\n\n• Running an MC job involves a two-part procedure to separate configuration logic from execution logic\n\n\n• Step One: Develop a properly configured description of the MC job referred to as a “workﬂow”\n\n\n• Step Two: Execute the MC job with a dynamic graph scheduler\n\nWorkﬂow creator\n\nWorkﬂow executor\n\nOutput (AOD) \n\nFormulates a coherent and integrated MC \nworkﬂow in a directed-acyclic-graph (DAG) format, described as a JSON file, which models task dependencies\n\n\nAdapts the MC workﬂow based on key user parameters\n\n• Collision system, generators, interaction rate, number of \ntimeframes\n\nworkﬂow.json\n\n20\n\fFundamentals of O2DPG-MC\n\n• Running an MC job involves a two-part procedure to separate configuration logic from execution logic\n\n\n• Step One: Develop a properly configured description of the MC job referred to as a “workﬂow”\n\n\n• Step Two: Execute the MC job with a dynamic graph scheduler",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "93963b6c07c46eed2c05c876927167ac0d0191ee8c8b9d202bc43a1b81a6f530": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Step Two: Execute the MC job using a dynamic graph scheduler\n\nWorkflow constructor\n\nWorkflow executor\n\nOutput (AOD) \n\nGenerates a coherent, integrated MC \nworkflow in directed-acyclic-graph \n(DAG) form, represented as a JSON, \nillustrating the interdependencies between tasks\n\n\nAdapts the MC workflow based on key user \nparameters\n\n• Collision system, generators, interaction rate, number of \ntimeframes\n\nworkflow.json\n\nManages the execution of the DAG workflow on multi-core systems similar to a dynamic \n“build” tool\n\n\nSchedules tasks as they become executable:\n\n• Aimed at achieving high parallelism and CPU \n\nutilization\n\n\n• Ensures adherence to resource limitations (avoids system overload)\n\n\nIn theory, a versatile tool, applicable beyond MC\n\n20\n\fFundamentals of O2DPG-MC\n\n• Running an MC job involves a two-step process to separate configuration logic from execution logic\n\n\n• Step One: Develop a valid/configured description of an MC job referred to as a “workflow”\n\n\n• Step Two: Execute the MC job using a dynamic graph scheduler\n\nWorkflow constructor",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "1a178f851cc14dad39889de97a7d7a0bc53a2cf1f8852280775d4d634ae27911": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Step Two: Execute the MC job with a dynamic graph scheduler.\n\nWorkﬂow creator\n\nWorkﬂow executor\n\nOutput (AOD) \n\nGenerates a well-organized, integrated MC \nworkﬂow in directed-acyclic-graph (DAG) form, \nrepresented as a JSON, which models the \ndependencies between tasks.\n\n\nConfigures the MC workﬂow based on key \nuser parameters\n\n• Collision system, generators, interaction rate, \nnumber of timeframes\n\nworkﬂow.json\n\nManages the execution of the DAG workﬂow on \nmulti-core systems akin to a dynamic \n\"build\" tool\n\n\nInitiates tasks as soon as they are ready:\n\n• Optimizing for high parallelism and CPU \n\nutilization\n\n\n• Ensures adherence to resource limitations (avoids system overloading)\n\n\nIn essence, a versatile tool, not limited to MC\n\n☝ Good to know: \n\n• DAG workﬂow resembles a DPL topology\n\n\n• However, the DAG workﬂow runs in stages with intermediate \nfiles stored on disk\n\n\n• A DPL topology would not ﬁt into GRID memory\n\n20\n\fMC workflow creation: Essential basic features\n\n👉 Examples provided here;  👉 Documentation available here",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "321957002074de1083d219f47f2e3209bdecfde26ed7aa4691105e05cba2463e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "MC workflow creation: Useful basic features\n\n👉 Examples available here;  👉 More details here\n\nWorkﬂow creator\n\nWorkﬂow executor\n\nOutput \n(AOD) \n\nO2DPG/MC/bin/o2dpg_sim_workflow.py\n\n• ALICE Run3 MC workﬂow creation handled by the script O2DPG/MC/bin/o2dpg_sim_workflow.py \n\n• Configures the MC workﬂow based on key (user) parameters (Collision system, generators, interaction rate, number of \n\ntimeframes, transport engine, etc.)\n\n\n• As expected, o2dpg_sim_workflow.py —-help provides a list of available options",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "5fc533d7d1259c26797ac2582cc97974d0fdf090a613132e1ada34923cc61953": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Typically, o2dpg_sim_workflow.py --help displays available options.\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 14000 -col pp -gen pythia8 -proc cdiff -tf 5 -ns 2000\n\n\"Generate an ALICE-Run3 Monte Carlo workflow for a 5 timeframe simulation, with 2000 events per timeframe, at an interaction rate of 500kHz … for 14TeV pp collisions using Pythia8 with the special process cdiﬀ enabled.\"\n\n -interactionRate 500000 -run 302000\n\nKey options include: -gen, -tf, -n, -eCM, -interactionRate, -run, -col\n\nAdditional options are: -field, -seed, -proc\n\n21\n\fWorkflow creation: Run numbers\n\n• Utilizing a run number is essential as it is required for determining the timestamp to retrieve conditions from CCDB.\n\n• Therefore, run numbers should be employed even for non-data-taking simulations.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "feedba8bd12686bf358808cf87bbd78ead33c4ab8599ed615b892334a3ac97ea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Run numbers should also be utilized in non-data-taking anchored simulations\n\n\n• A list of predefined run numbers for Monte Carlo simulations is documented here: https://twiki.cern.ch/twiki/bin/view/ALICE/O2DPGMCSamplingSchema\n\n\n• For instance, in a PbPb simulation with a magnetic field of -0.5T, a run number of 310000 can be applied\n\n\n• This should ideally retrieve CCDB objects suitable for PbPb 22\n\fMC workflow execution: basic features\n\nO2DPG/MC/bin/o2dpg_workflow_runner.py\n\nWorkﬂow generator\n\nWorkﬂow runner\n\nOutput \n(AOD) \n\n• The workflow runner/executor assesses and constructs a DAG workﬂow on a compute node\n\n\n• At a minimum, it requires the workflow file and a target as inputs\n\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod\n\n“Run the workflow up to the aod task \n(assuming an 8-core CPU setup)”\n\n23\n\fMC workflow execution: basic features\n\nO2DPG/MC/bin/o2dpg_workflow_runner.py\n\nWorkﬂow generator\n\nWorkﬂow runner\n\nOutput \n(AOD) \n\n• The workflow runner/executor assesses and constructs a DAG workﬂow on a compute node",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "ba8512fa916b8a29130f4e6bb934249d6043b19303c4425eb08c5e192525d062": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "OUTPUT (AOD)\n\n• The workflow runner/executor assesses and constructs a DAG workﬂow on a compute node\n\n\n• At a minimum, it requires a workflow file and a target as inputs\n\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod\n\n“Run the workflow up to the AOD task \n(assuming an 8-core CPU configuration)”\n\n• It supports checkpointing and incremental building\n\no2dpg_workflow_runner.py -f workflow.json -tt digi \no2dpg_workflow_runner.py -f workflow.json -tt aod\n\n“First execute until digitization … then continue until AOD (without redoing tasks already completed!)”",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "7a37b93d13eca29093bdbdb015f6beac0a417e2829a98ee5deff9926c589e514": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"Run the workflow up to the AOD task (assuming an 8-core CPU setup).\n\n• Checkpointing and incremental build\n\n• Transform the DAG into a basic shell script that can be executed independently\n\no2dpg_workflow_runner.py -f workflow.json -tt digi\no2dpg_workflow_runner.py -f workflow.json -tt aod\n\n\"First, run the workflow until digitization, then proceed to AOD, without repeating completed tasks!\n\no2dpg_workflow_runner.py -f workflow.json -tt aod\n—-generate-script my_script.sh\n\n\"Create a simple shell script that handles the workflow up to the AOD stage\"\n\n23\n\fMC workflow execution: basic features\n\nO2DPG/MC/bin/o2dpg_workflow_runner.py\n\nWorkﬂow creator\n\nWorkﬂow executor\n\nOutput \n(AOD) \n\n• The workflow runner/executor assesses and builds a DAG workﬂow on a compute node\n\n• At minimum, it requires a workflow file and a target\n\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod\n\n\"Run the workflow up to the AOD task \n(assuming 8-core CPU conﬁg)\"",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "c57556423034c906f97c593097b3677f1baca7b618b64f1eb63d6acd84b2f598": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"Run the workflow up to the AOD task (assuming an 8-core CPU setup)\"\n\n• Checkpointing and incremental builds\n\n• Convert the DAG into a standalone shell script\n\no2dpg_workflow_runner.py -f workflow.json -tt digi\no2dpg_workflow_runner.py -f workflow.json -tt aod\n\n\"Run the workflow until digitization first, then proceed to AOD without repeating completed tasks!\n\no2dpg_workflow_runner.py -f workflow.json -tt aod\n—-produce-script my_script.sh\n\n• Many additional useful features\n\n\n\"Generate a simple shell script for the workflow up to the AOD stage\"\n\n• The usual o2dpg_workflow_runner.py —-help command provides a list of available options\n\n23\n\fO2DPG MC workflows: Requirements\n\n• Valid AliEn tokens are necessary to execute (for accessing CCDB objects)\n\n\n• Experts can bypass this by using CCDB snapshots\n\n\n• O2DPG MC workflows are designed to operate in an 8-core, 16GB RAM environment, mirroring the standard resources on the GRID",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "9a28e73b865996207241f5d1a149f355ede51088de4c226c9f91c2fa51649c59": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "default resources on the GRID\n\n\n• You should also meet these requirements when running locally on your laptop\n\n\n• These requirements manifest as default settings that are included in the workflow creation/execution\n\n\n• Transport simulation will utilize 8 workers\n\n\n• TPC and TRD digitization will use 8 threads\n\n\n• The workflow runner assumes access to 8 cores\n\n\n• However, O2DPG MC workloads could present issues on hardware with fewer resources\n\n\n• With some tuning, though, it may still be feasible to run them\n\n24\n\fBeyond this: Additional keywords\n\n• There are many more advanced \n\ntopics that will be covered\n\n\n• … this basic set of slides does not cover everything…\n\n\n• Get in touch for more \n\ndetails !\n\n\n• Help us enhance the \n\ndocumentation, which is still in its early stages !\n\n… and much more\n\n25\n\fBackup\n\fDigitization, embedding (signal mixing)\n\n• Digitization is less critical for physics analysis…\n\n\n• The core task of digitization is to",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "78718965c0c7b4479fc7afaa3488db482f55144d0d94b7f886d06fb597098cd6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• The core function of digitization is to\n\n\n• transform straightforward energy deposits into detector signals (digits) that ultimately\n\nmirror the raw detector output\n\n\n• place individual generated events within a timeline collection\n\n\n• address pileup effects and triggering\n\n\n• Digitization serves as a signal embedding/mixing mechanism\n\n\n• Digitization can function as an event-mixing/event-embedding framework\n\n\n• signal-background embedding enables the injection of signal events into a repeated \nset of background events (saves transport simulation time)\n\n\n• can design sequences of event types within a timeframe (a signal event \n\nfollowing every n-th min-bias event)\n\n👉 Embedding example in O2DPG: \nPWGHF embedding\n\n27",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo.pdf"
        }
    ],
    "519eb1fc3a0ce60eab940d8a8dca2952b5eeb52d1fd6d508016d9abb1cbb0af8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Marco Giacalone\nSandro Wenzel\n\n15.10.2024\n\nExecuting Run3 Simulations\n\nALICE Analysis Guide\n\fOutline\n\n• Overview of ALICE Run3 simulation framework\n\n• o2-sim and event simulation details  \n\n• Range of simulation configurations and options\n\n• O2DPG workflow → the current standard \n\n2\n\fOutline\n\n• Overview of ALICE Run3 simulation framework\n\n• o2-sim and event simulation details  \n\n• Range of simulation configurations and options\n\n• O2DPG workflow → the current standard \n\n!\n\nOpening Remark\n\nBrief introduction to practical Monte Carlo generation. \nAdditional details available in other PWG tutorials or documentation\n\n3\n\fContacts\n\n• How to reach the simulation developers\n\n• Simulation e-group (for meeting updates) + WP12 meetings\n\n• Collaborative Mattermost channels (preferred over private email): O2-simulation + O2DPG\n\n• JIRA tickets for feature requests/bug reports  (components related to simulation or O2DPG)\n\n• Where to find simulation information",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "dabbe4f66a90458dc8f112249d7edd66b3df0075114864bd280aa203f1650716": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Where to find information about the simulation\n\n• New documentation project: https://aliceo2group.github.io/simulation/\n\n• Previous documentation in AliceO2: DetectorSimulation.md\n\n• Some information in O2DPG: WorkﬂowRunner.md\n\n• Various examples at O2/SimExamples or nightly-tests\n\n👈 still early stage:\n\n●\n●\n●\n\nprovide feedback \nask questions\ncontribute\n\n4\n\fSoftware environment reminder\n\nsimplest local build (basic generators such as Pythia8)\n\naliBuild build O2 O2DPG --defaults o2\n\nalienv enter O2/latest,O2DPG/latest\n\nfull local build (all generators, QC, and O2Physics included)\n\naliBuild build O2sim --defaults o2\n\nalienv enter O2sim/latest\n\nnightly precompiled builds (with CVMFS)\n\n/cvmfs/alice.cern.ch/bin/alienv enter O2sim::v20241014-1\n\n5\n\f~TB/s\n\nPetaBytes\n\nReal particle collisions\n\nReconstruction\n\ntransforms sensor data into\nthe state of particles immediately after\ncollisions\n\nAOD data\nhigh-level structured\nphysics data for \nquerying and analysis\n\nPhysics \nAnalysis",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "314400eba1329065991749baa7173b701cc01fbec58806f6bc994e74fb451a66": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "AOD data\n(Structured) \nhigh-level \nphysics data can \nbe queried/analysed \n\nPhysics \nAnalysis\n\nData analysis aimed \nat discovering physics \nresults and \npublishing papers\n\n6\n\nClassical \npipeline in \nhigh-energy \nphysics experiments:\nExperimental \ndata\n\fVirtual particle collisions\n+ detector simulation \nbased on physics models\n\nsensor data\n\nReconstruction\n\nTransforms sensor data into \nthe reconstructed state of \nparticles immediately post-collision\n\nPetaBytes\n\nAOD data\n(Structured) \nhigh-level \nphysics data can \nbe queried/analysed \n\nPhysics \nAnalysis\n\nData analysis aimed \nat discovering physics \nresults and \npublishing papers\n\nWhy...\n\n• Design and optimization of detectors and systems\n• Calibration of reconstruction algorithms\n• Efficiency studies of reconstruction algorithms\n• Stress tests of data-taking with simulated data\n• Estimation of background effects\n• Radiation studies\n•\n\netc\n\n7",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "76e6f87fb4343ab65cfe5704428c8b5c3c67f0413d16dcaf97e0622bd255679c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The ALICE Run3 simulation framework:\n\n- Is made up of multiple components\n- Includes key simulation elements such as:\n- Event creation\n- Propagation through the system\n- Signal conversion to digital format\n\nAdditionally, these workflows can also perform:\n- Reconstruction\n- Quality control\n- Data analysis and more\n\nEach segment is hosted in O2 and O2Physics repositories.\n\nFor event generation and detector simulation:\n- Geometry file\n- Kinematics data\n- Response profiles (hits)\n\nDuring digitization and reconstruction:\n- Creation of Analyzed Object Data (AOD)\n- Quality assurance checks\n- Various analyses\n\nWorkflow integration is managed with:\n\n- O2DPG (primarily for physics analysis on GRID)\n- full-system-test (focused on simulation for data taking)\n\n8",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "ea88cd21d9d98f15fbb19234c74e26605abed8add50cc529c38040e2c4d1bd24": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Geometry file\n• Kinematics file\n• Detector\n\nresponse files \n(hits)\n\nDigitization\n\nReconstruction\n\nPhysics \nAnalysis\n\n• Digits represent detector \nsub-timeframes\n• Similar to or closely mimic raw \ndetector output\n\n• Global reconstructed tracks\n• Primary and secondary \n\nVertices\n\n• etc.\n• AOD (analysis object data)\n\n9\n\fo2-sim: ALICE Run3 simulation tool\n\n• o2-sim is the particle-detector simulator for ALICE Run3\n\nImplements ALICE detectors using well-known particle-transport \nengines that include actual physics models and particle transport\n\n• Supports Geant4, Geant3, and FLUKA through the Virtual \n\nMonte Carlo API\n\n• Primary tasks of o2-sim:\n\n• ALICE geometry creation\n\n• Event generation (primary particle creation)\n\n• Simulation of particle interactions with detector material \n(secondary creation, etc.) and their transport until they exit \nor stop within the detector\n\n• Creation of hits (energy deposits) as a precursor to detector \n\nresponse following particle passage",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "ca7c0368dcb05bee0e0a90f64b7cfdc5729529ce8cea3867fde53c45aa7ac795": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Formation of hits (energy deposits) as a preliminary step in the detector\n\nresponse following particle traversal\n\n10\n\fo2-sim: ALICE Run3 simulation tool\n\n• New in Run3: enhanced multi-core simulation with sub-event parallelism\n\n→enables the use of powerful servers to rapidly produce results for substantial events\n\n• Note: o2-sim handles events in full isolation—no timeframe consideration (introduced during digitization)\n\n• o2-sim generates 3 internal log files → detailed documentation of each process and debugging\n\no2sim_serverlog\n\no2sim_workerlog0\n\no2sim_mergerlog\n\n11\n\fExamples of o2-sim usage\n\n• Examples illustrating o2-sim operations\n\no2-sim -n 10 -g pythia8pp\n\no2-sim -n 10 -g pythia8pp -j 8 \\\n--skipModules ZDC --field 2 -e TGeant3\n\n o2-sim -n 10 -g pythia8pp --noGeant\n\n“Generate 10 standard Pythia8 pp events and simulate their passage through the entire ALICE detector”\n\n“Generate 10 standard Pythia8 pp events and simulate their passage using 8 Geant3 workers through all components except ZDC, with a 2kGauss L3 field”",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "ad2ca50572b2065e404d0d640c2fbf2facf3a711dcb12967d819a4446235d3e4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"Simply create 10 default Pythia8 pp events with no further actions (pure generator output).\n\nConsult `o2-sim --help` for primary options and default generation parameters.\n\no2-sim: Kinematics Output\n\nBy default, kinematic data (output file: o2sim_Kine.root) from the transport simulation is often the most useful for physics analysis.\n\nIt includes details such as creation vertices, momenta, and other attributes of both primary (generated) and secondary (transported) particles.\n\nThis data provides information on the physics creation process, including particle lineage (mother-daughter relationships).\n\nBased on the o2::MCTrack class, which is essentially a lighter version of TParticle.\n\nEach event corresponds to one entry in a vector<MCTracks> within a TTree.\n\nKinematics data is typically pruned to include only relevant particles by default.\n\nMoreover, each generated event includes event-level metadata in a separate file (o2sim_MCHeader.root), such as the impact parameter in PbPb collisions.\"",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "a1b13a47a514c090dc6289eb0ef37a4f2b8ac82831c9a5f68638dd1f97a6bc77": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• For example, impact parameter in PbPb collisions\n\n“histogram showing the production vertex-y position for all \nMCtracks (including primary and secondary tracks)”\n\n13\n\fHelper classes for accessing MC kinematics\n\n👉 Example: \nRun/SimExamples/Jet_Embedding_Pythia8\n\n• Manually navigating and reading MC kinematics \ncan be tedious (ROOT-IO boilerplate)\n\nusing o2::steer;\nusing o2;\n\n// use the o2sim prefix to access the kinematics file\nMCKinematicsReader reader(\"o2sim\",MCKinematicsReader::Mode::kMCKine);\n\n• Provides two main utility classes to simplify this process\n\n// retrieve all Monte Carlo tracks for the current event\nstd::vector<MCTrack> const& tracks = reader.getTracks(event);\n\nmaking it easier for users\n\n• MCKinematicsReader - A class for easily reading and \nretrieving tracks for a specific event or Monte Carlo label\n\n• MCTrackNavigator - A class for traversing the mother-daughter \ntree of MC tracks and querying physics properties",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "7a2b41811288e929f5395f82b77e480bb2794bea419d6c78a067ddf781c5d149": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    for (auto& t : tracks) {\n   // analyze tracks; find the mother track of each track (in the pool of all tracks)\n   auto mother = o2::mcutil::MCTrackNavigator::getMother(t, tracks);\n   if (mother) {\n      std::cout << \"This track has a mother\\n\";\n   }\n   // identify the (backward first) primary particle from which this track descends\n   auto primary = o2::mcutil::MCTrackNavigator::getFirstPrimary(t, tracks);\n}\n\n“Load Monte Carlo tracks from a stored kinematics file for event id 1. Loop through all tracks to identify their direct mother particle and the primary ancestor.”\n\n14\n\fGenerators: Basic\n\n• o2-sim includes several pre-defined generators (choose with -g option)\n\n• pythia8pp         (pre-configured Pythia8 for pp)\n\n• pythia8hi          (pre-configured Pythia8 for PbPb)\n\n• boxgen             (a simple mono-PDG generator)\n\n• extkinO2           (use an external kinematics file, e.g., generated in a pre-step)\n\n👉 Example: run/SimExamples/JustPrimaryKinematics",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "4f12a9c7c25e2866c62308fdf199f0edeb8422122cc59c9313887eff50c52df2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "👉 Example: run/SimExamples/JustPrimaryKinematics\n\n• hepmc              (use events from HepMC file)\n\n👉 Example: run/SimExamples/HepMC_STARlight\n\no2-sim -g [ pythia8pp | pythia8hi | boxgen | extkinO2 | hepmc ] …\n\n15\n\fGenerators: Pythia8\n\n• Pythia8 is more deeply integrated into O2 \n\n(compared to others) and it is advised to use it whenever possible\n\n• If Pythia8 is utilized, it can be fully \n\nconfigured via a specialized text file and the \nGeneratorPythia8 parameter\n\n• Valid settings can be found in the Pythia8 reference \n\nmanual\n\n• We also offer a tool mkpy8cfg.py to assist \n\nwith creating the configuration file\n\n👉 Example: \nRun/SimExamples/Jet_Embedding_Pythia8\n\npythia8.cfg\n\n### random \nRandom:setSeed = on \nRandom:seed = 130145275 \n\n### beams \nBeams:idA = 1000822080 \nBeams:idB = 1000822080 \nBeams:eCM = 5020.000000 \n\n### processes",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "0a6082a5b544d297c8b639dcf91c8923e0b6148fbe91bd5cdb158ee10f944d70": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### processes \n\n### heavy-ion settings (valid for Pb-Pb 5520 only) \nHeavyIon:SigFitNGen = 0 \nHeavyIon:SigFitDefPar = 13.88,1.84,0.22,0.0,0.0,0.0,0.0,0.0 \nHeavyIon:bWidth = 14.48 \n\n### decays \nParticleDecays:limitTau0 = on \nParticleDecays:tau0Max = 10. \n\n### phase space cuts \nPhaseSpace:pTHatMin = 0.000000 \nPhaseSpace:pTHatMax = -1.000000 \n\nrun with this configuration\n\no2-sim -n 10 -g pythia8 --configKeyValues \n“GeneratorPythia8.config=pythia8.cfg”\n\n16\n\f👉 Example: \nRun/SimExamples/AliRoot_AMPT\n\n👉 Example: \nRun/SimExamples/AliRoot_Hijing\n\nExternal Generators\n\n• In addition to Pythia, O2 supports direct integration of specific generators via just-in-time ROOT macros, \nwhich is done to decouple PWG generator code and configurations from the data-taking process.\n\n• This approach helps in avoiding recompilation.\n\n• Instead, generators can be set up at runtime in C++, through a class like GeneratorTGenerator.\n\n• The generator setup is now treated as a configuration issue.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "00f0c7937ee34aac723745d3dbbeba6ddd326daab34000ca087c325f03659447": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Initialize the generator during use in C++\n\n• This transforms the generator setup into a \"configuration challenge\"\n\n• This approach is utilized for PWG-specific generation in the O2DPG production system\n\n• For instance, using the PWGDQ cocktail generator\n\n“execute o2-sim with the -g external parameter and point it to the external file and function name”\n\no2-sim -n 10 -g external --configKeyValues \n'GeneratorExternal.fileName=myGen.C;GeneratorExternal.funcName=\"gen(5020)\"'\n\n“snippet of the ROOT macro file myGen.C”\n\n// My fully custom generator\nclass MyGen : public o2::generator::GeneratorTGenerator {\n  void Init() override;\n  bool generateEvent() override;\n};\n\nFairGenerator* gen(double energy) {\n  return new MyGen(energy);\n}\n\n👉 Additional details in the documentation\n\n17\n\f👉 Example: run/SimExamples/HepMC\n\n👉 Example: \nrun/SimExamples/HepMC_STARlight\n\nHepMC generation\n\n• Multiple generators offer the default option to output HepMC-formatted data → a universal and convenient method for storing MC event generator information",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "af15653ceb173067f4ab20cd9d371c21f5b76a68ed5af6a323f48d5ccc6c8871": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• o2-sim supports reading HepMC files by default, but it can also handle data from FIFOs.\n\n• HepMC3 is the standard, but HepMC2.06 data are also compatible for both local file and FIFO input.\n\n• To generate events with o2-sim, use the command:\n```\no2-sim -n 10 -g hepmc --configKeyValues \"HepMC.fileName=/path_to/file.hepmc\"\n```\nor for HepMC2.06:\n```\no2-sim -n 10 -g hepmc --configKeyValues \"HepMC.fileName=/path_to/file.hepmc;HepMC.version=2\"\n```\n\n• A further capability of the tool is to initiate event generators via the cmd parameter of GeneratorHepMC. This allows generators to print data to stdout, enabling automatic feeding into o2-sim without the need for large local .hepmc files.\n\n• Event generation with automatic FIFOs can be performed using the script at run/SimExamples/HepMC_EPOS4.\n\n• To generate 100 events with a seed of 12345 and use epos.sh as the generator command:\n```\no2-sim -n 100 -g hepmc --seed 12345 --configKeyValues \"GeneratorFileOrCmd.cmd=epos.sh;GeneratorFileOrCmd.bMaxSwitch=none;HepMC.version=2\"\n```\n\nMore information can be found <HERE>.\n\n18\n\fADVANCED\n\nEvent Filtering or Triggering:\n\n👉 Example: \nrun/SimExamples/Selective_Transport_pi0\n\n• Event filtering or triggering can also be flexibly configured.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "a0b95ed2cd8a3314fcf248dc13c9db13374debbccd36336969a0593158139558": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Event filtering or triggering can also be flexibly managed at the generator level\n\n• For instance, events with specific properties can be selectively generated and simulated\n\n• A customizable \"external\" trigger can be implemented using the \"external\" generator method\n\n• Users can write a trigger function in a separate ROOT macro and invoke it with the `-t external` option in o2-sim\n\n• The trigger function then evaluates the entire vector of generated particles\n\n• For advanced usage, DeepTriggers enable triggering based on the collection of primary particles and additional internal generator details\n\n“execute o2-sim with pythia8pp generator and pass only events that meet the trigger condition specified in the file Trigger.C”\n\no2-sim -n 10 -g pythia8pp -t external --configKeyValues \n‘TriggerExternal.fileName=myTrigger.C;TriggerExternal.funcName=trigger’\n\n“example content of the ROOT macro file myTrigger.C”",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "17b02728639ef907a186e6733a9ff347ecdd0af863dbe18fe6631542db6754bf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"stub content of ROOT macro file myTrigger.C\"\n\n// returns a fully custom event trigger function\no2::eventgen::Trigger trigger()\n{\n  return [ ](const std::vector<TParticle>& particles) -> bool {\n    return true; // triggered\n  }\n}\n\n19\n\fADVANCED\n\n👉 Example: \nRun/SimExamples/MCTrackToDPL\n\no2-sim as an on-the-fly generator for analysis\n\n• o2-sim can function as a generator service to inject events directly into an analysis topology (DPL)\n\nwithout the need for intermediate storage\n\n• It is beneficial for rapid-simulation studies within the analysis framework or for primary-only analysis tasks\n\n@D. Chinellato \n\n• This technique is already employed by various PWGs, such as for cocktail simulation in PWG-EM\n\nVery basic example\n\n•# Launch the simulation\no2-sim -j 1 -g pythia8pp -n 10 --noDiscOutput --forwardKine --noGeant &> sim.log &\n# Launch the DPL process\no2-sim-mctracks-proxy -b --nevents 10 --o2sim-pid ${SIMPROC} --aggregate-timeframe 1 &\n\n• Crucial for on-the-fly analysis\n\n• Can be skipped in a single o2-sim process\n\n20\n\fIntegrated workflows: O2DPG MC",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "6622ed4369c6e29548336d49d047f1481749a290c93a22e8ee74951a6a85c936": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Can be skipped for a single o2-sim process\n\n20\n\fIntegrated workﬂows: O2DPG MC\n\n• To generate simulated AODs, we must extend beyond \n\no2-sim and event generation, running the full \n\nalgorithmic pipeline, which includes digitization and reconstruction\n\n• This is a intricate system, comprising numerous executables or \n\ntasks, necessitating consistent settings/conﬁguration application and propagation\n\n• For instance, a full-system-test for data taking\n\n• Difficult to manage alone → utilize a maintained setup!\n\n• For ALICE Run3, the oﬃcial production system for GRID \n\nproductions is the O2DPG repository (MC part)\n\n• O2DPG also encompasses scripts and setup for data taking (DATA part)\n\n“Algorithms interact in a complex system (DPL topology)”\n\n21\n\fO2DPG …\n\n• offers a reliable setup for oﬃcial MC \n\nproductions for ALICE-Run3 and a runtime to execute \n\nMC jobs on GRID\n\n• consolidates all pertinent processing tasks into a",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "d98c5c679bd7b53754cc759d306b568fa5ca5834d11b67427fc16b07aa43ed49": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• integrates all pertinent processing tasks into a \n\ncoherent and uniform environment to ensure a functional pipeline from event generation through to AOD and further stages\n\n• preserves PWG generator configurations as \n\nversion-controlled code\n\n• conducts testing / CI on PWG generator configurations\n\nhttps://github.com/AliceO2Group/O2DPG\n\nKey directories:\n\n• MC/bin       (workflow creation/execution)\n• MC/run       (PWG-specific run scripts)\n• MC/config    (PWG-specific generator configurations)\n\n22\n\fFundamentals of O2DPG-MC\n\n• Executing a MC job involves a two-step process to separate configuration logic from execution logic\n\n1. Formulate a valid and configured description of a MC job == “workﬂow”\n\nWorkﬂow creator\n\nGenerates a cohesive, integrated MC \nworkﬂow in directed-acyclic-graph \n(DAG) format, described as a JSON, \nrepresenting the task dependencies\n\nConfigures the MC workﬂow based on crucial user \nparameters:\n• collision system\n• generators\n• interaction rate\n• number of timeframes\n\nworkﬂow.json\n\nSimple example…",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "6b7d9bc10e6ba5b04fc486f2a35a0c90e68b03881680436743459f827ef70f7f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW.JSON\n\nExample illustration…\n\n23\n\fO2DPG-MC Basics\n\nA practical example workﬂow with only \n2 timeframes is substantially more extensive…\n• Executing a MC job involves separating configuration logic from execution logic into two steps\n\n1. Develop a properly configured description of the MC job = “workﬂow”\n\nWorkﬂow creator\n\nConstructs a coherent, integrated MC \nworkﬂow in a directed-acyclic-graph (DAG) format, represented as JSON, which models task dependencies\n\nConfigures the MC workﬂow based on critical user parameters\n• Collision type, generators, interaction frequency, timeframes count\n\nWORKFLOW.JSON\n\n24\n\fO2DPG-MC Basics\n\n• Executing a MC job involves separating configuration logic from execution logic into two steps\n\n• Step One: Develop a properly configured description of the MC job = “workﬂow”\n\n• Step Two: Run the MC job using a dynamic graph scheduler\n\nWorkﬂow creator\n\nWorkﬂow executor\n\nOutput (AOD)",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "3f9b9d7647fc553a742d1703be9fb030d8ed2b448c10e5d15d67979d9caba82a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Workflow creator\n\nWorkflow executor\n\nOutput (AOD)\n\nGenerates a cohesive, integrated Monte Carlo (MC) workflow in the form of a directed-acyclic-graph (DAG), described in JSON format, which models the task dependencies.\n\nConfigures the MC workflow based on key user parameters:\n- collision system\n- generators\n- interaction rate\n- number of timeframes\n\nHandles the execution of the DAG workflow on multi-core machines akin to a dynamic \"build\" tool.\n\nInitiates tasks as they become eligible for execution:\n- Aimed at achieving high parallelism and CPU utilization\n- Ensures adherence to resource constraints (avoids system overload)\n\nworkflow.json\n\nPrimarily a versatile tool, not limited to MC\n\n25\n\fBasics of O2DPG-MC\n\n• Executing a MC job involves separating configuration logic from execution logic into two distinct steps\n\n• Step One: Formulate a valid/configured description of the MC job == \"workflow\"\n\n• Step Two: Execute the MC job with a dynamic graph scheduler\n\nWorkflow creator\n\nWorkflow executor\n\nOutput (AOD)",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "c591ffdf2a3afc3b1accbd110330d734b5d9f2c9201782f3376f9475b0adea9a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW CREATOR\n\nWORKFLOW EXECUTOR\n\nOUTPUT (AOD)\n\nGenerates a consistent, integrated Monte Carlo (MC) workﬂow in a directed-acyclic-graph (DAG) format, represented as JSON, which models task dependencies.\n\nConfigures the MC workﬂow based on critical user parameters:\n- collision system\n- generators\n- interaction rate\n- number of timeframes\n\nManages running the DAG workﬂow on multi-core systems akin to a dynamic “build” utility.\n\nInitiates tasks when they are ready to be executed:\n- Optimizing for high parallelism and CPU utilization\n- Adhering to resource constraints (avoids system overload)\n\nworkﬂow.json\n\nEssentially a versatile tool, not limited to MC applications.\n\n💡 Did you know:\n\nA DAG workﬂow is analogous to a DPL topology.\n\nA DPL topology cannot fit into GRID memory.\n\nA DAG workﬂow executes in stages, with intermediate files stored on disc.\n\n26\n\fO2DPG-MC workﬂows: Requirements\n\n• Valid AliEn tokens are necessary for execution (for accessing CCDB objects)\n\n• Experts can bypass this by using CCDB snapshots",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "0ab251069a571eceb88cfb340bda276d0c30c536ba2656c38f476c9b890fd020": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Experts can bypass certain restrictions by using CCDB snapshots.\n\n• O2DPG MC workflows are designed to operate optimally in an environment with 8 CPU cores and 16GB of RAM, mirroring the standard resources on the GRID.\n\n• This same resource requirement must be met when running these workflows locally on a laptop.\n\n• These defaults are incorporated into the workflow creation and execution processes.\n\n• Transport simulation will utilize 8 worker threads.\n\n• TPC and TRD digitisation will use 8 threads.\n\n• The workflow runner assumes the availability of 8 cores.\n\n• As a result, O2DPG MC workflows may encounter issues on hardware with fewer resources.\n\n• However, with some tuning and adjustments, it might still be possible to run them successfully.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "c6ac43555dc78b0ed9736d9fe8e9e9dd83c1a2b3fbdcca7a0d585f493da29413": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Default storage locations are set to ${WORKDIR}/ccdb/<path>/<in>/<ccdb>/snapshot.root\n\nMoreover…\n\n•\n\nThe path can be customized manually as follows:\n\nexport ALICEO2_CCDB_LOCALCACHE=/<your>/<path>\n\nALICEO2_CCDB_LOCALCACHE=/<your>/<path>\n\nor by executing:\n\nALICEO2_CCDB_LOCALCACHE=${YOURPATH} o2_dpg_workﬂow_runner.py …\n\nenabling the use of an existing cache\n\n•\n\nThere is an O2 script for downloading CCDB files:\n\n${O2_ROOT}/bin/o2-ccdb-downloadccdbﬁle --host http://alice-ccdb.cern.ch -p \nTPC/Calib/CorrectionMapRef --timestamp <timestamp> --created-not-after 3385078236000 \n-d ${YOURPATH}\n\n28\n\f👉 Examples and documentation available here;  👉 Details here\n\nO2DPG-MC step 1: workflow creation\n\n• An O2 script for creating Run3 MC workflows is:\n\nO2DPG/MC/bin/o2dpg_sim_workflow.py\n\n• Configures the MC workflow based on key (user) parameters such as collision system, \ngenerators, interaction rate, number of timeframes, transport engine, etc.\n• `o2dpg_sim_workflow.py --help` → provides documentation with all available options",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "e6a884a2406d0141eb91d7370d0345933a14d40c986bcd6a7741acf04f9d3871": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 14000 -col pp\n\n                                       -gen pythia8 -proc cdiff           \n\n                          -tf 5 —ns 2000                                                                                 \n\n“Create an ALICE Run3 Monte Carlo workflow for a 5 timeframe simulation, with \n2000 events per timeframe, at an interaction rate of 500kHz, for 14TeV pp collisions using \nPythia8 with the special process cdiff enabled…”\n\n                                         -interactionRate 500000\n                      -run 302000\n\n☝ Important options:\n\n-gen, -tf, -n, -eCM, -interactionRate, -run, -col\n Optionally: -field, -seed, -proc\n\n29\n\fWorkflow creation: Run numbers\n\n• A run number must be specified as it is essential for fetching conditions from CCDB\n\n• Therefore, run numbers should be used even for simulations not involving data-taking\n\n• A list of predefined run numbers is available for Monte Carlo simulations",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "a3abb8759c201bb549f7c5ba6a0db3a2fe9f1feb42a08bceff8c7b1c47ba31ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• A list of predefined run numbers for MC simulations is documented at: \nhttps://twiki.cern.ch/twiki/bin/view/ALICE/O2D\nPGMCSamplingSchema\n\n• For instance, a run number 310000 can be utilized in a PbPb simulation with a -0.5T magnetic field\n\n• It should ideally retrieve CCDB objects suitable for PbPb simulations\n\n30\n\fRecommended Approach\n\n• Documentation\n• Official configuration directory\nWork流程创建：生成器配置\n• 可通过.ini文件指定自定义配置到生成工作流程中\n\no2dpg_sim_workflow.py -gen pythia8 -ini <路径/至/config.ini>\n\n• 它们包含不同的生成器配置部分，但还可以添加生成粒子的额外触发器\n\n• 默认官方配置可以在 O2DPG/MC/config/<PWG>/ini/<配置>.ini 找到，且当通过PR修改请求或新增配置时，会通过CI进行测试\n\n来自PWGDQ配置片段\n\n• 配置文件夹链接到 O2DPG_MC_CONFIG_ROOT 环境变量",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "da9876dce7bd7e61cd1633e4da1155a7d9dc6a7f7f73d2480cf85d02f3245f1b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• The configurations folder is connected to the O2DPG_MC_CONFIG_ROOT environment variable.\n\nLocal configurations can be utilized, and similarly, newer configurations can be tested with older O2DPG builds and vice versa.\n\n[GeneratorPythia8]\nconfig = \n${O2DPG_MC_CONFIG_ROOT}/MC/config/common/pythia8/generato\nr/pythia8_hf.cfg\nhooksFileName = \n${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGHF/pythia8/hooks/pyt\nhia8_userhooks_qqbar.C\nhooksFuncName = pythia8_userhooks_ccbar(-4.3,-2.3)\n\n31\n\fO2DPG-MC step 2: workflow execution\n\n• The workflow runner/executor creates and executes a Directed Acyclic Graph (DAG) workflow on a compute node.\n\n• It requires minimally a workflow file and a target as input.\n\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod\n\n\"Execute the workflow up to the aod task (assuming an 8-core CPU configuration)\"\n\n• Includes checkpointing and incremental build capabilities.\n\n• Converts the DAG into a standalone simple shell script.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "a4ee281b4f9da44abb1bd761c69c5fa20b616288d4e62c17cfb596d0013cc2c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Transform the Directed Acyclic Graph (DAG) into a basic shell script that can operate independently.\n\no2dpg_workflow_runner.py -f workflow.json -tt digi\no2dpg_workflow_runner.py -f workflow.json -tt aod\n\n“First, run up to digitization, and then proceed to AOD without redoing completed tasks!\no2dpg_workflow_runner.py -f workflow.json -tt aod\n--produce-script my_script.sh\n“Generate a straightforward shell script to sequentially execute processes up to the AOD stage.”\n\n• Additional useful functionalities are also available.\n\n• Refer to o2dpg_workflow_runner.py --help for a comprehensive list of options.\n\n32\n\fSubmit MC jobs to the GRID\n\n• MC workflows can be executed on the GRID, extending up to AOD generation.\n\n→ Both O2DPG-MC steps will be run via a script, example.sh O2DPG-MC script.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "1d7418c13e2c2ffe87ad3d563672084b967de87aa7a62f562a34555de559c9d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "→ Both O2DPG-MC steps will be executed through a script.\nexample.sh O2DPG-MC script\n\n#!/usr/bin/env bash\n# Workflow creation: step 1\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen pythia8 -proc cdiff -tf 1 \n-ns 200 -e TGeant4 -interactionRate 500000\n# Workflow execution: step 2\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod\n\nSeveral example \nscripts are included <Here>\n\n• Jobs are submitted to the GRID using a script included in the O2DPG package.\n\n${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script my_script.sh --jobname test --outputspec \n\"*.log@disk=1\",\"*.root@disk=2\" --packagespec \"VO_ALICE@O2sim::v20241014-1\" --wait \n--fetch-output\n\nOptions used:\n--jobname: assigns a name to the job as it appears on MonALISA\n--outputspec: specifies which files will be saved after the \nexecution;\n\n          @disk=2 indicates that 2 replicas of the files will be saved for security reasons",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "e058744047da0595bc2f6c159c20d70f2155c759ec2fa62e4219e87aaa0f593d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "@disk=2 indicates that 2 copies of the file will be stored for safety reasons.\n\n--wait: your system will pause until all GRID tasks complete.\n--fetch-output: automatically retrieves files onto your local storage.\n\n--help to display all available options.\n\n!\n☝ Important:\nThe output will be placed in a different directory from your current one: review the stdout!\n\n33\n\fAnchored MC Production Documentation\n\nSimulations tailored to mimic real data-taking conditions:\n\n- LHC operation, integrated ALICE detectors, dead channels, alignment, interaction rates, etc.\n- Vital for realistic simulation samples in physics analyses.\n\nEach anchored MC run represents one specific CYCLE of one SPLITID, encompassing N timeframes across the entire run. \n\nCYCLE J - 1\n\nwhere\n\nJ = Total N TFs\n\nN*PRODSPLIT\n\nN is defined by the running script (next slide)",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "b52da52bf16de694afbe1985275c77f45eb3f36f97f662b1c7e1c8da8bb9a3ae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "CYCLE J - 1\n\nwhere\n\nJ =    Total number of TFs\n\nN*PRODSPLIT\n\n←N is defined within the running script (next slide)\n\n34\n\fAnchored MC productions: how to?\n\nDocumentation\n\n• The grid_submit.sh script can initiate anchored MC productions → a production script is required  \nexample script for anchored pp production\n\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass2\nexport ALIEN_JDL_MCANCHOR=apass2\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=535069\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a2\nexport ALIEN_JDL_LPMANCHORRUN=535069\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC23f\nexport ALIEN_JDL_LPMANCHORYEAR=2023\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=50\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\nexport SEED=5\nexport NWORKERS=2\n\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh\n\ntest_anchor_2023_apass2_pp.sh \n\nso",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "e440fa14b77a54ef582bd59f05a6c4621c7409509464ff6f9fe758cdfe51077d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh\n\ntest_anchor_2023_apass2_pp.sh \n\nso\n\n${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script \ntest_anchor_2023_apass2_pp.sh --jobname test --outputspec \n\"*.log@disk=1\",\"*.root@disk=2\" --packagespec \n\"VO_ALICE@O2sim::v20241014-1\" --wait --fetch-output\n\n☝Important to know:\n● All existing MC production is listed in MonALISA under Production Info → MC production cycles (running, completed, software update, etc.)\n\n● Procedure to request Anchored MC production from O2DPG:\n\n1. Run a test on the GRID using your settings\n2. Provide an estimate for running time, expected storage, and number of events\n3. Provide a link to the GRID folder containing test and results configuration/JDL\n\nCheck \nbackup\n\n35\n\fFurther details:\n\n• Many other advanced topics will be covered\n\n• … expanding beyond the basic content presented here\n\n• Contact us for more information!\n\n• Help us improve the documentation, which is still in an early stage!\n\n… and many more",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "d15c8289980f1e1509222d852b8c59d2b68024a17a8da667805acc6d3fc3d90f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Assist us in enhancing the \n\ndocumentation, which is currently in its initial phase!\n\n… and much more\n\n36\n\fBackup\n\fDigitization, embedding (signal mixing)\n\n• While digitization may not be crucial for physics analysis, it's essential to be aware of it\n\n• The primary goal of digitization is to\n\n• transform basic energy deposits into detector signals (digits) that ultimately \n\nmirror the raw output from the detector\n\n• place individual generated events into a timeframe collection\n\n• manage pileup effects and triggering\n\n• Digitization as a signal embedding / mixing framework\n\n• Digitization can serve as a platform for event-mixing / event-embedding\n\n• signal-background embedding enables the injection of signal events into a \n\nrepeated collection of background events (saves time on transport simulation)\n\n• Can create sequences of event types within a timeframe (a signal event \n\nimmediately following every n-th min-bias event)\n\n👉 Embedding example in O2DPG: \nPWGHF embedding\n\n38\n\fEstimate resources",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "24fa30c439368dd623ef142b93ff0ff45fcb153d919ac3143e649288077056fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "👉 Embedding example in O2DPG: \nPWGHF embedding\n\n38\n\fEvaluate runtime\n\n• During GRID execution, log files will indicate the total runtime of \n\nyour processes. \n**** Pipeline completed successfully (global runtime : 533.892s) *****\nscript for anchored pp production\n\n• The anticipated runtime in seconds can be calculated as:\n\n• Storage resources are determined by summing the sizes of all stored \n\nfiles, which can be found in MonALISA.\n\n39",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_Nov2024/MCTutorial4Giacalone.pdf"
        }
    ],
    "1ac937aad74b2a3e4b33bdd5ef930bf3680c10153bc7d51a784d69adaeaf9775": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, let's move on to discuss an area that borders physics analysis in terms of detector simulation. My aim is to provide you with practical insights on how, as an analyst, you can execute Run3 detector simulations and integrate them into your workflow. While this might be more introductory in nature, I hope to give you a broad overview of the Run3 simulation environment and a foundational understanding of how to operate it.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "5a63a890533cbd145d8d353b8df61ff7782ec43e0634234329ef3e0bb826975c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In particular, the aim is to familiarize ourselves with the fundamental use cases of the o2-sim executable, which is the core system for event generation and transport simulation. Additionally, we will briefly discuss basic event generation techniques and how to configure them. Finally, we will introduce the O2DPG repository, which is our official integrated Monte Carlo production pipeline, encompassing event generators, AOD production, and analysis quality control tasks.\n\nThis introductory overview is meant for analysts and serves as a foundation for more specialized content in other parts of the tutorial.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "85538d8f56bf1c5deef045a20adb3cd446b5513127747e1efd08ac92d38de952": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, the key slides highlight our contact details. Here’s how to reach us: bi-weekly WP12/WP13 meetings are the primary venue for connecting and asking questions, with meeting invitations available via a CERN e-group you can subscribe to. For communication, we prefer using dedicated Mattermost channels for both general simulation queries and O2DPG production pipeline specifics. Additionally, for feature requests or bug reports, please open JIRA tickets within the O2 project.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "ba32d44b6ccc429c61fe878beb52f842141373c76cd4251be8beffc595a0e0b9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In addition to this, in terms of documentation, we have initiated a new project that mirrors the efforts of physics analysis documentation. There is also some older material available for reference. However, please note that this project is still in its initial phase. Therefore, we encourage you to provide feedback, ask questions, or even contribute, as your input would be greatly appreciated.\n\nFurthermore, a brief reminder on the software environment needed for ALICE detector simulations: as previously discussed, for Run3, you will need the O2Sim package. You can either compile it yourself or use the precompiled version available via CVMFS. I believe this setup should encompass all necessary components for detector simulation.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "8b27ef9cb1e4cd5c13c4d29d600509976a4e0d4a7d89752423a53ec0730aa15f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Next, even though it might be somewhat redundant, I still want to briefly recall the traditional computing workflow in high-energy physics and highlight the importance of simulation. This workflow starts with real particle collisions that trigger detector outputs. This data is then processed by reconstruction software to generate AODs or analysis object data files. These AODs are used for actual physics analysis to publish scientific papers. Simulation, on the other hand, allows us to replicate this entire process in a fully virtual environment, generating Monte Carlo events based on physics models. These events produce sensor data similar to what is collected in real experiments, enabling us to create AODs. We perform these simulations to explore various aspects such as detector system design, reconstruction algorithm calibration, and efficiency calculations.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "aafd12f624e42d7bb01bc46faba2ce239e57236aa6ba22b6f73de084d7cfcbcb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, let's take a brief look at the ALICE Run3 simulation framework on the next slide. This is a typical setup for HEP experiments. The core of the simulation includes event generation, Geant-based transport simulation, and detector-specific digitization algorithms that transform Geant hit outputs into the actual electronics response for each detector. As depicted, this process is encapsulated in two main components. Additionally, it's crucial to note that Monte Carlo workflows can also run through all reconstruction steps or quality control analysis, which are integral parts of the simulation ecosystem and the broader Monte Carlo pipeline. In our context, integrating and configuring all these components into a cohesive workflow is managed within the O2DPG repository. Finally, I will provide a quick reminder of the primary data products in the simulation pipeline.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "bc74014155cdedbc5e0bd2973e0651789a5db9b53ecb3d590bb41734199000a1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Next, I'll provide a brief reminder of the primary data products in the simulation pipeline.\nWhen you process it from left to right, the transport simulation generates the ALICE detector geometry,\nkinematics files with track properties for both primary and secondary particles, and detector response files, which we refer to as hits. These hits are then used by the digitization algorithms to create digit sub-detector timeframes, similar to the raw detector output of the actual experiment. Following this, the standard reconstruction pipeline takes over, where reconstruction uses the digits to generate global tracks, primary vertices, energy reconstructions, and ultimately produces the AO2D.root file for analysis.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "8b33268883fa6f25eec3f8034362517729b112dbeb9280b2d422b5441551cf32": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, let's shift our focus to the o2-sim executable, the particle detector simulator for ALICE RUN3. This tool utilizes the ALICE detector geometry and material descriptions within well-known particle transport simulation engines, such as Geant4 (our primary choice), Geant3, and FLUKA. A key advantage of our setup is the flexibility to use any of these engines interchangeably. This feature stands out in ALICE compared to other HEP approaches that predominantly use Geant4. The capability to conduct radiation studies with FLUKA is another significant benefit.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "532864fd18b9496c4dfef19038fdbc254200ee7f01fa579e9ea5fbabb1968aad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The primary function of the o2-sim program, as previously mentioned, includes first the creation of the geometry. Second, it generates events to simulate initial particle collisions. Third, it simulates the interaction of particles with the detector material and tracks their movement within the setup until they either exit or stop. Lastly, it produces hits, which are essentially energy deposits that serve as input for the detector digitizers to generate the actual sensor output.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "1c973ea5d8898e1636b6132c611e5bced091c3349a395543a4ba97ba8213b453": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "All of this is quite standard, so I won't delve into the details too much. However, I want to highlight that in ALICE RUN3, the detector transport simulation in o2-sim has been enhanced to be a scalable, multi-core simulation with sub-event parallelism. This means we can utilize powerful servers and compute nodes to rapidly process individual large events or collisions, drastically reducing the time needed—instead of waiting hours for one event to complete, we can get results in just a few minutes.\n\nAnother unrelated point about o2-sim is that it processes events or collisions independently, without considering any time frame. This timeframe concept is introduced much later during the digitization stage, when we generate the detector sensor data.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "8c7eeceed9b5c03882860f153b41878aa964f75682c289225d4efb5c31dd56bc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, here is the paraphrased document:\n\nTo demonstrate how to use o2-sim, I'll illustrate a few examples, beginning with a simple one. You would call o2-im from the command line as shown, specifying the number of events in the generator. This example generates 10 default Pythia8 proton-proton events, transports them through the entire ALICE detector, and produces the hits and kinematics output.\n\nFor a slightly more complex scenario, you can generate 10 default Pythia8 pp events and transport them using eight Geant3 workers, excluding the ZDC detector. Additionally, you can use a different magnetic field strength than the standard one, such as 2 kilo gauss. It's evident that you can customize o2-sim by providing various command-line options.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "0b6998e5ffaadc3120749eadd2556b405ca2840f6d650f97b822907f32372854": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "By default, Geant4 is always enabled. To use Geant3, you would opt for the second example, but we aim to promote Geant4 in Run3, which is why it is the default choice. The third example might be useful for analyzing pure generator output; here, you simply call the generator part to produce 10 Pythia8 pp events without any further transport. The kinematics file will contain only the generated events. As mentioned earlier, or perhaps also noted, the --help command provides a list of main options and displays the default settings we are using.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "98e83a1a8b0de0df32ed275e388592b0acde1487d466877b89138fdfbca00f8c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure. While this might not be crucial, I still wanted to highlight it since it can be useful to check what's happening internally. The ALICE O2 simulation generates three log files with distinct functions. The event generation phase logs are recorded in the o2sim_serverlog file, which provides insights into the event generation stage. Additionally, the o2sim_workerlog0 file captures details from the Geant4 transportation stage, which is beneficial for understanding the simulation's internal processes.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "4b591c0039d8d35b70c476706312c6711bb1da8210083e0f9266dbd22d2a7980": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "An essential output from the o2-sim program comes from the transport simulation, specifically the kinematics data. This is frequently the most relevant for physics analysis as it includes creation vertices, momenta, and other attributes of both primary and secondary particles generated during the simulation. It also provides details on the physics creation processes for each particle and their relationships, such as mother-daughter connections. The data is structured using our MCTrack class, akin to ROOT's TParticles class, but designed to be more efficient in terms of memory and disk usage. For each event, there is a single entry in a ROOT TTree, which contains a vector of these tracks. You can easily review this data using ROOT's JSRoot or TBrowser system, as shown on the right.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "b531253ae837aa1641ee666ffbfbaf820829ad5bae258ee3cc6ad21a687d76e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "As shown on the right, the kinematics data is typically pruned by default, meaning it includes only relevant particles for physics or reconstruction. However, you can request full data generation to capture all billions of secondary particles produced. Additionally, there is metadata available at the event level, though it is found in the MC header file rather than the kinematics root file. This metadata includes important parameters such as the collision impact parameter and other global properties like the collision vertex.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "516c74246a03d7c31a07a06448756a1d042c963194d3a48da5311d97b83cbff6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Certainly. There are crucial helper classes designed to access and navigate Monte Carlo kinematics, which are essential for managing the complexities of ROOT IO and repetitive tasks. Two primary utility classes are highlighted here. The first is the Monte Carlo kinematics reader (MCKinematicsReader), a tool for efficiently reading and retrieving tracks based on an event number or Monte Carlo label (MCLabel). The second is the MC track navigator (MCTrackNavigator), which facilitates navigation through the mother-child relationships among Monte Carlo tracks and allows for querying various physics properties of MCTracks. An example on the right demonstrates how to read all stored Monte Carlo tracks, loop through them, and determine their direct mothers or other properties.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "d1cc238b9b684a9f63ed8a6e92cba929f89da28da9a662f0a7bf6ea088bf319b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "the stored kinematics, and then iterate through all the tracks to identify a direct mother or\nthe primary ancestor for each particle.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "7d55a9673905f6d2a85876f46bcac61a60152c91e464638ad0822cf70771bc20": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure. Let's discuss event generation, focusing on the fundamentals. o2-sim comes with several predefined generators, which you can activate using the -g option. Notably, we have a pre-configured Pythia8pp for proton-proton interactions and a pre-configured Pythia8hi for lead-lead collisions. Additionally, there are other options like a simple box generator, a generator that uses an external kinematics file, and the ability to interface with generators that produce standardized HepMC output. This is how you choose the generator you need.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "4570aa65faa01452e412c616925712f8b050c53e6f1c5504eca3e3c628c59d7c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "And you can find examples for all these cases under the provided links. Regarding Pythia8: Pythia8 holds a somewhat unique position among event generators because it is more integrally linked into O2 than other generators. It is thus advisable to use Pythia8 whenever possible. If Pythia8 is utilized, it can be fully customized through a specialized configuration file, like the one illustrated on the right. Additionally, you can pass specific Pythia8 parameters to the executable, as detailed in the second box on the slide.\n\nTo set up the configuration file for Pythia8, we supply a Python tool that simplifies the process by allowing you to generate it with minimal effort, based on a few parameters you input to the tool. This tool serves to make the setup of the Pythia8 configuration more convenient for you. Apart from Pythia8,",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "62b056b6a7b714afbfeb5ab8a8c8db8b9444d2013a0547511169f4ecc987f75b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "INSTRUCTIONS: For setting up the configuration file for Pythia8, you need to do it yourself. In contrast to the direct compilation of specific generators in the previous AliRoot system, O2 has a smaller number of such integrations. The primary goal is to decouple physics-specific generator code and configurations from the data-taking code, to avoid recompiling O2 each time a generator configuration is altered. Instead, we prefer to use external generators, which can be integrated via just-in-time ROOT macros. These macros implement a special TGenerator interface from the ROOT project, allowing generator setup at runtime in C++. This makes the generator setup more of a configuration issue, which can be passed to o2-sim. A minimal example of a TGenerator implementation is provided on the right-hand side, though it is not fully complete. You would need to code a more complete implementation.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "72f8ed534ea7cbec9b1afa51c0112d85e6a0caab1e4964c69ccc27921a95c7f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "C++ code in a macro file that defines your generator, which can then be passed to o2-sim as illustrated in the upper box. This approach, which I would like to emphasize, is actively used in production by various physics working groups within the O2DPG system. Numerous examples demonstrate how you can integrate typical AliRoot generators, such as those for hygiene or other purposes, into o2-sim using this method. Additionally, we provide support for triggering, where event filtering or triggering is flexibly handled, working similarly to the external generator examples shown previously. You can implement trigger logic in a macro, which is then passed to o2-sim for just-in-time compilation. There's also a good example of this in the SIM examples folder of AliceO2. Advanced triggers are available, enabling you to trigger not only on the",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "bd5ab36dab849b688c09d06de1d34c141c473f62a2522aeeff7c9389701630f7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "More sophisticated are deep triggers, which permit triggering not only on the vector or the collection of primary particles, but also on the status of the event generator within the underlying simulation. Although this is slightly more advanced, we provide a code example for this in AliceO2.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "ba0a52775c4293760d62a2d871382cd61187587e7154b466e55caa184004273e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, it's worth noting that o2-sim can function as an on-the-fly event generator for analysis. Essentially, it can act as a generator service that directly feeds its generated events into a DPL analysis setup without any intermediate storage. This feature is particularly useful for studies focusing on the analysis or processing of primaries only. This idea was previously discussed with David Chinelatto, who was instrumental in its development, and it is now implemented. It appears to be utilized by several PWGs, and it will be covered in tomorrow's PWG EM tutorial.\n\nNow, I'm moving to a discussion about the global Monte Carlo pipeline and integrated workflows aimed at producing simulated AODs. This encompasses more than just the transport simulator and event generation phases, and it must include stages such as digitization and reconstruction tasks.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "3d94ca79b0f72c839e1f8e059905a1fbaef9bbce5c8dd7ffe0d4084919f2d84b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This is indeed a complex system made up of numerous executables or tasks that need consistent application and propagation of settings and configurations to function effectively together. It can be quite challenging to manage on your own, so it's best to rely on a maintained setup. For the Monte Carlo pipelines on the GRID, this maintained setup is available in the O2DPG repository, but it's worth noting that the same repository now also supports configuring and maintaining the scripts for data taking on the EPN.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "b797570c6cb38a68674ade0b39a9b26aa93fdb0b705b2f2cf08090bed335bd02": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "O2DPG supplies the definitive setup for official Monte Carlo productions for ALICE Run3, along with a runtime system to execute these jobs on our GRID computing platform. It consolidates all necessary processing tasks into a unified and consistent environment, ensuring a seamless pipeline from event generation through AOD production. Furthermore, O2DPG manages versioned code for PWG-specific generator configurations and includes tools to validate whether these configurations are effective. This validation process occurs during pull request reviews.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "3bee18379541c9a28830acbb43cd072335fadc614cceaf4ba211dee6b0678a9e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, here's the paraphrased document:\n\nOkay, let's discuss the basic concepts behind setting up and conducting Monte Carlo simulations in our system. Essentially, running a Monte Carlo job involves two main steps to separate the configuration logic from the execution logic. In the first step, we generate a detailed description of the Monte Carlo job using a JSON workflow file. In the second step, we execute this job with a dynamic scheduler. In more detail, the workflow creation phase forms a coherent, acyclic directed graph (pipeline) that integrates all the tasks to be run, described in a custom JSON format. This phase also sets up the workflow according to critical user parameters, such as the collision system to use, the generators to run, and the interaction rate.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "48c024f10cbf8d3143e0ce84478880a5c99b01fb63c74d4d291f92fec78d22d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To start, you need to specify which generators you intend to use, the interaction rate within your detector, the number of timeframes to simulate, and the generators you want to run. The result of this setup is saved in a file named workflow.json, which you can review.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "9fd30f9454849c483778dc6d58ccfc75465496a41030e9bfafcd298f4f8d728d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Based on this file, the workflow execution phase, the second step in the process, manages running the system on a multicore machine, akin to a dynamic build tool. This executor initiates all tasks as soon as the output from the preceding stage is ready. We've designed this scheduler to focus on high parallelism and CPU efficiency, while also adhering to resource limitations on compute nodes to avoid overloading the system with too many tasks simultaneously, ensuring memory remains manageable. Essentially, this tool can schedule any directed acyclic graph and is not limited to Monte Carlo simulations, making it versatile for other applications.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "f5ff5d4b025e609a866e30b7e0d1bddafe720e11cf11f9eacc3b0d130aec68ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Separating the pipeline's configuration from its execution clarifies responsibilities: one can adjust the Monte Carlo (MC) configuration independently of the execution code. Additionally, the MC pipeline can be easily shared in JSON format, enabling execution without needing to run the configuration step.\n\nIt's worth noting that this method is similar to how ALICE DPL topologies or O2Physics analysis tasks are structured.\n\nHowever, the O2DPG MC graph workflow operates in incremental stages, with intermediate results saved to disk. In contrast, a complete global DPL topology loads all stages into memory simultaneously. Incremental execution was selected to manage the high memory demands during the digitization and Geant simulation stages.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "0df57ee37de3d876b2e08100bb2f51df08780f619db5449cd6495855bd34e654": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Now let's delve into the workflow creation process with some essential basic features.\nThe workflow creation is managed by the Python script o2dpg_sim_workflow.py, included in O2DPG.\nThis script allows you to configure your Monte Carlo simulation based on key user parameters.\nFor instance, you would run this script with parameters like the collision system, event generator, number of time frames, events per frame, interaction rate, and more.\n\nAdditionally, there is an option to specify a run number. In this example, the script generates an ALICE Run3 Monte Carlo workflow for five time frames, each containing 2000 events, for 14 TeV proton-proton collisions.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "929c41029803d772d2bd38eabee25498ea7569de33bae6f5e700756107cae3a4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, let's discuss run numbers briefly. Indeed, you might have noticed that a run number is required during the configuration phase. Using a run number is essential because it helps us determine a timestamp necessary for fetching conditions data from our conditions database (CCDB). Run numbers should be utilized even for simulations that are not data-taking, and I would like to point out that there is a list of predefined run numbers documented in a specific TWIKI. In this TWIKI, you can find run numbers suitable for various types of simulations. For example, if you are performing heavy ion simulations with a magnetic field of -0.5 tesla, the table indicates that using run number 310000 should provide you with the appropriate condition objects in the CCDB.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "db97bb528069036a76ccd8cc893b866d10ad12d4a5ebc77c4540f1166b4161ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, let's move on to the detailed description of the second step in our execution process, which is the actual Monte Carlo workflow execution stage. To recap, this stage involves the workflow executor, which is a Python script. This script accepts the workflow file created in the preceding step and runs it on the compute node. The primary arguments provided include the workflow filename and the target stage up to which the graph pipeline should be executed. For us, this usually means up to the AOD stage.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "d5ad7c423158b02f097d6ddf62707eb13b844f7f8b9ee33eb5aa4513ccea7bd0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "I would also like to emphasize some additional useful features of this Python executor. Firstly, it supports checkpointing and incremental building, allowing for staged simulations. For example, you can run the pipeline up to digitization in the first execution and then continue in the next run by processing through the AOD stage. The benefit here is that it checkpoints at each stage, ensuring that the subsequent stage resumes from where it left off, avoiding redundant digitization.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "2d5ecd3fb75f1bd8821f59a88570e2c2cdc7cc17f9734f63ccb0e71cd32632c0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Certainly something helpful for debugging is to transform the entire process into a straightforward shell script. Rather than running the workflow in its graphical interface, you can convert the workflow description into a linear shell script and execute it directly. This approach is beneficial for debugging or other scenarios. Additionally, there are numerous other useful features available; you can check the help menu for more details or reach out to the developers via the Mattermost channel.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "066287f563f19718b23af5264fcd6a252aeb7cfdb3fa367c574c189879e21feb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Sure, here is the paraphrased document:\n\nFirst, it's important to know that users require a valid alien token to access calibration and condition objects from CCDB, as these objects are stored on the ALICE GRID and require authentication. Additionally, our Monte Carlo workflows are designed to run efficiently on an environment with eight CPU cores and at least 16 gigabytes of RAM, which mirrors the standard resources available on GRID compute nodes. This is the same setup you should use when running the Monte Carlo workflow on your local laptop.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "6a3347725d71de11144380cc57beda9b1c049f0809b2b772cc6193836acbecf2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Alright, this concludes my presentation. There are numerous additional keywords in the simulation that I won't be covering, but I hope all the information is available in the documentation at https://aliceo2group.github.io/simulation/. Please assist us in enhancing it by asking questions and making direct contributions.",
            "link": "https://github.com/AliceO2Group/simulation/blob/main/additional_resources/talks/O2_AnalysisTutorial_April2023/ALICE-Run3-MC-HowTo_Transcript.md"
        }
    ],
    "6e4a53c28d10630d07120cb1ccdad226c6b9ae3edb36675e4c5b0616c81980e9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This repository gathers scripts and configurations for running Monte Carlo simulations and data reconstruction for the ALICE experiment within the O2 project framework.\nFor more information, consult [MC/README.md](MC/README.md) and [DATA/README.md](DATA/README.md).\nThe material previously hosted in the [O2DataProcessing](https://github.com/AliceO2Group/O2DataProcessing) repository is now available in the [DATA](DATA) directory.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/README.md"
        }
    ],
    "9c4e1531bc3224c235f8d87de32a1f54ea1a5f775fb715b3ad97f25dc51cd0cd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Please refer to the comprehensive documentation available at [https://aliceo2group.github.io/simulation/docs/relval/](https://aliceo2group.github.io/simulation/docs/relval/).",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/README.md"
        }
    ],
    "4e587aa62dd1acdc67cdb38df3366ac8f3724a5875b80316e83308f2cda65535": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# O2DPG - Monte Carlo Simulation\n\nWithin this directory structure, the scripts and configurations for running Monte Carlo simulations of the ALICE experiment within the O2 project are located.\n\n## Integrating a New QC Task into the Simulation Script\n\nBelow are the steps to incorporate a new QC Task into the main simulation, reconstruction, and QC workflow.\n\n1. Build O2, QualityControl, O2Physics, and O2DPG with `o2` defaults:\n```\naliBuild build O2 QualityControl O2Physics O2DPG --defaults o2 -j <jobs>\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/README.md"
        }
    ],
    "7a940fbff6519cf0830f7b7977d9cc7aea9eebd22afdbf4580687427965575e6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "2. (Optional) Verify the setup by loading the environment and executing the example script. This script runs a sequence of tasks, typically DPL workflows that are interdependent and store processing results in ROOT files. It simulates 3 TimeFrames, reconstructs them, and performs quality checks. The relevant files are generated in the current directory, and QC objects are uploaded to QCDB. \n```\nalienv enter O2/latest O2Physics/latest QualityControl/latest O2DPG/latest\ncd MC/run/examples\n./O2DPG_pp_minbias.sh\n```\nIf the script fails, contact the repository maintainers. Occasionally, an intermittent issue may arise, so it is advisable to rerun the script, which will resume from the most recent failed task.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/README.md"
        }
    ],
    "7fce3ba09ad33a110401b32e5f95ce76fe80e7746944ce4f6c3380de4b199ffa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "3. Create a QC configuration file for your Task.\nEnsure that you include the following default parameters in the Activity section:\n```\n     \"Activity\": {\n       ...\n       \"provenance\": \"qc_mc\",\n       \"passName\": \"passMC\",\n       \"periodName\": \"SimChallenge\"\n     },\n```\nAs future developments may require, these parameters will be overridden with production-specific values.\nGiven that processing time is not a critical factor, data sampling can be avoided in most cases, and direct data sources can be used (refer to the QC documentation).\n\nPlace the file in the MC/config/QC/json directory or ensure it is included in the QC package.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/README.md"
        }
    ],
    "622f3522ec0629157fee903c79b621bf8faa4642eb98ec7c500ff863e296e384": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "4. Within `o2dpg_sim_workflow.py`, locate the main loop iterating over simulated TimeFrames and the Quality Control (QC) section.\n\nAdd your QC following the example shown below, and refer to the explanation of specific lines for further details.\n```\nfor tf in range(1, NTIMEFRAMES + 1):\n  ...\n  if includeFullQC or includeLocalQC:\n    ...\n    ### Primary vertex\n    addQCPerTF(taskName='vertexQC',\n               needs=[PVFINDERtask['name']], # specifies tasks that must run prior to this QC workflow, ensuring relevant results are available\n               readerCommand='o2-primary-vertex-reader-workflow', # defines the command used to read input files, followed by the o2-qc workflow\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/vertexing-qc-direct-mc.json') # path to the QC configuration file\n```\nThe code snippet above ensures that the QC task is executed for each simulated and reconstructed timeframe individually. The intermediate results are stored and combined into a single file within the `QC` directory.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/README.md"
        }
    ],
    "4cb845d2058407eb4ff3cd34e9ab3f269ff882ee503648290a86adaff9adf1f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "5. Open the `o2dpg_qc_finalization_workflow.py` script and locate the `include_all_QC_finalization` function.\n\nThis ensures that the subsequent QC steps (Checks, Aggregators, uploading to QCDB) are executed after all TimeFrames have been processed.\nFollow the example to add your own QC task. Use the same task name and configuration file as in the previous step.\n```\ndef include_all_QC_finalization(ntimeframes, standalone):\n  ...\n  add_QC_finalization('vertexQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/vertexing-qc-direct-mc.json')\n\n```\n\n6. Remove the files created by the workflow from step 2 and rerun the `O2DPG_pp_minbias.sh` script.\nEnsure that your QC task completes successfully.\nTo run only the necessary parts of the workflow for your QC task, use the `-tt <task_name>_finalize` flag with `o2_dpg_workflow_runner.py`.\nLogs for the tasks are found in their respective working directories: tf<n> for TimeFrame processing and QC during finalization.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/README.md"
        }
    ],
    "8de782380ea6dbf3d2c2474853f7448e33494b35bd4709eee7adc937ef5c9e4f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "7. Request Catalin to include the QC results file in the list of merged files on Grid productions. The file name is identical to `taskName` but with a `.root` extension. If the `taskName` is updated, please inform Catalin as well.\n\n## Incorporating QC Post-processing Tasks into the Simulation Script\n\nA QC post-processing workflow can be run as the final stage of the QC process.\nTo implement this, please follow the instructions below.\n\n1. Similar to the steps outlined in the previous section (1-3), ensure that the workflow can be executed without changes. Create a QC config file, and correctly fill in the `Activity` section. Be sure to configure the appropriate triggers in the post-processing task; for examples, see the [QC documentation](https://github.com/AliceO2Group/QualityControl/blob/master/doc/PostProcessing.md#more-examples). Typically, either `ForEachObject` or `ForEachLatest` triggers will be required.\n\n2. Locate the `include_all_QC_finalization` function in `o2dpg_qc_finalization_workflow.py`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/README.md"
        }
    ],
    "f410fa8750996ed8450c70b8fa23fd1ede165248dbaadf0daaf67e7e2812cec5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "2. In `o2dpg_qc_finalization_workflow.py`, locate the `include_all_QC_finalization` function.\n\nAdd your QC post-processing workflow using the `add_QC_postprocessing` function within this function. Refer to the in-code documentation for detailed explanation of the arguments and follow the existing examples. Ensure you correctly set the `needs` to execute the post-processing workflow only after the necessary QC objects are present in the QCDB.\n\n3. Remove the files produced by the workflow from the previous steps and re-run the `O2DPG_pp_minbias.sh` script. Confirm that the QC post-processing workflow completes successfully. You can run specific parts of the workflow needed for your QC task by appending `-tt <task_name>_finalize` to `o2_dpg_workflow_runner.py`. Relevant logs can be found under the task names in the `QC` directory.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/README.md"
        }
    ],
    "9c2c2e021c7f67fe233e37849d626bb17c1ecbe3a9e64dd299483ed07fbdd501": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Tests related to O2DPG\n\n\n## Generator-related tests\n\nCurrently, these tests concentrate on generator configurations and custom generators as specified in the corresponding `ini` files.\n\nTests are executed using\n```bash\n${O2DPG_ROOT}/test/run_tests.sh [--fail-immediately]\n```\n\nThey cover changes in:\n1. generator `ini` files,\n1. test macros associated with specific generator `ini` files,\n1. macros referenced in generator `ini` files,\n1. macros included in macros referenced in generator `ini` files.\n\nUsing the `--fail-immediately` flag will stop the process as soon a test fails. Otherwise, all tests will be attempted.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/README.md"
        }
    ],
    "0995e3f3eddf60bfec18ac391f59e268164bb49e69ecf1e46419bf5317e3361d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Implementing Tests\n\nWhen an `ini` file is identified for testing, a corresponding test macro must be included to validate the simulation kinematics. This macro should reside in a `tests/` directory adjacent to the `ini` file. The macro must be named as follows:\n```bash\n<name-of-ini-file>.C\n```\nIt's important to note that `run_tests.sh` automatically recognizes all generators specified in the `ini` file. At least one test must be provided for each generator listed in the `ini`. Each test is encapsulated within a function in the `<name-of-ini-file>.C` macro. For instance, if you are testing `External` and `Pythia8`, the macro should include:\n```cpp\nint Pythia8()\n{\n    // perform your test\n    return ret;\n}\n\nint External()\n{\n    // perform your test\n    return ret;\n}\n```\nThe function should return an integer, `0` for success, and a non-zero value for failure.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/README.md"
        }
    ],
    "6c338a2c4b811acd6a2db74afe9c4cb192df2ae89bfe8ecf9ff616826a33055d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Important notes and instructions\n\n### Local Test Execution\n\nTo run tests when an `O2DPG` environment is active and the development source directory differs from `O2DPG_ROOT`, execute\n```bash\nO2DPG_TEST_REPO_DIR=</path/to/source/O2DPG> ${O2DPG_ROOT}/test/run_tests.sh [--fail-immediately]\n```\nIf you are within the source directory, you can simply run\n```bash\n${O2DPG_ROOT}/test/run_tests.sh [--fail-immediately]\n```\n\n### Preservation of Test Artifacts\n\nBy default, only logs are retained after each test, freeing up disk space. To keep all artifacts, use\n```bash\n${O2DPG_ROOT}/test/run_tests.sh --keep-artifacts\n```\n\n### Additional Assistance\n\nFor further guidance, run\n```bash\n${O2DPG_ROOT}/test/run_tests.sh -h\n```\nwhich provides the usage details.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/README.md"
        }
    ],
    "e3f3f71294e99fb4083d43d3914f5ce2b7517ab6ac3a8889d574a92f834f24b8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "FLAGS:\n\n  --fail-immediately : terminate immediately upon the first test failure\n  --keep-artifacts : retain simulation and test artifacts; by default, only logs are preserved after each test\n\nENVIRONMENT VARIABLES:\n\n  O2DPG_TEST_REPO_DIR : specify the source repository to be tested.\n  O2DPG_TEST_HASH_BASE : the base hash for comparison (optional)\n  O2DPG_TEST_HASH_HEAD : the head hash for comparison (optional)\n\nIf O2DPG_TEST_HASH_BASE is not defined, it defaults to ALIBUILD_BASE_HASH.\nIf ALIBUILD_BASE_HASH is also undefined, it defaults to HEAD~1, but if there are uncommitted changes, it defaults to HEAD.\n\nIf O2DPG_TEST_HASH_HEAD is not defined, it defaults to ALIBUILD_HEAD_HASH.\nIf ALIBUILD_HEAD_HASH is also undefined, it defaults to HEAD, but if there are uncommitted changes, it remains blank.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/README.md"
        }
    ],
    "412728ca4071ca474223229d2645e4cb1af3b8533c4be5a0bfac83b44fb265ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# General utilities\n\n## Retrieving PRs (based on labels)\n\nThe script `o2dpg_make_github_pr_report.py` can generate a markdown report of PRs in a specified repository. PRs are retrieved and listed according to their assigned labels. By default, the script searches for labels formatted as `async-*`. PRs are initially sorted by their state—closed and merged, just closed, and open. Within each state, they are grouped by labels and further sorted by time. The time-based sorting criteria are as follows:\n\n- For `state closed` and `merged`, the `merged_at` timestamp is used.\n- For `state closed` but not `merged`, the `updated_at` timestamp is used.\n- For `state open`, the `updated_at` timestamp is used.\n\nTo retrieve PRs for `O2`, execute the following command, which will produce a markdown report saved as `o2dpg_pr_report_O2DPG.md`:\n```bash\n./UTILS/o2dpg_make_github_pr_report.py --repo O2DPG\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/README.md"
        }
    ],
    "b5e1eac27efc430efaa8f69d686c3cd9345313e09784aa91f67498c5ba21626b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "A few additional configurations are available. To view the complete list of options and flags, run\n```bash\n./UTILS/o2dpg_make_github_pr_report.py --help\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/README.md"
        }
    ],
    "73976c3cf3d6ac00ee9e628d0ce2565f58c55b5bc7d74bc520070d9298b3e8a9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This repository includes the PDP workflows for execution on the EPN (and will also support the FLP in the future), along with a parse script that converts description files into DDS XML files.\nFor a brief introduction and an example on how to create a workflow on the EPN, refer to [this section](#Quick-guide-to-create-and-deploy-detector-workflow).\nDetailed options for the production workflow are outlined [here](production/README.md).\n\n# Terminology:\n- A **workflow** is defined as a single DPL workflow binary, or a combination of multiple workflow binaries using the `|` syntax, or a shell script that initiates such a workflow.\n- A **full topology** is the final XML file submitted to DDS to initiate a processing chain for a single partition on the EPN.\n- A **partial topology** is the XML file generated by DPL using the `--dds` option.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "64b46b293352faa6dc220fd77beb7809fee169c1014d0836631f56210f4ee994": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Folder structure:\n- **common** holds shared scripts accessible to all workflows, particularly including common environment variable scripts.\n- **production** houses the production workflows for global runs, managed by PDP specialists.\n- **tools** includes the **parser** script and supplementary tools.\n- **testing** features scripts for tests or standalone runs maintained by detectors or individuals. It includes **examples** for illustrative workflows, **detectors** for standalone detector workflows, and **private** for user-specific workflows.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "24033057232a28449a5e7f9a1e50aeea7bed651f2e807b21882fd56ca09c0b83": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Topology Descriptions and Description Library Files:\nAn additional layer of abstraction above *workflows* are referred to as **topology descriptions**. The *parser* tool is capable of producing a *full topology* XML file from such a *description* using the `–dds` option of DPL and the `odc-topo-epn` tool. *Topology descriptions* are kept in **description library files** within the `DATA` directory of the `O2DPG` repository. Each *description library file* can include multiple *topology descriptions*, each identified by a **topology name**.\n\n# Notes:\n- The repository does not store *full topologies*, but they are generated dynamically. Users have the option to cache the resulting full topology XML files.\n- Default settings, especially those set in the common environment files within the `common` folder, are optimized for laptop or desktop use.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "5023fa7b64e8bfd9b016c06f8dfa75aa811751e6db79c0161279a8426735f5f8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Workflow requirements:\n- Workflows must support three run modes, selected through the `WORKFLOWMODE` environment variable. The `dds` mode with its `${WORKFLOWMODE_FILE}` parameter is obligatory:\n  - **run** (default): execute the workflow\n  - **print**: display the final workflow command in the console\n  - **dds**: generate a partial topology.\n- Where applicable, workflows should utilize the configuration settings from the `common/setenv.sh` script rather than defining their own options. Required environment variables to adhere to are:\n  - `SHMSIZE`\n  - `SEVERITY` and `INFOLOGGER_SEVERITY`, which should be set to `warning`\n  - `NORATELOG`, or fmq rate logging must be turned off\n  - `GPUTYPE` (if the workflow supports GPUs)\n  - `GLOBALDPLOPT`, which must be included in the workflow (appended to the final binary if merged with `|` syntax)\n  - ... (to be continued).\n- DPL metrics and InfoLogger (while not strictly required, their absence makes debugging challenging).",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "2534c5eb8b878453b5f55df36a21d5b9fb241c6f787118982cb5cdf336748b47": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- The workflow commands should include `--monitoring-backend influxdb-unix:///tmp/telegraf.sock --resources-monitoring 60` for DPL metrics.\n- To enable the infologger, use `--infologger-severity $INFOLOGGER_SEVERITY`.\n- Workflows must end with the `o2-dpl-run` command and include the `$GLOBALDPLOPT` environment variable as a command line argument.\n- Source the following files to access common functions:\n  ```\n  source common/getCommonArgs.sh\n  source common/gen_topo_helper_functions.sh\n  ```\n- Combine your workflow components in the `$WORKFLOW` variable, using `add_W` to add a workflow and `add_QC_from_consul` to incorporate a QC workflow with a JSON file from consul.\n- Calibration workflows should avoid contaminating the production CCDB in the scenario where `if [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then` (bash script); for instance, upload to `ccdb-test.cern.ch`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "f1e9d512e88a793c4bfce8a3f030cea119ee133edbab07ee16a93764cb799e33": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- When a workflow employs an `o2-dpl-raw-proxy` to intake data from DataDistribution, it is necessary for that device to include the `--inject-missing-data` command-line option.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "174ea3983dfa401f6c5e233577ed7b1290fb13139be81c854dfa6c007a7a3fe8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configuring and selecting workflow in AliECS:\nThree methods are available for configuring the *full topology* in AliECS; currently, only the manual XML option is implemented:\n- **Version of workflow repository**: Under this configuration, AliECS sets the following parameters, which uniquely define a *full topology*. The *parser* subsequently generates the final DDS XML file based on these settings:\n  - A **commit hash** indicating a specific state of the `O2DPG` repository (which can be a tag, and for production workflows, it must be a tag).\n  - The **path to a description library file** (relative to the DATA folder within the `O2DPG` repository).\n  - The **workflow name** within the *description library file*.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "2ab3280257674376e983465dd0d4b66ebb6e715ff664d84b515d55ace44a4f2c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- The **workflow name** within the *description library file*.\n- **detector list**: A list of multiple detectors separated by commas, involved in the run (global list, list for quality control, list for calibration, list for reconstruction, list for CTF, list for processing on the FLP), with a default value of `ALL` for all detectors.\n- **workflow parameters**: A text field supplied to the workflow as an environment variable for additional options.\n- **number of nodes override**: A setting that changes the number of nodes required in the workflow (intended to quickly adjust the EPN partition size). **NOTE: This setting is now mandatory and exclusively used to define the number of nodes. The number specified in the workflow description is disregarded.**\n- **process multiplicity overrides**: Scaling factors for the process multiplicities of raw decoders, CTF encoders, and other processes.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "57a3262b9cda1deeead3711cb4fe2b44db99607cdcc05b4e41da87e39a268024": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **extra environment options**: A text field for the operator to input additional environment variables, which will be passed to the workflow.\n  - **wipe workflow cache**: Typically, XML files are cached when generated from the same repository version, same workflow, and same O2 version. This option clears the cache for the current partition.\n- **repository directory**: Similar to the previous case, but the repository path, rather than the commit hash, is specified, directing to a checked-out repository on the shared home folder in the EPN farm. The process remains the same, where the parser generates the full topology XML file from the specified workflow within the repository.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "ad00a705b0713a0fd66ed7b091c26233df54588ec1a667138458cc58c8914dbd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **manually specified XML file**: In this mode, the `O2DPG` repository is completely omitted, and instead, the absolute path to a *full topology* XML file located in the EPN's shared home folder is provided. This XML file needs to be created manually, using the same methods that the *parser* typically employs (refer to the section on manually specified XML files for more details).",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "3769562423105470515d9ba5a86e0d94a2e90be510fd6b63e3ea521e7d277e23": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Descriptions of Topology:\nA *topology description* includes:\n- A list of modules necessary for both generating the DDS XML file using DPL's `--dds` option and for executing the workflow. This list can be a single module or a space-separated list enclosed in double-quotes. This list also specifies the O2 version. We offer the `O2PDPSuite` package, which aligns with the O2 version and includes versions of `DataDistribution`, `QualityControl`, and `ODC`. Therefore, by default, one should load `O2PDPSuite/[version]`.\n- A list of workflows, specified as commands to generate XML files using the `–dds` option. These commands are run with the `O2DPG/DATA` path as the working directory. The environment options used to configure the workflow are added in standard shell syntax. Certain env options are set by the EPN and should not be overridden: `FILEWORKDIR`, `INRAWCHANNAME`, `CTF_DIR`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "b7a1dac412b73e86ba994dba797a56dffee5c5e9f963f28145672b57ba1edfbc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Each workflow incorporates the following parameters, which precede the workflow command with commas and no spaces, and the workflow command is enclosed in double-quotes:\n- The zone where the workflow is to be executed (calib / reco)\n- For reconstruction workflows:\n  - The number of nodes on which to run this workflow\n    - **NOTE: The setting for the number of nodes is now disregarded. Please use the node override in ECS instead!**\n    - If a processor in the workflow needs to determine the node it is running on, it can utilize the `$DDS_COLLECTION_INDEX` environment variable.\n  - The minimum number of nodes required for the workflow (in the event of node failure)\n    - If there are multiple workflows in the topology description, the maximum number of nodes and the highest minimum number of nodes are utilized.\n- For calibration workflows:\n  - The number of physical cores to reserve on the node for running the workflow.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "518673d23c84025350313db1b2807c389ee43f3231d9870c234223ccc0d7326a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- For calib:\n  - Number of physical cores to reserve on the node for the workflow.\n  - Name of the calibration (used to configure DDS properties, which determine the connection of reconstruction workflows to specific calibration workflows).\n    - ODC/DDS ensures enough nodes are allocated to provide sufficient CPU cores for the calibration workflows. The various calibration workflows might or might not run on the same node.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "d8b99db696248e4ffeac4fbbc4bb3f06a8b0a9d571c689f76b7507bbc2e10e19": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "An example of the topology library file is as follows:\n- topologies.desc\n```\ndemo-full-topology: O2PDPSuite/nightly-20210801 reco,128,126,\"SHMSIZE=320000000000 full-system-test/dpl-workflow.sh\" calib,5,\"SHMSIZE=2000000000 calibration/some-calib.sh\" calib,20,\"SHMSIZE=2000000000 calibration/other-calib.sh\";\nother-topology: O2PDPSuite/v1.0.0 reco,2,1,\"tpc-test/tpc-standalone-test-1.sh\"\n```\n- AliECS-config:\n```\ncommit=xxxx|path=xxxx file=topologies.desc topology=demo-full-topology parameters=\"EVENT_DISPLAY\" detectors=\"TPC,ITS\" detectors_qc=\"TPC\" [...]\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "b2853d9b2d1618e8242cbaf81e791fccca302594603b6dccdc3ac35196e99cc7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Calibration Workflows Utilizing Aggregators\n\nWhen calibration workflows employ an aggregator, the processing occurs on each EPN, with the results then transmitted to an aggregator node. Communication is facilitated via the `o2-dpl-raw-proxy` and the `o2-dpl-output-proxy`.\n\nSetting up such a workflow requires adherence to these guidelines:\n- Two distinct shell scripts are necessary: one for the \"reco\" process running on each EPN, and another for the calibration aggregator \"calib\" process on the calibration node. If the topology includes multiple aggregators, there will be one *reco* script and several *calib* scripts.\n- In a calib aggregator workflow, the `o2-dpl-raw-proxy` MUST NOT include the `--inject-missing-data` command line argument! (This argument is used only for input proxies receiving data from DataDistribution!)\n- The *reco* script should include an `o2-dpl-output-proxy` for sending output, while each calib script should incorporate an `o2-dpl-raw-proxy` for input.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "7245a1190e2ee4aa1ec77d801f4dec71157ab475bf5ee32bb2cb38a7b073833d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Each \"raw\" proxy input must be given a unique name using the `--proxy-name [NAME]` option. The *reco* script has a default input raw proxy named `readout-proxy`.\n- The channel-name for each input proxy should correspond to its name. Calibration input proxies should have `method=bind` for their channels, whereas output proxies should use `method=connect` and their channel name should match the input proxy it connects to.\n- The `dataspec` for the proxies is configured similarly to the `readout-proxy`, and the specs must be identical for corresponding input and output proxies.\n- The channels of input and output proxies (excluding the *reco* `readout-proxy`) should be configured without specifying an address.\n- For output proxies, use the command line option `--proxy-channel-name [name]`, where `name` is the configured channel name.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "3679dadeb6d8595867f3bc45f8bcb5d97749d6e58acb8688da32092f1b8cacda": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- For the EPN to run, the *calib* input proxies of the aggregator nodes need to include the command line option `--network-interface ib0` (to ensure data transmission occurs via InfiniBand rather than Ethernet). It is important to note that this applies only to the aggregator node and not to the regular processing stages!",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "0a2fa7618c69fcc7b99fead23942defab7a61a406c17fcf477b1ecddf2155787": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "For calibration workflows, the number of cores must be specified and the memory limit is derived from the number of cores (approximately 4 GB per core, with some margin for the system). If `SHMSIZE` is configured for the workflow, it must comply with this memory constraint; a good guideline is 50% of the available memory. If `SHMSIZE` is not specified, it defaults to 2 GB per core. Ensure you request a reasonable number of cores, as there are only 4 calibration nodes shared among all workflows.\n\nFor an example, see the calibration workflows [here](testing/examples).\n\n*NOTE* For reference, when running a calibration workflow with the AliECS on the EPN, currently a node from the `calib` zone must be requested by setting `odc_resources` to `[ {\"zone\":\"online\", \"n\":10}, {\"zone\":\"calib\", \"n\":1 } ]` (adjust the `10` to match your required number of reconstruction nodes). This will be streamlined in the future, eliminating the need for this additional setting.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "3be82aeea1570dc118de4e731916b257d0bb2be7c5816ee48d28a51d868d96e1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The parsing script:\nThe **parser** is a basic Python script designed to interpret a *topology description* and produce a complete DDS XML file representing the *full topology*. It accomplishes this by running all DPL workflows with the `--dds ${WORKFLOWMODE_FILE}` parameter and subsequently employing the `odc-topo-epn` tool to integrate the *partial topology* into the final *full topology*.\nThe *parser* operates based on certain command line options and environment variables (with the latter being passed to the workflows as well).\n- The *parser* requires a DataDistribution topology file. Example files are included in the `tools/datadistribution_workflows` directory for scenarios such as discarding the TF, storing the TF to disk, forwarding the TF to DPL processing (essential for DPL workflows), and forwarding while simultaneously storing to disk.\n- *Parser* command line options:\n  - The script is intended to be run from the `DATA` directory of the `O2DPG` repository.\n  - The typical invocation command is:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "dea51b786aa1862822cce5d2f4faf5a555540581e9d730bcdf7f4b9af9bc4778": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- The syntax for the command is as follows:\n```\n[ENV_VARIABLES] ./tools/parse [DESCRIPTION_LIBRARY_FILE] [TOPOLOGY_NAME] [OUTPUT_NAME]\n```\n- An example of how to use this is:\n```\nDDWORKFLOW=tools/datadistribution_workflows/dd-processing.xml WORKFLOW_DETECTORS=TPC,ITS WORKFLOW_DETECTORS_QC=TPC WORKFLOW_DETECTORS_CALIB=ALL ./tools/parse topologies.desc demo-full-topology /tmp/output.xml\n```\n- The following environment variables control the operation of the *Parser*:\n  - `$FILEWORKDIR`: This must be set and is utilized by the workflows to indicate the directory where all necessary files (like grp, geometry, dictionaries, etc.) are stored.\n  - `$EPNSYNCMODE`: If this variable is set, the parser assumes it is running on the EPN for synchronous processing. In this case, it will automatically load the modules as specified in the topology description. Additionally, this variable is used by the workflows to activate features such as the InfoLogger and Metrics monitoring, and to retrieve QC JSONs from consul.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "2353b9243913bbdcff8f2d07073dc921d7cb2bc2a42a7cc05ef2328f209c1cf5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `$INRAWCHANNAME`: Transmitted to the workflow, it specifies the raw FMQ channel name utilized for interaction with DataDistribution.\n  - `$RECO_NUM_NODES_OVERRIDE`: Changes the number of nodes employed in the reconstruction process (leave blank or set to 0 to deactivate this override).\n  - `$DDMODE`: Determines the operation mode of DataDistribution: **discard** (creates TFs but discards them), **disk** (creates TFs and saves them to disk), **processing** (creates TFs and runs the DPL workflow on the TF data), **processing-disk** (both stores TFs to disk and performs processing).\n  - `$DDWORKFLOW`: (*alternative option*): Provides an explicit path to an XML file containing the partial workflow for DataDistribution.\n  - `$WORKFLOWMODE`: Can be configured to print mode, in which case the parser will not generate the DDS topology output, but instead will produce a list of shell commands to start running the workflows locally.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "1563c6add10a8187eb9ee9543c10bfd86c066a51cba5f1bca27be1817653ba95": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- During synchronous processing on the EPN farm (signaled by the `$EPNSYNCMODE=1` variable), the *parser* will automatically `module load` the modules listed in the *topology description*. If not running on the EPN farm, the user needs to manually load the appropriate O2 / QC version.\n- The parser sets the env variable `$RECO_NUM_NODES_WORKFLOW`, which indicates the number of nodes the workflow will use when executing the workflow script. This information can be utilized to adjust process multiplicities.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "c4f4ba9c3da4c36c62068b57e73f6a739666397ce6d101448bcce434e40f00ed": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Creating a complete topology DDS XML file manually via the parser:\n- **NOTE** This information is for reference or use on a private PC. For XML creation on the EPN, see [here](#Quick-guide-to-create-and-deploy-detector-workflow).\n- Access the `O2DPG` repository, modify the workflows and topology description in the `DATA` directory to meet your requirements.\n- Open a terminal and navigate to the `DATA` directory within `O2DataProcessing`.\n- Ensure that `odc-topo-epn` is included in your path (e.g., `module load ODC` / `alienv enter ODC/latest`).\n- Set the necessary environment variables, such as:\n```\nFILEWORKDIR=/home/epn/odc/files EPNSYNCMODE=1 DDWORKFLOW=tools/datadistribution_workflows/dd-processing.xml INRAWCHANNAME=tf-builder-pipe-0 WORKFLOW_DETECTORS=TPC,ITS,TRD,TOF,FT0\n```\n- If you are not on the EPN farm and have not configured `EPNSYNCMODE=1`: Load the necessary modules for O2 / QC (`alienv load O2PDPSuite/latest`).\n- Execute the parser, for example:\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "52778cef66438063e2e9ee0e87d3c09fb7670b58cc85c82d894e627fdb7a81e1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Execute the parser with the following command:\n```\n./tools/parse production/production.desc synchronous-workflow /tmp/dds-topology.xml\n```\n- After running this, you can utilize `/tmp/dds-topology.xml` to initiate the workflow through DDS.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "df7f1226585269ca7ad77f229879aa5a8a6688d1ee297dde3329419295beaacc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Quick guide to create and deploy detector workflow:\n- **Note**: While not all configuration features (see [here](#Configuring-and-selecting-workflow-in-AliECS)) are currently available in AliECS, this guide focuses on creating the XML file for DDS. This XML file must then be manually entered in the AliECS GUI as the topology. Although this manual entry method will persist, in the future, workflows will be configured directly in AliECS, with the XML generated on-the-fly.\n- **Note**: The topology must be created on an EPN with the required O2 version installed, as specified by the topology. Any EPN should suffice, provided that the O2 version is the same across all nodes.\n- Clone the [O2DPG](https://github.com/AliceO2Group/O2DPG) repository to your home folder on the EPN (`$HOME` in the following).",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "c4cffefbd2b5d2ef37f0688509ec1f20b1a946f8a444b1338da68de4f6f41546": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Move the contents of `O2DPG/DATA/testing/examples`, including the description library file `workflows.desc` and the workflow script `example-workflow.sh`, to another location within the repository, typically under `testing/detectors/[DETECTOR]` or `testing/private/[USERNAME]`.\n- Modify the workflow script as needed, and update or rename the workflow in the description library file.\n  - Refer to [this section](#Topology-descriptions) for the library file syntax (if it isn’t clear), and ensure you do not overwrite the listed protected environment variables. The workflow script is a bash script that initiates a DPL workflow, which must include the `--dds ${WORKFLOWMODE_FILE}` parameter to generate a partial DDS topology.\n  - Confirm that the workflow script meets the [requirements](#Workflow-requirements), especially with regard to respecting the required environment variables.\n  - Utilize `O2PDPSuite` for module loading to ensure the latest installed version, or specify a version by using `O2PDPSuite/[version]`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "5a7fa58f98edccf68a2fc1fba42e38ab6e04149eea82cf4a1d6f6ee7e66c3e71": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Establish an empty directory in `$HOME` on the EPN, specifically in `$HOME/test`.\n- Duplicate the topology generation template from `O2DPG/DATA/tools/epn/run.sh` into your folder.\n  - Note: This template script includes all options that will be supplied via AliECS as environment variables automatically. Eventually, this file will no longer be necessary; instead, the XML file will be generated automatically from the AliECS GUI.\n- Modify your local copy of the `run.sh` file. Here are the pertinent parameters for you:\n  - Keep the `GEN_TOPO_HASH` set to 0, and use the commented section with `GEN_TOPO_HASH=1`, which will be activated once AliECS is updated.\n  - Insert the path to the `DATA` directory of your `O2DPG` copy into `GEN_TOPO_SOURCE`, and place your newly created description library file and the workflow in that directory as `GEN_TOPO_LIBRARY_FILE` and `GEN_TOPO_WORKFLOW_NAME`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "5d582f4fc38bd233ead8f88a061cc3ecbb54f61be1ba026e48400b7631c1f8fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- To set the number of reconstruction nodes, use `RECO_NUM_NODES_OVERRIDE`; otherwise, the default from your description library file will be applied (leave it empty or set to `=0`).\n- `WORKFLOW_DETECTORS` and `WORKFLOW_PARAMETERS` are optional settings and not necessary for your current workflow; you can skip them for now.\n- Ensure `DDMODE=processing` is included to execute the workflow.\n- `NHBPERTF` will be automatically configured by AliECS, so there is no need to modify it.\n- Change the output filename to a location in your `$HOME`; the default is `$HOME/gen_topo_output.xml`, which is the file you need to input into AliECS for topology.\n- Execute `run.sh`.\n- Upload the output file (default is `$HOME/gen_topo_output.xml`) as the EPN DDS topology in the AliECS GUI.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "4c209d3caeaf56981a7400596eb7090ce774671428623965303b89fe6db9d895": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "When modifying your workflow, it is advisable to adhere to the style of the existing workflows. The [testing/examples/example-workflow.sh](testing/examples/example-workflow.sh) serves as a basic template, while a more intricate example can be found in [testing/detectors/TPC/tpc-workflow.sh](testing/detectors/TPC/tpc-workflow.sh). For a comprehensive example of a global workflow, refer to [production/full-system-test/dpl-workflow_local.sh](production/full-system-test/dpl-workflow_local.sh).\n\nThe `run.sh` script leverages the `parser` to generate the XML file, primarily by setting environment variables and invoking the `parser` with all options defined. Consequently, you can also directly use the `parser` to create the workflow as detailed [here](Creating-a-full-topology-DDS-XML-file-manually).\n\nFor a comparative view, see the following console output:\n```\n[drohr@head ~]$ ssh epn245\nActivate the web console with: systemctl enable --now cockpit.socket\n\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "e6be5742383b9d3146e4a835292291d983d2ef16bdf104f27cb363a07d874cdb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Last login: Wednesday, September 1, 2021, at 19:11:47 from 10.162.32.2\n[drohr@epn245 ~]$ git clone https://github.com/AliceO2Group/O2DPG\nCloning the repository into 'O2DPG'...\nremote: Enumerating objects: 182, done.\nremote: Counting objects: 100% (182/182), done.\nremote: Compressing objects: 100% (112/112), done.\nremote: Total 182 (delta 64), reused 135 (delta 48), pack-reused 0\nReceiving 182 objects: 100% (182/182), 36.42 KiB | 5.20 MiB/s, done.\nResolving deltas: 100% (64/64), done.\n[drohr@epn245 ~]$ cd O2DPG/DATA/testing/\n[drohr@epn245 testing]$ mkdir -p private/drohr\n[drohr@epn245 testing]$ ls examples/\nexample-workflow.sh  workflows.desc       \n[drohr@epn245 testing]$ cp examples/* private/drohr/\n[drohr@epn245 testing]$ vi private/drohr/workflows.desc\n[drohr@epn245 testing]$ mv private/drohr/example-workflow.sh private/drohr/my-workflow.sh\n[drohr@epn245 testing]$ vi private/drohr/my-workflow.sh\n[drohr@epn245 testing]$ cat private/drohr/workflows.desc",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "da31b417424de05c3aff962e4541869fee9a658633430586abae8e8af065f19e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[drohr@epn245 testing]$ cat private/drohr/workflows.desc\ndrohr-workflow: \"O2PDPSuite\" reco,10,10,\"SHMSIZE=128000000000 testing/private/drohr/my-workflow.sh\"\n[drohr@epn245 testing]$ mkdir ~/test\n[drohr@epn245 testing]$ cd ~/test\n[drohr@epn245 test]$ cp ~/O2DPG/DATA/tools/epn/run.sh .\n[drohr@epn245 test]$ vi run.sh\n[drohr@epn245 test]$ cat run.sh\n#!/bin/bash",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "6dff0c72c7671145d859c82c4b46d730938a40251c61951d181fd151161449e7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export DDMODE=processing                                             # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# Utilize these configurations to access the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                                # Use a git hash to fetch the O2DPG repository\n#export GEN_TOPO_SOURCE=v0.5                                           # Specific git hash for the repository\n\n# Use these settings to define a local path to the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                                # Define the path to the O2DPG repository\nexport GEN_TOPO_SOURCE=/home/drohr/O2DPG/DATA                         # Local path to the O2DPG repository",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "ebcc154a6251570e012eb5bada9361869e4de52219a187ff568c40f3e391bb04": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=testing/private/drohr/workflows.desc    # File containing the topology description library to be loaded\nexport GEN_TOPO_WORKFLOW_NAME=drohr-workflow                         # Name of the workflow within the topology description library\nexport WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: Specify the detectors to perform reconstruction on (separated by commas)\nexport WORKFLOW_DETECTORS_QC=                                        # Optional parameter for the workflow: Specify the detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameters for the workflow: Specify the detectors to perform calibration on\nexport WORKFLOW_PARAMETERS=                                          # Additional parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes to be used (default value is set in the description library file)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "c98737cb2a33fa2f88c847ab095e2e4696f8f76b2aaba7afc3112cada0a4d873": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    define NHBPERTF as 256                                              # Number of HBF per TF\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "4a8c9e12f620fd40e35f73d0665d37d6530442507a94fb0eaaa455139a0d8bf6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo_output.xml\n[drohr@epn245 test]$ ./run.sh\nLoading ODC/0.36-1\n  Loading requirement: BASE/1.0 GCC-Toolchain/v10.2.0-alice2-3 fmt/7.1.0-10 FairLogger/v1.9.1-7 zlib/v1.2.8-8 OpenSSL/v1.0.2o-9 libpng/v1.6.34-9 sqlite/v3.15.0-2 libffi/v3.2.1-2 FreeType/v2.10.1-8 Python/v3.6.10-12 Python-modules/1.0-16 boost/v1.75.0-13 ZeroMQ/v4.3.3-6 ofi/v1.7.1-8 asio/v1.19.1-2 asiofi/v0.5.1-2 DDS/3.5.16-5 FairMQ/v1.4.40-4\n    protobuf/v3.14.0-9 c-ares/v1.17.1-5 re2/2019-09-01-11 grpc/v1.34.0-alice2-1\nUsing the topology named drohr-workflow from the library testing/private/drohr/workflows.desc\nFound topology drohr-workflow - ['drohr-workflow:', 'O2PDPSuite', 'reco,10,10,SHMSIZE=128000000000 testing/private/drohr/my-workflow.sh']\nLoading module DataDistribution\nLoading DataDistribution/v1.0.6-2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "3680e12a4f1c5d4336a994bf259bf044d8ec029969a07f3d6bdfc3155d7f3794": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Loading module DataDistribution\nLoading DataDistribution/v1.0.6-2\n  Loading requirement: libInfoLogger/v2.1.1-5 Ppconsul/v0.2.2-5 utf8proc/v2.6.1-3 lzma/v5.2.3-6 Clang/v12.0.1-2 lz4/v1.9.3-9 arrow/v5.0.0-alice1-4 GSL/v1.16-8 libxml2/v2.9.3-8 ROOT/v6-24-02-12 FairRoot/v18.4.2-7 Vc/1.4.1-11 Monitoring/v3.8.7-4 Configuration/v2.6.2-4 Common-O2/v1.6.0-13 ms_gsl/3.1.0-5 GLFW/3.3.2-10 libuv/v1.40.0-10\n    DebugGUI/v0.5.6-6 libjalienO2/0.1.3-5 FFTW3/v3.3.9-6 O2/nightly-20210831-0930-1\nLoading module QualityControl\nLoading QualityControl/v1.27.0-1\n  Loading requirement: Control-OCCPlugin/v0.26.3-1 VecGeom/89a05d148cc708d4efc2e7b0eb6e2118d2610057-40\nAdding reconstruction workflow ( 10 - 10 nodes): SHMSIZE=128000000000 testing/private/drohr/my-workflow.sh\nRunning DPL command SHMSIZE=128000000000 testing/private/drohr/my-workflow.sh | grep -v \"^\\[INFO\" > /tmp/o2_workflowmfld0a0n/wf2.dds && [ `grep \"^\\[\" /tmp/o2_workflowmfld0a0n/wf2.dds | wc -l` == 0 ]\nCreating reconstruction collection...",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "4491bca2d869b702edeed97fff604debaea5832cae8ba6ec287e22cfc5b280b4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Creating reconstruction collection...\nA new DDS topology has been successfully created and saved to the file \"/home/drohr/gen_topo/test/output.xml\"\nThe DDS topology named \"topology\" was successfully opened from the file \"/home/drohr/gen_topo/test/output.xml\"\nCompleted\n[drohr@epn245 test]$ cat $HOME/gen_topo_output.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n[...]\n</topology>\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "b0f350fb4cae607b0307ade8b94d0131592b615a425dcdeccf1839b830dddb0c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "For reference, here is the creation of the XML for the full synchronous processing workflow:\n```\n[drohr@epn245 test]$ cat run.sh\n#!/bin/bash\n\nexport DDMODE=processing                                             # DataDistribution mode - possible options include: processing, disk, processing-disk, or discard\n\n# Use these settings to fetch the Workflow Repository using a hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch O2DPG repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # Git hash to fetch\n\n# Use these settings to specify a path to the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Specify path to O2DPG repository\nexport GEN_TOPO_SOURCE=/home/drohr/O2DPG/DATA                        # Path to O2DPG repository\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "8d5ce1a33e3481437eca35cc5a609f4c9b747314124d872c49ff8e67ac2cb921": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=production/production.desc              # File containing the topology description to load\nexport GEN_TOPO_WORKFLOW_NAME=synchronous-workflow                   # Name of the workflow defined in the topology description file\nexport WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: List of detectors to perform reconstruction on (separated by commas)\nexport WORKFLOW_DETECTORS_QC=                                        # Optional parameter for the workflow: List of detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter for the workflow: List of detectors to run calibration for\nexport WORKFLOW_PARAMETERS=EVENT_DISPLAY,CTF,GPU                     # Additional parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes to be used (default value is set in the description library file)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "059b0c99707fdbc90dda9d53591f22040c82c3fd1d5413eae5d04fa9cfab1d03": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    SET NHBPERTF=256                                                      # Number of HBF per TF\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "a0381647da00a3ca2e59a5b96caa57acf3f094e82f6a323c20470e07e2464f8c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo_output.xml\n[drohr@epn245 test]$ ./run.sh\nLoading ODC/0.36-1\n  Loading requirement: BASE/1.0 GCC-Toolchain/v10.2.0-alice2-3 fmt/7.1.0-10 FairLogger/v1.9.1-7 zlib/v1.2.8-8 OpenSSL/v1.0.2o-9 libpng/v1.6.34-9 sqlite/v3.15.0-2 libffi/v3.2.1-2 FreeType/v2.10.1-8 Python/v3.6.10-12 Python-modules/1.0-16 boost/v1.75.0-13 ZeroMQ/v4.3.3-6 ofi/v1.7.1-8 asio/v1.19.1-2 asiofi/v0.5.1-2 DDS/3.5.16-5 FairMQ/v1.4.40-4\n    protobuf/v3.14.0-9 c-ares/v1.17.1-5 re2/2019-09-01-11 grpc/v1.34.0-alice2-1\nUsing a synchronous workflow from the library defined in production/production.desc",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "d481792aee980755aa98f42a2520f587270a192fa9d2bd69e683e11fd0ec4372": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Using topology synchronous-workflow as specified in library production/production.desc\nDetected topology synchronous-workflow - ['synchronous-workflow:', 'O2PDPSuite', 'reco,128,128,EXTINPUT=1 SYNCMODE=1 NUMAGPUIDS=1 NUMAID=0 SHMSIZE=128000000000 EPNPIPELINES=1 SHMTHROW=0 SEVERITY=warning production/full-system-test/dpl-workflow_local.sh', 'reco,128,128,EXTINPUT=1 SYNCMODE=1 NUMAGPUIDS=1 NUMAID=1 SHMSIZE=128000000000 EPNPIPELINES=1 SHMTHROW=0 SEVERITY=warning production/full-system-test/dpl-workflow_local.sh']\nLoaded module DataDistribution\nLoaded DataDistribution/v1.0.6-2\n  Loaded dependencies: libInfoLogger/v2.1.1-5 Ppconsul/v0.2.2-5 utf8proc/v2.6.1-3 lzma/v5.2.3-6 Clang/v12.0.1-2 lz4/v1.9.3-9 arrow/v5.0.0-alice1-4 GSL/v1.16-8 libxml2/v2.9.3-8 ROOT/v6-24-02-12 FairRoot/v18.4.2-7 Vc/1.4.1-11 Monitoring/v3.8.7-4 Configuration/v2.6.2-4 Common-O2/v1.6.0-13 ms_gsl/3.1.0-5 GLFW/3.3.2-10 libuv/v1.40.0-10\n    DebugGUI/v0.5.6-6 libjalienO2/0.1.3-5 FFTW3/v3.3.9-6 O2/nightly-20210831-0930-1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "fcad4bc8e3f5ef58925a171151b0500ae6e8577977caf4307c9328a047aa7ae1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    DebugGUI/v0.5.6-6 libjalienO2/0.1.3-5 FFTW3/v3.3.9-6 O2/nightly-20210831-0930-1\nLoading module QualityControl\nLoading QualityControl/v1.27.0-1\n  Loading requirement: Control-OCCPlugin/v0.26.3-1 VecGeom/89a05d148cc708d4efc2e7b0eb6e2118d2610057-40\nAdding reconstruction workflow with 128 nodes (range 128 - 128): EXTINPUT=1 SYNCMODE=1 NUMAGPUIDS=1 NUMAID=0 SHMSIZE=128000000000 EPNPIPELINES=1 SHMTHROW=0 SEVERITY=warning, running from production/full-system-test/dpl-workflow_local.sh\nRunning DPL command: EXTINPUT=1 SYNCMODE=1 NUMAGPUIDS=1 NUMAID=0 SHMSIZE=128000000000 EPNPIPELINES=1 SHMTHROW=0 SEVERITY=warning production/full-system-test/dpl-workflow_local.sh | grep -v \"^\\[INFO\" > /tmp/o2_workflowkxkzei9w/wf2.dds && [ `grep \"^\\[\" /tmp/o2_workflowkxkzei9w/wf2.dds | wc -l` == 0 ]\nAdding reconstruction workflow with 128 nodes (range 128 - 128): EXTINPUT=1 SYNCMODE=1 NUMAGPUIDS=1 NUMAID=1 SHMSIZE=128000000000 EPNPIPELINES=1 SHMTHROW=0 SEVERITY=warning, running from production/full-system-test/dpl-workflow_local.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "594aa27b5e86a0e51103c431d1970e4e245c886381f0e3a743e0fcdb710c6435": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Running DPL command with settings EXTINPUT=1, SYNCMODE=1, NUMAGPUIDS=1, NUMAID=1, SHMSIZE=128000000000, EPNPIPELINES=1, SHMTHROW=0, SEVERITY=warning, and executing the script production/full-system-test/dpl-workflow_local.sh, then filtering out lines starting with \"[INFO\" with grep, redirecting the output to /tmp/o2_workflowkxkzei9w/wf3.dds, and ensuring no lines starting with \"[\" are present in the file.\nCreating reconstruction collection...\nA new DDS topology has been successfully created and saved to \"/home/drohr/gen_topo/test/output.xml\"\nThe DDS topology \"topology\" has been successfully opened from the file \"/home/drohr/gen_topo/test/output.xml\"\nProcess completed.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "d3d8ed81ce43c977b1b431d90c67ac698f7e147e9164ada01f048cfd1facd4a2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Workflow scripts must include support for the `WORKFLOWMODE=print` option; when used, they will output the command needed to start the workflow without actually executing it.\n- The parser also accommodates `WORKFLOWMODE=print`, generating the command line in the output file. If the topology involves multiple commands, it will provide all necessary command lines.\n- The `run.sh` script, designed to mimic the AliECS GUI, also supports `WORKFLOWMODE=print`. To run it locally on your home computer, ensure you set `GEN_TOPO_RUN_HOME=1`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/README.md"
        }
    ],
    "f03605eeca4e237fc6fa275dd14f9d00503fb62dd74c4b9417341b0a1eac7a7f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Analysis Testing (aka AnalysisQC)\n\nA variety of analyses are maintained in this section. It is designed for testing purposes and **is not** intended to substitute production analysis procedures.\n\nTechnically, it comprises a small suite of tools and configurations.\n\n## Definition of Analyses",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/README.md"
        }
    ],
    "04fd492dbbd804326f52fa901891db41c4154a8b2d008e1598445a08ab556c6b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ANALYSES ARE CONFIGURED IN A GLOBAL [CONFIGURATION](../config/analysis_testing/json/analyses_config.json) FILE. HERE IS AN EXAMPLE:\n```json\n{\n    \"name\": \"EventTrackQA\",\n    \"enabled\": true,\n    \"expected_output\": [\"AnalysisResults.root\"],\n    \"valid_mc\": true,\n    \"valid_data\": true,\n    \"tasks\": [\"o2-analysis-timestamp\",\n              \"o2-analysis-track-propagation\",\n              \"o2-analysis-trackselection\",\n              \"o2-analysis-event-selection\",\n              \"o2-analysis-qa-event-track\"]\n}\n```\nIt is crucial to list the tasks from `O2Physics` in a `tasks` array, as this array will be used to build the command-line pipeline. You can specify if an analysis is valid for mc or data by setting `valid_mc` or `valid_data`. To enable your analysis, set `enabled` to `true`. Additionally, providing a concise yet descriptive `name` for the analysis is essential.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/README.md"
        }
    ],
    "9dbb8563a5ef2143fb4ba4e6883f97c08dd16c7538dea94aa568b276777ac6a3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Certainly, it is crucial to provide an analysis with a concise yet descriptive `name`.\nTo facilitate potential automated post-processing, the anticipated output must be defined in the `expected_output` list.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/README.md"
        }
    ],
    "a3b331cbb2f3476e8d9d51913c2388cf352e7fc62bab7098d1839827e991710a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Configuration for Analysis JSON\n\nIf a specific configuration for your analysis is not found, the default settings from [here](../config/analysis_testing/json/default/) will be applied.\nIt is recommended, however, to include specific configurations for your analysis to avoid conflicts with other configurations that may not meet your needs.\nThese specific configurations should be placed in a sub-directory that exactly matches the name of your analysis, as demonstrated [here](../config/analysis_testing/json/EventSelectionQA/).\nEach of these directories will contain a further sub-directory indicating the collision system. Within this, the files must be named either `analysis-testing-mc.json` or `analysis-testing-data.json`.\nPlease note that, if no specific configuration is found, the default settings are used based on the collision system and whether the data or MC is being used.\n\n## Testing an Analysis on Some AOD\n\n(Note: The second part of the original text, about testing an analysis on some AOD, seems to be a heading and not a content to paraphrase. Thus, it is not included in the paraphrased version.)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/README.md"
        }
    ],
    "e490cb1c36e5e7abb2a74fd424f7217ca7c71b04821b61374b34b20f9bec818b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Executing an Analysis on Some AOD\n\nStart by setting up the workflow to perform the analysis. This can be achieved using\n```bash\n${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py -f <path-to-aod> [--is-mc] [-a <output-directory>] [--include-disabled]\n```\nFor a list of all available options, execute\n```bash\n${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py --help\n```\nBy default, the system assumes data analysis. To specify that the analysis should be conducted on MC, include the flag `--is-mc`.\n\nThe outcomes of your analysis will be saved in `<output-directory>/<analysis-name>`. If no directory is specified, the default location is `Analysis/<analysis-name>`.\n\nIt's important to note that disabled analyses (indicated by `\"enabled\": false`, see [above](#definition-of-analyses)) won't be included in the workflow. To include them anyway, use the flag `--include-disabled`.\n\nThe workflow by default is stored in `workflow_analysis_test.json`. This can be altered by using the `-o <workflow-filename>` option.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/README.md"
        }
    ],
    "2048624411bb4c8ebe8c7f5cbb50b9f77172f9e91288954a27157b26294943b5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "No, you can start your analysis with the command:\n```bash\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow_analysis_test.json -tt Analysis_<analysis-name>\n```\nThe `-tt` option allows you to define a specific task to be executed. If omitted, all tasks within the workflow will be processed.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/README.md"
        }
    ],
    "60f31f0b1925503344e9ab3fd2244a3689878dd7b932c7ff74d7efd610c6bcbb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## AnalysisQC\n\n\"AnalysisQC\" relies on existing tools and is primarily used in MC GRID productions and data reconstruction processes. To run a specific analysis, simply add the analysis definition as described [above](#definition-of-analyses), making sure the `enabled` flag is set to `true`. Only analyses with this flag activated will be executed. Given that the defined analyses will run automatically, it's important to discuss potential runtime and resource requirements before approving any related requests or pull requests (PRs). The AnalysisQC should not significantly impact the efficiency of MC productions or data reconstruction.\n\n## Further options and possibilities\n\n### Verify Analysis Success\n\nCheck if an analysis was successful.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/README.md"
        }
    ],
    "410656981fe475af6a4ea526259f2e0e7f3dfa9c93c367569524c2bbeeb42d80": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Additional Options and Capabilities\n\nAfter you executed the analysis workflow as detailed [previously](#testing-an-analysis-on-some-aod), you can verify its technical success (excluding any physics output validations). To perform this check, run:\n```bash\n${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_config.py validate-output --tasks <analysis-name1> [<analysis-name2> [...]] [-d <output-directory>]\n```\nThis command checks if the analysis completed successfully and ensures the expected outputs are present. By default, the output directory is `Analysis`, but you can specify a different directory using the `-d <output-directory>` option.\n\nFor more sub-commands and options, use:\n```bash\n${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_config.py --help # OR\n${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_config.py <sub-command> --help\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/README.md"
        }
    ],
    "e3394ad90bdce99b3ee7b33a135848338a6868e5d7d7caa6682a0e32000ce1fc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# General\n\nThis directory includes scripts/files for setting up, configuring, and executing ALICE Run3 Monte Carlo production workflows.\nKey files include\n\n* `o2dpg_sim_workflow.py` -- sets up a Monte Carlo workflow with dependent tasks. The primary output is a file `workflow.json` that describes the task graph to be run.\n\n* `o2_dpg_workflow_runner.py` -- runs the tasks specified in the workflow file.\n\n\n# Workflow management\n\nThe tool `$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py` offers functionalities to manage workflow files.\n\n## General help\n\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py [sub-command] --help\n```\ndisplays the available sub-commands and provides a detailed help message for each one.\n\n\n## Create a new workflow file\n\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py create my_workflow\n```\ngenerates a new file `my_workflow.json` (the file extension `.json` can be omitted in the command and will be added automatically)\n\n## Add task skeletons to a workflow file",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/README.md"
        }
    ],
    "89f5da9256c2f89ee36266404c6a755a7368047358d78451b042d9322501212d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Incorporate task blueprints into a workflow script\n\nTo incorporate new task blueprints into a workflow, use the following command:\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py create my_workflow --add-task task1 [task2 [...]]\n```\n\nThe necessary `${O2_ROOT}/share/scripts/jobutils.sh; taskwrapper` is appended automatically to the command.\n\n## Adjust the count of worker processes (when using a relative worker count)\n\nTo adjust the number of worker processes, you can use the command:\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py nworkers my_workflow 9\n```\n\nIn this instance, it specifies the count as 9 workers.\n\n## Combine two workflow scripts\n\nTo combine two workflow scripts, execute:\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py merge workflow1 workflow2 [-o workflow_merged]\n```\n\nIf an output filename is not specified, the default will be `workflow_merged`. Following the merge, the worker count can be adjusted accordingly.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/README.md"
        }
    ],
    "066dbefbf7a714f8c88cbf77f1752dda11a5ec31d857bad42acc00ed0a2d9436": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Review workflow\n\nCurrently, this feature is limited, but it is planned to enhance it with additional features.\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py inspect my_workflow --summary\n```\nprovides a concise summary of `my_workflow`, and\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py inspect my_workflow --check\n```\nexecutes a quick sanity check, such as verifying that no task names are duplicated and all dependencies are present.\n\n## Adjusting a single task\nYou can modify a task directly from the command line without altering the `JSON` file. To update the dependent tasks, for example, use\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py modify --needs dep_task_1 [dep_task_2 [...]]\n```\nFor a complete list of options, type\n```bash\n$O2DPG_ROOT/MC/bin/o2dpg-workflow-tools.py modify --help\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/README.md"
        }
    ],
    "99d9af94cc08f711df7c3dca03cd8c1f8651bcf9df9b2176d57b167e710f31c7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This is the documentation for the `o2_dpg_workflow_runner.py` tool.\n\n**This document reflects preliminary ideas and is subject to change and adaptation.**\n\n# Purpose\n\nThe tool is designed for executing O2 Data Processing Graph (DPG) workflows under resource constraints, potentially scheduling tasks in parallel. In essence, it can handle any directed acyclic graph (DAG) workflow, not just DPG ones. The focus is on **how** tasks are executed, rather than **what** is executed or how it is configured.\n\n# More Detailed Description\n\nThe tool offers features typical of a data/task pipelining environment using a DAG approach. It distinguishes between workflow setup and execution, enabling optimization during runtime. While it draws inspiration from similar concepts in ALICE alibuild and the ALICE Data Processing Layer (DPL), there are notable differences.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/WorkflowRunner.md"
        }
    ],
    "fe77ba132b9516377676bc597892f98ac00711c0a4afae8beb2911ae33ed3186": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "* enable parallel task scheduling\n* ensure resource awareness (e.g., prevent scheduling two memory-intensive tasks simultaneously)\n* support scheduling a variety of tasks, including executables, bash scripts, ROOT macros, and DPL workflows.\n\nCommon workflows managed by this tool include intricate bash scripts with interconnected parts, alongside a combination of DPL workflows, transport simulations, quality assurance steps, file operations, and validation procedures.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/WorkflowRunner.md"
        }
    ],
    "9a5366774717671e9f15681d8cf191b94990364345f7a546cf0db726f9c9c0b7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The objectives of the tool include:\n\n- automatic task parallelization (both within and across timeframes)\n- scalability from running on nodes with few cores to large HPC cores (achieved through automatic parallelism of timeframes)\n- capabilities for restarting tasks in case of failures\n- skipping tasks that have already been completed when the input remains unchanged\n- reprocessing only the affected stages when the input data differs\n- automatic skipping of tasks that are deemed irrelevant for the current objective\n- tracking of file provenance and cleanup of intermediate products\n- the aspiration of automatically fusing or pipelining DPL workflows (e.g., from TPC digitization to TPC reconstruction) to eliminate the need for intermediate files stored on disc\n\n# Workflow specification\n\nThe tool executes workflows defined in JSON format. The details of this format are still under development. Currently, it adheres to the following structure:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/WorkflowRunner.md"
        }
    ],
    "e7b18c70dd75ce49aa1f4dd762cc56929a0f4c2f978c5447d9e956248b3b8d38": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\n{\n  \"stages\": [\n    {\n      \"name\": \"task1\",\n      \"cmd\": \"o2-sim-serial -n 1 -m PIPE ITS\",\n      \"needs\": [],\n      \"resources\": {\n        \"cpu\": -1,\n        \"mem\": -1\n      },\n      \"timeframe\": 1,\n      \"labels\": [ \"MC\" ],\n      \"cwd\": \"tf1\"\n    },\n    {\n      \"name\": \"task2\",\n      \"env\": { \"MY_ENV\": \"1\" },\n      \"cmd\": \"o2-sim-digitizer-workflow\",\n      \"needs\": [ \"task1\" ],\n      \"resources\": {\n        \"cpu\": -1,\n        \"mem\": -1,\n      },\n      \"timeframe\": 1,\n      \"labels\": [ \"DIGI\", \"ITS\" ],\n      \"cwd\": \"tf1\",\n      \"semaphore\" : \"sem1\"\n    }]\n  \"comments\" : \"A DPG MC workflow for production FOO\"\n}\n```\nIn this workflow, two tasks, `task1` and `task2`, are defined. `task1` runs a basic MC transport simulation, while `task2` performs a digitization process. `task2` depends on the successful completion of `task1`, as indicated by the `needs` list.\n\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/WorkflowRunner.md"
        }
    ],
    "b2c20853f818e82101e0d84b7adcc346632204b360cb15b7b97970e72e45a94a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "FURTHER KEYS ARE DEFINED AS FOLLOWS:\n| field | description |\n| ----- | ----------- |\n| `resources` | estimated resource usage, expressed as 250 for 2.5 CPUs and in MB for maximum memory; used in scheduling; -1 indicates unknown or unspecified. |\n| `timeframe` | timeframe index, or -1 if unrelated to any timeframe; may affect execution order (prefer finish timeframe). |\n| `cwd` | the working directory for task execution. |\n| `label` | a list of labels describing the stage; useful for stage-wise execution (e.g., 'all digitization', 'ITS tasks'). |\n| `env` | local environment variables required by the task. |\n| `semaphore` | (optional) Synchronizes tasks using a named semaphore, allowing exclusion of parallel tasks with the same semaphore name. |",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/WorkflowRunner.md"
        }
    ],
    "220f8910e4c81d12e79c8f58b0d82f6295fada154d0f53a1bd5846b73566bbaf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WHILE A WORKFLOW CAN BE HAND-Written, it is more practical to generate it programmatically via scripts that are adaptable to configuration and options. An example of such a workflow, following the PWGHF embedding exercise, can be found here: [create_embedding_workflow](https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/create_embedding_workflow.py).\n\nThis create script essentially mirrors the previous `dpg_sim.sh` process.\n\nA special task named '__global_init_task__' can be set as the initial task in the workflow. The environment data from this task will be utilized by the runtime engine to pass global environment variables to all subsequent tasks within the workflow.\n\n# Workflow Example:\n\nA workflow that performs a standard background simulation, followed by two periods of signal MC, digitization, reconstruction, and AOD could be visualized as follows:\n\n![workflowgraph](./workflow.gv.png)\n\n## Example Usage",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/WorkflowRunner.md"
        }
    ],
    "a57a2deb51655027a8094a6fd5445d616a1a155cdf20bb84cffde2a77a38a633": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "![workflowgraph](./workflow.gv.png)\n\n## Example Usage\n\nCreate a simulation workflow (refer to the example in the graph), for instance using [create_embedding_workflow.py](https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/create_embedding_workflow.py):\n```\n./create_embedding_workflow.py -e TGeant3 -nb 1 -ns 10 -j 8 -tf 2 \n```\n\nExecute the workflow in a specified file:\n```\nalienv enter O2/latest O2DPG/latest\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json\n```\n\nPreview the commands that would be executed:\n```\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --dry-run\n```\n\nRun the workflow in a serialized mode (one task at a time):\n```\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -jmax 1\n```\n\nGenerate a shell script to run the workflow in a serialized manner:\n```\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --produce-script foo.sh\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/WorkflowRunner.md"
        }
    ],
    "b9e859ee69e417d3a4335fd9abafbb2b05cbe7e055f24cba25b3781de175f094": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Redo a specific task and all its related dependencies in the workflow (this is only applicable if this is not the initial run of the workflow)\n```\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --rerun-from tpcdigi_1\n```\n\nExecute the workflow for tasks that match trdtrap (regular expressions are supported)\n```\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-tasks trdtrap\n```\n\nRun all tasks marked as \"RECO\"\n```\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-stages RECO\n```\n\nRerun the workflow until AOD, excluding tasks that have already been completed (task skipping is the default behavior)\n```\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-stages AOD\n```\n\n# To-Do / Desired Feature List\n\n* manage environment and environment variables\n* optimize task skipping directly within the runner rather than in the taskwrapper (for performance improvements)\n* enhance rerun functionality to work with labels as well (--rerun-from RAW)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/WorkflowRunner.md"
        }
    ],
    "21a492d81023ca057c669f716b57612b776c8df0e1bf747282414705188aacd2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "A straightforward list of desired or planned features and developments.\n\n# DPG Simulation Workflow:\n\n- [ ] incorporate QED background processing (essential for ITS, FT0, etc.)\n- [ ] ensure the interaction rate (for digitization) is based on the collision system\n- [ ] provide official markdown documentation detailing the simulation workflow",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/doc/MC_TODO.md"
        }
    ],
    "3952458a5323cb2937cb580026c5fa729302b8b2cfd1c94ef79f85b2d07f6bd5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This folder holds scripts and functions for gathering, specifying, and uploading CCDB metadata objects related to (official) MC productions.\n\nSuch metadata can be accessed at later stages, like analysis, to facilitate additional data processing.\n\nTODO:\n\n- Add cycle number to the data\n- Include software versions (2tag or not)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/README.md"
        }
    ],
    "347255b61e4be32c1c4b36f9c09de0a79eacb9c6b79caea3d3178e02be1372ff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Script for Operating the PWG-LF MC Injector\n\nA straightforward script designed to operate the PWG-LF MC injector.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/README.md"
        }
    ],
    "582840ab586ca5228bfbc5f1ae26a36a60efeb397378c165d1647b6afb8e1a55": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The configuration file is located in the ini directory: [O2DPG/MC/config/PWGLF/](O2DPG/MC/config/PWGLF/)\n - ini/***.ini: configuration file for the MC injector\n - pythia8/generator/***.gun: configuration file for the Pythia8 gun\n - pythia8/generator/***.cfg: configuration file for the Pythia8 generator (custom decay table if needed)\n## Usage\n```\ncd {O2DPG_ROOT}/MC/run/PWGLF\n./runLFInjector.sh {O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFDeTrHe_pp.ini # For nuclei injection\n./runLFInjector.sh {O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLF_Resonances_pp.ini # For resonance injection\n```\n## Configuration\nThe following variables can be customized from the outside:\n - `NWORKERS`: number of workers (default 8)\n - `MODULES`: modules to run (default \"--skipModules ZDC\")\n - `SIMENGINE`: simulation engine (default TGeant4)\n - `NSIGEVENTS`: number of signal events (default 1)\n - `NBKGEVENTS`: number of background events (default 1)\n - `NTIMEFRAMES`: number of time frames (default 1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/README.md"
        }
    ],
    "4459f7be92a1c6855234208cdb8a0204b927cde2a17c820586ae8b4701b07407": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `NTIMEFRAMES`: the count of time frames (default is 1)\n- `INTRATE`: interaction frequency (default is 50000)\n- `SYSTEM`: type of collision system (default is pp)\n- `ENERGY`: collision energy level (default is 900)\n- `CFGINIFILE`: file path for the ini configuration (example: ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFDeTrHe_pp.ini)\n- `SPLITID`: split identifier (default is \"\")\n- `O2_SIM_WORKFLOW`: path to the simulation workflow script (default is ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py)\n- `O2_SIM_WORKFLOW_RUNNER`: path to the workflow runner script (default is ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py)\nExample:\n```\nexport NWORKERS=4\nexport NSIGEVENTS=10\nexport SIMENGINE=TGeant3\n./runLFInjector.sh ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFDeTrHe_pp.ini\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/README.md"
        }
    ],
    "9fd987098fe6defa9a8a32e2e237afc9b48ca508be2b9f0c1eeed744121b0108": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Simulation examples\n\n## Execute a simulation workflow\n\nThe script [O2DPG_pp_minbias.sh](O2DPG_pp_minbias.sh) includes four stages:\n1. constructing the simulation workflow,\n1. running the workflow through the AOD stage,\n1. performing QC checks (optional, if desired),\n1. conducting test analyses (optional, if desired).\n\nTo run the script (including QC checks and test analyses), use the command:\n```bash\nDOQC=1 DOANALYSIS=1 ${O2DPG_ROOT}/MC/run/examples/O2DPG_pp_minbias.sh\n```\n\nYou can also adjust the memory and CPU usage settings. For example, you can add:\n* `MEMLIMIT=12000` to set the memory limit to 12,000 MB,\n* `CPULIMIT=8` to specify the number of CPUs to use as 8,\nto the execution command.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/README.md"
        }
    ],
    "8e1a225842323a590a5b0591068ea075df3322fa6ecd3a5af166004804ae9794": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configurations for ALICE3 Hyperloop Studies\nThis folder includes configurations utilized for real-time ALICE3 investigations concerning Hyperloop.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/ALICE3/README.md"
        }
    ],
    "1fb4b4aa6c1219ad6c2255bf6df59caa7508aaf78d032dad38dcc5b77d76d8e0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# 📦 Fast Lookup and Interpolation System for ROOT Trees\n\nThis repository includes ROOT macros for quickly accessing and interpolating values from TTrees, utilizing:\n\n- `treeFastCache1D.C`: A 1D cache with nearest-neighbor lookup\n- `treeFastCacheND.C`: An ND cache with exact matches in N–1 dimensions and nearest-neighbor in 1 dimension\n\nThese macros are tailored for real-time analysis with `TTree::Draw`, such as QA plots, calibration overlays, or smoothed time series.\n\n---\n\n## 🔹 `treeFastCache1D.C`\n\n### ✅ Features\n\n- Registers 1D lookup maps from TTrees\n- Implements nearest-neighbor lookup using `std::map<double, float>`\n- Supports registration by ID or string name\n- Enables fast evaluation during `TTree::Draw`\n- Integrates with aliases for interactive sessions\n\n### 🧪 Example\n\n```cpp\nTTree* tree = ...;\nint mapID = registerMap1DByName(\"dcar_vs_time\", \"time\", \"dcar_value\", tree, \"subentry==127\");\n\ntree->SetAlias(\"dcar_smooth\", (\"getNearest1D(time,\" + std::to_string(mapID) + \")\").c_str());\ntree->Draw(\"dcar_value:dcar_smooth\", \"indexType==1\", \"colz\", 10000);\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/READMEtreeFastCache.md"
        }
    ],
    "3c7b2cac3cffd1464072558641fd92b0d7c632ff4115f50269a4adb81b082db6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\n\n## 🔸 `treeFastCacheND.C`\n\n### ✅ Features\n\n- ND caching that:\n  - Offers **exact match** in N–1 dimensions\n  - Provides **nearest-neighbor** lookup in 1 dimension (e.g., `time`)\n- Employs full `double` precision for all keys\n- Supports `TTree::Draw` via aliases\n- Registers by name using a hashed map ID\n- Features a variadic interface for direct application\n\n### 🧪 Example: Time Series\n\n```cpp\nTTree* tree = ...;\nint mapID = registerMapND(\"dcar_vs_time\", tree, {\"subentry\"}, \"time\", \"mTSITSTPC.mDCAr_A_NTracks_median\", \"1\");\nsetNearestNDAlias(tree, \"dcar_smooth\", \"dcar_vs_time\", \"time\", {\"subentry\"});\n\ntree->Draw(\"mTSITSTPC.mDCAr_A_NTracks_median:dcar_smooth\", \"indexType==1\", \"colz\", 10000);\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/READMEtreeFastCache.md"
        }
    ],
    "0d06d4ec74c6e80a4b3b974d192364e3a3a118c45645c6e593962adf4cf305e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\n\n### 🖊️ Parameters for `registerMapND`\n```cpp\nint registerMapND(\n  const std::string& uniqueName,       // Unique identifier for the map\n  TTree* tree,                   // Source tree\n  const std::vector<std::string>& exactDimNames, // Exact coordinate names\n  const std::string& nearestDimName,             // Nearest coordinate dimension (e.g., time)\n  const std::string& valueVariable,               // Variable to interpolate\n  const std::string& treeSelection               // Selection criteria for the tree\n);\n```\n\n### 🖊️ Parameters for `setNearestNDAlias`\n```cpp\nvoid setNearestNDAlias(\n  TTree* targetTree,                          // Target tree for the alias\n  const std::string& aliasName,        // Name of the alias to be created\n  const std::string& registeredMapName,          // Name used in registration\n  const std::string& nearestCoordinateExpression, // Expression for nearest match\n  const std::vector<std::string>& exactCoordinateExpressions // Expressions for exact matches\n);\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/READMEtreeFastCache.md"
        }
    ],
    "8e7494de1c269f270f4d3c439d4ec220c14759ebe5d1cc3ea350c11cd3a01220": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### ⚡️ Alternative: Direct expression\n```cpp\ntree->Draw(\"val:getNearestND(time,mapID,subentry)\", ...);\n```\n\n---\n\n## 📊 Internal Storage\n\n### 1D:\n```cpp\nstd::map<int, std::map<double, float>> registeredMaps;\nstd::map<std::string, int> mapIDByName;\n```\n\n### ND:\n```cpp\nstd::map<int, std::map<std::vector<double>, std::map<double, double>>> ndCaches;\nstd::map<std::string, int> ndIDByName;\n```\n\n---\n\n## 📌 Best Practices\n\n- Utilize aliases to streamline `TTree::Draw` expressions\n- Opt for double precision to ensure stability in nearest neighbor searches\n- Store maps using string names for easier re-registration\n- Opt for `setNearestNDAlias()` over direct `getNearestND(...)` for better readability\n\n---\n\n## 📤 Future Ideas\n\n- Incorporate optional interpolation methods (linear, spline)\n- Develop strategies for handling unmatched keys gracefully\n- Introduce caching diagnostics and summary statistics\n- Create a C++ class wrapper for improved lifecycle management and reusability\n\n---\n\n## 📜 License\n\nDesigned for use in internal physics analyses. No warranty is provided.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/READMEtreeFastCache.md"
        }
    ],
    "2e69696f33428a63030c2d818a7f737c3a1f04ce9af3ea8e5b02266b3a91da67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\n\n## 📜 License\n\nMeant for internal physics studies. No guarantees are provided.\n\n---\n\nFor further information, refer to the comments and examples within `treeFastCache1D.C` and `treeFastCacheND.C`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/READMEtreeFastCache.md"
        }
    ],
    "d8e45d8ad6cd0e35f9f89a98fd386512618d8ab3af61b6c55c02aaec2e9074e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This is a lightweight custom utility designed to track file access and generate graphs depicting file production and consumption by O2DPG Monte Carlo tasks. These insights are beneficial for:\n\n(a) validating data pathways\n(b) promptly removing files as soon as they are no longer required\n\n\nIn greater detail, the key components of this directory include:\n\n* monitor_fileaccess:\n\nA tool, accessible via root, that offers reports on read and write events to files along with the involved process. Built on the efficient fanotify kernel system, the tool allows for restricted reporting to specific shells (by specifying the mother PID).\n\nThe tool is standalone and can be compiled, if necessary, by executing\n\n`g++ monitor_fileaccess.cpp -O2 -o monitor_fileaccess.exe`\n\nTo run the tool, simply use:\n\n```\nsudo MAXMOTHERPID=689584 ./monitor_fileaccess.exe | tee /tmp/fileaccess\n```\n\nThis command will monitor file events from child processes of shell 689584.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/README.md"
        }
    ],
    "4ab76c5562836b65f136588f158e52bdb0327d18069314afd19d85c42ac4b5cf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# AliECS PDP Workflow Configuration Guide.\nPlease note that this guide is specifically for the AliECS GUI; for more detailed information about the PDP workflows, refer to [this](../README.md). The PDP Workflow GUI supports two modes, which can be chosen as *panel mode*:\n- A **shifter mode** designed for operators, which includes two primary settings: the number of EPN nodes and the workflow or workflow version.\n- An **expert mode** that allows for intricate adjustments to the executed workflow. ([further details](#expert-panel))\n\nThe GUI can configure the workflow using three distinct methods: [Manual XML File Configuration](#manual-xml-file-configuration-method), [O2DPG path](#o2dpg-path-configuration-method), or [O2DPG hash / version](#o2dpg-hash-configuration-method). The chosen method can be set in the [expert panel](#expert-panel). Each of the three methods is elaborated upon below:\n\n<hr>",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "4b943acd9e09d4229f4d3dc47a79614cc9e0a22750b48d9fd2e6511f03924180": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<hr>\n\n# Standard and Detector-specific Tests.\nThe shifter panel is straightforward, offering limited options for workflow selection. Users can configure either an XML file or the O2DPG path and version. By default, it employs the production workflow from the `production/production.desc` topology library file. To use a different library or workflow name, the expert panel is necessary. Consequently, detectors must utilize the expert panel for non-standard runs.\n\n<hr>\n\n# Manual XML File Setup\nThis setup method is primarily kept for compatibility. It is currently the default due to its use in all existing saved configurations. The workflow is not dynamically generated; instead, a pre-generated workflow from the EPN farm is utilized. The image below illustrates an example of the panel:\n\n<p align=\"center\"><img src='gui_manual.png' width=80%></p>",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "16cc4cd51d4774e2521f1b6ad0ed30b1eef588e8d762cc1dbc29c16dc366d9d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<p align=\"center\"><img src='gui_manual.png' width=80%></p>\n\nThe panel includes the following settings:\n- **Topology**: The absolute path to the topology XML file located in the EPN's shared home folder.\n- **# of EPNs**: The number of EPN nodes to allocate from the *online* zone. Note that this number must correspond to the count specified in the XML file.\n\n<hr>\n\n# Configuration Method Using O2DPG Path\nThis method leverages the [O2DPG repository](../) to dynamically generate the topology, without the need for pregenerated files. It represents the \"*new*\" approach to configuring the workflow. This image illustrates an example in **shifter** mode, followed by a description of the two settings:\n\n<p align=\"center\"><img src='gui_path.png' width=80%></p>",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "2915783ffb939b9e66a89f327506c4135c8b5c5b6593654178ce9a35f7dbe5aa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<p align=\"center\"><img src='gui_path.png' width=80%></p>\n\n- **O2 Data Processing Path**: The full path on the EPN farm to the O2DPG repository to be utilized.\n- **# of EPNs**: The number of EPN nodes to allocate from the *online* zone. This is consistent with the [manual XML file](#manual-xml-file-configuration-method) scenario. Here, a workflow is generated dynamically, and thus an automatic workflow for the specified number of EPNs is created.\n\nFor all other configuration options, refer to the [expert panel](#expert-panel).\n\n<hr>",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "c598238c90cca600e5f523efacf5e9ae374c4df1d0fc61909f878635c9c17cf4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<hr>\n\n# O2DPG hash configuration method\nThis is largely the same as the [O2DPG path](#o2dpg-path-configuration-method) method, with the key difference being the specification of a repository version rather than the path to the repository on the EPN farm. This ensures correct versioning and reproducibility. Unlike the [O2DPG path](#o2dpg-path-configuration-method) method, which can generate topologies from any private O2DPG fork on the EPN farm, the **O2DPG hash** method is limited to workflows that are checked into the official [O2DPG/DATA](../) repository. The referenced version can be either a commit or a tag. Tags are used for official tagged versions of the production workflow, whereas detectors can use commit hashes for standalone runs without needing to create or wait for an official tag. This method will become the default when the workflows have stabilized and no longer change on a daily basis. In the following screenshot, the *tag* `v0.20` is selected:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "65b047f829b326af34c08a28ba601d0b877b94f00ad21e1ed8dd6d3993ccc820": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<p align=\"center\"><img src='gui_version.png' width=80%></p>\n\n- **O2 Data Processing Hash**: The specific version (*commit hash* or *tag*) found in the official O2DPG repository.\n- **# of EPNs**: The count of EPN nodes to be allocated from the *online* zone. This number is equivalent to that set in the [O2DPG path](#o2dpg-path-configuration-method) configuration.\n\nFor any other configuration options, refer to the [expert panel](#expert-panel).\n\n<hr>\n\n# Expert panel\nThe expert panel offers numerous additional configuration options for both methods of configuring the O2DPG repository. Some options are also available for the manual XML file method. This image illustrates the expert panel with default settings. Detailed descriptions of each option are provided below.\n\n<p align=\"center\"><img src='gui_expert_default.png' width=80%></p>",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "d5d576275c4eb242b5c26a19c676d2ad282120c61e49685f45fdc740505fb521": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Number of EPNs** (also viewable in shifter mode): This setting determines the default number of EPNs used for partitioning. However, it can be overridden by other settings such as **Resources** and **Number of compute nodes**. When these other settings are at their default, the **Number of EPNs** controls the exclusive number of EPNs utilized.\n- **Workflow configuration mode**: This feature enables switching between the *Manual XML file* mode, *O2DPG path* mode, and *O2DPG hash* mode.\n- **O2DPG Path** (also accessible in shifter view): When the workflow configuration mode is set to *O2DPG path*, this field becomes visible for selecting the DATA path of the O2DPG repository.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "c7106b1e2494a54bcf1c89456a5e8b4c4096c6e4ab905e787a3ace53b10d1210": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Resources** (default: `default`): The ODC resources to be utilized for the partition. If set to `default`, which is the default value, the ODC resources will be requested automatically based on the setting in *# of EPNs*. Alternatively, a manual request can be made, for example, `{\"zone\": \"online\", \"n\": \"10\"}` to request 10 nodes from the `online` zone, or `[ {\"zone\": \"online\", \"n\": \"10\"}, {\"zone\": \"calib\", \"n\": \"1\"} ]` to request 1 additional node from the `calib` zone.\n- **Data Distribution mode** (default: `physics`): By default, `physics` mode should be used. Other modes are required for specific cases. Consult the EPN experts for more details.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "ab6e63bdbe834232a7a68ff4c18b45665ec37a9684fd8c387f088199a33f8696": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **TF Builder mode** (default: `processing`): This determines the DataDistribution TfBuilder mode, with four supported options: `processing`, `processing-disk`, `discard`, and `disk`. The default setting is `processing`. For `processing-disk`, which includes raw TF storage, the `production/no-processing.desc` topology library file and `no-processing` workflow name are required. \n- **discard**: TfBuilder creates the time frame on the EPN but immediately discards it without storing or further processing.\n- **disk**: The raw time frame is saved to disk, with no additional processing.\n- **processing**: Time frames are constructed and forwarded to DPL for processing. The raw time frame is not saved. The CTF may be stored based on the DPL workflow configuration (refer to *Workflow parameters*).\n- **processing-disk**: This mode combines `disk` and `processing`: Time frames are built, raw TFs are stored to disk, and DPL processing is active.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "3a1a552040329ae8a2fd6d2af9fb071cda547a2daf16793d62d8010dfdbe7d3e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Topology description library file** (default: `production/production.desc`): Chooses the file in the DATA path of the O2DPG repository that contains the topology description for the partition. By default, the GUI employs the standard production workflow. For detector standalone tests, detectors can either opt for their own library files or continue with the default global workflow if it includes all the necessary processes. \n\n- **Workflow name** (default: `synchronous-workflow-1numa`): Determines the workflow name to be utilized within the topology library file. For more details, refer to [here](../README.md). Two default global workflows are provided:\n  - `synchronous-workflow-1numa`: The standard production workflow that uses 4 GPUs and operates within a single NUMA domain on the EPN. Although it offers less processing power, its faster startup time makes it the current default.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "dac3006d42db8e71aa5e497426b1b8743baf4ada88a2e6a688cd99a01bf884ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `synchronous-workflow`: Utilizes all 8 GPUs and both NUMA domains of the EPN for production workflow. Offers maximum processing power but suffers from a notably extended start-of-run time, which is why it’s not enabled by default at present. It will be required for Pb-Pb runs.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "9cd57170f6b5a506780cbdab5c1f8168ad79efafe11507a0556ea2ccf73bc6e5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Detector list (Global)**: A comma-separated list of detectors utilized in the DPL workflow for processing. If set to `default`, the list is automatically generated by AliECS based on the detectors in the partition. Should the list include detectors not present in the partition, synchronous reconstruction for these detectors will initiate but will only process empty dummy data, suitable for testing purposes. If the list has fewer detectors than those in the partition, processing for the missing detectors will be entirely disabled. When the *TF Builder mode* is configured as `disk` or `processing-disk`, raw TFs for these detectors will still be stored, but they will not be included in the CTF. The term `ALL` can denote all ALICE detectors, including those outside the partition.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "2f542a2d15751bc3d13879223ddd961ea04008cff64bd562a6bf8b8dda493558": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Detector list (QC)**: A comma-separated list of detectors to run quality control checks for, if the workflow parameter `QC` is activated (refer to documentation for more details). The keywords `default` and `ALL` function identically to those in *Detector list (Global)*. A detector not included in *Detector list (Global)* will not undergo any processing and consequently no EPN quality control, even if it is listed here.\n- **Detector list (Calibration)**: A comma-separated list of detectors to run calibration for, if the workflow parameter `CALIB` is activated (refer to documentation for more details). It functions in exactly the same way as *Detector list (QC)*.\n- **Workflow parameters**: A comma-separated list of workflow parameters. These parameters generally enable specific features within the workflow but can also represent special options. Currently, the following parameters are available:\n  - `QC`: Enable EPN quality control for the detectors listed in *Detector list (QC)*.\n  - `CALIB`: Enable calibration for the detectors listed in *Detector list (Calibration)*.\n  - `GPU`: Perform TPC reconstruction on the GPU.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "298a29438eb95497164b44f9b5649886e1be5b48c5562ea2fbe23b5a2721103b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `GPU`: Carry out the TPC reconstruction on the GPU.\n  - `CTF`: Save the CTF. By default, the reconstruction process will perform CTF encoding. However, CTF encoding can be turned off by customizing the settings in the *EXTRA ENV variables* option (refer to the documentation below). To test CTF creation without saving the CTF, remove this parameter.\n  - `EVENT_DISPLAY`: Generate JSONs for the event display.\n- **# of compute nodes**: The count of compute nodes utilized for DPL processing. If `-1` is specified, the number of EPNs is used. If `0` is specified, the default number defined in the workflow within the topology library file is applied. This setting is required only for specific tests.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "63879c883988710a711e10aac3fa38691774b085076f69910f22134e1847617f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Raw decoder multiplicity factor**: If the processing on the EPN is too slow and there is still available CPU capacity on the EPN nodes, this option (and the following two: *CTF encoder multiplicity factor* and *Reconstruction process multiplicity factor*) can increase the number of parallel raw decoder processes running on the EPN. The default number is scaled by the provided factor. It is worth noting that the workflows also support more detailed multiplicity settings (described [here](../production/README.md)), which can be configured via the *Extra ENV variables* option below.\n- **CTF encoder multiplicity factor**: See *Raw decoder multiplicity factor*. This setting influences all CTF encoders rather than the raw decoders.\n- **Reconstruction process multiplicity factor**: See *Raw decoder multiplicity factor*. This setting impacts all other reconstruction processes, distinct from CTF encoders or raw decoders.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "a6c6bab88c0158bf0d609dc56c85ceca3f6deece3c1d79c3be29feaece789202": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Additional ENV variables**: This free text field allows for providing extra custom options to the DPL workflow. The syntax is `OPTION_NAME='OPTION_VALUE'`, with optional single quotes if needed, and multiple options can be specified in a space-separated format. For a complete list of available options, refer to [here](../production/README.md). An example includes `WORKFLOW_DETECTORS_MATCHING='ITS-TPC,ITS-TPC-TRD' WORKFLOW_DETECTORS_FLP_PROCESSING=TOF WORKFLOW_DETECTORS_CTF=NONE`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "42c2e2c4d904f64bec90e8bb11f7738ceea8bc0be1ee6f2307bea4d4aef890f7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Clear workflow cache**: The O2DPG workflow system caches XML files for auto-generated workflows when the configuration mode is set to *O2DPG hash*. If the same configuration is used, it reuses the cached XML, which speeds up the run start. This is feasible only if the configuration is set to *O2DPG hash*, as the topology is fully versioned and uniquely identified by the triplet [O2DPG hash, Workflow name, Topology library file]. For *O2DPG path*, the repository is not versioned and the topology is not cached. This option clears the cache; currently, it is required if the QC JSON files have been modified, as they are not yet versioned in consul.\n- **Determine beam type**: The beam type is passed to the reconstruction. Eventually, this should be set automatically by AliECS, but for now, it must be specified here.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "5615f2553b62aed25657929bde9b440963b065f8ac5cad5525059cde078748f2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- **Heartbeat Frames per Time Frame**: The count of heartbeat frames within each time frame. It needs to align with the detector settings or CTP configuration. Ideally, this should be configured automatically by AliECS, but for now, it must be specified manually here.\n- **EPN Partition Cleanup**: Remove outdated EPN or ODC partitions. Consult AliECS or ODC specialists for more information.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "afe349a55176c641ae101c1784b478611a5b9b447afb37cd51b1b6e66ce8a799": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The example below illustrates a screenshot of the expert panel with certain custom options highlighted.\n\n<p align=\"center\"><img src='gui_expert_example.png' width=80%></p>\n\n# Additional Environment Variables\nThis part lists the pertinent `Extra ENV Variables` to be utilized in the AliECS GUI. If multiple settings are required for the `CONFIG_EXTRA_PROCESS_XXX` or `ARGS_EXTRA_PROCESS_XXX` of the same workflow `XXX`, they should be combined using `;` or a space.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "8034464517352401e39731f7d9e86cf17b8868f7ab75238ed9e0983403641483": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=GPU_proc.debugLevel=1;` : Activate the GPU serialization fix to prevent random crashes.\n- `CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=TPCGasParam.DriftV=2.69;` : Set the non-default TPC VDrift for TPC tracking.\n    If the DriftV parameter is changed, it must also be configured in `CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow`, `CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow`, `CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow`, and `CONFIG_EXTRA_PROCESS_o2_trd_global_tracking`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "af36e5f4d689a9ce0c34c3292d6eb5e2171a9574aebf61720eb0742136c17d4f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2` : incorporates additional systematic errors into ITS clusters to address potential misalignment\nIf these adjustments are made, it is recommended to apply them similarly in `CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow`, `CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow`, and `CONFIG_EXTRA_PROCESS_o2_trd_global_tracking` where ITS refitting occurs.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "6269ed72e2519e1c6c583cd695b1584ea870b2be175f544e2a3196477d50c8bf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `CONFIG_EXTRA_PROCESS_o2_itsmft_stf_decoder_workflow=\"ITSTAlpideParam.roFrameLengthInBC=891;MFTAlpideParam.roFrameLengthInBC=198\"` : Configures the readout frame lengths for the ITS and MFT in terms of bunches (default values are provided). These settings can be adjusted if necessary.\n - `ARGS_EXTRA_PROCESS_o2_tpcits_match_workflow=\" --ignore-bc-check \"` : Disables the validation of the matched tracks based on the interaction bunch time (this is helpful if the timing calibration is not accurate).\n - `ITS_STROBE=\"891\"`, `MFT_STROBE=\"198\"` : Specifies the readout frame lengths for the ITS and MFT in the number of bunches (current defaults are shown).",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/aliecs_documentation/README.md"
        }
    ],
    "406c3d52cd8c227b52b338bcb87ba186791b8a89b1d3510bdc51e742f325dc73": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "For a reference on available environment variables, please consult https://github.com/AliceO2Group/AliceO2/blob/dev/prodtests/full-system-test/documentation/env-variables.md",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/README.md"
        }
    ],
    "84759886e94c6b468a3b98c4f5412fd47ba4717d205b6d52fdb56754b2b3ba30": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Production workflows\nThis section houses the production workflows for global runs, described in the file `production.desc`.\nCurrently, there are two workflows:\n- `synchronous-workflow`: the default workflow utilizing 8 GPUs and 2 NUMA domains.\n- `synchronous-workflow-1numa`: a workflow employing 4 GPUs without NUMA pinning. (Fully adequate for pp)\n\nCalibration workflows run independently are found in `standalone-calibration.desc`.\n\nFor scenarios where processing is not required, the `no-processing` workflow in `no-processing.desc` should be used.\n\n# Options for dpl-workflow.sh\nFor more information on the options available for `dpl-workflow.sh`, refer to [this link](https://github.com/AliceO2Group/AliceO2/blob/dev/prodtests/full-system-test/documentation/dpl-workflow-options.md).\n\n# run-workflow-on-inputlist.sh\nThe file `O2/prodtests/full-system-test/run-workflow-on-inputlist.sh` is a utility to execute `dpl-workflow.sh` on a list of files.\nFunctionally, it acts as a wrapper that launches `dpl-workflow.sh`, and optionally the `StfBuilder` in parallel.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/README.md"
        }
    ],
    "b469676111b6054c5f23e95e289694b8e530f2a5d95799d6d66ede3096392426": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The syntax for the command is as follows:\n```\nrun-workflow-on-inputlist.sh [CTF | DD | TF] [list of files to be processed] [Timeout in seconds (optional: default is none)] [Log to stdout (optional: default is enabled)]\n```\nThe available modes are:\n- DD: Use DataDistribution / StfBuilder to read raw timeframes\n- TF: Use o2-raw-tf-reader-workflow to read raw timeframes\n- CTF: Use o2-ctf-reader-workflow to read CTFs\n\n> **NOTE:** In DD mode, processing a list of local files is not supported. For a few local files, use TF mode instead.\n\nThe second argument specifies the name of a list-file containing the files to be processed. In CTF and TF modes, a comma-separated list is also accepted, but DD mode does not support this.\n\n- (You can use `LOCAL` to fetch files from the local folder.)\n- (For adjusting the copy command, use `$INPUT_FILE_COPY_CMD`)\n\nThe third parameter is an optional timeout in seconds, after which the processing will be terminated.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/README.md"
        }
    ],
    "1d54dacc701f0f58e81080206effcce080af72947d7dfbce3654f9f3d99ff7af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The third parameter is an optional timeout in seconds, after which the processing will be halted.\n\nThe fourth parameter allows for all workflow output to be written to stdout as well.\nRegardless, the output is always logged to files named log_[date]_*.log.\n\nThe tool forwards all environment variables to `dpl-workflow.sh`, making it usable in the same manner.\n*Note* that when operating in `DD` mode, the SHM size for the StfBuilder must be specified; *NOTE* that this size should be given in MB, not bytes.\n\nAn example command line is:\n```\nEPNSYNCMODE=1 WORKFLOW_DETECTORS=TPC XrdSecSSSKT=~/.eos/my.key TFDELAY=10 NTIMEFRAMES=10 SHMSIZE=32000000000 DDSHMSIZE=32000 ~/alice/O2/prodtests/full-system-test/run-workflow-on-inputlist.sh DD file_list.txt 500 1\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/README.md"
        }
    ],
    "0f989198597684942cf1226514eb90d68a6d24837cce2ec8471824894f3e9181": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Local Quality Control Testing\nTo test a workflow with Quality Control (QC) locally, the transmission of data to remote QC mergers needs to be turned off. This can be achieved using the `QC_REDIRECT_MERGER_TO_LOCALHOST=1` option in the qc-workflow.sh script, which channels all messages intended for remote machines to `localhost`. As these channels operate in a `pub/sub` model, they are designed to be non-blocking.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/README.md"
        }
    ],
    "1acafacd6548e1aab9f53565234604a6613136fe5a7ecc9bd19befdb1949588d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This directory is intended for personal workflow tasks of users",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/README.md"
        }
    ],
    "551e62f7f4deca0bb20db45155bf59e94d5ced5eace264f2682e9acfa1457344": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nimport sys\nimport argparse\nimport importlib.util\nfrom os import environ\nfrom os.path import join\n\n# ensure O2DPG and O2 are available\nO2DPG_ROOT=environ.get('O2DPG_ROOT')\n\nif O2DPG_ROOT is None:\n    print('ERROR: O2DPG must be loaded')\n    sys.exit(1)\n\nspec = importlib.util.spec_from_file_location(\"o2dpg_release_validation\", join(O2DPG_ROOT, \"RelVal\", 'o2dpg_release_validation.py'))\no2dpg_release_validation = importlib.util.module_from_spec(spec)\nspec.loader.exec_module(o2dpg_release_validation)\nsys.modules[\"o2dpg_release_validation\"] = o2dpg_release_validation\nfrom o2dpg_release_validation import extract_and_flatten",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_overlay_plots.py"
        }
    ],
    "f9e9710c9386836199cc4b414b40d54110749e1ebd1fafc6cc8a16be4ac00fd9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    spec = importlib.util.spec_from_file_location(\"o2dpg_release_validation_plot\", join(O2DPG_ROOT, \"RelVal\", \"utils\", \"o2dpg_release_validation_plot.py\"))\no2dpg_release_validation_plot = importlib.util.module_from_spec(spec)\nspec.loader.exec_module(o2dpg_release_validation_plot)\nsys.modules[\"o2dpg_release_validation_plot\"] = o2dpg_release_validation_plot\nfrom o2dpg_release_validation_plot import plot_overlays_no_rel_val\n\n\ndef run(args):\n\n    if not args.labels:\n        args.labels = [f\"label_{i}\" for i in range(len(args.input))]\n\n    if len(args.labels) != len(args.input):\n        print(\"ERROR: The number of input files and labels must match, they are different\")\n        return 1\n\n    out_configs = []\n    ref_file = None\n    for i, (input_file, label) in enumerate(zip(args.inputs, args.labels)):",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_overlay_plots.py"
        }
    ],
    "924420fff64a53334f96bf1e5bb98aa50a21a68fbbf22f851ede88b95f7f65fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "_, config = extract_and_flatten(input_file, args.output, label, prefix=i, reference_extracted=ref_file)\nif not config:\n    print(f\"ERROR: Issue with input file {input_file}, extraction failed\")\n    return 1\n\nif not ref_file:\n    ref_file = config[\"path\"]\n\nout_configs.append(config)\n\nplot_overlays_no_rel_val(out_configs, args.output)\n\nreturn 0\n\n\ndef main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"-i\", \"--input\", nargs=\"*\", help=\"list of ROOT files\", required=True)\n    parser.add_argument(\"-o\", \"--output\", help=\"output directory\", default=\"overlayPlots\")\n    parser.add_argument(\"-l\", \"--labels\", nargs=\"*\", help=\"plot labels\")\n    return run(parser.parse_args())\n\n\nif __name__ == \"__main__\":\n    sys.exit(main())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_overlay_plots.py"
        }
    ],
    "2c8304855b8556efce77d52422f99c0770746aa4a5f5263037296343fbc8b392": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n#\n# This script enables users to compare:\n# 1. Two corresponding ROOT files that contain histograms or QC Monitoring objects\n# 2. Two corresponding simulation directories\n#\n# The RelVal suite can be executed using:\n# o2dpg_release_validation.py rel-val -i <file-or-sim-dir1> -j <file-or-sim-dir2>\n#\n\nimport sys\nimport argparse\nimport importlib.util\nfrom os import environ, makedirs, remove\nfrom os.path import join, abspath, exists, dirname, basename, isfile\nimport json\n\nimport numpy as np\n\n# Ensure that O2DPG and O2 are loaded\nO2DPG_ROOT=environ.get('O2DPG_ROOT')\n\nif O2DPG_ROOT is None:\n    print('ERROR: This requires O2DPG to be loaded')\n    sys.exit(1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "7e8329479de0acf342671b5efd1487e725f82714085cf043ee5c81627bc3194d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if O2DPG_ROOT is None:\n    print('ERROR: This requires O2DPG to be loaded')\n    sys.exit(1)\n\n\nO2DPG_ROOT = environ.get(\"O2DPG_ROOT\")\nspec = importlib.util.spec_from_file_location(\"o2dpg_release_validation_variables\", join(O2DPG_ROOT, \"RelVal\", \"utils\", 'o2dpg_release_validation_variables.py'))\no2dpg_release_validation_variables = importlib.util.module_from_spec(spec)\nspec.loader.exec_module(o2dpg_release_validation_variables)\nsys.modules[\"o2dpg_release_validation_variables\"] = o2dpg_release_validation_variables\nimport o2dpg_release_validation_variables as variables\n\nspec = importlib.util.spec_from_file_location(\"o2dpg_release_validation_utils\", join(O2DPG_ROOT, \"RelVal\", \"utils\", 'o2dpg_release_validation_utils.py'))\no2dpg_release_validation_utils = importlib.util.module_from_spec(spec)\nspec.loader.exec_module(o2dpg_release_validation_utils)\nsys.modules[\"o2dpg_release_validation_utils\"] = o2dpg_release_validation_utils\nimport o2dpg_release_validation_utils as utils",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "e4ca46962e7865dfc48b0533d1d5f73626323990fb42c56b307cb580bbbec086": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    spec = importlib.util.spec_from_file_location(\"o2dpg_release_validation_plot\", join(O2DPG_ROOT, \"RelVal\", \"utils\", \"o2dpg_release_validation_plot.py\"))\no2dpg_release_validation_plot = importlib.util.module_from_spec(spec)\nspec.loader.exec_module(o2dpg_release_validation_plot)\nsys.modules[\"o2dpg_release_validation_plot\"] = o2dpg_release_validation_plot\nfrom o2dpg_release_validation_plot import plot_pie_charts, plot_summary_grid, plot_compare_summaries, plot_overlays, plot_value_histograms\n\n\nROOT_MACRO_EXTRACT = join(O2DPG_ROOT, \"RelVal\", \"utils\", \"ExtractAndFlatten.C\")\nROOT_MACRO_RELVAL = join(O2DPG_ROOT, \"RelVal\", \"utils\", \"ReleaseValidation.C\")\nROOT_MACRO_METRICS = join(O2DPG_ROOT, \"RelVal\", \"utils\", \"ReleaseValidationMetrics.C\")\n\nfrom ROOT import gROOT\n\ngROOT.SetBatch()\n\n\n#############################################\n# Helper functions exclusively used here      #\n#############################################",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "ae4e1b7e04105f9069bd796f38a6b81de1691e314880975ec86cbbb49556cd25": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\ndef load_from_meta_json(json_path):\n    \"\"\"\n    Load a meta JSON file and return a dictionary\n    \"\"\"\n    if not exists(json_path):\n        return None\n\n    with open(json_path, \"r\") as f:\n        import json\n        data = json.load(f)\n    return data\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "a83e27cfd7be813244fce3e05952e2464d11472ebf4f0872cab8ed8503081c47": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    with open(json_path, \"r\") as f:\n        try:\n            return json.load(f)\n        except (json.decoder.JSONDecodeError, UnicodeDecodeError):\n            pass\n    return None\n\n\ndef extract_and_flatten_impl(input_filenames, target_filename, include_file_directories=None, add_if_exists=False, reference_extracted=\"\", json_extracted=\"\"):\n    \"\"\"\n    Handle the extraction of objects for comparison\n\n    These objects will be extracted (from TH1, QC objects, TTree etc.), converted to TH1, and placed into a flat ROOT file structure.\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "82cd4d8f10d059fad9f8b0ed8633128d0ed20567b8ad8733c26a82559feb9139": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ARGS:\n    input_filenames: list\n        a list of input filenames from which objects will be extracted\n    target_filename: str\n        the path to the file where the extracted objects will be saved\n    include_file_directories: iterable or \"\"\n        only include ROOT sub-directories that contain any of the specified strings\n    add_if_exists: bool (default: False)\n        if the target file already exists, update it instead of recreating it\n    reference_extracted: str\n        used for extracting TTrees, where the x-axis binning will be set according to this reference to ensure comparability\n    json_extracted: str\n        the path where the JSON file containing the details of \"what has been extracted where\" will be saved",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "ecca6c5993bb6e37b02b62bbeaad7ed1e799f954bb4a6f927b95ee1cd67402b8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Returns:\n        bool: True if successful, False otherwise.\n    \"\"\"\n    def extract_filenames_from_list(list_filename):\n        \"\"\"\n        A quick helper function to retrieve filenames listed in a specified file.\n        \"\"\"\n        collected_files = []\n        with open(list_filename, \"r\") as file:\n            for line in file:\n                line = line.strip()\n                if not line:\n                    continue\n                collected_files.append(line)\n        return collected_files\n\n    include_file_directories = \",\".join(include_file_directories) if include_file_directories else \"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "9f50362103c4df24c57f68e918414f513190716769037de7cf94bfdc476973c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the number of input_filenames is one and the first character of the first filename is \"@\":\n    # assuming that this single filename contains the paths of the actual files to be extracted\n    read_files_from = input_filenames[0][1:]\n    input_filenames = get_files_from_list(read_files_from)\n    if input_filenames is empty:\n        print(f\"ERROR: It seems that {read_files_from} does not contain any files to be extracted.\")\n        return False\n\nif the target_filename exists and add_if_exists is False:\n    # the file will be updated if it exists\n    remove(target_filename)\n\n# the ROOT macro is executed in the current working directory (cwd) and places the basename there\ncurrent_working_directory = dirname(target_filename)\ntarget_filename = basename(target_filename)\nlog_file_name = join(current_working_directory, f\"{target_filename}_extract_and_flatten.log\")\n\nprint(\"Starting file extraction\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "9669997691aef842102fd8bdc8d42c7da817f002941200e96d368b9cf88625fc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    print(\"Extraction of files\")\n\n    for f in input_filenames:\n        f = abspath(f)\n        print(f\"  {f}\")\n        cmd = f\"\\\\\\\"{f}\\\\\\\",\\\\\\\"{target_filename}\\\\\\\",\\\\\\\"{reference_extracted}\\\\\\\",\\\\\\\"{include_file_directories}\\\\\\\",\\\\\\\"{json_extracted}\\\\\\\"\"\n        cmd = f\"root -l -b -q {ROOT_MACRO_EXTRACT}{cmd}\"\n        ret = utils.run_macro(cmd, log_file_name, cwd)\n        if ret != 0:\n            print(f\"ERROR: Extracting from file {f} failed. Please check logfile {abspath(join(cwd, log_file_name))}\")\n            return False\n\n    return True\n\n\ndef extract_and_flatten(files, output, label, include_directories=None, add_if_exists=False, prefix=None, reference_extracted=\"\"):\n    \"\"\"\n    Extract from input files to a flat ROOT file\n\n    Returns the path to a meta JSON and that JSON file loaded as a dictionary\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "053338dae82395bd16565bcd8f20a896eef5d4cf73d5a5b1c746670df0398322": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if not exists(output):\n        makedirs(output)\n\n    json_out = f\"{prefix}_extracted.json\" if prefix else \"extracted.json\"\n    root_out = f\"{prefix}_extracted.root\" if prefix else \"extracted.root\"\n    json_out = abspath(join(output, json_out))\n    root_out = abspath(join(output, root_out))\n\n    if not extract_and_flatten_impl(files, root_out, include_file_directories=include_directories, add_if_exists=add_if_exists, reference_extracted=reference_extracted, json_extracted=json_out):\n        return None, None\n\n    data = None\n    with open(json_out, \"r\") as f:\n        data = json.load(f)\n\n    data[\"label\"] = label\n\n    with open(json_out, \"w\") as f:\n        json.dump(data, f, indent=2)\n\n    return json_out, data\n\n\ndef rel_val_root(d1, d2, metrics_enabled, metrics_disabled, output_dir):\n    \"\"\"\n    RelVal for 2 ROOT files, a wrapper around the ReleaseValidation.C macro\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "25007a44dee2dc7dd4a606667c1c7d9a782afa9392dbb09c44de61efc2c1425f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    Args:\n        files1: iterable\n            the first set of files to be compared\n        files2: iterable\n            the second set of files to be compared\n        add_to_previous: bool\n            determines whether extracted objects should be added to any existing objects in the file (if they exist)\n        metrics_enabled: iterable or None\n            names of metrics to be activated\n        metrics_disabled: iterable or None\n            names of metrics to be deactivated\n        label1, label2: str\n            labels for the overlay plots\n        output_dir: str\n            path to the output directory; the directory will be created if it does not already exist\n        no_extract: bool\n            if True, assumes files1 and files2 each contain a single file with pre-extracted objects. Extraction will be skipped, and the objects from these files will be directly compared.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "e001df8e533d62e5e940bc3c1a675001e482434379d14907381c3d94db3ef840": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Potential past results will not be replaced; instead, new results will be saved in a new directory (as is standard). \nReturns:\n    str or None\n        On success, returns the path to the JSON containing the computed metrics.\n        Returns None otherwise.\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "1aa30d927c5047b272a5a89385760789978b53831cbbd0052d19ff021c5eddde": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    print(\"==> Process and compare 2 sets of files <==\")\n\n    file_1 = d1[\"path\"]\n    file_2 = d2[\"path\"]\n\n    # RelVal on flattened files\n    metrics_enabled = \";\".join(metrics_enabled) if metrics_enabled else \"\"\n    metrics_disabled = \";\".join(metrics_disabled) if metrics_disabled else \"\"\n\n    command = f\"\\\\\\\"{file_1}\\\\\\\",\\\\\\\"{file_2}\\\\\\\",\\\\\\\"{metrics_enabled}\\\\\\\",\\\\\\\"{metrics_disabled}\\\\\\\"\"\n    command = f\"root -l -b -q {ROOT_MACRO_RELVAL}{command}\"\n    output_directory = abspath(output_directory)\n    log_file_rel_val = join(output_directory, \"rel_val.log\")\n    print(\"Executing RelVal on extracted objects\")\n    result = utils.run_macro(command, log_file_rel_val, cwd=output_directory)\n\n    # This is generated by the ROOT macro\n    json_path = join(output_directory, \"RelVal.json\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "42065cac87db6685acf77eef77ee4f64bcf4abbd5c416d09274d9f78af96a2ea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # Derived from the ROOT macro\n    json_path = join(output_dir, \"RelVal.json\")\n\n    if not exists(json_path) or ret > 0:\n        # An error occurred\n        print(f\"ERROR: An issue occurred while calculating metrics, the log file at {log_file_rel_val} states\")\n        with open(log_file_rel_val, \"r\") as f:\n            print(f.read())\n        return None\n\n    return json_path\n\n\ndef load_rel_val(json_path, include_patterns=None, exclude_patterns=None, enable_metrics=None, disable_metrics=None):\n    \"\"\"\n    A wrapper to generate RelVal and configure certain properties\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "3bb5483b5b0003454cc110a8258d5c16c16facf25a6e6237b7b789f7a3c29352": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\ndef initialise_evaluator(rel_val, thresholds_paths, thresholds_default, thresholds_margins, thresholds_combine, regions_paths):\n    \"\"\"\n    Wrapper function to create an evaluator\n\n    \"\"\"\n    rel_val.set_object_name_patterns(include_patterns, exclude_patterns)\n    rel_val.enable_metrics(enable_metrics)\n    rel_val.disable_metrics(disable_metrics)\n    rel_val.load((json_path,))\n    return rel_val\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "e0b31e509ab6bdd6283cbc91a810624175bc8c39dd9f78bc40aef923ecf837e5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    Parameters:\n        rel_val: RelVal\n            the RelVal object to potentially test and serves as a basis for default thresholds\n        thresholds_paths: iterable or None\n            if not None, a collection of strings representing paths to RelVal JSON files\n        thresholds_defaults: iterable of 2-tuples or None\n            set a default threshold value (tuple element 1) for a metric name (tuple element 0)\n        threshold_margins: iterable of 2-tuples or None\n            apply a margin in percentage (tuple element 1) to a threshold value of a metric name (tuple element 0)\n        thresholds_combine: str\n            either \"mean\" or \"extreme\", specifying how threshold values from thresholds_paths should be combined\n        regions_paths: iterable or None\n            if not None, a collection of strings representing paths to RelVal JSON files\n    Returns:\n        Evaluator\n    \"\"\"\n    evaluator = utils.Evaluator()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "218401c4bcf8e09c82604d8ece65b0862bd1cb252ccbc6725fdf2e9fbcaf746c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# set up for testing with mean and standard deviation\nif regions_paths:\n    regions = utils.get_paths_or_from_file(regions_paths)\n    rel_val_regions = utils.RelVal()\n    rel_val_regions.load(regions)\n    utils.initialise_regions(evaluator, rel_val_regions)\n\n# configure for threshold testing\nthresholds_default = {metric_name: float(value) for metric_name, value in thresholds_default} if thresholds_default else None\nrel_val_thresholds = None\nif thresholds_paths:\n    thresholds_margins = {metric_name: float(value) for metric_name, value in thresholds_margins} if thresholds_margins else None\n    thresholds_paths = utils.get_paths_or_from_file(thresholds_paths)\n    rel_val_thresholds = utils.RelVal()\n    rel_val_thresholds.load(thresholds_paths)\nutils.initialise_thresholds(evaluator, rel_val, rel_val_thresholds, thresholds_default, thresholds_margins, thresholds_combine)\n\nevaluator.initialise()\nreturn evaluator",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "524064f6c3fa0edac3e6979e4dd8bc3a7df16265829a50c49eeac5989312cec2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    evaluator.initialise()\n    return evaluator\n\n###################################################################\n# Functions Triggered Post Command Line Processing #\n###################################################################\n\n\ndef only_extract(args):\n    if not extract_and_flatten(args.input, args.output, None, args.label, args.reference)[0]:\n        # checking one of the return values for None\n        return 1\n    return 0\n\n\ndef rel_val(args):\n    \"\"\"\n    Entry point for ReleaseValidation\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "43b1ee062e84929c73c51749ab73519f7f9bdc7acb41e441b1b6d188befaf374": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This can be accessed via the rel-val or inspect commands.\n\"\"\"\ndef interpret_result(outcome, measure):\n    \"\"\"\n    This function evaluates a result based on the associated metric and assigns an interpretation.\n    \"\"\"\n    is_critical = not args.is_critical or measure.name in args.is_critical\n    if not measure.comparable and is_critical:\n        outcome.interpretation = variables.REL_VAL_INTERPRETATION_CRIT_NC\n        return\n    if not measure.comparable:\n        outcome.interpretation = variables.REL_VAL_INTERPRETATION_NONCRIT_NC\n        return\n    if outcome.result_flag == utils.Result.FLAG_UNKNOWN:\n        outcome.interpretation = variables.REL_VAL_INTERPRETATION_UNKNOWN\n        return\n    if outcome.result_flag == utils.Result.FLAG_PASSED:\n        outcome.interpretation = variables.REL_VAL_INTERPRETATION_GOOD\n        return\n    if outcome.result_flag == utils.Result.FLAG_FAILED and is_critical:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "f755c597f5ff7747dee1bd8dcbe90da4b51473beefe2f6b6dc20f3687518bf30": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "return\n    if result.result_flag == utils.Result.FLAG_FAILED and is_critical:\n        result.interpretation = variables.REL_VAL_INTERPRETATION_BAD\n        return\n    result.interpretation = variables.REL_VAL_INTERPRETATION_WARNING",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "381bb4ba1ef8320e10848705edc8cffc663231ecae16e00674ef839fa235a40e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not exists(args.output):\n    makedirs(args.output)\n\nneed_apply = False\nis_inspect = False\ndict_1 = None\ndict_2 = None\nif hasattr(args, \"json_path\"):\n    # this is from the inspect command\n    is_inspect = True\n    json_path = utils.get_summary_path(args.json_path)\n    annotations = None\n    include_patterns, exclude_patterns = (args.include_patterns, args.exclude_patterns)\nelse:\n    # here, new input ROOT files are provided, requiring all tests to be applied\n    need_apply = True\n    # include everything by default\n    include_patterns, exclude_patterns = (None, None)\n    if args.add:\n        print(f\"NOTE: Extracted objects will be added to existing ones if a RelVal already exists at {args.output}.\\n\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "196a7d625affe95a326a31ee54b693d2ebb3bb2ba20438f694a4eafa416fbad6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# each extraction will result in a JSON\n    json_path_1, dict_1 = extract_and_flatten(args.input1, args.output, args.labels[0], args.include_dirs, args.add, prefix=\"1\", reference_extracted=None)\n    if json_path_1 is None:\n        return 1\n    json_path_2, dict_2 = extract_and_flatten(args.input2, args.output, args.labels[1], args.include_dirs, args.add, prefix=\"2\", reference_extracted=dict_1[\"path\"])\n    if json_path_2 is None:\n        return 1\n    json_path = rel_val_root(dict_1, dict_2, args.enable_metric, args.disable_metric, args.output)\n    if json_path is None:\n        print(\"ERROR: Problem during RelVal\")\n        return 1\n    annotations = {\"json_path_1\": json_path_1,\n                   \"json_path_2\": json_path_2}\n\n# subsequently, we load and create a RelVal object\nrel_val = load_rel_val(json_path, include_patterns, exclude_patterns, args.enable_metric, args.disable_metric)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "db010082bfca7b366175539a636208f6db41de37b94cd44beaeea11cc9883dc9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if need_apply or args.use_values_as_thresholds or args.default_threshold or args.regions:\n    evaluator = initialise_evaluator(rel_val, args.use_values_as_thresholds, args.default_threshold, args.margin_threshold, args.combine_thresholds, args.regions)\n    rel_val.apply_evaluator(evaluator)\n    # assign interpretations to the results we obtained\n    rel_val.interpret(interpret_results)\n\n    def filter_on_interpretations(result):\n        # only consider results that match the user-requested flags\n        return not args.interpretations or result.interpretation in args.interpretations",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "dc6ca77e291c06d81dafce6745f08ba7e763cf1b49ae37a2e0b875bd90f88037": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Filter the results based on their interpretation, adding an additional mask when necessary to ensure that\n# object_names, metric_names, and results\n# from RelVal align with the filter function's condition\nrel_val.filter_results(filter_on_interpretations)\n# If this is from inspecting, it will include the annotations from the rel-val before, so re-write it\nrel_val.write(join(args.output, \"Summary.json\"), annotations=annotations or rel_val.annotations[0])\n\nutils.print_summary(rel_val, variables.REL_VAL_SEVERITIES, long=args.print_long)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "0a3a1fcaf35168c4e554c32410c0232141708901803361dd6bfbb78f2dbe9191": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    utils.print_summary(rel_val, variables.REL_VAL_SEVERITIES, long=args.print_long)\n\n    if not args.no_plot:\n        print(\"Proceeding to plot...\")\n        # create multiple figures for the user to review\n        plot_pie_charts(rel_val, variables.REL_VAL_SEVERITIES, variables.REL_VAL_SEVERITY_COLOR_MAP, args.output)\n        plot_compare_summaries((rel_val,), args.output)\n        plot_summary_grid(rel_val, variables.REL_VAL_SEVERITIES, variables.REL_VAL_SEVERITY_COLOR_MAP, args.output)\n        plot_value_histograms(rel_val, args.output)\n\n        if is_inspect:\n            if annotations_inspect := rel_val.annotations:\n                annotations_inspect = annotations_inspect[0]\n                dict_1 = load_from_meta_json(annotations_inspect[\"json_path_1\"])\n                dict_2 = load_from_meta_json(annotations_inspect[\"json_path_2\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "57397db4e2655e71a08d481560a8f106f8d24f7a1a98ec09b0ca1e1c88ef8513": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if dict_1 and dict_2:\n        overlay_plots_out = join(args.output, \"overlayPlots\")\n        if not exists(overlay_plots_out):\n            makedirs(overlay_plots_out)\n        plot_overlays(rel_val, dict_1, dict_2, overlay_plots_out)\n\n    return 0\n\n\ndef compare(args):\n    \"\"\"\n    Compare two RelVal outputs against each other\n    \"\"\"\n    if len(args.input1) > 1 or len(args.input2) > 1:\n        print(\"ERROR: Currently, you can only compare one RelVal output with one other RelVal output.\")\n        return 1\n\n    output_dir = args.output\n\n    # load\n    rel_val1 = load_rel_val(utils.get_summary_path(args.input1[0]), args.include_patterns, args.exclude_patterns, args.enable_metric, args.disable_metric)\n    rel_val2 = load_rel_val(utils.get_summary_path(args.input2[0]), args.include_patterns, args.exclude_patterns, args.enable_metric, args.disable_metric)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "20d10602150033f62f81a264e37c09d9c24a469e1c49eb3bec9a24a3ac72291b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# identify the test and metric names that are shared between the two sets\ntest_names = np.intersect1d(rel_val1.known_test_names, rel_val2.known_test_names)\nmetric_names = np.intersect1d(rel_val1.known_metrics, rel_val2.known_metrics)\n\nprint(\"METRIC NAME, TEST NAME, INTERPRETATION, #IN COMMON, #ONLY IN FIRST, #ONLY IN SECOND\")\nfor metric_name in metric_names:\n    for test_name in test_names:\n        object_names1, results1 = rel_val1.get_result_per_metric_and_test(metric_name, test_name)\n        object_names2, results2 = rel_val2.get_result_per_metric_and_test(metric_name, test_name)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "42b3a91d8a0b5732817d3c940b3aa2b09c725a88b4c54668fd62391e8e668766": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "FOR EACH INTERPRETATION IN variables.REL_VAL_SEVERITIES:\n    IF args.interpretations AND THE INTERPRETATION IS NOT IN args.interpretations, CONTINUE\n    # OBJECT NAMES OF RESULTS MATCHING THE CURRENT INTERPRETATION\n    object_names_interpretation1 = object_names1[utils.count_interpretations(results1, interpretation)]\n    object_names_interpretation2 = object_names2[utils.count_interpretations(results2, interpretation)]\n    # OBJECTS ONLY IN THE FIRST SET THAT ARE NOT IN THE SECOND SET\n    only_in1 = np.setdiff1d(object_names_interpretation1, object_names_interpretation2)\n    # OBJECTS ONLY IN THE SECOND SET THAT ARE NOT IN THE FIRST SET\n    only_in2 = np.setdiff1d(object_names_interpretation2, object_names_interpretation1)\n    # OBJECTS COMMON TO BOTH SETS\n    in_common = np.intersect1d(object_names_interpretation1, object_names_interpretation2)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "f501f6974598920838bacfcdd0d24d976e8500a2a0ea68f9cf6d3b4b1c81af0e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    s = f\"{metric_name}, {test_name}, {interpretation}, {len(in_common)}, {len(only_in1)}, {len(only_in2)}\"\n    if args.print_long:\n        in_common = \";\".join(in_common) if in_common else \"NONE\"\n        only_in1 = \";\".join(only_in1) if only_in1 else \"NONE\"\n        only_in2 = \";\".join(only_in2) if only_in2 else \"NONE\"\n        s += f\", {in_common}, {only_in1}, {only_in2}\"\n    print(s)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "45cca791b0637271b44d41f4a601bd79c9c7d2cb565b2ef2b55249eb80d29fb4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Generate an InfluxDB metrics file based on the provided arguments\nif args.influx:\n    rel_val = load_rel_val(utils.get_summary_path(args.path))\n    create_influx_metrics_file(rel_val, args.path)\n\nreturn 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "74804ef963755e18a45350766944e150ee216f738f890955f72103c0359cdda5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    output_path = args.path if the file exists at args.path else join(args.path, \"influxDB.dat\")\n    table_name = \"O2DPG_MC_ReleaseValidation\"\n    if args.table_suffix:\n        table_name = f\"{table_name}_{args.table_suffix}\"\n    tags_out = \"\"\n    if args.tags:\n        for t in args.tags:\n            t_split = t.split(\"=\")\n            if len(t_split) != 2 or not t_split[0] or not t_split[1]:\n                print(f\"ERROR: Invalid format of tags {t} for InfluxDB\")\n                return 1\n            # we dissect and reassemble it to ensure no extra spaces or other characters are present\n            tags_out += f\",{t_split[0].strip()}={t_split[1].strip()}\"\n\n    # always consistent\n    row_tags = table_name + tags_out",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "41dfe279270ab54dea4abd9cda0363c3c99a77f6ade10170df317d73866652b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# always the same\nrow_tags = table_name + tags_out\n\nwith open(output_path, \"w\") as f:\n    object_names, metric_names, result_names, results = rel_val.query_results()\n    for i, (object_name, metric_name, result_name, result) in enumerate(zip(object_names, metric_names, result_names, results)):\n        common_string = f\"{row_tags},id={i},histogram_name={object_name},metric_name={metric_name},test_name={result_name} status={variables.REL_VAL_SEVERITY_MAP[result.interpretation]}\"\n        if result.value is not None:\n            common_string += f\",value={result.value}\"\n        if result.mean is not None:\n            common_string += f\",threshold={result.mean}\"\n        f.write(f\"{common_string}\\n\")\nreturn 0\n\n\ndef print_simple(args):\n    \"\"\"\n    Simply prints line-by-line\n\n    object names (--object-names)\n\n    metric names (--metric-names)\n\n    test names (--test-names)\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "9860efc6df592dd2b217ada738036c4bc3ff1644898c08f82d275b514aec56d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    metric names (--metric-names)\n\n    test names (--test-names)\n    \"\"\"\n\n    if not args.path:\n        if not args.metric_names:\n            return 0\n        return metrics_from_root()\n\n    rel_val = load_rel_val(utils.get_summary_path(args.path), args.include_patterns, args.exclude_patterns, args.enable_metric, args.disable_metric)\n\n    def filter_on_interpretations(result):\n        # consider only results that match a user-requested flag\n        return not args.interpretations or result.interpretation in args.interpretations",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "c4b2911a2a908d16dcee6d417e2a75fb71ba659f9678197d76dd83d99b0920bd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    rel_val.filter_results(filter_on_interpretations)\n    if args.metric_names:\n        for metric_name in rel_val.known_metrics:\n            print(metric_name)\n    if args.test_names and rel_val.number_of_tests:\n        for test_name in rel_val.known_test_names:\n            print(test_name)\n    if args.object_names:\n        if rel_val.number_of_tests:\n            # we have tests, so we retrieve object names with interpretations\n            object_names, _ = rel_val.get_result_per_metric_and_test()\n        else:\n            object_names = rel_val.known_objects\n        for object_name in np.unique(object_names):\n            print(object_name)\n    return 0\n\n\ndef print_header():\n    print(f\"\\n{'#' * 25}\\n#{' ' * 23}#\\n# RUN ReleaseValidation #\\n#{' ' * 23}#\\n{'#' * 25}\\n\")\n\n\n################################################################\n# define the parser globally so that it can even be imported    #\n################################################################",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "12fdfb9073cdefc0a662dc63c0f9acadee93f634e98ff74a55d7c0b42597c1af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# common parser for handling input files\nCOMMON_FILE_PARSER = argparse.ArgumentParser(add_help=False)\nCOMMON_FILE_PARSER.add_argument(\"-i\", \"--input1\", nargs=\"*\", help=\"EITHER a list of first input files for comparison OR the first input directory from the simulation for comparison\", required=True)\nCOMMON_FILE_PARSER.add_argument(\"-j\", \"--input2\", nargs=\"*\", help=\"EITHER a list of second input files for comparison OR the second input directory from the simulation for comparison\", required=True)\nCOMMON_FILE_PARSER.add_argument(\"--labels\", nargs=2, help=\"labels to be used in the plot legends for overlay plots from inputs -i and -j, defaulting to 'batch_i' and 'batch_j'\", default=(\"batch_i\", \"batch_j\"))\nCOMMON_FILE_PARSER.add_argument(\"--no-extract\", dest=\"no_extract\", action=\"store_true\", help=\"skip extraction and assume histograms are already present for comparison\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "d1422ff9677057a7f0359049c93acf8ceb383935d0ca72db4289f016ac6f03c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# common parser settings for handling thresholds\nCOMMON_THRESHOLD_PARSER = argparse.ArgumentParser(add_help=False)\nCOMMON_THRESHOLD_PARSER.add_argument(\"--regions\", help=\"Apply calculated regions for status testing\")\nCOMMON_THRESHOLD_PARSER.add_argument(\"--default-threshold\", dest=\"default_threshold\", action=\"append\", nargs=2)\nCOMMON_THRESHOLD_PARSER.add_argument(\"--use-values-as-thresholds\", nargs=\"*\", dest=\"use_values_as_thresholds\", help=\"Utilize values from another run as thresholds for the current run\")\nCOMMON_THRESHOLD_PARSER.add_argument(\"--combine-thresholds\", dest=\"combine_thresholds\", choices=[\"mean\", \"extreme\"], help=\"Select arithmetic mean or extreme value as the threshold\", default=\"mean\")\nCOMMON_THRESHOLD_PARSER.add_argument(\"--margin-threshold\", dest=\"margin_threshold\", action=\"append\", nargs=2)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "0cf6a6e8e0919d2ab607e0f1dad39dc543c1cc2a725a8fcdd3814a3ce7c07206": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# common parser for handling metric options\nCOMMON_METRIC_PARSER = argparse.ArgumentParser(add_help=False)\nCOMMON_METRIC_PARSER.add_argument(\"--enable-metric\", dest=\"enable_metric\", nargs=\"*\")\nCOMMON_METRIC_PARSER.add_argument(\"--disable-metric\", dest=\"disable_metric\", nargs=\"*\")\n\n# common parser for managing object name patterns\nCOMMON_PATTERN_PARSER = argparse.ArgumentParser(add_help=False)\nCOMMON_PATTERN_PARSER.add_argument(\"--include-patterns\", dest=\"include_patterns\", nargs=\"*\", help=\"include objects that match at least one of the provided patterns (has higher priority)\")\nCOMMON_PATTERN_PARSER.add_argument(\"--exclude-patterns\", dest=\"exclude_patterns\", nargs=\"*\", help=\"exclude objects that match at least one of the provided patterns\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "a708a93a8ee5b784a44050419468565611b6173a4104223667a6226cdc828b43": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# common parser for interpreting options\nCOMMON_FLAGS_PARSER = argparse.ArgumentParser(add_help=False)\nCOMMON_FLAGS_PARSER.add_argument(\"--interpretations\", nargs=\"*\", help=\"extract objects with at least one test having this severity flag\", choices=list(variables.REL_VAL_SEVERITY_MAP.keys()))\nCOMMON_FLAGS_PARSER.add_argument(\"--is-critical\", dest=\"is_critical\", nargs=\"*\", help=\"designate metrics as critical\")\n\n# common parser for managing verbosity\nCOMMON_VERBOSITY_PARSER = argparse.ArgumentParser(add_help=False)\nCOMMON_VERBOSITY_PARSER.add_argument(\"--print-long\", dest=\"print_long\", action=\"store_true\", help=\"increase verbosity\")\nCOMMON_VERBOSITY_PARSER.add_argument(\"--no-plot\", dest=\"no_plot\", action=\"store_true\", help=\"disable plotting\")\n\n# The primary parser\nPARSER = argparse.ArgumentParser(description='Wrapper for ReleaseValidation macro')\n\n# Utilize different sub-parsers\nSUB_PARSERS = PARSER.add_subparsers(dest=\"command\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "36d2a4c0965166336e9e606520923d1d900ea006db7c628a61aa9034666b33cd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Utilize multiple sub-parsers\nSUB_PARSERS = PARSER.add_subparsers(dest=\"command\")\n\n# rel-val\nREL_VAL_PARSER = SUB_PARSERS.add_parser(\"rel-val\", parents=[COMMON_FILE_PARSER, COMMON_METRIC_PARSER, COMMON_THRESHOLD_PARSER, COMMON_FLAGS_PARSER, COMMON_VERBOSITY_PARSER])\nREL_VAL_PARSER.add_argument(\"--include-dirs\", dest=\"include_dirs\", nargs=\"*\", help=\"restrict inclusion to specific directories within the ROOT file; each pattern is considered to start from the top-level directory (currently, no regex or wildcards are supported)\")\nREL_VAL_PARSER.add_argument(\"--add\", action=\"store_true\", help=\"when this flag is set and a RelVal already exists in the output directory, additional objects will be appended to the existing ones\")\nREL_VAL_PARSER.add_argument(\"--output\", \"-o\", help=\"specify the output directory\", default=\"rel_val\")\nREL_VAL_PARSER.set_defaults(func=rel_val)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "295d45a1586013fc45c4b8710d1e40ef7fc0fb8b51e3334f938b41c10a833418": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# inspect\nINSPECT_PARSER = SUB_PARSERS.add_parser(\"inspect\", parents=[COMMON_THRESHOLD_PARSER, COMMON_METRIC_PARSER, COMMON_PATTERN_PARSER, COMMON_FLAGS_PARSER, COMMON_VERBOSITY_PARSER])\nINSPECT_PARSER.add_argument(\"--path\", dest=\"json_path\", help=\"either the full file path to a Summary.json or a directory where such a file is anticipated to be located\", required=True)\nINSPECT_PARSER.add_argument(\"--output\", \"-o\", help=\"the output directory\", default=\"rel_val_inspect\")\nINSPECT_PARSER.set_defaults(func=rel_val)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "e43b5d5b462a4931c581e1daa609d416f4b8f864dfdc9e3d11763755a6e41f8a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# compare\nCOMPARE_PARSER = SUB_PARSERS.add_parser(\"compare\", parents=[COMMON_FILE_PARSER, COMMON_PATTERN_PARSER, COMMON_METRIC_PARSER, COMMON_VERBOSITY_PARSER, COMMON_FLAGS_PARSER])\nCOMPARE_PARSER.add_argument(\"--output\", \"-o\", help=\"directory for output\", default=\"rel_val_comparison\")\nCOMPARE_PARSER.add_argument(\"--difference\", action=\"store_true\", help=\"plot histograms with varying severity levels\")\nCOMPARE_PARSER.add_argument(\"--plot\", action=\"store_true\", help=\"generate plots for value and threshold comparisons from RelVals\")\nCOMPARE_PARSER.set_defaults(func=compare)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "5f88f83e0b99ef0b1d4bf87ccadaf215748c2e89895b89fa556f57a8752882fe": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# influx\nINFLUX_PARSER = SUB_PARSERS.add_parser(\"influx\")\nINFLUX_PARSER.add_argument(\"--path\", help=\"directory where the ReleaseValidation process was executed\", required=True)\nINFLUX_PARSER.add_argument(\"--tags\", nargs=\"*\", help=\"tags to include for influx, formatted as key=value pairs\")\nINFLUX_PARSER.add_argument(\"--table-suffix\", dest=\"table_suffix\", help=\"prefix for the table name\")\nINFLUX_PARSER.add_argument(\"--output\", \"-o\", help=\"output directory; if not specified, a file named influxDB.dat is saved within the RelVal directory\")\nINFLUX_PARSER.set_defaults(func=influx)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "f6a8ddbd50051f6239d422536fb7f658e2f5e49e54034f9011eae0fece75d977": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# print\nPRINT_PARSER = SUB_PARSERS.add_parser(\"print\", parents=[COMMON_METRIC_PARSER, COMMON_PATTERN_PARSER, COMMON_FLAGS_PARSER])\nPRINT_PARSER.add_argument(\"--path\", help=\"either the full file path to a Summary.json or a directory where such a file is anticipated\")\nPRINT_PARSER.add_argument(\"--metric-names\", dest=\"metric_names\", action=\"store_true\")\nPRINT_PARSER.add_argument(\"--test-names\", dest=\"test_names\", action=\"store_true\")\nPRINT_PARSER.add_argument(\"--object-names\", dest=\"object_names\", action=\"store_true\")\nPRINT_PARSER.set_defaults(func=print_simple)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "424f2c49d0f6b9c5e54936e8f0577a5cd712214ce1d08b259059d0eac3959997": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# extract\nEXTRACT_PARSER = SUB_PARSERS.add_parser(\"extract\", parents=[COMMON_VERBOSITY_PARSER])\nEXTRACT_PARSER.add_argument(\"--input\", nargs=\"*\", help=\"Set of input files to be processed\", required=True)\nEXTRACT_PARSER.add_argument(\"--output\", \"-o\", help=\"output directory for the results\", default=\"rel_val_extracted\")\nEXTRACT_PARSER.add_argument(\"--prefix\", \"-p\", help=\"prefix to add to the output files\")\nEXTRACT_PARSER.add_argument(\"--label\", \"-l\", help=\"label to be included\", required=True)\nEXTRACT_PARSER.add_argument(\"--reference\", \"-r\", help=\"path to a reference file for extraction (useful to maintain consistent binning when TTrees are processed)\")\nEXTRACT_PARSER.set_defaults(func=only_extract)\n\n\ndef main():\n    \"\"\"entry point when the script is run directly from the command line\"\"\"\n    args = PARSER.parse_args()\n    if args.command != \"print\":\n        print_header()\n    return(args.func(args))\n\nif __name__ == \"__main__\":\n    sys.exit(main())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/o2dpg_release_validation.py"
        }
    ],
    "ee4f9b89e7c08ed3594a4e00c7402aaf5139d1e937f5c7bf130843e04c6ad4af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n# Simple ROOT files merger script\n\nfrom ROOT import TFile, TFileMerger\nimport sys\nimport os\nimport argparse\n\noutput_file = ''\ninput_files = []\n# setting up command line options\n\nparser = argparse.ArgumentParser(description='A simple tool to merge ROOT files',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\nparser.add_argument('-o','--output', help='Name of the output ROOT file', required=True)\nparser.add_argument('-i','--input', help='Comma-separated list of input ROOT files to be merged', required=True)\n\nargs = parser.parse_args()\n\noutput_file = args.output\ninput_files = args.input.split(',')\n\nmerger = TFileMerger(False)\nmerger.OutputFile(output_file)\n\nfor input_file in input_files:\n    if os.path.exists(input_file):\n        merger.AddFile(input_file)\n    else:\n        print(f\"Error: {input_file} does not exist.\")\n        sys.exit(1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/root_merger.py"
        }
    ],
    "f6196c99b60cdf0b9a8c7d34be0984b742b1e46976e1c6a98d9b43332fbdb144": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not merger.Merge():\n    print(\"Error: Merging was unsuccessful.\")\n    sys.exit(2)\nelse:\n    print(f\"Files were successfully merged into {output_file}\")\n\nsys.exit(0)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/root_merger.py"
        }
    ],
    "a98ff8f28c7b0763e453cbece505300e1d9ac95d8016dc727326f592593ba710": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n# Retrieve a list of PRs from the specified repository that are labeled with a specific label\n# Useful for determining which PRs need to be ported\n\nimport sys\nimport argparse\nimport requests\nimport re\n\n\ndef organise_prs(prs):\n    \"\"\"\n    Arrange PRs based on their merge time, from oldest to most recent\n    \"\"\"\n    # gather merged PRs\n    prs_merged = []\n    # record the merge times of merged PRs\n    merged_at = []\n    # track simply closed PRs\n    prs_closed = []\n    closed_updated_at = []\n    # identify open PRs\n    prs_open = []\n    open_updated_at = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "76d6bdbd8068ae04478d17b4c988a7a8b515a527c13cf3bf92e20f846a981933": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for each_pr in prs:\n    if not each_pr['merged_at']:\n        if each_pr['state'] == 'open':\n            prs_open.append(each_pr)\n            open_updated_at.append(each_pr['updated_at'])\n            continue\n        if each_pr['state'] == 'closed':\n            prs_closed.append(each_pr)\n            closed_updated_at.append(each_pr['updated_at'])\n            continue\n    # fetch the PR details and the merged timestamp\n    prs_merged.append(each_pr)\n    merged_at.append(each_pr['merged_at'])\n\n# arrange the merged PRs based on their merged timestamp\nprs_merged = [pr for _, pr in sorted(zip(merged_at, prs_merged))]\nprs_closed = [pr for _, pr in sorted(zip(closed_updated_at, prs_closed))]\nprs_open = [pr for _, pr in sorted(zip(open_updated_at, prs_open))]\n\nreturn {'merged': prs_merged,\n        'closed': prs_closed,\n        'open': prs_open}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "071a3dce92280093b1df434c97f750d730ab62882f4b32c99f411286573260cd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return {'merged': prs_merged,\n            'closed': prs_closed,\n            'open': prs_open}\n\n\ndef get_prs(owner, repo, request_labels, pr_state=None, per_page=50, start_page=1, pages=1):\n    \"\"\"\n    Retrieve pull requests based on certain criteria\n    \"\"\"\n    # GitHub API endpoint for listing pull requests with a specific state and label\n    prs_return = []\n\n    has_error = False\n    for page in range(start_page, pages + 1):\n        pr_state_param = f'state={pr_state}&' if pr_state else 'state=all&'\n        url = f'https://api.github.com/repos/{owner}/{repo}/pulls?{pr_state_param}page={page}&per_page={per_page}'\n\n        # Send a GET request to the GitHub API\n        response = requests.get(url)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "fa1ae3b909c73b87f2a0da286f00bbfa8315fe4e9536a55406542da000453a98": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Issue GET request to GitHub API\n    response = requests.get(url)\n\n    # Verify if the request succeeded (status code 200)\n    if response.status_code == 200:\n        # Parse the JSON response\n        prs = response.json()\n        # Include PRs that match specific labels\n        for pr in prs:\n            labels = pr['labels']\n            take_pr = False\n            for label in labels:\n                if label['name'] in request_labels:\n                    # Only PRs with the correct label will be accepted\n                    take_pr = True\n                    break\n            if not take_pr:\n                continue\n            # Proceed if the PR is accepted, then add it\n            prs_return.append(pr)\n\n    else:\n        print(f'Failed to retrieve data: {response.status_code} - {response.text}')\n        has_error = True\n        break",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "d2f412b40e626acbe65f235b2812126070f7a320220c769832482169d5bc6314": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if has_error:\n    return None\n\n# separate labels into request and accepted categories\nreturn separate_labels_request_accept(labels, accept_suffix)\n\n\ndef get_labels(owner, repo, regex=None):\n    \"\"\"\n    Retrieve labels that match a given regex\n    \"\"\"\n    # the REST API URL\n    url = f'https://api.github.com/repos/{owner}/{repo}/labels'\n    # send a GET request to the GitHub API\n    response = requests.get(url)\n\n    if response.status_code != 200:\n        print(f'ERROR: Failed to fetch labels for owner {owner} and repository {repo}')\n        return None\n\n    return [label['name'] for label in response.json() if not repo or re.match(regex, label['name'])]\n\n\ndef separate_labels_request_accept(labels, accept_suffix=None):\n    \"\"\"\n    Separate labels into request and accepted categories\n    \"\"\"\n    if not accept_suffix:\n        # consider all labels as request labels\n        return labels.copy(), []\n\n    labels_request = []\n    labels_accept = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "7df7a30917984e26d27aaf71455c83bdc1fdef0305ce350e0fe21ed1c72d8bfa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    labels_request = []\n    labels_accept = []\n\n    for label in labels:\n        if label.endswith(accept_suffix):\n            labels_accept.append(label)\n            continue\n        labels_request.append(label)\n\n    return labels_request, labels_accept\n\n\ndef make_report(all_prs, repo, labels_request, label_accept_suffix, outfile=None):\n    \"\"\"\n    Generate a report\n\n    The report will contain tables for each label, written to a text file.\n    \"\"\"\n    # common header for each table\n    common_header = '| Requestor | Package | PR | PR title | State | Merged at | Data or MC |\\n| --- | --- | --- | --- | --- | --- | --- |\\n'\n\n    if not outfile:\n        outfile = f'o2dpg_pr_report_{repo}.md'\n\n    with open(outfile, 'w') as f:\n\n        f.write(f'# List PRs for {repo} (from oldest to recent)\\n')\n\n        # first list the merged PRs\n        for key, prs in all_prs.items():\n\n            rows_per_label = {label: [] for label in labels_request}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "8cc3bf078d477f98f21cf0d3ec4f869c7c4784bd53d6559d6b6c46a1d62e5b9b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    rows_per_label = {label: [] for label in labels_request}\n\n            f.write(f'\\n\\n## PRs in state {key}')\n            for pr in prs:\n                mc_data = []\n                # gather the labels for which the table should include this PR\n                labels_take = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "f79e3d2df144266a4a3a8e7ea1b935e84bbd2b07f8d51636c010672f73c1e180": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    pr_labels = [label['name'] for label in pr['labels']]\n    for label_name in pr_labels:\n        if label_name not in labels_request:\n            continue\n        if label_name.lower() in ('mc', 'data'):\n            # retrieve the MC or DATA label if this PR possesses it\n            mc_data.append(label_name)\n        if not label_accept_suffix or f'{label_name}-{label_accept_suffix}' not in pr_labels:\n            # verify if the label signifies a request. If the corresponding accepted label also exists, disregard this PR for the report.\n            labels_take.append(label_name)\n\n    if not labels_take:\n        # no relevant labels\n        continue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "19da07698b61a1733644408198c5bab8da736dcdefaa167a0e8da7359442f18a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# if no specific MC or DATA label is specified, consider it valid for both\nmc_data = ','.join(mc_data) if mc_data else 'MC,DATA'\nmerged_at = pr['merged_at'] or 'not merged'\nstatus = pr['state']\nfor label in labels_take:\n    rows_per_label[label].append(f'| {pr[\"user\"][\"login\"]} | {repo} | [PR]({pr[\"html_url\"]}) | {pr[\"title\"]} | {status} | {merged_at} | {mc_data} |\\n')\n\nfor label, rows in rows_per_label.items():\n    if not rows:\n        # no entries to add\n        continue\n    f.write(f'\\n\\n### For label {label}\\n\\n')\n    f.write(common_header)\n    for row in rows:\n        f.write(row)\n\nprint(f\"==> Report generated and saved to {outfile}\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "61dcdb915efa7db71a4681fbbf3ce3b5c6a493f7219e2c97204f38ec02691dbf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if __name__ == '__main__':\n    # Parse command-line arguments\n    parser = argparse.ArgumentParser(description='Fetch closed pull requests with a specific label from a GitHub repository')\n    parser.add_argument('--owner', help='GitHub repository owner', default='AliceO2Group')\n    parser.add_argument('--repo', required=True, help='GitHub repository name, such as O2DPG or AliceO2')\n    parser.add_argument('--pr-state', dest='pr_state', help='The state of the pull request')\n    parser.add_argument('--output', help='Name of the output file where the report will be written')\n    parser.add_argument('--per-page', dest='per_page', default=100, help='Number of results per page')\n    parser.add_argument('--start-page', dest='start_page', type=int, default=1, help='Start on this page')\n    parser.add_argument('--pages', type=int, default=5, help='Number of pages')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "a7e478c9b34e9ef1ad77e7a9db6fc5a37edd6db8e84e7e6bfeca9f60269d70ed": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    parser.add_argument('--pages', type=int, default=5, help='Specify the number of pages')\n    parser.add_argument('--label-regex', dest='label_regex', help='Supply a regular expression to determine which labels to retrieve.', default='^async-\\w+')\n    parser.add_argument('--label-accepted-suffix', dest='label_accepted_suffix', help='Specify the suffix of labels that indicate acceptance (an automatic dash will be added, so the accepted label should follow the format <request-label>-<accepted-suffix>).', default='accepted')\n    parser.add_argument('--include-accepted', action='store_true', help='By default, only PRs are fetched if at least one label does not have the \"<label>-accepted\" label')\n    args = parser.parse_args()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "48a20887136d947144caca9f220b57f63a2e60a0b5654be1605425e4a4c90c97": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# retrieve all relevant labels\nlabels = get_labels(args.owner, args.repo, args.label_regex)\n# divide into request and acceptance labels, focusing on request labels at present\nlabels_request, l = separate_labels_request_accept(labels, args.label_accepted_suffix)\n\n# fetch closed pull requests with the given labels, distinguishing between merged and other closed PRs\nprs = get_prs(args.owner, args.repo, labels_request, args.pr_state, args.per_page, args.start_page, args.pages)\nif not prs:\n    print('==> No PRs to report.')\n    sys.exit(0)\n\nmake_report(prs, args.repo, labels_request, args.label_accepted_suffix, args.output)\n\nsys.exit(0)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/o2dpg_make_github_pr_report.py"
        }
    ],
    "7f8306135c3b09c0ff6db0cac91b2527744ec56526c80eea30e8fdcac9aa5a3f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n# A script to parse configuration\n# from a reco workflow for application in MC. Outputs a JSON with the configuration.\n\n# Things to parse:\n# - detector list\n# - components of the reco workflow\n# - vertexing sources and other components\n# - configuration parameters per job\n# - can produce a JSON or a dictionary\n\nimport re\nimport json\nimport os\n\ndef get_topology_cmd(filename):\n   \"\"\"\n   Returns the command for the topology from a workflow filename.\n   \"\"\"\n   with open(filename, 'r') as f:\n       lines = f.readlines()\n   output = []\n   for l in lines:\n       if '--session' in l and \"o2-\" in l:\n           output.append(l)\n   return output\n\ndef extract_detector_list():\n   \"\"\"\n   Extracts the list of sensitive detectors used.\n   \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "30e2f6489c0eb4957da99450f1c06ae983596a654830b359248c53bec109a599": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def extract_detector_list():\n   \"\"\"\n   retrieves the list of sensitive detectors utilized\n   \"\"\"\n\ndef extract_config_key_values(tokenlist):\n   kvconfig = {}\n   for i, t in enumerate(tokenlist):\n       if t == '--configKeyValues':\n           configs = tokenlist[i+1]\n           # individual key-values:\n           if configs[0] == '\"':\n               configs = configs[1:]\n           if configs[-1] == '\"':\n               configs = configs[:-1]\n           keyvals = configs.split(\";\")\n           for kv in keyvals:\n               tmp = kv.rstrip().split(\"=\")\n               if len(tmp) > 1:\n                   key = tmp[0]\n                   value = tmp[1]\n                   kvconfig[key] = value\n   return kvconfig\n\ndef extract_args(tokens, arg):\n   \"\"\"\n   retrieves the value for a specified argument from a list of argument tokens\n   \"\"\"\n   i = 0\n   while i < len(tokens):\n       t = tokens[i]\n       if t == arg:\n           return tokens[i+1] if i+1 < len(tokens) else \"\"\n       i += 1\n   return \"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "dbeb3bda16bb19059a6d1595f41ed81567b608b8297d707b97c5321b2827cf01": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def filter_tokens(tokens, exclude, step=1):\n    # eliminate tokens that match the specified argument\n    filtered_tokens = []\n    index = 0\n    while index < len(tokens):\n        token = tokens[index]\n        if token == exclude:\n            index += step\n            continue\n        filtered_tokens.append(token)\n        index += 1\n    return filtered_tokens",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "f5b9000a06dcfa18890dc8fb56c6af2f05c3ce3f10883f6b4ac147176296d87d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def flatten_config_values(commandlist):\n    \"\"\"\n    Let's check for any duplicates or contradictions and try to generate a flat dictionary of configuration values.\n    \"\"\"\n    main_sub_config = {}\n    for task in commandlist:\n        thisconfig = task.get('configval')\n        if thisconfig:\n            for compoundkey in thisconfig:\n                mainkey = compoundkey.split(\".\")[0]\n                subkey = compoundkey.split(\".\")[1]\n                if not main_sub_config.get(mainkey):\n                    main_sub_config[mainkey] = {}\n                prev_value = main_sub_config[mainkey].get(subkey)\n                current_value = thisconfig[compoundkey]\n                if prev_value and prev_value != current_value:\n                    print(\"Found conflicting duplicate key .. cannot flatten directly\")\n                else:\n                    main_sub_config[mainkey][subkey] = current_value\n    return main_sub_config",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "ef29a2dfa9f5276a1d3d4f1c8b520194dae9277517fa093a000572a569291106": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# convert configuration values to INI format\ndef configValues_to_ini(flatconfig):\n    \"\"\"\n    It appears that there is supposed to be an INI conversion function, but its location is uncertain.\n    Therefore, we are implementing this functionality here.\n    \"\"\"\n    # create and write to INI file\n    with open(\"ini-file\", \"w\") as f:\n        for mainkey in flatconfig:\n            f.write(f\"[{mainkey}]\\n\")\n            for subkey in flatconfig[mainkey]:\n                f.write(f\"{subkey}={flatconfig[mainkey][subkey]}\\n\")\n\ndef configValues_to_json(flatconfig):\n    \"\"\"\n    \"\"\"\n    with open('config-json.json', 'w') as outfile:\n        json.dump(flat_config, outfile, indent=2)\n\n\ndef parse_important_DPL_args(cmds, flat_config):\n    \"\"\"\n    In this function, we handle key arguments that are not part of the configuration parameters, such as --vertexing-sources and --vertex-track-matching sources, which are specific to reconstruction tasks.\n    We cannot simply use all arguments, as some are specific to the reconstruction process, so we need to keep a list of these.\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "f3d8e3f8f6ecc899822b65203eb2934a006e166ab199eb58577c0ac374d73993": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The options are tied to the same configuration as the configurable parameters ... under specific keys that can be accessed during the MC workflow creation.\n\nThe script processes the `cmds` dictionary and updates the `flat_config` dictionary.\n\"\"\"\n\nFor each task in `cmds`, the script processes it by specific tasks until a more efficient method is implemented.\nThe command and its remaining arguments are extracted as `cmd` and `tokens`, respectively.\nFor the primary vertex finder, which requires \"vertexing sources and vertex-track-matching-sources\", the script does the following:\nA new dictionary `c` is created, where `c['vertexing-sources']` is set to the arguments extracted with `--vertexing-sources`, and `c['vertex-track-matching-sources']` is set to the arguments extracted with `--vertex-track-matching-sources`. This dictionary is then added to `flat_config` under the key `cmd + '-options'`.\n\nFor the secondary vertex finder, a similar process is followed, creating a dictionary `c` where `c['vertexing-sources']` is set to the arguments extracted with `--vertexing-sources`, and this dictionary is added to `flat_config` under the key `cmd + '-options'`.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "880925e6cf08906cb9adfac5406ce681176ddf1bc687c7f39071aaa3c7a33775": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# aod\nif cmd == 'o2-aod-producer-workflow':\n    c = {}\n    c['info-sources'] = extract_args(tokens, '--info-sources')\n    flat_config[cmd + '-options'] = c\n\n# its reco\nif cmd == 'o2-its-reco-workflow':\n    pass\n\n# trd tracking\nif cmd == 'o2-trd-global-tracking':\n    c = {}\n    c['track-sources'] = extract_args(tokens, '--track-sources')\n    flat_config[cmd + '-options'] = c\n\n# tof matching\nif cmd == 'o2-tof-matcher-workflow':\n    c = {}\n    c['track-sources'] = extract_args(tokens, '--track-sources')\n    flat_config[cmd + '-options'] = c\n\n# ctf reader workflow (this allows us to restrict\n# sensitive detectors and streamline the overall graph workflow)\nif cmd == 'o2-ctf-reader-workflow':\n    c = {}\n    c['onlyDet'] = extract_args(tokens, '--onlyDet')\n    flat_config[cmd + '-options'] = c",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "0cf57bed705c45e7a809d86177775fdfaa0218fc7a728e91c1e0db40e20dfa31": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# gpu/tpc tracking\n  if the command is 'o2-gpu-reco-workflow':\n     c = {}\n     c['gpu-reconstruction'] = extract_args(tokens, '--gpu-reconstruction')\n     flat_config[cmd + '-options'] = c\n\n  # itstpc matching\n  if the command is 'o2-tpcits-match-workflow':\n     correction_string = ''\n     s1 = extract_args(tokens, '--lumi-type')\n     if s1:\n        correction_string += ' --lumi-type ' + s1\n     s2 = extract_args(tokens, '--corrmap-lumi-mode')\n     if s2:\n        correction_string += ' --corrma-lumi-mode ' + s2\n     # these options are used in several places, so store them directly under tpc-corr-scaling\n     flat_config['tpc-corr-scaling'] = correction_string\n\n  # hmp matching\n  if the command is 'o2-hmpid-matcher-workflow':\n     c = {}\n     c['track-sources'] = extract_args(tokens, '--track-sources')\n     flat_config['o2-hmpid-matcher-workflow'] = c",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "7af408bb4e17ce49aa78c1c85604e94417eb74644912104094b78a7dd0f00dc7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def print_untreated_args(cmds):\n        \"\"\"\n        let's display the content of remaining_args\n        \"\"\"\n        for task in cmds:\n            rargs = task.get(\"remainingargs\")\n            if rargs and len(rargs) > 0:\n                print(task[\"cmd\"], \" \", rargs)\n\n\ndef print_principalconfigkeys_pertask(cmds):\n    \"\"\"\n    outputs the list of principal configuration keys for each task\n    \"\"\"\n    for task in cmds:\n        c = task.get(\"configval\")\n        if c is not None:\n            keyset = set()\n            for k in c:\n                keyset.add(k.split(\".\")[0])\n            print(task[\"cmd\"], \" \", keyset)\n\n\ndef split_string_with_quotes(string):\n    # function to split a string into tokens on whitespace, but only\n    # if whitespace is not within a quoted section\n    pattern = r'\\s+(?=(?:[^\\'\"]*[\\'\"][^\\'\"]*[\\'\"])*[^\\'\"]*$)'\n    # Split the string using the pattern\n    tokens = re.split(pattern, string)\n    return tokens",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "b1b37af6277889a0d1f313f5ad34e06fb8d333299227fd54f029bfe68f9be044": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def extract_commands(commandlist):\n    commands = []\n    for l in commandlist:\n        task = {}\n        # each l is a standalone command piped together\n        l = l.rstrip('\\n')\n        l = l.rstrip()\n        l = l.rstrip('|')\n        tokens = split_string_with_quotes(l)\n        # remove unnecessary elements\n        tokens = remove_tokens(tokens,'', 1)\n        tokens = remove_tokens(tokens,'\\n', 1)\n        tokens = remove_tokens(tokens,'|', 1)\n        tokens = remove_tokens(tokens,'\\\\\\n', 1)\n        tokens = remove_tokens(tokens,\"--session\", 2)\n        tokens = remove_tokens(tokens,\"--severity\", 2)\n        tokens = remove_tokens(tokens,\"--shm-segment-id\", 2)\n        tokens = remove_tokens(tokens,\"--shm-segment-size\", 2)\n        tokens = remove_tokens(tokens,\"--resources-monitoring\", 2)\n        tokens = remove_tokens(tokens,\"--resources-monitoring-dump-interval\", 2)\n        tokens = remove_tokens(tokens,\"--delay\", 2)\n        tokens = remove_tokens(tokens,\"--loop\", 2)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "9edbb699b6e2762b31c3e5d974e0c1f89009e1efbebccda8fee4f0de3ad9e1d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "tokens = remove_tokens(tokens,\"--loop\", 2)\n    tokens = remove_tokens(tokens,\"--early-forward-policy\", 2)\n    tokens = remove_tokens(tokens,\"--fairmq-rate-logging\", 2)\n    tokens = remove_tokens(tokens,\"--pipeline\", 2)\n    tokens = remove_tokens(tokens,\"--disable-mc\", 1)\n    tokens = remove_tokens(tokens,\"--disable-root-input\", 1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "e13a06196fb5630ef9f6b6257da1c6bfe4290889830ba9827d0ae73ca74093b9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    cmd = tokens[0]\n    tokens = tokens[1:len(tokens)]\n    task['cmd'] = cmd\n    # we check for a list of special settings\n\n    # config-params\n    task['configval'] = extract_config_key_values(tokens)\n    tokens = remove_tokens(tokens,\"--configKeyValues\", 2)\n\n    # we save the remaining options for further processing\n    task['remainingargs'] = tokens\n    commands.append(task)\n\n   return commands\n\n# some manual adjustments (could and should be performed externally)\ndef postadjust_ConfigValues(flat_config):\n  gpuglobal = flat_config.get(\"GPU_global\")\n  # correct the path for TPC root files\n  d=os.getcwd()\n  for key in gpuglobal:\n      if gpuglobal[key].count(\".root\") > 0:\n         gpuglobal[key] = d + \"/\" + gpuglobal[key]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "d5b7e4b2ab7bc46465539a7c4fbe0463886e444cda7a4a4d11cfd2d584d23787": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    cmdlist = retrieve_topology_commands(\"workflowconfig.log\")\n    #print (cmdlist)\n    cmds = extract_commands(cmdlist)\n    # print_untreated_args(cmds)\n    print_principalconfigkeys_pertask(cmds)\n    flat_config = flatten_config_values(cmds)\n    #print (flat_config)\n    postadjust_ConfigValues(flat_config)\n    parse_important_DPL_args(cmds, flat_config)\n    configValues_to_json(flat_config)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/parse-async-WorkflowConfig.py"
        }
    ],
    "8e620a8f537a2b96820775b5bc490cdaccf7d8fa3b4215719be90be10d780381": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    import os\nimport json\nimport argparse\n\n# Embedded template qc configuration for MC\ntemplate_data = {\n    \"config\": {\n        \"database\": {\n            \"implementation\": \"CCDB\",\n            \"host\": \"ccdb-test.cern.ch:8080\",\n            \"username\": \"not_applicable\",\n            \"password\": \"not_applicable\",\n            \"name\": \"not_applicable\"\n        },\n        \"Activity\": {\n            \"number\": \"42\",\n            \"type\": \"2\",\n            \"provenance\": \"qc_mc\",\n            \"passName\": \"passMC\",\n            \"periodName\": \"SimChallenge\"\n        },\n        \"monitoring\": {\n            \"url\": \"no-op://\"\n        },\n        \"consul\": {\n            \"url\": \"\"\n        },\n        \"conditionDB\": {\n            \"url\": \"alice-ccdb.cern.ch\"\n        }\n    }\n}\n\ndef update_json_files(folder_path):\n    # Loop through files in the given folder\n    for filename in os.listdir(folder_path):\n        if filename.endswith('.json'):\n            file_path = os.path.join(folder_path, filename)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/update-qc-json.py"
        }
    ],
    "d0d875eb0de67436f78ce327c6b13220de4701309c9b77eee89f2d5b1d7438ed": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Load the content of the JSON file\nwith open(file_path, 'r') as file:\n    data = json.load(file)\n\n# Verify the existence of 'qc' and 'config' sections, then update them\nif 'qc' in data and 'config' in data['qc']:\n    data['qc']['config'] = template_data['config']\n\n# Save the updated content back to the JSON file\nwith open(file_path, 'w') as file:\n    json.dump(data, file, indent=2)\n\ndef main():\n    parser = argparse.ArgumentParser(description=\"Update the 'config' section in the 'qc' part of JSON files within a folder.\")\n    parser.add_argument('folder_path', type=str, help='Path to the folder containing JSON files')\n\n    args = parser.parse_args()\n\n    update_json_files(args.folder_path)\n\nif __name__ == \"__main__\":\n    main()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/update-qc-json.py"
        }
    ],
    "21c6f351fabefb9b082ba3610f21d24a0f75da87fba13a1a068d1c14e0864880": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\nimport ROOT\nimport argparse\n\nparser = argparse.ArgumentParser(description='Verify if two ROOT files are binary compatible',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\nparser.add_argument('-f1','--file1', help='First ROOT TFile', required=True)\nparser.add_argument('-f2','--file2', help='Second ROOT TFile', required=True)\nargs = parser.parse_args()\n\ndef extract_total_branch_list(tree):\n    branches = []\n\n    # Function to recursively extract branches\n    def extract_branches_recursive(branch):\n        branches.append(branch)\n        sub_branches = branch.GetListOfBranches()\n\n        if sub_branches:\n            for sub_branch in sub_branches:\n                extract_branches_recursive(sub_branch)\n\n    # Get top-level branches of the tree\n    top_level_branches = tree.GetListOfBranches()\n\n    # Traverse recursively through branches\n    for branch in top_level_branches:\n        extract_branches_recursive(branch)\n\n    return branches",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/cmpROOTFiles.py"
        }
    ],
    "c9059607a7619f419055a4e2754d4b6006c77c7b9f00f11b7a27443c934d5946": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return branches\n\n\ndef compare_branches(obj1, obj2):\n    # Verify that the object classes are identical\n    if obj1.IsA() != obj2.IsA():\n      print(\"Object types do not match\")\n      return False\n\n    # Ensure the titles are the same\n    if obj1.GetTitle() != obj2.GetTitle():\n      print(\"Titles do not match\")\n      return False\n\n    # Convert objects to TBuffer to compare their byte content\n    #buffer1 = ROOT.TBuffer(ROOT.TBuffer.EMode.kWrite, 10000)\n    #buffer2 = ROOT.TBuffer(ROOT.TBuffer.EMode.kWrite, 10000)\n\n    #obj1.Streamer(buffer1)\n    #obj2.Streamer(buffer2)\n    # check the branch\n    print(\"Checking branch \" + obj1.GetTitle())\n    if obj1.GetTotBytes() != obj2.GetTotBytes():\n      print(\"Byte counts differ\")\n      return False\n\n\n# compare two TTree objects\ndef compare_trees(tree1, tree2):\n    branches1 = get_total_branch_list(tree1)\n    branches2 = get_total_branch_list(tree2)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/cmpROOTFiles.py"
        }
    ],
    "f8a0891fb7c45bd74df7201d9088350fc50ee30294d058a168f25524fcad2a37": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The number of branches must match\nif len(branches1) != len(branches2):\n  return False\n\n# Branch order is not important, so we create two hash sets containing tuples of (branchname, totalsize)\n\nset1 = set()\nfor br in branches1:\n  # Print key name and class name\n  #print(\"Key: \", br.GetName())\n  #print(\"Class: \", br.ClassName())\n  #print(\"BC: \", str(br.GetTotalSize()))\n  #print(\"---------------\")\n  \n  totals = 0\n  for entry in range(br.GetEntries()):\n    totals += br.GetEntry(entry)\n  set1.add((br.GetName(), totals, br.GetEntries()))\n\nset2 = set()\nfor br in branches2:\n  totals = 0\n  for entry in range(br.GetEntries()):\n    totals += br.GetEntry(entry)\n  set2.add((br.GetName(), totals, br.GetEntries()))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/cmpROOTFiles.py"
        }
    ],
    "cc77967a33a2558d228b470cbfe65f8ffc3048d476ad89143a5ad5bedd7872bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    inters = set1.intersection(set2)\n    #print (inters)\n    symdiff = (set1.symmetric_difference(set2))\n    if (len(symdiff) > 0):\n      print (symdiff)\n    return len(symdiff) == 0\n\ndef compare_root_files(file1, file2):\n    # Open the ROOT files\n    tfile1 = ROOT.TFile.Open(file1)\n    tfile2 = ROOT.TFile.Open(file2)\n\n    # Retrieve the list of keys (TKeys) from the ROOT files\n    keys1 = tfile1.GetListOfKeys()\n    keys2 = tfile2.GetListOfKeys()\n\n    # Verify if the number of keys is identical\n    if keys1.GetEntries() != keys2.GetEntries():\n        return False\n\n    # Iterate through the keys and compare their byte content\n    success = True\n    for key1, key2 in zip(keys1, keys2):\n        obj1 = key1.ReadObj()\n        obj2 = key2.ReadObj()\n        \n        isTree1 = isinstance(obj1, ROOT.TTree)\n        isTree2 = isinstance(obj2, ROOT.TTree)\n        if isTree1 != isTree2:\n            success = False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/cmpROOTFiles.py"
        }
    ],
    "15d1069c9af416f2e7a033d8993bcdec2b59751a8570f599320562d66437a9d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "elif isTree1 and isTree2:\n    success = success and compare_trees(obj1, obj2)\n\n# Close the files\ntfile1.Close()\ntfile2.Close()\n\nreturn success\n\nresult = compare_root_files(args.file1, args.file2)\nif result:\n    print(\"The byte content of the two ROOT files matches.\", args.file1, args.file2)\nelse:\n    print(\"The byte content of the two ROOT files does not match.\", args.file1, args.file2)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/cmpROOTFiles.py"
        }
    ],
    "b85c81ec8b25e32f063ac78723d12f24c293deb6adead89a42de1d25f2d2162d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n# Generates a local shell script that simulates the execution of a JDL on the GRID.\n# This is helpful for local debugging of failing GRID jobs.\n\n# initiated on 01.12.2022 by Sandro Wenzel\n\nimport argparse\nimport os, stat\nimport subprocess\n\nparser = argparse.ArgumentParser(description='Create a local shell script from an ALIEN JDL')\n\n# the run number for data acquisition or the default if unspecified\nparser.add_argument('--jdl', type=str, help=\"Local JDL file\")\nparser.add_argument('--from-proc-id', type=str, help=\"Extract the JDL directly from a known ALIEN PROCID\")\nparser.add_argument('-o', type=str, help=\"Output filename for the generated shell script\")\nargs = parser.parse_args()\nprint(args)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/jdl_to_script.py"
        }
    ],
    "52e0ce15491521a17bc9dca7965cb307c39f186cb809452efb3b04d30f550f67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# converts a JDL list into a python list\ndef toList(token):\n  if token == None or len(token)==0:\n    return token\n  if token[0]=='{' and token[-1]=='}':\n    inner=token[1:-1]\n    # be cautious, this could fail if a comma is inside a string\n    return [l.lstrip().rstrip() for l in inner.split(\",\")]\n  return [token]\n\ndef cleanFileName(filename):\n  # eliminate \" and 'LF:' from alien file names\n  return filename.replace('LF:','').replace('\"','')\n\ndef removeQuote(token):\n  return token.replace('\"','')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/jdl_to_script.py"
        }
    ],
    "880af6d248b318bf922902370fa8b119bee83c0b40c7b2d8654e39debb2bad44": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def removeQuote(token):\n        return token.replace('\"','')\n\n# retrieves a JDL for a specified PROC ID and saves it to a local file\ndef fetchJDL(alien_proc_id):\n    print('Directly fetching JDL from ALIEN')\n    # using alien.py's functionality\n    filename = \"jdl_local_\" + alien_proc_id + \".jdl\"\n    cmd = \"alien.py ps --jdl \" + alien_proc_id + \" > \" + filename\n    proc = subprocess.Popen([cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\n    out, err = proc.communicate()\n    if proc.returncode == 0:\n        return filename\n    print('Fetching JDL failed. Ensure you have access to jalien')\n    return None\n\n# let's begin with a JDL parser\n# the function tokenizes the JDL and returns a dictionary of keys and values\n# it assumes the JDL is syntactically correct and in the standard Alien format (no comments, etc.)\ndef parseJDL(jdlfile, proc_id = -1):\n    parsed_dict = {}\n    if jdlfile is None or len(jdlfile) == 0:\n        return parsed_dict",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/jdl_to_script.py"
        }
    ],
    "13d5e95750f099b4ab6c372594d2e564d232f6b1297a4065286e2e7f2d87cb05": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    f = open(jdlfile)\n    if f:\n        linelist = [line.rstrip('\\n') for line in f if \"LPMMetaData\" not in line]\n        # merge lines into a single string\n        flatjdl = \"\".join(linelist)\n        # separate the string by ';' (but ignore any within strings by removing LPMMetaData)\n        statements = flatjdl.split(\";\")\n        for s in statements:\n            if s:\n                key, value = s.split(\" = \")\n                parsed_dict[key.strip()] = value.strip()\n        \n        print(parsed_dict)\n        f.close()\n        return parsed_dict\n    \n    else:\n        print(\"Could not open file\")\n        return {}  \n\n  # generates a bash script to run the jdl locally\ndef constructRuntimeScript(jdldict):\n  script=[\"#!/usr/bin/env bash\"]\n  # we need to set up the correct software environment\n  packagelist = toList(jdldict['Packages'])\n  packagestring = \",\".join(packagelist)\n  script.append(\"/cvmfs/alice.cern.ch/bin/alienv printenv \" + packagestring + \" &> environment\")\n  script.append(\"source environment\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/jdl_to_script.py"
        }
    ],
    "bf1ba18a4068709be58651ac84ad3e8b629c8373dfee52db796be6610123b061": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now fetch all necessary input files\n# a) the executable\nscript.append(\"alien.py cp \" + cleanFileName(jdldict['Executable']) + \" file:./\")\n# b) any additional inputs\nfor f in toList(jdldict['InputFile']):\n    script.append(\"alien.py cp \" + cleanFileName(f) + \" file:./\")\n\n# export the original PROC if available\nif args.from_proc_id != None:\n    script.append(\"export ALIEN_PROC_ID=\"+args.from_proc_id)\n\n# export all variables specified in the JDL\nfor env in toList(jdldict['JDLVariables']):\n    var=removeQuote(env).lstrip().rstrip()\n    script.append(\"export ALIEN_JDL_\" + var.upper() + \"=\" + jdldict[var])\n\n# execute the script --> run the executable with arguments -- and remove the path\nrevexec=removeQuote(jdldict['Executable'][::-1])\nfirstslashindex=revexec.find('/')\nnopathexec=revexec[0:firstslashindex][::-1]\nscript.append(\"chmod +x \" + nopathexec)\nscript.append(\"./\" + nopathexec + \" \" + jdldict.get('Arguments',''))\n\nreturn script",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/jdl_to_script.py"
        }
    ],
    "8f0d7f5f546627c335f37e7496aa28183518b38d51e5832c2b75936c967edd8f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return script\n\n# executes the script stored in a line by line list\ndef convertToScript(scriptlist, outfilename):\n  f=open(outfilename,'w')\n  if f:\n    for line in scriptlist:\n      f.write(line + '\\n')\n    f.close()\n    # make the script executable\n    os.system(\"chmod +x \" + outfilename)\n    # this is more complex: os.chmod(outfilename, stat.S_IEXEC | stat.S)\n\njdlfilename=''\nif args.from_proc_id!=None:\n  jdlfilename=fetchJDL(args.from_proc_id)\nelse:\n  jdlfilename=args.jdl\n\njdl_dict = parseJDL(jdlfilename)\nprint (jdl_dict)\nscript = constructRuntimeScript(jdl_dict)\nconvertToScript(script, args.o)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/jdl_to_script.py"
        }
    ],
    "f7e08a41696b044e51ccc1832893fdc65592f4d53fcccce03d7e94493fb3d07b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n#\n# Definition common functionality\n\nfrom os.path import join, exists\nfrom os import remove\nfrom math import log10, pow\nimport re\n\nfrom ctypes import c_char_p\nfrom ROOT import gSystem, TFile, TCanvas, TPad, TLegend, TH2, TH3, TText, TPaveText, kWhite, kRed, kBlue, kGreen, kMagenta, kCyan, kOrange, kYellow, TProfile\n\n\ndef style_histograms(histograms):\n    if isinstance(histograms[0], (TH2, TH3)):\n        return\n    colors = (kRed + 2, kBlue - 4, kGreen + 3, kMagenta + 1, kCyan + 2, kOrange + 5, kYellow - 6)\n    linestyles = (1, 10, 2, 9, 8, 7)\n\n    for i, h in enumerate(histograms):\n        h.SetLineStyle(linestyles[i % len(linestyles)])\n        h.SetLineColor(colors[i % len(colors)])\n        h.SetLineWidth(1)\n\ndef find_range_not_empty_1D(histogram):\n    axis = histogram.GetXaxis()\n    minX = axis.GetBinLowEdge(1)\n    maxX = axis.GetBinUpEdge(axis.GetNbins())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "fc1b30a1c14ec19a2a6044086fa5536974d96e33622358a045cad289ff3bbff3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    for i in range(1, axis.GetNbins() + 1):\n        # move from left to right to locate the first non-empty bin\n        if histogram.GetBinContent(i) != 0:\n            minX = axis.GetBinLowEdge(i)\n            break\n\n    for i in range(axis.GetNbins(), 0, -1):\n        # move from right to left to locate the last non-empty bin\n        if histogram.GetBinContent(i) != 0:\n            maxX = axis.GetBinUpEdge(i)\n            break\n\n    return minX, maxX\n\n\ndef adjust_axis_text(axis, label_size, title_size):\n    axis.SetLabelFont(43)\n    axis.SetTitleFont(43)\n    axis.SetLabelSize(label_size)\n    axis.SetTitleSize(title_size)\n\n\ndef make_frame(pad, histograms):\n    integralRef = histograms[0].Integral()\n    shouldBeLog = False\n    minY = histograms[0].GetMinimum(0)\n    maxY = histograms[0].GetMaximum()\n\n    minX, maxX = findRangeNotEmpty1D(histograms[0])\n\n    # determine minima and maxima\n    for h in histograms[1:]:\n        minY = min(h.GetMinimum(0), minY)\n        maxY = max(h.GetMaximum(), maxY)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "566c2b69cf75a1bf5d2465ff7869628a545fc07a65e8cc0e3ff31d809302b323": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    minXNext, maxXNext = findRangeNotEmpty1D(h)\n        minX = min(minX, minXNext)\n        maxX = max(maxX, maxXNext)\n\n        integral = h.Integral()\n        if (integralRef > 0 and integral / integralRef > 100) or (integral > 0 and integralRef / integral > 100):\n            # determine if a log plot is necessary\n            shouldBeLog = True\n\n    # finalize the y-axis limits\n    if shouldBeLog:\n        margin = log10(maxY / minY)\n        minY = minY / pow(10, margin * 0.1)\n        maxY = maxY * pow(10, margin * 0.3)\n    else:\n        margin = 0.2 * (maxY - minY)\n        maxY += 3 * margin\n        minY -= max(0., margin)\n\n    if histograms[0].GetXaxis().IsAlphanumeric():\n        alphanumericFrame = histograms[0].Clone()\n        alphanumericFrame.Reset(\"ICEMS\")\n        return alphanumericFrame, shouldBeLog\n\n    frame = pad.DrawFrame(minX, minY, maxX, maxY, histograms[0].GetYaxis().GetTitle())\n\n    return frame, shouldBeLog",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "81356b6b7f9cfaefa9e750263f28137347ad8d87f5a64dbf453e3a27c7e79bad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return frame, logY\n\n\ndef plot_single_overlay_1d(histograms, more_objects, out_path, *args):\n\n    ratios = []\n    denominator = histograms[0]\n    if isinstance(denominator, TProfile):\n        return\n    for h in histograms[1:]:\n        ratio = h.Clone()\n        ratio.SetDirectory(0)\n        ratio.Divide(h, denominator, 1, 1, \"B\")\n        ratios.append(ratio)\n\n    c = TCanvas(\"overlay\", \"\", 800, 800)\n    c.cd()\n\n    nominalPad = TPad(\"nominalPad\", \"nominalPad\", 0, 0.3, 1., 1.)\n    nominalPad.SetBottomMargin(0)\n    ratioPad = TPad(\"ratioPad\", \"ratioPad\", 0, 0.05, 1. ,0.32)\n    ratioPad.SetTopMargin(0)\n    ratioPad.SetBottomMargin(0.2)\n\n    nominalPad.Draw()\n    ratioPad.Draw()\n\n    nominalPad.cd()\n    frame, logY = create_frame(nominalPad, histograms)\n    yAxis = frame.GetYaxis()\n    yAxis.ChangeLabel(1, -1, -1, -1, -1, -1, \" \")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "9d3d15bc15a79e8195e3230455bca9ccdf4868a5dcd6951e50ebb673f22d6052": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    adjust_axis_text(yAxis, 20, 20)\n    adjust_axis_text(nominalFrame.GetXaxis(), 0, 0)\n    nominalFrame.Draw(\"*\")\n    for h in histograms:\n        h.Draw(\"same E hist\")\n    for mo in more_objects:\n        mo.Draw(\"same\")\n\n    if logY:\n        nominalPad.SetLogy()\n\n    ratioPad.cd()\n    ratioFrame, logY = make_frame(ratioPad, ratios)\n    axis = ratioFrame.GetXaxis()\n    axis.SetTitle(histograms[0].GetXaxis().GetTitle())\n    adjust_axis_text(axis, 20, 20)\n    axis = ratioFrame.GetYaxis()\n    axis.SetTitle(\"ratio\")\n    adjust_axis_text(axis, 20, 20)\n\n    ratioFrame.Draw(\"*\")\n    for ratio in ratios:\n        ratio.Draw(\"same\")\n    if logY:\n        ratioFrame.SetLogy()\n\n    c.SaveAs(out_path)\n    c.Close()\n\n\ndef plot_single_overlay_2d(histograms, more_objects, out_path, labels=None):\n\n    n_histograms = len(histograms)\n    if not labels:\n        labels = [f\"label_{i}\" for i in range(n_histograms)]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "f98a82f2336af981afe36288ade28534df9496b2095a28a9da2750b22ee30e57": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    c = TCanvas(\"overlay\", \"\", 2400, 800 * (n_histograms-1))\n    c.Divide(3, n_histograms - 1)\n    c.cd(1)\n    histograms[0].SetTitle(f\"({labels[0]})\" + histograms[0].GetTitle())\n    histograms[0].SetStats(0)\n    histograms[0].Draw(\"colz\")\n\n    keep_elements = []\n    if histograms[0].GetEntries() == 0:\n        t1 = TText(0.5, 0.5, \"EMPTY\")\n        keep_elements.append(t1)\n        t1.SetNDC()\n        t1.Draw()\n\n    ratios = []\n\n    for i, h in enumerate(histograms[1:], start=1):\n        ratio = h.Clone()\n        ratio.SetDirectory(0)\n        ratios.append(ratio)\n        ratio.SetTitle(f\"{h.GetTitle()} ({labels[i]} / {labels[0]})\")\n        ratio.SetStats(0)\n        ratio.Divide(histograms[0])\n        h.SetStats(0)\n        h.SetTitle(f\"{h.GetTitle()} ({labels[i]})\")\n\n        c.cd(i * 3 - 1)\n        h.Draw(\"colz\")\n        if h.GetEntries() == 0:\n            t1 = TText(0.5, 0.5, \"EMPTY\")\n            t1.SetNDC()\n            t1.Draw()\n            keep_elements.append(t1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "05fcaf1fa077ae532a3167d476e7c32ecf1928f96bc9483f619a5223e24525b9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    c.cd(i * 3)\n        ratio.Draw(\"colz\")\n\n    c.cd(3)\n    for mo in more_objects:\n        mo.Draw(\"same\")\n\n    c.SaveAs(out_path)\n    c.Close()\n\n\ndef plot_overlays_root(relative_values, file_config_map1, file_config_map2, output_directory, plot_regex=None):\n\n\n    file1 = TFile(file_config_map1[\"path\"], \"READ\")\n    file2 = TFile(file_config_map2[\"path\"], \"READ\")\n\n    label1 = file_config_map1[\"label\"]\n    label2 = file_config_map2[\"label\"]\n\n    log_file = join(output_directory, \"overlay_plotting.log\")\n    if exists(log_file):\n        remove(log_file)\n\n    for object_name, metrics, results in relative_values.yield_metrics_results_per_object():\n        if plot_regex is not None and not re.search(object_name, plot_regex):\n            continue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "1ad323b41e4d8e2bbda86cb1922ae91b42af433fe1444760c84d2c664c845d41": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    metric_legend_entries = {}\n    for metric, result in zip(metrics, results):\n        if metric.name not in metric_legend_entries:\n            value = \"NONE\" if not metric.comparable else f\"{metric.value}\"\n            metric_legend_entries[metric.name] = value\n        if result is None:\n            continue\n        metric_legend_entries[metric.name] += f\", {result.interpretation}\"\n\n    h1 = file1.Get(object_name)\n    h2 = file2.Get(object_name)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "21b8a58c8cfa053c6f2acef71c7b6a9b5841216732a8522af2d3639bdfd2bda0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "h1 = file1.Get(object_name)\nh2 = file2.Get(object_name)\n\nmore_objects = []\nplot_func = plot_single_overlay_2d\nmetrics_box = TPaveText(0.15, 0.7, 0.4, 0.9, \"brNDC\")\nmetrics_box.SetTextFont(43)\nmetrics_box.SetTextSize(20)\nmetrics_box.SetBorderSize(0)\nmore_objects.append(metrics_box)\nif not isinstance(h1, (TH2, TH3)):\n    plot_func = plot_single_overlay_1d\n    metrics_box.SetFillStyle(0)\n    style_histograms([h1, h2])\n    legend_labels = TLegend(0.65, 0.7, 0.9, 0.9)\n    legend_labels.SetFillStyle(0)\n    legend_labels.SetBorderSize(0)\n    legend_labels.SetTextFont(43)\n    legend_labels.SetTextSize(20)\n    legend_labels.AddEntry(h1, label1)\n    legend_labels.AddEntry(h2, label2)\n    more_objects.append(legend_labels)\nelse:\n    metrics_box.SetFillColor(kWhite)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "76f2ed8488dc0cca8b2ee4cdb4b57160ecaf2e847b38f72ee3bcc33ef91c98bf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PARAPHRASED DOCUMENT:\n    legend_metrics = TLegend(0.15, 0.7, 0.4, 0.9)\n        legend_metrics.SetBorderSize(0)\n        legend_metrics.SetFillStyle(0)\n        for key, value in metric_legend_entries.items():\n            metrics_box.AddText(f\"{key} = {value}\")\n\n        out_path = join(out_dir, f\"{object_name}.png\")\n        gSystem.RedirectOutput(join(out_dir, \"overlay_plotting.log\"), \"a\")\n        plot_func([h1, h2], more_objects, out_path, [label1, label2])\n        gSystem.RedirectOutput(c_char_p(0))\n\n    print(f\"INFO: The log file for overlay plotting is located at {plot_log_file}\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "edfe97b2de33e20c53d2d4773486ca532f1b28b8a260581a37078a2c710dd2ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    all_names = list(set(all_names))\n    for name in all_names:\n        histograms = []\n        current_labels = []\n\n        for object_names, label, file in zip(labels, files):\n            if name not in object_names:\n                continue\n            histograms.append(file.Get(name))\n            current_labels.append(label)\n\n        if not histograms:\n            continue\n\n        more_objects = []\n        plot_function = plot_single_overlay_2d\n        if not isinstance(histograms[0], (TH2, TH3)):\n            plot_function = plot_single_overlay_1d\n            style_histograms(histograms)\n            legend = TLegend(0.65, 0.7, 0.9, 0.9)\n            legend.SetFillStyle(0)\n            legend.SetBorderSize(0)\n            legend.SetTextFont(43)\n            legend.SetTextSize(20)\n            for h, cl in zip(histograms, current_labels):\n                legend.AddEntry(h, cl)\n            more_objects.append(legend)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "7741408c3554c927a1466aad61c02b301057bfb14a8085195b31e64557946433": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    out_path = join(out_dir, f\"{name}.png\")\n    plot_func(histograms, more_objects, out_path, labels)\n\n    gSystem.RedirectOutput(c_char_p(0))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot_root.py"
        }
    ],
    "5e5ed38bf75edc60346efe9f83c89437205a62c6f02bfa033560be2e7a824a35": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n#\n# Definition of common functionality\n\nimport sys\nfrom os.path import join\nfrom os import environ\nimport importlib.util\nfrom itertools import product\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LinearSegmentedColormap\nimport seaborn\nfrom scipy.stats import iqr\n\n\nO2DPG_ROOT = environ.get(\"O2DPG_ROOT\")\nspec = importlib.util.spec_from_file_location(\"o2dpg_release_validation_utils\", join(O2DPG_ROOT, \"RelVal\", \"utils\", '.', 'o2dpg_release_validation_utils.py'))\no2dpg_release_validation_utils = importlib.util.module_from_spec(spec)\nspec.loader.exec_module(o2dpg_release_validation_utils)\nsys.modules[\"o2dpg_release_validation_utils\"] = o2dpg_release_validation_utils\nfrom o2dpg_release_validation_utils import count_interpretations",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "ff9175defa706bddb1caa3ac5f1b6f2c090a4dff8d893febb28f862f3e50db71": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    spec = importlib.util.spec_from_file_location(\"o2dpg_release_validation_plot_root\", join(O2DPG_ROOT, \"RelVal\", \"utils\", '.', 'o2dpg_release_validation_plot_root.py'))\no2dpg_release_validation_plot_root = importlib.util.module_from_spec(spec)\nspec.loader.exec_module(o2dpg_release_validation_plot_root)\nsys.modules[\"o2dpg_release_validation_plot_root\"] = o2dpg_release_validation_plot_root\nfrom o2dpg_release_validation_plot_root import plot_overlays_root, plot_overlays_root_no_rel_val\n\n\ndef plot_pie_charts(rel_val, interpretations, interpretation_colors, out_dir, title=\"\", get_figure=False):\n    \"\"\"\n    Generate pie charts for each metric and test\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "bb3d160b97d72c5c937849601b24d4f574c170f926c0d21c8f4dcd03780ba144": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Each pie chart illustrates the proportion of different interpretations\n\"\"\"\nprint(\"==> Generate pie charts <==\")\nfor metric_name, test_name in product(rel_val.known_metrics, rel_val.known_test_names):\n    figure, ax = plt.subplots(figsize=(20, 20))\n    # gather counts, colors, and labels for the interpretations\n    counts = []\n    colors = []\n    labels = []\n    object_names, results = rel_val.get_result_per_metric_and_test(metric_name, test_name)\n\n    if not len(object_names):\n        continue\n\n    for interpretation in interpretations:\n        n_objects = len(object_names[count_interpretations(results, interpretation)])\n        if not n_objects:\n            continue\n        counts.append(n_objects)\n        colors.append(interpretation_colors[interpretation])\n        labels.append(interpretation)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "1a4e9f62f01f0b7e7a289dd4b8e4914c3681f10403c4e8c196973068560885fd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ax.pie(counts, explode=[0.05 for _ in counts], labels=labels, autopct=\"%1.1f%%\", startangle=90, textprops={\"fontsize\": 30}, colors=colors)\n        ax.axis(\"equal\")\n        ax.axis(\"equal\")\n\n        figure.suptitle(f\"{title} (metric: {metric_name}, test: {test_name})\", fontsize=40)\n        save_path = join(out_dir, f\"pie_chart_{metric_name}_{test_name}.png\")\n        figure.savefig(save_path)\n        if get_figure:\n            return figure\n        plt.close(figure)\n\n\ndef plot_value_histograms(values, out_dir, title=\"values histogram\", get_figure=False):\n    \"\"\"\n    Plot a histogram of metric values\n    \"\"\"\n\n    print(\"==> Plot value histograms <==\")\n    for metric_name in values.known_metrics:\n        figure, ax = plt.subplots(figsize=(20, 20))\n        data = []\n        for _, _, metric in zip(*values.get_metrics(metric_name=metric_name)):\n            if not metric.comparable:\n                continue\n            data.append(metric.value)\n\n        ax.hist(data, bins=20, edgecolor=\"black\")\n        ax.set_title(f\"{title} (metric: {metric_name})\", fontsize=24)\n        ax.set_xlabel(\"Value\")\n        ax.set_ylabel(\"Frequency\")\n        figure.tight_layout()\n        save_path = join(out_dir, f\"histogram_{metric_name}.png\")\n        figure.savefig(save_path)\n        if get_figure:\n            return figure\n        plt.close(figure)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "060beaeb635a5000494c57348bbec184374f4fb0e3bc54372d0414405f919fc7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not values:\n    continue\n\nax.set_xlabel(metric_name, fontsize=20)\nax.set_ylabel(\"counts\", fontsize=20)\nax.hist(values, bins=100)\nax.tick_params(\"both\", labelsize=20)\nfigure.tight_layout()\n\nfigure.suptitle(f\"{title} (metric: {metric_name})\", fontsize=40)\nsave_path = join(out_dir, f\"histogram_values_{metric_name}.png\")\nfigure.savefig(save_path)\nif get_figure:\n    return figure\nplt.close(figure)\n\n\ndef plot_summary_grid(rel_val, interpretations, interpretation_colors, output_dir, get_figure=False):\n    \"\"\"\n    Generate a summary grid per test.\n\n    Horizontal axis: metric names\n    Vertical axis: object names\n\n    Each cell is color-coded based on an interpretation.\n    Additionally, each cell displays the computed metric values.\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "7202e8256ee1de1bf424698e52007a3027e2fa50177cba445dd64d32571590e7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    interpretation_name_to_number = {v: i for i, v in enumerate(interpretations)}\n\n    colors = [None] * len(interpretation_name_to_number)\n    for name, color in interpretation_colors.items():\n        colors[interpretation_name_to_number[name]] = color\n    cmap = LinearSegmentedColormap.from_list(\"Custom\", colors, len(colors))\n    figures = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "7201069fa52962ded3c543bef96537b5159bc268f3a5d83c15daab62e08af091": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "FOR nt IN RANGE(rel_val.number_of_tests):\n    metric_names, object_names, results_matrix = rel_val.get_result_matrix_objects_metrics(nt)\n    # create an array where each interpretation is converted to a numerical value\n    arr_interpretation = np.full(results_matrix.shape, 0, dtype=int)\n    # gather annotations for each cell\n    arr_annot = np.full(results_matrix.shape, \"\", dtype=object)\n    # iterate through the cells and set values and annotations\n    it = np.nditer(results_matrix, flags=['multi_index', \"refs_ok\"])\n    for _ in it:\n        result = results_matrix[it.multi_index]\n        arr_interpretation[it.multi_index] = interpretation_name_to_number[result.interpretation]\n        if result.value is not None:\n            annot = f\"{result.value:.3f} (mean: {result.mean:.3f})\"\n            if result.n_sigmas is not None:\n                annot += f\" (n_sigma: {result.n_sigmas:.3f})\"\n        else:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "c3f1f7aad5a8a5b8cf760848c92f52891079dc5a9f1fbfc144a5d82c2c485883": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ANNOT += f\" (n_sigma: {result.n_sigmas:.3f})\"\nelse:\n    annot = result.non_comparable_note",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "efcbec200bd2b1a2f003849f5115efea4afaf351d6d1470b3ba3bd135e365e13": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    arr_annot[it.multi_index] = annot\n\n    # now it's time to plot\n    figure, ax = plt.subplots(figsize=(20, 20))\n    seaborn.heatmap(arr_interpretation, ax=ax, cmap=cmap, vmin=-0.5, vmax=len(interpretations) - 0.5, yticklabels=object_names, xticklabels=metric_names, linewidths=0.5, annot=arr_annot, fmt=\"\")\n    cbar = ax.collections[0].colorbar\n    cbar.set_ticks(range(len(colors)))\n    cbar.set_ticklabels(interpretations)\n    ax.set_title(\"Test summary [value (mean), (n_sigmas)]\", fontsize=30)\n    figure.tight_layout()\n\n    if get_figure:\n        figures.append(figure)\n        continue\n\n    output_path = join(out_dir, f\"summary_{rel_val.get_test_name(nt)}.png\")\n    figure.savefig(output_path)\n    plt.close(figure)\n\n    if get_figure:\n        return figures\n\n\ndef plot_compare_summaries(rel_vals, out_dir, *, labels=None, get_figure=False):\n    \"\"\"\n    Plot the metric values for each object.\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "76435d34f43c78fa42d542526d769301d512c3683341127418971231e35b585c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print(\"==> Display metric values <==\")\n\nfigures = []\n\nif not labels:\n    labels = [f\"summary_{i}\" for i, _ in enumerate(rel_vals)]\n\ntest_names = list(rel_vals[0].known_test_names)\nmetric_names = list(rel_vals[0].known_metrics)\nfor rel_val in rel_vals[1:]:\n    test_names = list(set(test_names + list(rel_val.known_test_names)))\n    metric_names = list(set(metric_names + list(rel_val.known_metrics)))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "fc1d0e98bedf70cf971e763140e3f0b2743c003ed5973e8d15fedbe96c107c4c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for each combination of metric_name and test_name in the pairs generated by the product of metric_names and test_names:\n    create a figure and axis using plt.subplots with a figure size of 20x20.\n    initialize plot_this to False.\n    for each rel_val and its corresponding label in the zipped lists of rel_vals and labels:\n        retrieve object_names and results using rel_val's get_result_per_metric_and_test method for the current metric_name and test_name.\n        extract values and means from the results.\n        if no values are present, continue to the next iteration.\n        set plot_this to True.\n        plot object_names against values and means on the axis with appropriate labels.\n    if plot_this remains False, continue to the next iteration.\n    add a legend to the plot at the best location with a fontsize of 20.\n    adjust the tick parameters for both axes to have a fontsize of 20.\n    rotate the x-axis tick labels by 90 degrees.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "1fcf983f99ee033d2c90c1e05d3beecb5329ad3b53550470dc6a3aa80e1f0504": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    figure.tight_layout()\n        figure.savefig(os.path.join(out_dir, f\"values_thresholds_{metric_name}_{test_name}.png\"))\n        if get_figure:\n            figures.append(figure)\n            continue\n        plt.close(figure)\n    if get_figure:\n        return figures\n\n\ndef plot_overlays(rel_val, file_config_map1, file_config_map2, out_dir, plot_regex=None):\n    \"\"\"\n    A wrapper for ROOT overlay plotting\n    \"\"\"\n    print(\"==> Plot overlays <==\")\n    plot_overlays_root(rel_val, file_config_map1, file_config_map2, out_dir, plot_regex)\n\n\ndef plot_overlays_no_rel_val(file_configs, out_dir):\n    \"\"\"\n    A wrapper for ROOT plotting when no RelVal object is provided\n    \"\"\"\n    print(\"==> Plot overlays <==\")\n    plot_overlays_root_no_rel_val(file_configs, out_dir)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_plot.py"
        }
    ],
    "2a3e385b1f2652a5ed42020e9ed33deb7f5b7a67447eeafcbcafedd28b74e42d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n#\n# Definition of common functionality\n\nimport re\nfrom os.path import join, exists, isdir, abspath\nfrom os import makedirs, rename\nfrom shutil import rmtree, copy\nfrom itertools import product\nfrom subprocess import Popen, PIPE, STDOUT\nfrom shlex import split\nimport json\nimport numpy as np\n\n\ndef default_evaluation(limits):\n    \"\"\"\n    Returns a lambda function f(value) -> bool\n\n    This function determines if a given value passes or fails (True/False)\n    \"\"\"\n    if limits[0] is None and limits[1] is None:\n        return lambda x: None\n    if limits[0] is not None and limits[1] is None:\n        return lambda x: x >= limits[0]\n    if limits[0] is None and limits[1] is not None:\n        return lambda x: x <= limits[1]\n    return lambda x: limits[0] <= x <= limits[1]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "aee483d6c08ea135b84a79ca807193737d3007175f2f39ac6d3d9ee9534b5802": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def compute_limits(mean, std):\n    \"\"\"\n    Calculate numerical boundaries based on the provided mean and standard deviation\n    \"\"\"\n    if mean is None or std is None:\n        return (None, None)\n    low, high = std[0], std[1]\n    if low is not None and high is None:\n        return (mean - low, None)\n    if low is None and high is not None:\n        return (None, mean + high)\n    return (mean - low, mean + high)\n\n\nclass Result:\n    \"\"\"\n    Stores outcome values after assessing a metric against its defined limits\n\n    This represents the most basic unit of results we will use in the end\n    \"\"\"\n    FLAG_UNKNOWN = 0\n    FLAG_PASSED = 1\n    FLAG_FAILED = 2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "50e8fa06cfce7f83f558cf1af73e780721917b98bcc38d6da309893fca34e7bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def __init__(self, name=None, value=None, result_flag=FLAG_UNKNOWN, n_sigmas=None, mean=None, interpretation=None, non_comparable_note=None, in_dict=None):\n        self.name = name\n        self.value = value\n        self.result_flag = result_flag\n        self.n_sigmas = n_sigmas\n        self.mean = mean\n        self.interpretation = interpretation\n        self.non_comparable_note = non_comparable_note\n        if in_dict is not None:\n            self.from_dict(in_dict)\n\n    def as_dict(self):\n        return {\"result_name\": self.name,\n                \"value\": self.value,\n                \"result_flag\": self.result_flag,\n                \"n_sigmas\": self.n_sigmas,\n                \"mean\": self.mean,\n                \"interpretation\": self.interpretation,\n                \"non_comparable_note\": self.non_comparable_note}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "0d1bb1c68ff52b2371f633d6546d3334bffa5ec70e7446f206ec942446209e1a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "class Metric:\n    def __init__(self, object_name=None, name=None, value=None, proposed_threshold=None, comparable=None, lower_is_better=None, non_comparable_note=None, in_dict=None):\n        self.object_name = object_name\n        self.name = name\n        self.value = value\n        self.comparable = comparable\n        self.proposed_threshold = proposed_threshold\n        self.lower_is_better = lower_is_better\n        self.non_comparable_note = non_comparable_note\n        if in_dict is not None:\n            self.from_dict(in_dict)\n\n    def from_dict(self, in_dict):\n        self.name = in_dict[\"result_name\"]\n        self.value = in_dict[\"value\"]\n        self.result_flag = in_dict[\"result_flag\"]\n        self.n_sigmas = in_dict[\"n_sigmas\"]\n        self.mean = in_dict[\"mean\"]\n        self.interpretation = in_dict[\"interpretation\"]\n        self.non_comparable_note = in_dict[\"non_comparable_note\"]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "05e3a33ae1f1aa99c95450c8d74a1d6cae3f89ca85d5ee56c5f67e501a7e6298": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def __eq__(self, other):\n        return self.object_name == other.object_name and self.name == other.name\n\n    def as_dict(self):\n        return {\"object_name\": self.object_name,\n                \"metric_name\": self.name,\n                \"value\": self.value,\n                \"comparable\": self.comparable,\n                \"proposed_threshold\": self.proposed_threshold,\n                \"lower_is_better\": self.lower_is_better,\n                \"non_comparable_note\": self.non_comparable_note}\n\n    def from_dict(self, in_dict):\n        self.object_name = in_dict[\"object_name\"]\n        self.name = in_dict[\"metric_name\"]\n        self.value = in_dict[\"value\"]\n        self.comparable = in_dict[\"comparable\"]\n        self.proposed_threshold = in_dict[\"proposed_threshold\"]\n        self.lower_is_better = in_dict[\"lower_is_better\"]\n        self.non_comparable_note = in_dict[\"non_comparable_note\"]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "13e7f85f3d169b791d87cb53825aad3271a093047730bf05269fb56f7d3a2866": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    class TestLimits:\n    \"\"\"\n    Integrates features to manage limits, validate values, and generate Result objects\n    \"\"\"\n    def __init__(self, name, mean=None, std=None, test_function=default_evaluation):\n        self.name = name\n        self.mean = mean\n        self.std = std\n        self.limits = compute_limits(mean, std)\n        self.test_function = test_function(self.limits)\n\n    def set_test_function(self, test_function):\n        \"\"\"\n        Assigns a test function that, using the limits, returns a lambda function to assess pass/fail for a given value\n        \"\"\"\n        self.test_function = test_function(self.limits)\n\n    def test(self, metric):\n        \"\"\"\n        Assess a value and return a Result object\n        \"\"\"\n        value = metric.value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "659cbd41b528cb9deaf7cd477e42cd0622f6f7a7a524a80cb4e43b10273ee37c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if value is None:\n        return Result(self.name, non_comparable_note=metric.non_comparable_note)\n    if not self.test_function or self.mean is None:\n        return Result(self.name, value, non_comparable_note=metric.non_comparable_note)\n    n_sigmas = self.std[int(value > self.mean)]\n    if n_sigmas == 0:\n        n_sigmas = None\n    elif n_sigmas is not None:\n        n_sigmas = abs(self.mean - value) / n_sigmas if n_sigmas != 0 else 0\n\n    # NOTE We aim for the test_function to directly return the test flag\n    test_flag = self.test_function(value)\n    if test_flag:\n        test_flag = Result.FLAG_PASSED\n    elif test_flag is None:\n        test_flag = Result.FLAG_UNKNOWN\n    else:\n        test_flag = Result.FLAG_FAILED\n    return Result(self.name, value, test_flag, n_sigmas, self.mean, non_comparable_note=metric.non_comparable_note)\n\n\nclass Evaluator:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "dc9f60a80f512802e043f13e91502327bc213705f0c1c2bbf239643bbd000aa3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    class Evaluator:\n\n    def __init__(self):\n        self.object_names = []\n        self.metric_names = []\n        self.test_names = []\n        self.tests = []\n        self.mask_any = None\n\n    def add_limits(self, object_name, metric_name, test_limits):\n        self.object_names.append(object_name)\n        self.metric_names.append(metric_name)\n        self.test_names.append(test_limits.name)\n        self.tests.append(test_limits)\n\n    def initialise(self):\n        self.object_names = np.array(self.object_names, dtype=str)\n        self.metric_names = np.array(self.metric_names, dtype=str)\n        self.test_names = np.array(self.test_names, dtype=str)\n        self.tests = np.array(self.tests, dtype=TestLimits)\n        self.mask_any = np.full(self.test_names.shape, True)\n\n    def evaluate(self, metrics):\n        \"\"\"\n        All arguments must have the same length and cannot be None.\n        \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "0027b6f8eed34874d8fa1e7f2937330e0e7db50684cf81a4b3efbabc6b1ffcb0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# retrieve all tests associated with the specified arguments\nresults = []\nreturn_metrics_idx = []\n\n# likely there is an optimized approach\nfor idx, metric in enumerate(metrics):\n    mask = (self.object_names == metric.object_name) & (self.metric_names == metric.name)\n    if not np.any(mask):\n        continue\n    for t in self.tests[mask]:\n        return_metrics_idx.append(idx)\n        results.append(t.test(metric))\n\nreturn np.array(return_metrics_idx, dtype=int), np.array(results, dtype=Result)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "d862a552fe88df239d240fd5a30cf81187d092a95bb654d3ac7f493693b6c05f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def __init__(self):\n    # metric names to be included (leave empty for all)\n    self.include_metrics = []\n    # metric names to be excluded, overrides self.include_metrics\n    self.exclude_metrics = []\n    # regex lists to include/exclude objects based on their names\n    self.include_patterns = None\n    self.exclude_patterns = None\n\n    # collecting all available data; the following three members will have the same length\n    self.object_names = None\n    self.metric_names = None\n    # metric objects\n    self.metrics = None\n\n    # unique object and metric names\n    self.known_objects = None\n    self.known_metrics = None\n\n    # collecting all results; the following three members will have the same length\n    self.results = None\n    # each index corresponds to the object in self.object_names, self.metric_names and self.metrics\n    self.results_to_metrics_idx = None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "d6e59161dacd27234c4f636fff9eb235d41c481d9797ca3ba4c26aca34669961": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# unique list of test names\nself.known_test_names = None\n\n# to store some annotations\nself.annotations = None\n\ndef enable_metrics(self, metric_names):\n    \"\"\"\n    Activate a list of metrics by their names\n    \"\"\"\n    if not metric_names:\n        return\n    for metric in metric_names:\n        if metric in self.include_metrics:\n            continue\n        self.include_metrics.append(metric)\n\ndef disable_metrics(self, metric_names):\n    \"\"\"\n    Deactivate a list of metrics by their names\n    \"\"\"\n    if not metric_names:\n        return\n    for metric in metric_names:\n        if metric in self.exclude_metrics:\n            continue\n        self.exclude_metrics.append(metric)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "e6c5f703ed21b4fa0c0dadce27e63c4cc2e804c1debeb84e41993e8ce59a4749": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def consider_metric(self, metric_name):\n        \"\"\"\n        Determines if a specific metric should be considered.\n        \"\"\"\n        if self.exclude_metrics and metric_name in self.exclude_metrics:\n            return False\n        if not self.include_metrics or metric_name in self.include_metrics:\n            return True\n        return False\n\n    def set_object_name_patterns(self, include_patterns, exclude_patterns):\n        \"\"\"\n        Load patterns to be used for regex matching.\n        \"\"\"\n        def load_this_patterns(patterns):\n            if not patterns or not patterns[0].startswith(\"@\"):\n                return patterns",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "ff9bbfc6220b35386ebdcd50de7f4a13269ed05d9b40cf4bc9a1b9f6edd82f2a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    patterns_from_file = []\n    filename = patterns[0][1:]\n    if not os.path.exists(filename):\n        print(f\"WARNING: Pattern file {filename} does not exist, no patterns will be extracted!\")\n        return\n    with open(filename, \"r\") as f:\n        for line in f:\n            line = line.strip()\n            # remove all comments; supports inline comments or entire comment lines), then take the first token\n            line = line.split(\"#\")[0].strip()\n            if not line:\n                continue\n            patterns_from_file.append(line)\n    return patterns_from_file\n\n    self.include_patterns = load_this_patterns(include_patterns)\n    self.exclude_patterns = load_this_patterns(exclude_patterns)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "0da18ce52495d4761d20e652f32f21956d8dc0b5d5543b5d95abd35f47f04962": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def consider_object(self, object_name):\n    \"\"\"\n    evaluate a name against a set of regex to determine if it should be included\n    \"\"\"\n    if not self.include_patterns and not self.exclude_patterns:\n        return True\n\n    if self.include_patterns:\n        for pattern in self.include_patterns:\n            if re.search(pattern, object_name):\n                return True\n        return False\n\n    # we can only reach this point if there are no include_patterns\n    # which implies the presence of exclude_patterns, as otherwise we would have returned earlier\n    for pattern in self.exclude_patterns:\n        if re.search(pattern, object_name):\n            return False\n    return True",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "cc371759c6a06d029eb52cba8f346e5ba50e6cf43a11511e8ba01dd403716ed6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "@staticmethod\ndef read(path_or_dict):\n    \"\"\"\n    Convenient function to load metrics/results from a JSON file or a dictionary\n    \"\"\"\n    if isinstance(path_or_dict, dict):\n        return path_or_dict\n    with open(path_or_dict, \"r\") as f:\n        return json.load(f)\n\ndef add_metric(self, metric):\n    \"\"\"\n    Adds a metric\n    \"\"\"\n    object_name = metric.object_name\n    if not self.consider_object(object_name) or not self.consider_metric(metric.name):\n        return False\n    self.object_names.append(object_name)\n    self.metric_names.append(metric.name)\n    self.metrics.append(metric)\n    return True",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "d6404cc107edcf85ea4bbc24041a8080bdf3dee3b90604197cb0c98d7d2ecdff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def add_result(self, metric_idx, result):\n    metric = self.metrics[metric_idx]\n    object_name = metric.object_name\n    if not self.consider_object(object_name) or not self.consider_metric(metric.name):\n        return\n    self.results_to_metrics_idx.append(metric_idx)\n    self.results.append(result)\n\ndef get_metric_checking_dict(self, in_dict):\n    \"\"\"\n    Verify if this metric is already present\n    \"\"\"\n    if self.metrics is None:\n        return None, None\n\n    metric = Metric(in_dict=in_dict)\n\n    for idx, search_metric in enumerate(self.metrics):\n        if metric == search_metric:\n            return idx, search_metric\n\n    return None, metric\n\ndef to_numpy(self):\n    \"\"\"\n    Transform all lists into numpy arrays for quicker access later\n    \"\"\"\n    self.known_objects = np.unique(self.object_names)\n    self.known_metrics = np.unique(self.metric_names)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "43e41ad10b753102180b02d6538f26aaffe6e97344eca7f5830859c35b97d421": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    self.object_names = np.array(self.object_names, dtype=str)\n    self.metric_names = np.array(self.metric_names, dtype=str)\n    self.metrics = np.array(self.metrics, dtype=Metric)\n    self.any_mask = np.full(self.object_names.shape, True)\n\n    # currently, results are still in list form\n    self.results_to_metrics_idx = np.array(self.results_to_metrics_idx, dtype=int) if self.results else None\n    self.test_names_results = np.array([r.name for r in self.results]) if self.results else None\n    self.known_test_names = np.unique(self.test_names_results) if self.results else None\n    self.results = np.array(self.results, dtype=Result) if self.results else None\n    self.result_filter_mask = np.full(self.results.shape, True) if self.results is not None else None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "c70b1bfde213e0d009724210b304721fa4e5fabee7461315f847feb4d5abe299": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def load(self, summaries_to_test):\n    \"\"\"\n    This method loads and populates the object using a dictionary\n    \"\"\"\n    self.annotations = []\n    self.object_names = []\n    self.metric_names = []\n    self.metrics = []\n    self.results_to_metrics_idx = []\n    self.results = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "f73cfca8ba35fcabcc815501cfadb02b6ccd2e4d4079399cc3556cbd0b59286c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for summary_to_test in summaries_to_test:\n    summary_to_test = self.read(summary_to_test)\n    if annotations := summary_to_test.get(RelVal.KEY_ANNOTATIONS, None):\n        self.annotations.append(annotations)\n    for line in summary_to_test[RelVal.KEY_OBJECTS]:\n        # each list object corresponds to an object with a specific test result\n        # we first verify if this metric has already been loaded\n        idx, metric = self.get_metric_checking_dict(line)\n        if idx is None:\n            # in this case, this metric is new\n            idx = len(self.metrics)\n            if not self.add_metric(metric):\n                # only proceed with addition if the metric is not already present\n                continue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "b3a2157c4c9530be22c99af9665e81fa26e09a3523b98a95050cdd8e049fefa6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if \"result_name\" in line:\n    # include this result; it will be associated with the metric it is derived from using the index\n    self.add_result(idx, Result(in_dict=line))\n\n    # transform all previous lists into numpy objects\n    self.to_numpy()\n\ndef get_metrics(self, object_name=None, metric_name=None):\n    \"\"\"\n    retrieve all metrics that match a specified object_name or metric_name\n\n    Args:\n        object_name: str or None\n            the object name to search for; if None, any object name will be considered\n        metric_name: str or None\n            the metric name to search for; if None, any metric name will be considered",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "0028da528ba2b5389b3be14babc6f13bece664e2d39da170d394a4ba23a5b6f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "NOTE that currently, searches can only be performed using a single string for object or metric name. Matching multiple criteria is not supported at this time.\n    \n        mask = self.any_mask if object_name is None else np.isin(self.object_names, object_name)\n        mask = mask & (self.any_mask if metric_name is None else np.isin(self.metric_names, metric_name))\n        return self.object_names[mask], self.metric_names[mask], self.metrics[mask]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "6e5746910affce55682c785a277d7796eec856a84e13ea1e570d0ec802192a09": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def apply_evaluator(self, evaluator):\n    \"\"\"\n    Apply loaded tests\n    \"\"\"\n    # First, we need to eliminate duplicates from object_names and metric_names, and remove the corresponding duplicates from metrics.\n    if self.results is not None:\n        object_metric_names = np.vstack((self.object_names, self.metric_names)).T\n        _, idx = np.unique(object_metric_names, return_index=True, axis=0)\n        self.metrics = self.metrics[idx]\n        self.object_names = self.object_names[idx]\n        self.metric_names = self.metric_names[idx]\n        self.any_mask = np.full(self.object_names.shape, True)\n\n    self.results_to_metrics_idx, self.results = evaluator.test(self.metrics)\n    self.test_names_results = np.array([r.name for r in self.results])\n    self.known_test_names = np.unique(self.test_names_results)\n    self.result_filter_mask = np.full(self.results.shape, True)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "12ac1176fe047652c54d46fdb86f8833d7b85559bd604349e7d82ac36a53021f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def interpret(self, interpret_func):\n        \"\"\"\n        Apply an interpretation to the Result objects using a user-defined function\n        \"\"\"\n        for metric_idx, result in zip(self.results_to_metrics_idx, self.results):\n            interpret_func(result, self.metrics[metric_idx])\n\n    def filter_results(self, filter_func):\n        \"\"\"\n        Create a mask to filter results without discarding any\n        \"\"\"\n        if self.results is None:\n            return\n        self.result_filter_mask = [filter_func(result) for result in self.results]\n\n    def query_results(self, query_func=None):\n        \"\"\"\n        Examine Result objects using a function provided by the user\n\n        \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "f38f236e95fb10a1827ceb8f5198cf5bed3b20b211890b490e1347ddf50e9850": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    Return matching Result objects along with their names\n        \"\"\"\n        mask = np.array([query_func is None or query_func(result) for result, _ in enumerate(self.results)])\n        if self.result_filter_mask is not None:\n            mask = mask & self.result_filter_mask\n        idx = self.results_to_metrics_idx[mask]\n        return np.take(self.object_names, idx), np.take(self.metric_names, idx), self.test_names_results[idx], self.results[idx]\n\n    @property\n    def number_of_tests(self):\n        return len(self.known_test_names) if self.results is not None else 0\n\n    @property\n    def number_of_metrics(self):\n        return len(self.known_metrics)\n\n    @property\n    def number_of_objects(self):\n        return len(self.known_objects)\n\n    def get_test_name(self, idx):\n        return self.known_test_names[idx]\n\n    def get_metric_name(self, idx):\n        return self.known_metrics[idx]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "4a2805f128747024cf38427da0a964a0cbfaa54428f176d611a7acef578255a4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def get_result_per_metric_and_test(self, metric_index_or_name=None, test_index_or_name=None):\n    \"\"\"\n    Return Result objects that match the specified metric or test\n    \"\"\"\n    test_name = test_index_or_name if (isinstance(test_index_or_name, str) or test_index_or_name is None) else self.known_test_names[test_index_or_name]\n    metric_name = metric_index_or_name if (isinstance(metric_index_or_name, str) or metric_index_or_name is None) else self.known_metrics[metric_index_or_name]\n    metric_idx = np.argwhere(self.metric_names == metric_name) if metric_name is not None else self.results_to_metrics_idx\n    mask = np.isin(self.results_to_metrics_idx, metric_idx)\n    if self.result_filter_mask is not None:\n        mask = mask & self.result_filter_mask\n    if test_name is not None:\n        mask = mask & (self.test_names_results == test_name)\n    return np.take(self.object_names, self.results_to_metrics_idx[mask]), self.results[mask]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "e0b745665aa0d8e30fb6819674e24b4846e06785bb1a6a2d2295fdbcdeb05a1c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def get_result_matrix_objects_metrics(self, test_index):\n    \"\"\"\n    Return a matrix of Result objects.\n\n    The vertical axis represents object names, while the horizontal axis represents metric names.\n\n    Additionally, return the metric and object names to inform the user about the content.\n    \"\"\"\n    mask = self.test_names_results == (self.known_test_names[test_index])\n    idx = self.results_to_metrics_idx[mask]\n    results = self.results[mask]\n    object_names = np.take(self.object_names, idx)\n    metric_names = np.take(self.metric_names, idx)\n\n    idx = np.lexsort((metric_names, object_names))\n\n    object_names = np.sort(np.unique(object_names))\n    metric_names = np.sort(np.unique(metric_names))\n\n    return metric_names, object_names, np.reshape(results[idx], (len(object_names), len(metric_names)))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "a1e03b6ed04a995c692f290e60d36af2a21bf6744dff3fc5080360dc10aa2744": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def generate_object_metrics_results():\n    \"\"\"\n    Sequentially return metrics and results for each object\n    \"\"\"\n    results = None\n    if self.results is not None:\n        if self.result_filter_mask is not None:\n            mask = self.result_filter_mask\n        else:\n            mask = np.full(self.results.shape, True)\n        idx = self.results_to_metrics_idx[mask]\n        object_names = np.take(self.object_names, idx)\n        metrics = np.take(self.metrics, idx)\n        results = self.results[mask]\n    else:\n        object_names = self.object_names\n        metrics = self.metrics\n\n    for object_name in np.unique(object_names):\n        mask = object_names == object_name\n        yield_metrics = metrics[mask]\n        yield_results = results[mask] if results is not None else np.array([None] * len(yield_metrics))\n        yield object_name, yield_metrics, yield_results",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "1d1ee4c4e4ed2a0d7adbf8826515072bd56725c3bdde2b073d73a51469aed366": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def write(self, filepath, annotations=None):\n        \"\"\"\n        Save all data to a JSON file\n\n        The structure matches what ROOT's RelVal produces, allowing for the recreation of a RelVal object\n        \"\"\"\n        all_objects = []\n\n        def make_dict_include_results(object_name, metric, result):\n            return {RelVal.KEY_OBJECT_NAME: object_name} | metric.as_dict() | result.as_dict()\n\n        def make_dict_exclude_results(object_name, metric, *args):\n            return {RelVal.KEY_OBJECT_NAME: object_name} | metric.as_dict()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "a92ebde7d728f4682c865b4155f97ce44706b90bcce137e229c51663c9b63479": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if self.results is None:\n    object_names = self.object_names\n    metrics = self.metrics\n    results = np.empty(metrics.shape, dtype=bool)\n    make_dict = make_dict_exclude_results\nelse:\n    object_names = np.take(self.object_names, self.results_to_metrics_idx)\n    metrics = np.take(self.metrics, self.results_to_metrics_idx)\n    results = self.results\n    make_dict = make_dict_include_results\n\nfor object_name, metric, result in zip(object_names, metrics, results):\n    all_objects.append(make_dict(object_name, metric, result))\n\nfinal_dict = {RelVal.KEY_OBJECTS: all_objects,\n              RelVal.KEY_ANNOTATIONS: annotations}\n\nwith open(filepath, \"w\") as f:\n    json.dump(final_dict, f, indent=2)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "0328266844bcb1f10ace67d8205b78ccf62919680cc48b6e2231d622a9d1d305": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "with open(filepath, \"w\") as f:\n    json.dump(final_dict, f, indent=2)\n\n\ndef extract_paths_or_from_file(paths):\n    \"\"\"\n    Either return the paths directly or extract them from a text file\n    \"\"\"\n    if len(paths) == 1 and paths[0].startswith(\"@\"):\n        with open(paths[0][1:], \"r\") as f:\n            return f.read().splitlines()\n    return paths",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "def676daab17b821f018d7188b434cf59df86473301e0e36d7d82ee8fc5f586f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def initialise_thresholds(evaluator, rel_val, rel_val_thresholds, thresholds_default, thresholds_margin, thresholds_combine=\"mean\"):\n    \"\"\"\n    Add thresholds to the Evaluator for a single test case.\n    \"\"\"\n    # Default thresholds will be generated and applied to all objects and metrics identified in the RelVal.\n    _, _, metrics = rel_val.get_metrics()\n    for metric in metrics:\n        # Retrieve the default threshold for each metric.\n        proposed_threshold = thresholds_default[metric.name] if thresholds_default else metric.proposed_threshold\n        # Adjust the standard deviation boundaries based on whether a lower or higher value is better.\n        std = (0, None) if metric.lower_is_better else (None, 0)\n        evaluator.add_limits(metric.object_name, metric.name, TestLimits(\"threshold_default\", proposed_threshold, std))\n\n    if not rel_val_thresholds:\n        # No further action needed if there are no user-defined thresholds.\n        return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "5b67c9d925bcfa5855959c4daa5a9ca5df34f0cd0d64a503581567b7678ffe36": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "FOR each object_name in rel_val_thresholds.known_objects:\n    FOR each metric_name in rel_val_thresholds.known_metrics:\n        # retrieve metric for specified objects by name\n        _, _, metrics = rel_val_thresholds.get_metrics((object_name,), (metric_name,))\n\n        IF no values in metrics:\n            CONTINUE\n\n        # gather all values from all metrics for this object\n        values = [m.value for m in metrics if m.comparable]\n\n        # determine if lower or higher values are preferable\n        lower_is_better = metrics[0].lower_is_better\n        factor = 1 if lower_is_better else -1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "8dd76d97bc315ed62f34ea4e760b9e0d150705532caddd335319cafc2be8a7f7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not values:\n    evaluator.add_limits(object_name, metric_name, TestLimits(\"threshold_user\"))\n    continue\nif thresholds_combine == \"mean\":\n    # combine the values, by default use the mean as the threshold\n    mean_central = np.mean(values)\nelse:\n    # otherwise use the extremum\n    mean_central = factor * max([factor * v for v in values])\n\nmargin = thresholds_margin[metric_name] * mean_central if thresholds_margin and metric_name in thresholds_margin else 0\n# combine the standard limits and add the TestLimits to the Evaluator\nif factor > 0:\n    low = None\n    up = margin\nelse:\n    up = None\n    low = margin\nevaluator.add_limits(object_name, metric_name, TestLimits(\"threshold_user\", mean_central, (low, up)))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "d46c508c58c781dc2ccbf907f9d9ffef9a0519df1bd1d5efc7555544f1240286": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def setup_regions(evaluator, rel_val_regions):\n    \"\"\"\n    Incorporate regions into the Evaluator for test cases\n    \"\"\"\n    # Iterate through all elements\n    for object_name in rel_val_regions.known_objects:\n        for metric_name in rel_val_regions.known_metrics:\n            _, _, metrics = rel_val_regions.get_metrics((object_name,), (metric_name,))\n            # Collect all metric values for a specific object and metric\n            values = [m.value for m in metrics if m.comparable]\n            # Gather necessary properties of the metrics\n            proposed_threshold = metrics[0].proposed_threshold\n            lower_is_better = metrics[0].lower_is_better\n            # Separate metric values into central and outlier groups\n            values_central = []\n            values_outlier = []\n            for v in values:\n                diff = v - proposed_threshold",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "6530f299be7545e1841fc9d79f81ec48ba0057fd1d30787277de2811b897bff3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for v in values:\n                diff = v - proposed_threshold\n                if (diff < 0 and lower_is_better) or (diff > 0 and not lower_is_better):\n                    # if the value is below and lower is better (or the opposite), then accept it as it is definitely better than the proposed threshold\n                    values_central.append(v)\n                    continue\n                if diff != 0:\n                    # check how much the calculated difference deviates from the proposed value\n                    diff = abs(proposed_threshold / diff)\n                    if diff < 0.1:\n                        # this indicates an outlier, accepted up to an order of magnitude\n                        values_outlier.append(v)\n                        continue\n                # if this is reached, the value is worse than the proposed threshold but by less than one order of magnitude\n                values_central.append(v)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "6f25df8233edd7f5b6dfcf6b96c224a5432a7883d895713e3eaf2a40f1672bac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# calculate the mean and standard deviation for the central region, and if there are any outlier values, also calculate their mean and standard deviation\nmean_central = np.mean(values_central)\nstd_central = np.std(values_central)\nif values_outlier.any():\n    mean_outlier = np.mean(values_outlier)\n    std_outlier = np.std(values_outlier)\nelse:\n    mean_outlier = None\n    std_outlier = None\n# use these mean and standard deviation values to define two different test limits\nevaluator.add_limits(object_name, metric_name, TestLimits(\"regions_tight\", mean_central, (std_central, std_central)))\nevaluator.add_limits(object_name, metric_name, TestLimits(\"regions_loose\", mean_outlier, (std_outlier, std_outlier)))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "61d4b4da1988045cfe8c6e601f36b002db3e3f50f0edc9d0d4e4d767fa83a286": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def execute_command(cmd, log_file, current_working_dir=None):\n    \"\"\"\n    A function to execute a command line\n    \"\"\"\n    process = Popen(split(cmd), cwd=current_working_dir, stdout=PIPE, stderr=STDOUT, universal_newlines=True)\n    # open a log file and append lines to it\n    log_file = open(log_file, 'a')\n    for line in process.stdout:\n        log_file.write(line)\n    process.wait()\n    # close the log file and return the command's exit code\n    log_file.close()\n    return process.returncode\n\n\ndef find_interpretations(results, target_interpretation):\n    \"\"\"\n    Return indices where the results have a specific interpretation\n    \"\"\"\n    return np.array([result.interpretation == target_interpretation for result in results], dtype=bool)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "cf242d5807b39c2c16840b769805c7901ab7cabcfa438ef336900a9400d776d1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def print_summary(rel_val, interpretations, long=False):\n    \"\"\"\n    Verify if any two histograms have a specific severity level following RelVal\n    \"\"\"\n    print(\"\\n##### RELVAL SUMMARY #####\\n\")\n    for metric_name in rel_val.known_metrics:\n        for test_name in rel_val.known_test_names:\n            object_names, results = rel_val.get_result_per_metric_and_test(metric_name, test_name)\n            print(f\"METRIC: {metric_name}, TEST: {test_name}\")\n            for interpretation in interpretations:\n                object_names_interpretation = object_names[count_interpretations(results, interpretation)]\n                percent = len(object_names_interpretation) / rel_val.number_of_objects\n                print(f\"  {interpretation}: {len(object_names_interpretation)} ({percent * 100:.2f}%)\")\n                if long:\n                    for object_name in object_names_interpretation:\n                        print(f\"    {object_name}\")\n\n    print(\"\\n##########################\\n\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "67a2b633856f1d0e10352f79985ebf43be55a264588739e111ca0ccb745292e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    print(\"\\n##########################\\n\")\n\n\ndef get_summary_path(path):\n    \"\"\"\n    Retrieve the complete path to Summary.json\n\n    If a directory is specified, search for the file within it.\n    \"\"\"\n    if isdir(path):\n        path = join(path, \"Summary.json\")\n    if exists(path):\n        return path\n    print(f\"ERROR: Unable to locate {path}.\")\n    return None\n\n\ndef copy_overlays(rel_val, input_dir, output_dir):\n    \"\"\"\n    Transfer overlay plots from the summary in the input directory to the output directory.\n    \"\"\"\n    input_dir = abspath(input_dir)\n    output_dir = abspath(output_dir)\n\n    if not exists(input_dir):\n        print(f\"ERROR: Input directory {input_dir} does not exist\")\n        return 1\n\n    in_out_same = input_dir == output_dir\n\n    input_dir_new = input_dir + \"_tmp\"\n    if in_out_same:\n        # rename input directory\n        rename(input_dir, input_dir_new)\n        input_dir = input_dir_new\n\n    if not exists(output_dir):\n        makedirs(output_dir)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "aed226f5bc6b8cd52236921afe2fa1ff3568e88e4e668f31c73788554e17cb54": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not exists(output_dir):\n    makedirs(output_dir)\n\nobject_names, _ = rel_val.get_result_per_metric_and_test()\nobject_names = list(set(object_names))\n\nret = 0\nfor object_name in object_names:\n    filename = join(input_dir, f\"{object_name}.png\")\n    if exists(filename):\n        copy(filename, output_dir)\n    else:\n        print(f\"File {filename} not found.\")\n        ret = 1\n\nif in_out_same:\n    rmtree(input_dir)\n\nreturn ret",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_utils.py"
        }
    ],
    "a3dcb1f28b0925c3f0b01aaeea3cb205dc5456d44639ec1b8aeddf2ae585afe0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n#\n# Definition of common variables\n\nREL_VAL_INTERPRETATION_GOOD = \"GOOD\"\nREL_VAL_INTERPRETATION_WARNING = \"WARNING\"\nREL_VAL_INTERPRETATION_NONCRIT_NC = \"NONCRITICAL NON-COMPLIANCE\"\nREL_VAL_INTERPRETATION_CRIT_NC = \"CRITICAL NON-COMPLIANCE\"\nREL_VAL_INTERPRETATION_UNKNOWN = \"UNKNOWN\"\nREL_VAL_INTERPRETATION_BAD = \"BAD\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_variables.py"
        }
    ],
    "9ce3e6043a1eac2d62d3b86ee0e63537e90cf90ba66dc0f188180ef8b183ae52": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    REL_VAL_SEVERITIES = [REL_VAL_INTERPRETATION_GOOD, REL_VAL_INTERPRETATION_WARNING, REL_VAL_INTERPRETATION_NONCRIT_NC, REL_VAL_INTERPRETATION_CRIT_NC, REL_VAL_INTERPRETATION_BAD, REL_VAL_INTERPRETATION_UNKNOWN]\nREL_VAL_SEVERITY_MAP = {value: index for index, value in enumerate(REL_VAL_SEVERITIES)}\nREL_VAL_SEVERITY_COLOR_MAP = {REL_VAL_INTERPRETATION_GOOD: \"green\",\n                              REL_VAL_INTERPRETATION_WARNING: \"orange\",\n                              REL_VAL_INTERPRETATION_NONCRIT_NC: \"cornflowerblue\",\n                              REL_VAL_INTERPRETATION_CRIT_NC: \"navy\",\n                              REL_VAL_INTERPRETATION_BAD: \"red\",\n                              REL_VAL_INTERPRETATION_UNKNOWN: \"grey\"}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/utils/o2dpg_release_validation_variables.py"
        }
    ],
    "2fe5ffd391cbc9b47b80eac14ce63ce472b90ebddcd9773094aa719ad06c77c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nimport sys\nimport argparse\nfrom os import environ\nfrom os.path import join, exists, isdir\nimport json\n\n# ensure O2DPG and O2 are properly set up\nO2DPG_ROOT=environ.get('O2DPG_ROOT')\n\nif O2DPG_ROOT is None:\n    print('ERROR: This script requires O2DPG to be loaded')\n    sys.exit(1)\n\n\ndef fetch_config(path=None):\n    default_path = join(O2DPG_ROOT, \"MC\", \"config\", \"analysis_testing\", \"json\", \"analyses_config.json\")\n    if not path:\n        path = default_path\n    else:\n        if isdir(path):\n            # assume the analyses_config.json is in this directory\n            path = join(path, \"analyses_config.json\")\n\n        if not exists(path):\n            print(f\"WARNING: Failed to find config for AnalysisQC at custom path {path}. Using default at {default_path}\")\n            path = default_path\n\n    with open(path, \"r\") as f:\n        return json.load(f)[\"analyses\"]\n\n\ndef adjust(args):\n    \"\"\"\n    modify the configuration and generate a new one\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "f5f99830e4f911b37e7c5f546982d3e47c0737d52c4978bdfbfec368f56dec2a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PARAPHRASED DOCUMENT:\n    analyses = get_config(args.config)\n\n    for ana in analyses:\n        if args.disable_tasks and ana[\"name\"] in args.disable_tasks:\n            ana[\"enabled\"] = False\n            continue\n        if args.enable_tasks and ana[\"name\"] in args.enable_tasks:\n            ana[\"enabled\"] = True\n\n    with open(args.output, \"w\") as f:\n        json.dump({\"analyses\": analyses}, f, indent=2)\n\n    return 0\n\n\ndef check(args):\n    \"\"\"\n    verify a few conditions for a given task\n\n    Outputs some details to stdout:\n    1. --status ==> ENABLED or DISABLED\n    2. --applicable-to ==> mc/data\n    \"\"\"\n\n    def print_status(enabled):\n        if enabled:\n            print(\"ENABLED\")\n            return\n        print(\"DISABLED\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "2fdb9466bb1b48f74e147cd176a70dddbbb45edf9a51e7dc2bcc4999bf5b7611": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "analyses = get_config(args.config)\n\n    for ana in analyses:\n        if ana[\"name\"] != args.task:\n            continue\n        if args.status:\n            print_status(ana[\"enabled\"])\n        if args.applicable_to:\n            if ana.get(\"valid_mc\", False):\n                print(\"mc\")\n            if ana.get(\"valid_data\", False):\n                print(\"data\")\n\n        return 0\n\n    # analysis not found\n    print(f\"WARNING: Unknown task {args.task}\")\n    return 1\n\n\ndef list_analyses(args):\n    \"\"\"\n    Examine analyses and display those that are en-/disabled\n    \"\"\"\n    if not args.enabled and not args.disabled:\n        args.enabled = True\n        args.disabled = True\n\n    analyses = get_config(args.config)\n\n    for ana in analyses:\n        if (args.enabled and ana[\"enabled\"]) or (args.disabled and not ana[\"enabled\"]):\n            print(ana[\"name\"])\n\n    return 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "2e91bdd17a86081b1cbea2f8e979a1cf0ad9fd8cd04851340b8123d1d0a2e34a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\nreturn 0\n\n\ndef validate_output(args):\n    \"\"\"\n    Post-execution validation\n\n    * verify the presence of corresponding *.log_done files from the WF runner\n    * ensure the exit code is correct in the *.log files\n    * confirm that expected output files are present\n    \"\"\"\n\n    if not args.config:\n        # first check if a config is not explicitly provided, then use the directory containing the analyses to be checked\n        args.config = args.directory\n\n    analyses = get_config(args.config)\n\n    # initialize the return code\n    ret = 0\n    # flag to include disabled analyses\n    include_disabled = args.include_disabled\n\n    for ana in analyses:\n        analysis_name = ana[\"name\"]\n\n        if args.tasks:\n            if analysis_name not in args.tasks:\n                continue\n            # explicitly specified tasks should always be considered\n            include_disabled = True\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "bfdf7a89000d6dbaf00a9c6e5a8421e7eb34b0a0b2b20de0dadf07a6852fe18e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not ana[\"enabled\"] and not include_disabled:\n    # skip if disabled and not including disabled analyses\n    continue\n\n    analysis_dir = join(args.directory, analysis_name)\n\n    if not exists(analysis_dir):\n        print(f\"The expected output directory {analysis_dir} for analysis {analysis_name} does not exist.\")\n        ret = 1\n        continue\n\n    if not ana[\"expected_output\"]:\n        # expected no output\n        continue\n\n    # verify the presence of expected outputs\n    for expected_output in ana[\"expected_output\"]:\n        expected_output = join(analysis_dir, expected_output)\n        if not exists(expected_output):\n            print(f\"Expected output {expected_output} for analysis {analysis_name} does not exist.\")\n            ret = 1\n\n    logfile = join(analysis_dir, f\"Analysis_{analysis_name}.log\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "4f6aec1ca4e9db62eff6b60a4f7c30f04a3572c7f8bb25927c51ca925d1bcb69": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "log_file = join(analysis_dir, f\"Analysis_{analysis_name}.log\")\n\nif exists(log_file):\n    exit_status = \"0\"\n    with open(log_file, \"r\") as f:\n        for line in f:\n            if \"TASK-EXIT-CODE:\" in line:\n                exit_status = line.strip().split()[1]\n                if exit_status != \"0\":\n                    print(f\"Analysis {analysis_name} terminated with a non-zero exit code {exit_status}.\")\n                    ret = 1\n                    break\n    if exit_status != \"0\":\n        continue\n\n    # verify the existence of the *.log_done file\n    log_done_file = join(analysis_dir, f\"Analysis_{analysis_name}.log_done\")\n    if not exists(log_done_file):\n        print(f\"It seems that analysis {analysis_name} did not complete successfully, as {log_done_file} is missing.\")\n        ret = 1\n\nreturn ret",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "28da1d3e7be6ab25ebd1707b16f95b039ce8dfd79c3a809a9753ee559b52fcd1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return ret\n\n\ndef main():\n    \"\"\"\n    entry point for direct command line execution\n    \"\"\"\n    parser = argparse.ArgumentParser(description='Check, validate or modify analysis configuration')\n    sub_parsers = parser.add_subparsers(dest=\"command\")\n\n    config_parser = argparse.ArgumentParser(add_help=False)\n    config_parser.add_argument(\"-c\", \"--config\", help=\"input configuration file to use\")\n\n    # modify config\n    modify_parser = sub_parsers.add_parser(\"modify\", parents=[config_parser])\n    modify_parser.add_argument(\"-o\", \"--output\", default=\"analyses_config.json\", help=\"output file name for new configuration\")\n    modify_parser.add_argument(\"--enable-tasks\", dest=\"enable_tasks\", nargs=\"*\", help=\"names of analysis tasks to enable (if they are disabled)\")\n    modify_parser.add_argument(\"--disable-tasks\", dest=\"disable_tasks\", nargs=\"*\", help=\"names of analysis tasks to disable (if they are enabled), takes precedence over --enable-tasks\")\n    modify_parser.set_defaults(func=modify)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "4a777db2865ca8c23bb5144b8dfcf55e03bf37dd80fc5e025e76c73c8e805c84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Display enabled or disabled tasks\nshow_parser = sub_parsers.add_parser(\"show-tasks\", parents=[config_parser])\nshow_parser.add_argument(\"--enabled\", action=\"store_true\", help=\"display enabled tasks\")\nshow_parser.add_argument(\"--disabled\", action=\"store_true\", help=\"display disabled tasks\")\nshow_parser.set_defaults(func=show_tasks)\n\n# Examine properties of a task\ncheck_parser = sub_parsers.add_parser(\"check\", parents=[config_parser])\ncheck_parser.add_argument(\"-t\", \"--task\", help=\"analysis task to examine\", required=True)\ncheck_parser.add_argument(\"--status\", action=\"store_true\", help=\"verify if task is enabled or disabled\")\ncheck_parser.add_argument(\"--applicable-to\", dest=\"applicable_to\", action=\"store_true\", help=\"determine if valid for MC or data\")\ncheck_parser.set_defaults(func=check)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "317e344093e981c2764f6228cc954dc5b34f1fca2fbdbc0b0beb4a3c8d4d0a74": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# check properties of a task\nvalidate_parser = sub_parsers.add_parser(\"validate-output\", parents=[config_parser])\nvalidate_parser.add_argument(\"-t\", \"--tasks\", nargs=\"*\", help=\"tasks to validate; if not specified, all tasks are validated\")\nvalidate_parser.add_argument(\"-d\", \"--directory\", help=\"top directory (usually called \\\"Analysis\\\") where individual analysis directories are located\", required=True)\nvalidate_parser.add_argument(\"--include-disabled\", action=\"store_true\", help=\"include tasks that are typically turned off (not required if a specific task is specified with --task)\")\nvalidate_parser.set_defaults(func=validate_output)\n\n# parse and run\nargs = parser.parse_args()\nargs.func(args)\n\nif __name__ == \"__main__\":\n    sys.exit(main())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_config.py"
        }
    ],
    "c0e1f18c2249767ab82966661bc6b9d302ab32d9a48cfc048c511def6b36f2f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nBEGIN DOCUMENTATION:\n    This is a Python script designed for use with the ALICE O2 simulation.\nEND DOCUMENTATION",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "57865c9382b8a1df5eadc842106903c1d8748db2cdfc3dfbe2105f5489bffbab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# Functionality of Analysis Task\n#\n# --> Integrating analysis tasks into an existing workflow <--\n#\n# Through another script, one can invoke (for instance, from o2dpg_sim_workflow) the command: add_analysis_tasks(workflow[\"stages\"], needs=[AOD_merge_task[\"name\"]], is_mc=True)\n#\n# --> Generating a standalone workflow file focused solely on analyses <--\n#\n# Usage message:\n# usage: o2dpg_analysis_test_workflow.py [-h] -f INPUT_FILE [-a ANALYSIS_DIR] [-o OUTPUT] [--is-mc] [--with-qc-upload] [--run-number RUN_NUMBER] [--pass-name PASS_NAME] [--period-name PERIOD_NAME] [--config CONFIG] [--only-analyses [ONLY_ANALYSES [ONLY_ANALYSES ...]]]\n#\n# Function to create analysis test workflow\n#\n# Optional arguments:\n#   -h, --help            display this help message and exit\n#   -f INPUT_FILE, --input-file INPUT_FILE\n#                         complete path to the AO2D input\n#   -a ANALYSIS_DIR, --analysis-dir ANALYSIS_DIR\n#                         the directory for analysis output and work\n#   -o OUTPUT, --output OUTPUT",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "8c0197f258e34e6cfc19fd1d49ae08af1be67e02730fcbaf04ce51c77815ea63": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#                         managing the analysis output and directory structure\n#   -o OUTPUT, --output OUTPUT\n#                         specify the name of the workflow file\n#   --is-mc               indicates if the input is from MC (assumed data otherwise)\n#   --with-qc-upload\n#   --run-number RUN_NUMBER\n#                         enter the run number\n#   --pass-name PASS_NAME\n#                         define the pass name\n#   --period-name PERIOD_NAME\n#                         production tag\n#   --config CONFIG       override the default configuration JSON by providing the path </path/to/file>, which will be automatically adjusted to json://\n#   --only-analyses [ONLY_ANALYSES [ONLY_ANALYSES ...]]\n#                         limit the analyses to these specific ones\n#\n# The -f/--input-file argument is mandatory in both MC and data scenarios\n# If --with-upload-qc is enabled, --period-name must also be provided; for data, --pass-name is additionally required, while for MC it is set to passMC\n#\n# Example for data",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "18b5693ef6094d65947a2ac875251c7202e0d75662428c8da3ad01e72e7345e3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# Example for data processing:\n# 1. Use o2dpg_analysis_test_workflow.py -f </path/to/AO2D.root> to create all data analysis workflows.\n# 2. Use o2dpg_analysis_test_workflow.py -f </path/to/AO2D.root> --with-qc-upload --pass-name <some-pass-name> --period-name <some-period-name> to also add tasks for uploading analysis results to the CCDB.\n# 3. Use o2dpg_analysis_test_workflow.py -f </path/to/AO2D.root> --only-analyses MCHistograms EventTrackQA EventSelectionQA to filter only the desired analyses; note that MCHistograms would be excluded by the script since it's not compatible with data.\n#\n# You can combine the above arguments as needed.\n#\n# For MC data, include the flag --is-mc.\n#\n# To execute the workflow, run:\n#\n# ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json\n#\n# If your analyses are part of a larger workflow (e.g., one created with o2dpg_sim_workflow), you can do so.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "ab582bb6dc7f0d840a82b355d896313e2fd300e4d81fa7590612bf3b6ad65116": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# 1. ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels Analysis\n# to execute all tasks marked with \"Analysis\" (which effectively covers all analyses)\n# 2. ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt Analysis_<ana_name>\n# to run just this particular analysis\n#\nimport sys\nimport importlib.util\nimport argparse\nfrom os import environ, makedirs\nfrom os.path import join, exists, abspath, expanduser\nimport json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "af823daa4fbf28375335a032bacaee448359e847e3da1164a66b43d1531ff287": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ensure O2DPG and O2 are loaded\nO2DPG_ROOT=environ.get('O2DPG_ROOT')\n\nif O2DPG_ROOT is None:\n    print('ERROR: O2DPG must be loaded')\n    sys.exit(1)\n\n# dynamically load needed utilities\nmodule_name = \"o2dpg_workflow_utils\"\nspec = importlib.util.spec_from_file_location(module_name, join(O2DPG_ROOT, \"MC\", \"bin\", \"o2dpg_workflow_utils.py\"))\no2dpg_workflow_utils = importlib.util.module_from_spec(spec)\nsys.modules[module_name] = o2dpg_workflow_utils\nspec.loader.exec_module(o2dpg_workflow_utils)\nfrom o2dpg_workflow_utils import createTask, dump_workflow, createGlobalInitTask\n\nmodule_name = \"o2dpg_analysis_test_utils\"\nspec = importlib.util.spec_from_file_location(module_name, join(O2DPG_ROOT, \"MC\", \"analysis_testing\", \"o2dpg_analysis_test_utils.py\"))\no2dpg_analysis_test_utils = importlib.util.module_from_spec(spec)\nsys.modules[module_name] = o2dpg_analysis_test_utils\nspec.loader.exec_module(o2dpg_analysis_test_utils)\nfrom o2dpg_analysis_test_utils import *",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "001e9c11289655ae056dd072d2e285d66edb24d69b8a661e3e526bd609ed0730": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def create_ana_task(name, cmd, output_dir, *, cpu=1, mem='2000', needs=None, extraarguments=\"-b\", is_mc=False):\n    \"\"\"A handy function to generate an analysis task\n\n    This function generates an analysis task using the provided arguments.\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "cf5aa65a9d46180e54e4727b03b5b496c8b54a067d4befcb24d7ebf857891ffa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This function generates an analysis task based on given parameters.\n\nArgs:\n    name: str\n        the desired analysis name\n    cmd: str\n        the command line to execute\n    output_dir: str\n        the directory for analysis output and work\n\nKeyword Args (optional):\n    needs: tuple, list\n        a list of tasks that need to be completed before this one\n    extraarguments: str\n        additional O2/DPL arguments to be included in the command\n\nReturn:\n    dict: the task dictionary\n    \"\"\"\n    # if another workflow wants to use it externally, allow dependencies to be added before running analyses\n    if needs is None:\n        # set to an empty list\n        needs = []\n    task = createTask(name=full_ana_name(name), cwd=join(output_dir, name), lab=[ANALYSIS_LABEL, name], cpu=cpu, mem=mem, needs=needs)\n    if is_mc:\n        task[\"labels\"].append(ANALYSIS_LABEL_ON_MC)\n    task['cmd'] = f\"{cmd} {extraarguments}\"\n    return task",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "f3b9511471bd67cbd25b9ecfaa643ab860614d62eb7e1d00db4df5d3a17bdb7b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def get_additional_workflows(input_aod):\n    additional_workflows = []\n    for wf in input_aod:\n        if not wf.get(\"enabled\", False) and not include_disabled_analyses:\n            print(f\"INFO: Workflow {wf['name']} not added since it is disabled\")\n            continue\n        additional_workflows.append(wf)\n\n    return additional_workflows",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "eafa35297687d66ab21d0f70b2ac851ae4d53a1d2a144b82cfa65b95b1d3bf66": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def get_additional_workflows(input_aod):\n    additional_workflows = []\n\n    # Handle the case where the input is a text file; use the first line in that scenario\n    if input_aod.endswith(\".txt\"):\n        if input_aod.startswith(\"@\"):\n            input_aod = input_aod[1:]\n        with open(input_aod) as f:\n            input_aod = f.readline().strip('\\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "37186dbbf9bcc50ec0004f8c077686136fac83d9d275004713752f9ae7b98c01": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if input_aod.endswith(\".root\"):\n    from ROOT import TFile\n    if input_aod.startswith(\"alien://\"):\n        from ROOT import TGrid\n        TGrid.Connect(\"alien\")\n    froot = TFile.Open(input_aod, \"READ\")\n    # Link of tables and converters\n    o2_analysis_converters = {\"O2collision_001\": \"o2-analysis-collision-converter --doNotSwap\",\n                              \"O2zdc_001\": \"o2-analysis-zdc-converter\",\n                              \"O2bc_001\": \"o2-analysis-bc-converter\",\n                              \"O2v0_002\": \"o2-analysis-v0converter\",\n                              \"O2trackextra_001\": \"o2-analysis-tracks-extra-converter\",\n                              \"O2ft0corrected\": \"o2-analysis-ft0-corrected-table\"}\n    for i in froot.GetListOfKeys():\n        if \"DF_\" not in i.GetName():\n            continue\n        df_dir = froot.Get(i.GetName())\n        # print(i)\n        for j in df_dir.GetListOfKeys():",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "d704a04a1f3b4e4c1782006189f55583fc6898bf87bf631d460ad6ab970e7e3b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # print(i)\n    for j in df_dir.GetListOfKeys():\n        # print(j)\n        if j.GetName() in o2_analysis_converters:\n            o2_analysis_converters.pop(j.GetName())\n    for i in o2_analysis_converters:\n        additional_workflows.append(o2_analysis_converters[i])\n    return additional_workflows",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "1668da06f369783ed13bcd7a50a4501fd4649abc017be54f199c908a8d907770": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def add_analysis_tasks(workflow, input_aod=\"./AO2D.root\", output_dir=\"./Analysis\", *, analyses_only=None, is_mc=True, collision_system=None, needs=None, autoset_converters=False, include_disabled_analyses=False, timeout=None, split_analyses=False):\n    \"\"\"Adds default analyses to the user's workflow\n\n    Args:\n        workflow: list\n            a list of tasks to which the analyses will be added\n        input_aod: str\n            the path to the AOD file to be analyzed\n        output_dir: str\n            the top-level output directory where the analysis is executed and potential results are stored\n    Keyword arguments:\n        analyses_only: iter (optional)\n            an iterable of analysis names to be used exclusively\n        is_mc: bool\n            indicates if MC is expected, with data being assumed otherwise\n        needs: iter (optional)\n            a list of tasks that need to be completed before this one\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "047536c92ae0223857685e8e2622db343e679545e4128b1d90d36a29e2e43a91": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if input_aod does not start with \"alien://\":\n    input_aod = abspath(input_aod)\nif input_aod ends with \".txt\" and does not start with \"@\":\n    input_aod = f\"@{input_aod}\"\n\nadditional_workflows = []\nif autoset_converters:  # This is required to run with the latest O2Physics TAG and older data\n    additional_workflows = get_additional_workflows(input_aod)\n\ndata_or_mc = ANALYSIS_VALID_MC if is_mc else ANALYSIS_VALID_DATA\ncollision_system = get_collision_system(collision_system)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "b45cb1037ffb5717c002bdbebd5baf1c5a76fc01b74671f09f1ae41ddc723ce2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# collection of lists, each sub-list represents one analysis pipeline to be run\nanalysis_pipes = []\n# gather names for each analysis pipeline\nanalysis_names = []\n# specify CPU and memory for each task\nanalysis_cpu_mem = []\n# compile all tasks into a single list\nmerged_analysis_pipe = additional_workflows.copy()\n# determine CPU and memory requirements for merged analyses\nmerged_analysis_cpu_mem = [0, 0]\n# define the expected output from merged analyses\nmerged_analysis_expected_output = []\n# prepare configurations for analyses to be written\nanalyses_config = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "f0385241f0258e278b1853e435a17d11293b5e3c993f398bf0c23ca25b779329": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for each_analysis in load_analyses(analyses_only, include_disabled_analyses=include_disabled_analyses):\n    if is_mc and not each_analysis.get(\"valid_mc\", False):\n        print(f\"INFO: Analysis {each_analysis['name']} not included as it is not valid in MC\")\n        continue\n    if not is_mc and not each_analysis.get(\"valid_data\", False):\n        print(f\"INFO: Analysis {each_analysis['name']} not included as it is not valid in data\")\n        continue\n    if analyses_only and each_analysis['name'] not in analyses_only:\n        # filter based on requested analyses\n        continue\n\n    if split_analyses:\n        # only individual analyses, not merged ones\n        analysis_pipes.append(each_analysis['tasks'])\n        analysis_names.append(each_analysis['name'])\n        analysis_cpu_mem.append((1, 2000))\n        analyses_config.append(each_analysis)\n        continue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "7fa8165b1cb28c955a98e66ff820c60cbca1724b1a5315bd70154c7f124d6c27": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    merged_analysis_pipe.extend(ana['tasks'])\n        # Underestimate the resource requirements of a single analysis in the merged scenario.\n        # Merging all tasks into one large pipeline does not proportionally scale resources!\n        merged_analysis_cpu_mem[0] += 0.5\n        merged_analysis_cpu_mem[1] += 700\n        merged_analysis_expected_output.extend(ana['expected_output'])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "0a836f42e1d0db9c4aa41c0c93c468d5dc80584b2541abcf071125ff27002edf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not split_analyses:\n    # add the combined analysis\n    analysis_pipes.append(merged_analysis_pipe)\n    analysis_names.append(ANALYSIS_MERGED_ANALYSIS_NAME)\n    # ensure at least the resources required for one analysis\n    analysis_cpu_mem.append((max(1, merged_analysis_cpu_mem[0]), max(2000, merged_analysis_cpu_mem[1])))\n    merged_analysis_expected_output = list(set(merged_analysis_expected_output))\n    # configuration for the merged analysis. Since it wasn't previously defined, we create it here\n    analyses_config.append({'name': ANALYSIS_MERGED_ANALYSIS_NAME,\n                            'valid_mc': is_mc,\n                            'valid_data': not is_mc,\n                            'enabled': True,\n                            'tasks': merged_analysis_pipe,\n                            'expected_output': merged_analysis_expected_output})",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "47be8630e853df100322b346da358a773a127c1c11d5d6bd2cd651336ab9d67f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# we must establish the output directory for the final configuration files\noutput_dir_config = join(output_dir, 'config')\nif output_dir_config does not exist:\n    makedirs(output_dir_config)\n\n# save the analysis configuration here\nwith open(join(output_dir, 'analyses_config.json'), 'w') as f:\n    json.dump({'analyses': analyses_config}, f, indent=2)\n\nconfiguration = adjust_and_get_configuration_path(data_or_mc, collision_system, output_dir_config)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "eec6f48773a7fa72f25de7b8e4169e1f94db207108487443bf1f6de8e83311d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "FOR analysis_name, analysis_pipe, analysis_res IN zip(analysis_names, analysis_pipes, analysis_cpu_mem):\n    # eliminate any duplicates in the pipe, particularly in the merged scenario\n    analysis_pipe = list(set(analysis_pipe))\n    analysis_pipe_assembled = []\n    for executable_string in analysis_pipe:\n        # the input executable may already have configurations, but the first token is the executable itself\n        executable_string += f' --configuration json://{configuration}'\n        analysis_pipe_assembled.append(executable_string)\n\n    # compile the pipe, including AOD and timeout if necessary\n    analysis_pipe_assembled = ' | '.join(analysis_pipe_assembled)\n    analysis_pipe_assembled += f' --aod-file {input_aod} --shm-segment-size 3000000000 --readers 1 --aod-memory-rate-limit 500000000'\n    if timeout is not None:\n        analysis_pipe_assembled += f' --time-limit {timeout}'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "2c3e67b3b19a59a6e8bd27104e519458274e534f3ef96b56cc8f57458b08c66f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "workflow.append(create_ana_task(analysis_name, analysis_pipe_assembled, output_dir, cpu=analysis_res[0], mem=analysis_res[1], needs=needs, is_mc=is_mc))\n\ndef add_analysis_qc_upload_tasks(workflow, period_name, run_number, pass_name):\n    \"\"\"add o2-qc-upload-root-objects to specified analysis tasks\n\n    The analysis name only needs to be present in the workflow for these upload tasks to work. Since it doesn't require specific knowledge of the analysis, it can be added to any analysis task.\n\n    Args:\n        workflow: list\n            current list of tasks\n        ana_tasks_expected_outputs: list of tuples\n            [(AnalysisName_1, (expected_output_1_1, expected_output_1_2, ...)), ..., (AnalysisName_N, (expected_output_N_1, expected_output_N_2, ...)) ]\n    \"\"\"\n    analyses_to_add_for = {}\n    # gather analyses in the current workflow\n    for task in workflow:\n        if ANALYSIS_LABEL in task[\"labels\"]:\n            analyses_to_add_for[task[\"name\"]] = task",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "f0554cbadbc7d976e71774c996ed51bd99e982e3b4ff3fb319a658bbbc61a02d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "FOR EACH ANALYSIS IN load_analyses(include_disabled_analyses=True):\n    IF NOT ana[\"expected_output\"]:\n        CONTINUE\n    ana_name_raw = ana[\"name\"]\n    ana_name = full_ana_name(ana_name_raw)\n    IF ana_name NOT IN analyses_to_add_for:\n        CONTINUE\n    # check workflow stages for the requested analysis\n    pot_ana = analyses_to_add_for[ana_name]\n    cwd = pot_ana[\"cwd\"]\n    needs = [ana_name]\n    provenance = \"qc_mc\" IF ANALYSIS_LABEL_ON_MC IN pot_ana[\"labels\"] ELSE \"qc\"\n    FOR eo IN ana[\"expected_output\"]:\n        # this step seems redundant but is included for backward compatibility\n        rename_output = eo.strip(\".root\")\n        rename_output = f\"{rename_output}_{ana_name_raw}.root\"\n        # add upload task for each expected output file",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "cf123b558e26b60b05cfd569b7b6c1406fd5f7143a19605c19f35fd9ca9639f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# add upload task for each expected output file\ntask = createTask(name=f\"{ANALYSIS_LABEL}_finalize_{ana_name_raw}_{rename_output}\", cwd=cwd, lab=[f\"{ANALYSIS_LABEL}Upload\", ana_name_raw], cpu=1, mem='2000', needs=needs)\n# Once the file is renamed for upload purposes, it should be renamed back to its original name afterward, as there's no need to rename it on disk just for a specific task. \nrename_cmd = f\"mv {eo} {rename_output}\"\nrename_back_cmd = f\"mv {rename_output} {eo}\"\ntask[\"cmd\"] = f\"{rename_cmd} && o2-qc-upload-root-objects --input-file ./{rename_output} --qcdb-url ccdb-test.cern.ch:8080 --task-name Analysis{ana_name_raw} --detector-code AOD --provenance {provenance} --pass-name {pass_name} --period-name {period_name} --run-number {run_number} && {rename_back_cmd} \"\nworkflow.append(task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "61387b561aeb3845cbed6d4ae5fc8e604e9a1033b08a434b9691cf0b0a5fa591": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def run(args):\n    \"\"\"processing input from the command line\"\"\"\n    if args.with_qc_upload and (not args.pass_name or not args.period_name):\n        print(\"ERROR: QC upload requested, but --pass-name and --period-name are needed in this case\")\n        return 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "e26c9f695a340045f3d7f12ba8d72144624ac8ebe6235f35a54e46db6280f44c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### setup global environment variables that apply to all tasks, set as the initial task\nglobal_env = {\"ALICEO2_CCDB_CONDITION_NOT_AFTER\": args.condition_not_after} if args.condition_not_after else None\nworkflow = [createGlobalInitTask(global_env)]\nadd_analysis_tasks(workflow, args.input_file, expanduser(args.analysis_dir), is_mc=args.is_mc, analyses_only=args.only_analyses, autoset_converters=args.autoset_converters, include_disabled_analyses=args.include_disabled, timeout=args.timeout, collision_system=args.collision_system, split_analyses=args.split_analyses)\nif args.with_qc_upload:\n    add_analysis_qc_upload_tasks(workflow, args.period_name, args.run_number, args.pass_name)\nif not workflow:\n    print(\"WARNING: No tasks were added\")\ndump_workflow(workflow, args.output)\nprint(\"To execute the workflow, you can run: `${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f {args.output}`\")\nreturn 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "e59e3944f250d8887cbcfc7d38d4b4b13545ea8d920c30d970812cce17b03ada": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def main():\n    \"\"\"starting point for the script when executed directly from the command line\"\"\"\n    parser = argparse.ArgumentParser(description='Set up the analysis test workflow')\n    parser.add_argument(\"-f\", \"--input-file\", dest=\"input_file\", default=\"./AO2D.root\", help=\"full path to the AO2D input\", required=True)\n    parser.add_argument(\"-a\", \"--analysis-dir\", dest=\"analysis_dir\", default=\"./Analysis\", help=\"directory for analysis output and work\")\n    parser.add_argument(\"-o\", \"--output\", default=\"workflow_analysis_test.json\", help=\"name of the workflow file\")\n    parser.add_argument(\"--is-mc\", dest=\"is_mc\", action=\"store_true\", help=\"indicates if the input is from MC, data is assumed otherwise\")\n    parser.add_argument(\"--with-qc-upload\", dest=\"with_qc_upload\", action=\"store_true\")\n    parser.add_argument(\"--run-number\", dest=\"run_number\", type=int, default=300000, help=\"the specified run number\")\n    parser.add_argument(\"--pass-name\", dest=\"pass_name\", help=\"name of the pass\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "fa0bec36e8632e31e4f79f005a620f151a1b83decc6eb855157ff225bb43cbff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument(\"--pass-name\", dest=\"pass_name\", help=\"specify the pass name\")\nparser.add_argument(\"--period-name\", dest=\"period_name\", help=\"specify the period name\")\nparser.add_argument(\"--only-analyses\", dest=\"only_analyses\", nargs=\"*\", help=\"filter analyses to only these\")\nparser.add_argument(\"--include-disabled\", dest=\"include_disabled\", action=\"store_true\", help=\"run disabled analyses despite their status\")\nparser.add_argument(\"--autoset-converters\", dest=\"autoset_converters\", action=\"store_true\", help=\"compatibility mode to automatically configure converters for analyses\")\nparser.add_argument(\"--timeout\", type=int, default=None, help=\"set timeout for analysis tasks in seconds\")\nparser.add_argument(\"--collision-system\", dest=\"collision_system\", help=\"define the collision system. If not provided, it is inferred from ALIEN_JDL_LPMInterationType. Defaults to pp if not set\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "27454428249d1a13218f2f6272e4eb4554b2da257543e611087aad2d6c8c4f49": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--condition-not-after', dest=\"condition_not_after\", type=int, help=\"only consider CCDB objects not created after this timestamp (for TimeMachine)\", default=3385078236000)\nparser.add_argument('--split-analyses', dest='split_analyses', action='store_true', help='Divide into individual analyses pipelines for execution.')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "80561f74964ce3819037f265a674d34e8223f1cea12ea0033577273d743b1f37": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.set_defaults(func=execute)\narguments = parser.parse_args()\nreturn(arguments.func(arguments))\n\nif __name__ == \"__main__\":\n    sys.exit(run())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_workflow.py"
        }
    ],
    "9412082fcd1fbce1853a4308ae18af3071062aa457da59b7b1f8368980f0c368": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n#\n# Analysis task utilities\n#\nimport sys\nfrom os import environ, listdir\nfrom os.path import join, abspath\n\nimport json\n\n# ensure O2DPG and O2 are loaded\nO2DPG_ROOT=environ.get('O2DPG_ROOT')\n\nif O2DPG_ROOT is None:\n    print('ERROR: This requires O2DPG to be loaded')\n    sys.exit(1)\n\n\n# some common definitions\nANALYSIS_LABEL = \"Analysis\"\nANALYSIS_LABEL_ON_MC = f\"{ANALYSIS_LABEL}MC\"\nANALYSIS_VALID_MC = \"mc\"\nANALYSIS_VALID_DATA = \"data\"\nANALYSIS_COLLISION_SYSTEM_PP = \"pp\"\nANALYSIS_COLLISION_SYSTEM_PBPB = \"pbpb\"\nANALYSIS_MERGED_ANALYSIS_NAME = \"MergedAnalyses\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_utils.py"
        }
    ],
    "7ab57ab69c65630acf57c7abe04fa6512a54c40d59b9c050d4c37f91e6b47f98": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def adjust_configuration_line(line, data_or_mc, collision_system):\n        line = line.replace('!ANALYSIS_QC_is_mc!', str(data_or_mc == ANALYSIS_VALID_MC).lower())\n        line = line.replace('!ANALYSIS_QC_is_data!', str(data_or_mc == ANALYSIS_VALID_DATA).lower())\n        if collision_system == \"pp\":\n            line = line.replace('!OVERWRITEAXISRANGEFORPBPBVALUE!', \"false\")\n        else:\n            line = line.replace('!OVERWRITEAXISRANGEFORPBPBVALUE!', \"true\")\n        if collision_system == \"pbpb\":\n            line = line.replace('!ISLOWFLUX!', \"false\")\n        else:\n            line = line.replace('!ISLOWFLUX!', \"true\")\n        return line\n\n\ndef adjust_and_get_configuration_path(data_or_mc, collision_system, output_dir):\n\nPARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_utils.py"
        }
    ],
    "77473bba1478ad92a2a56340ffc3233146cb8bc5d036f660f62dca01f44893cd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def adjust_and_get_configuration_path(data_or_mc, collision_system, output_dir):\n\n    final_config = {}\n    path = join(O2DPG_ROOT, \"MC\", \"config\", \"analysis_testing\", \"json\", \"dpl\")\n    for config_path in listdir(path):\n        if not config_path.endswith('.json'):\n            continue\n        json_string = \"\"\n        with open(join(path, config_path), 'r') as f:\n            for line in f:\n                json_string += adjust_configuration_line(line, data_or_mc, collision_system)\n            final_config |= json.loads(json_string)\n        # now we can make some modifications\n    output_path = abspath(join(output_dir, 'dpl-config.json'))\n    with open(output_path, 'w') as f:\n        json.dump(final_config, f, indent=2)\n\n    return output_path\n\n\ndef get_collision_system(collision_system=None):\n    if not collision_system:\n        return environ.get(\"ALIEN_JDL_LPMINTERACTIONTYPE\", \"pp\").lower()\n    return collision_system.lower()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_utils.py"
        }
    ],
    "5b14cc41e25f4d7cce1a1d2b40623955d6378c5d6f7a23e45edffe9bc514892e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def full_ana_name(raw_ana_name):\n    \"\"\"Generate the standardized analysis name as it should be displayed in the workflow\"\"\"\n    return f\"{ANALYSIS_LABEL}_{raw_ana_name}\"\n\n\ndef get_common_args_as_string(ana, all_common_args):\n    \"\"\"\n    all_common_args is structured as:\n    [<ana_name1>-shm-segment-size <value>, <ana_name2>-readers <value>, ...]\n\n    This function retrieves common arguments specific to this analysis\n    \"\"\"\n\n    def create_args_string(args_map_in):\n        out_string = \"\"\n        for key, value in args_map_in.items():\n            out_string += f\" --{key} {value}\"\n        return out_string\n\n    # default arguments for all analyses\n    args_map = {\"shm-segment-size\": 2000000000,\n                \"readers\": 1,\n                \"aod-memory-rate-limit\": 500000000}\n\n    # obtain common args from analysis configuration and update args_map\n    common_args_from_config = ana.get(\"common_args\", {})\n    for key, value in common_args_from_config.items():\n        args_map[key] = value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_utils.py"
        }
    ],
    "d30ff6f9b95a0644f16b337365c1a85d4894d50eba7ba951bde0092812945e3d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# parameters specific to this analysis\nargs_map_overwrite = {}\n\nif not all_common_args:\n    return make_args_string(args_map)\n\nif len(all_common_args) % 2 != 0:\n    print(\"ERROR: Unable to process common arguments.\")\n    return None\n\nanalysis_name = ana[\"name\"]\n\nfor i in range(0, len(all_common_args), 2):\n    tokens = all_common_args[i].split(\"-\")\n    key = \"-\".join(tokens[1:])\n    if tokens[0] == analysis_name:\n        # for this analysis, update dedicated dictionary\n        args_map_overwrite[key] = all_common_args[i+1]\n        continue\n    if tokens[0] == \"ALL\":\n        # otherwise, update default dictionary\n        args_map[key] = all_common_args[i+1]\n\n# apply dedicated arguments to the default dictionary\nfor key, value in args_map_overwrite.items():\n    args_map[key] = value\n\nreturn make_args_string(args_map)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/o2dpg_analysis_test_utils.py"
        }
    ],
    "5d1ea1c05a32989ac93ba67d4c77c1efde67a4da3f4a4e4b9989ed445c086ce1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nimport sys\nfrom os.path import join, exists, basename\nfrom os import makedirs\nfrom copy import deepcopy\nimport argparse\nimport re\nfrom datetime import datetime\nfrom time import time_ns\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport json\nimport numpy as np\nimport pandas as pd\n\n###############################################################################\n#                                                                                #\n# Script to examine resource consumption (CPU, memory, and time) for simulation workflows #\n#                                                                                #\n###############################################################################\n# Plot history and resource demands for various simulation workflow categories (simulation, digitization, reconstruction): subcommand history\n# usage: o2dpg_sim_metrics_df.py history [-h] -p [PIPELINES ...] [--output OUTPUT] [--filter-task FILTER_TASK] [--suffix SUFFIX]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "bc391ff1639d92443ff5efef0be1fbbc3c36d9ff03e0504bff70e2ff9229a38b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Optional arguments:\n#   -h, --help            display help message and exit\n#   -p [PIPELINES ...], --pipelines [PIPELINES ...]\n#                         pipeline_metric files from o2_dpg_workflow_runner\n#   --output OUTPUT       specify output_directory\n#   --filter-task FILTER_TASK\n#                         regex to filter pipeline iterations by certain task names\n#   --suffix SUFFIX       append a suffix to the end of output file names\n\n# Compare simulation workflow resource usage for varying parameters such as center-of-mass energy, number of events, etc.: subcommand history\n# usage: o2dpg_sim_metrics_df.py compare [-h] -p [PIPELINES ...] [--output OUTPUT] [--names [NAMES ...]] --feature {col,eCM,gen,ns,nb,j,cpu_limit,mem_limit}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "572a97598daadf4d70af6b62fbf4578cd6760a9e1f8d87ebc2f72d0539449b8d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Optional arguments:\n#   -h, --help            show this help message and exit\n#   -p [PIPELINES ...], --pipelines [PIPELINES ...]\n#                         pipeline_metric files from o2_dpg_workflow_runner\n#   --output OUTPUT       output_directory\n#   --names [NAMES ...]   assign a custom name to each pipeline\n#   --feature {col,eCM,gen,ns,nb,j,cpu_limit,mem_limit}\n#                         feature to be investigated\n\n# Generate a file for upload to InfluxDB containing various metrics akin to those produced by history\n# usage: o2dpg_sim_metrics_df.py influx [-h] -p PIPELINE [--table-base TABLE_BASE] [--output OUTPUT] [--tags TAGS]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "60dabadbea9fd39ba75130b30da8d58c2718ddb8e3c3fa4624fda81791731760": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# optional arguments:\n#   -h, --help            show this help message and exit\n#   -p PIPELINE, --pipeline PIPELINE\n#                         a single pipeline_metric file from o2_dpg_workflow_runner to prepare for InfluxDB\n#   --table-base TABLE_BASE\n#                         base name for the InfluxDB table\n#   --output OUTPUT, -o OUTPUT\n#                         name of the output file\n#   --tags TAGS           key-value pairs separated by \";\", for example: alidist=1234567;o2=7654321;tag=someTag\n\nMETRIC_NAME_CPU = \"cpu\"\nMETRIC_NAME_USS = \"uss\"\nMETRIC_NAME_PSS = \"pss\"\nMETRIC_NAME_TIME = \"time\"\n\n# metrics extracted by o2_dpg_workflow_runner and logged in pipeline_metric*.log\nMETRICS = [METRIC_NAME_CPU, METRIC_NAME_USS, METRIC_NAME_PSS, METRIC_NAME_TIME]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "53234929dd34e6e5fe5560be73f389da4b3d59e25254ae84c39cd15b3e653bfc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Some characteristics of Monte Carlo runs, which can be obtained from the metadata\n# These are useful when comparing plots from multiple pipelines based on these characteristics\n# For now, let's limit to these arguments from o2dpg_sim_workflow.py\nFEATURES = [\"col\", \"eCM\", \"gen\", \"ns\", \"nb\", \"j\", \"cpu_limit\", \"mem_limit\"]\n\n# Basic categories to extract metrics from\nCATEGORIES_RAW = [\"sim\", \"digi\", \"reco\", \"pvfinder\", \"svfinder\", \"tpccluster\", \"match\", \"aod\"]\nCATEGORIES_REG = [re.compile(c, flags=re.IGNORECASE) for c in CATEGORIES_RAW]\nCATEGORIES_EXCLUDE = [\"\", \"QC\", \"\", \"\", \"\", \"QC\", \"QC\", \"\"]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "d3a35b31e88e730b7ffaecfec35b32f6f7868a3e6c0b1eff689e5664b0e484dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def get_matching_category(proposed):\n  \"\"\"\n  Associate a primary category with a suggested sub-category\n  \"\"\"\n  cat = [cr for cr, creg, ce in zip(CATEGORIES_RAW, CATEGORIES_REG, CATEGORIES_EXCLUDE) if creg.search(proposed) and (not ce or ce not in proposed)]\n  if not cat:\n    return None\n  if len(cat) != 1:\n    print(f\"ERROR: Multiple categories found\")\n    return None\n  return cat[0]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "2e1837224eaa28379e38e855be69b131d2551dab1a316e9a85f0543c3d28ee97": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def line_to_dict(l):\n  \"\"\"\n  convert a single line read from a file into JSON format and return as a dictionary\n  \"\"\"\n  l = l.strip().split()\n  # the first two columns are the date and time from the Python logger\n  # NOTE replace \",\" with \".\" for milliseconds. This seems valid in Python 3.11 but not in Python 3.9\n  date_time = \" \".join(l[:2]).replace(\",\", \".\")\n  seconds_since_epoch = datetime.fromisoformat(date_time).timestamp()\n  # this is to remove the time and other logger fields\n  l = \" \".join(l[3:])\n  # make it JSON readable\n  l = l.replace(\"'\", '\"')\n  l = l.replace(\"None\", \"null\")\n  l = l.replace(\"False\", \"false\")\n  l = l.replace(\"True\", \"true\")\n\n  try:\n    d = json.loads(l)\n    d[METRIC_NAME_TIME] = seconds_since_epoch\n    return d\n  except json.decoder.JSONDecodeError as e:\n    # we just ignore this case\n    # for example, there might be lines like ***MEMORY LIMIT PASSED !!***\n    pass\n  return None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "120452566e642be22f249c5e4c7b44a6f1539f7426c955bf9d04d73f5b326cd6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\ndef convert_to_float_if_possible(value):\n  \"\"\"\n  attempt to convert any value to a float\n  \"\"\"\n  if isinstance(value, bool):\n    # do not cast booleans\n    return value\n  try:\n    return float(value)\n  except (TypeError, ValueError):\n    pass\n  return value\n\n\nclass Resources:\n  \"\"\"\n  A wrapper class for managing resources\n\n  this class holds resources in a pandas dataframe and includes additional relevant information\n  \"\"\"\n\n  def __init__(self, pipeline_path=None):\n    # this dictionary will be dynamically extended. However, we will manually add one more key, namely the timeframe.\n    self.dict_for_df = {\"timeframe\": [], \"category\": []}\n    self.meta = None\n    self.df = None\n    self.number_of_timeframes = None\n    self.name = None\n    # use this as an identifier in the dataframe later\n    self.timestamp = int(time_ns() / 1000)\n\n    if pipeline_path:\n      self.extract_from_pipeline(pipeline_path)\n      self.pipeline_file = pipeline_path\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "aa25873c5843da2648886a2a8f584e856feb17fb3008be9a59daff877d1a5bd4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def __add__(self, other):\n    \"\"\"\n    Enables the addition of Resource objects\n    \"\"\"\n    res = Resources()\n    res.df = pd.concat([self.df, other.df], ignore_index=True)\n    res.number_of_timeframes = self.number_of_timeframes + other.number_of_timeframes\n    return res\n\n  def verify(self):\n    \"\"\"\n    Ensures the dictionary is complete for dataframe insertion\n    \"\"\"\n    length = None\n    for key, rows in self.dict_for_df.items():\n      if length is None:\n        length = len(rows)\n        continue\n      if length != len(rows):\n        print(f\"Key {key} has a different number of rows ({len(rows)}) compared to the expected ({length})\")\n        return False\n    return True\n\n  def include_metadata(self):\n    \"\"\"\n    Adds rows for metadata information\n    \"\"\"\n    length = len(self.dict_for_df[list(self.dict_for_df.keys())[0]])\n    for key, value in self.meta.items():\n      self.dict_for_df[key] = [value] * length",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "11362d934313e2ec41ef6550dfe47eeb83b8b6a672307059aec21c603246f358": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# this can be used as an identifier for concatenated dataframes, for example\nself.dict_for_df[\"id\"] = [self.timestamp] * length\n\ndef convert_columns_to_float_if_possible():\n    \"\"\"\n    ensure that numerical values are cast to float where applicable\n\n    In the pipeline_metric, some values might still be in string format\n    \"\"\"\n    for rows in self.dict_for_df.values():\n      for i, value in enumerate(rows):\n        # if we can cast one, we assume we can cast all\n        # otherwise, we end up with a mixed list of strings and numbers\n        rows[i] = convert_to_float_if_possible(value)\n\ndef clean_cpu():\n    \"\"\"\n    Correct negative CPU values by setting them to 0\n    \"\"\"\n    if METRIC_NAME_CPU not in self.dict_for_df:\n      return\n\n    cpu_list = self.dict_for_df[METRIC_NAME_CPU]\n    for i, value in enumerate(cpu_list):\n      # if negative, set to 0; additionally, divide by 100 as the value represents a percentage\n      cpu_list[i] = max(0, value) / 100",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "75a3033e4c03c07fbe4ec3eae06975276e6a9857c60e27f5d735c735b03f1cc2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def calculate_time_difference(self):\n    \"\"\"\n    Convert absolute timestamps to relative differences\n    \"\"\"\n    timestamps = self.dict_for_df[METRIC_NAME_TIME]\n    task_identifiers = self.dict_for_df[\"name\"]\n    timeframes = self.dict_for_df[\"timeframe\"]\n    # obtain the start times for each individual task\n    initial_times = {}\n    for index, (timestamp, task_id, timeframe) in enumerate(zip(timestamps, task_identifiers, timeframes)):\n      timeframe = int(timeframe)\n      # calculate the time difference relative to the minimum\n      if task_id not in initial_times:\n        initial_times[task_id] = []\n      if len(initial_times[task_id]) < timeframe:\n        initial_times[task_id].extend([None] * (timeframe - len(initial_times[task_id]) + 1))\n      if initial_times[task_id][timeframe] is None:\n        initial_times[task_id][timeframe] = timestamp\n      timestamps[index] = timestamp - initial_times[task_id][timeframe]\n\n  def transform_to_dataframe(self):\n    \"\"\"\n    Function to convert the dictionary into a DataFrame\n    \"\"\"\n    if not self.dict_for_df:\n      return\n\n    self.df = pd.DataFrame(self.dict_for_df)\n    self.dict_for_df = None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "3b35f98fbedc06eb3307da894a40ddbeb120aa79314376cdab60dab0564b8380": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "self.df = pd.DataFrame(self.dict_for_df)\n    self.dict_for_df = None\n\n  def extract_number_of_timeframes(self):\n    \"\"\"\n    Wrapper to extract the number of timeframes\n    \"\"\"\n    self.number_of_timeframes = max(self.df[\"timeframe\"].values)\n\n  def add_iteration(self, iteration):\n    \"\"\"\n    Add one iteration to the dictionary\n\n    Everything on the fly\n    and\n    determine the timeframe and parent category as well\n    \"\"\"\n    for key, value in iteration.items():\n      if key == \"name\":\n        try:\n          name_split = value.split(\"_\")\n          tf_i = int(name_split[-1])\n          # we only want to have the name without the timeframe suffix\n          value = \"_\".join(name_split[:-1])\n        except ValueError:\n          tf_i = 0\n\n        self.dict_for_df[\"timeframe\"].append(tf_i)\n\n        cat = get_parent_category(value)\n        self.dict_for_df[\"category\"].append(cat)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "708eb18a52ab6a7b9fdac1724b96c0ba765d6707cad29216cd7f25ffab2046f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    cat = get_parent_category(value)\n    self.dict_for_df[\"category\"].append(cat)\n\n    if key not in self.dict_for_df:\n        # dynamically extend the dictionary\n        self.dict_for_df[key] = []\n    # add the value\n    self.dict_for_df[key].append(value)\n\n  def extract_from_pipeline(self, pipeline_path):\n    \"\"\"\n    read a pipeline_metric file and populate a dataframe with the data\n    \"\"\"\n    if not exists(pipeline_path):\n      print(f\"ERROR: pipeline_metrics file not found at {pipeline_path}\")\n      return False\n\n    self.name = basename(pipeline_path)\n\n    with open(pipeline_path, \"r\") as f:\n      for l in f:\n        d = line_to_dict(l)\n        if not d:\n          continue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "9a82041728827eb3afb3174abdfb94f444855453e0bee9d735d784a22919ce0e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if \"iter\" in d:\n          # This is an iteration, add it to the dictionary\n          self.add_iteration(d)\n          continue\n        if not self.meta:\n          # At this point, the only other line in the pipeline_metric is the meta information, so when we reach here, it indicates meta information\n          self.meta = {}\n          # remove the time from the meta information, as it's only relevant for iterations and would overwrite those values\n          del d[METRIC_NAME_TIME]\n          for key, value in d.items():\n            self.meta[key] = convert_to_float_if_possible(value)\n\n    if not self.check():\n      return False\n\n    self.add_meta()\n    self.convert_columns_to_float_if_possible()\n    self.clean_cpu()\n    self.compute_time_delta()\n    self.put_in_df()\n    self.extract_number_of_timeframes()\n\n\ndef make_default_figure(ax=None, **fig_args):\n  \"\"\"Create a default figure with one axis\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "ebb10d1a616d7ad25b17cde83419cb98764d24e14f3095c076d4b70aa270329d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n        def create_default_figure(ax=None, **fig_args):\n  \"\"\"Create a default figure with one axes\n\n  args:\n    ax: matplorlib.pyplot.Axes (optional)\n  \"\"\"\n  if ax is None:\n    fig_args[\"figsize\"] = fig_args.get(\"figsize\", (20, 20))\n    return plt.subplots(**fig_args)\n  else:\n    return ax.get_figure(), ax\n\n\ndef save_plot(figure, file_path):\n  \"\"\"\n  Encapsulate the final steps of plot creation, including tight layout, saving, and closing\n\n  args:\n    figure: matplotlib.pyplot.Figure\n      the figure to be saved\n    file_path: str\n      the location for saving\n  \"\"\"\n  figure.tight_layout()\n  figure.savefig(file_path, bbox_inches=\"tight\")\n  plt.close(figure)\n\n\ndef generate_histogram(data_x, data_y, x_label, y_label, ax=None, color_map=None, normalize=True, plot_title=None, sort_data=True, annotate_values=None, **extra_kwargs):\n  \"\"\"\n  Generate a histogram",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "eba82c28006e6dfa95fd92a1d97014ed5f22a5726caa4aff9505e827e45dc275": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\nargs:\nx, y: iterables\n  x- and y-axis values\nxlabel, ylabel: str\n  labels for the x- and y-axis\nax: matplotlib.pyplot.Axes (optional)\n  the axes on which to plot the histogram\ncmap: matplotlib colormap\n  color the histogram pieces based on their size\nnorm: bool\n  whether to normalize the histogram to its total sum\ntitle: str\n  title for the figure\n  \"\"\"  \n\n  figure, ax = make_default_figure(ax)\n\n  if not x or not y:\n    print(\"No data for plotting...\")\n    return figure, ax\n\n  # reorder x-tick labels based on ascending y-values\n  if sort:\n    y = y.copy()\n    if annotate and len(annotate) == len(y):\n      annotate = [i for _, i in sorted(zip(y, annotate))]\n    x = [i for _, i in sorted(zip(y, x))]\n    y.sort()\n\n  if norm:\n    total = sum(y)\n    if total > 0:\n      y = [i / total for i in y]\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "3c3f0e674604a0d435c28f6293cee9ae03bea396437676fb1531cafd6d32defa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if norm:\n    total = sum(y)\n    if total > 0:\n      y = [i / total for i in y]\n\n  colors = None\n  if cmap:\n    # generate colors for better visualization\n    step = 1. / len(y)\n    colors = [cmap(i * step) for i, _ in enumerate(y)]\n\n  bars = ax.bar(x, y, color=colors, **kwargs)\n  if annotate and len(annotate) ==  len(x):\n    # add annotations to the bar chart based on given annotations\n    for bar, an in zip(bars, annotate):\n      height = bar.get_height()\n      ax.annotate(f\"Avg.: {an:.2f}\", xy=(bar.get_x() + bar.get_width() / 2, height), xytext=(0, 3), textcoords=\"offset points\", ha='center', va='bottom', rotation=90, fontsize=20)\n\n  ax.set_xticks(range(len(x)))\n  ax.set_xticklabels(x)\n  ax.tick_params(\"both\", labelsize=30)\n  ax.tick_params(\"x\", rotation=90)\n  ax.set_xlabel(xlabel, fontsize=30)\n  ax.set_ylabel(ylabel, fontsize=30)\n\n  if title:\n    figure.suptitle(title, fontsize=40)\n\n  return figure, ax",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "7d32fd7543fade6145dbe08ad5ae2855af7adc39cb336f27945f9825c98272b0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if title:\n    figure.suptitle(title, fontsize=40)\n\nreturn figure, ax\n\n\ndef make_plot(x, y, xlabel, ylabel, ax=None, **kwargs):\n  \"\"\"\n  Create a plot\n\n  parameters:\n    x, y: iterables\n      values for the x- and y-axes\n    xlabel, ylabel: str\n      labels for the x- and y-axes\n    ax: matplotlib.pyplot.Axes (optional)\n      axes to plot on\n    cmap: matplotlib.colors.Colormap\n      color the segments based on their size\n    norm: bool\n      whether to normalize to the histogram's total sum\n    title:\n      title for the figure\n  \"\"\"\n\n  figure, ax = make_default_figure(ax)\n\n  if not x or not y:\n    print(\"No data available for plotting...\")\n    return figure, ax\n\n  ax.plot(x, y, **kwargs)\n  ax.tick_params(\"both\", labelsize=30)\n  ax.tick_params(\"x\", rotation=45)\n  ax.set_xlabel(xlabel, fontsize=30)\n  ax.set_ylabel(ylabel, fontsize=30)\n\n  return figure, ax\n\n\ndef make_pie(labels, y, ax=None, cmap=None, title=None, **kwargs):\n  \"\"\"\n  Generate a pie chart",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "f475284c06c90e13892f1abf2198af472ee2e2087a317f1326bf2761ecf1d15e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def create_pie_chart(labels, y, ax=None, cmap=None, title=None, **kwargs):\n  \"\"\"\n  Create a pie chart\n\n  parameters:\n    labels: iterable of str\n      labels for each slice of the pie\n    y: iterable\n      sizes of each slice relative to others\n    cmap: matplotlib colormap\n      assign colors to slices based on their size\n    title: str\n      title for the chart\n  \"\"\"\n  figure, ax = set_default_figure(ax)\n\n  if not labels or not y:\n    print(\"No data to plot...\")\n    return figure, ax\n\n  y = y.copy()\n  labels = [l for _, l in sorted(zip(y, labels))]\n  y.sort()\n  colors = None\n  if cmap:\n    step = 1. / len(y)\n    colors = [cmap(i * step) for i, _ in enumerate(y)]\n  explode = [0.05 for _ in y]\n  ax.pie(y, explode=explode, labels=labels, autopct=\"%1.1f%%\", startangle=90, textprops={\"fontsize\": 30}, colors=colors)\n  ax.axis(\"equal\")\n\n  if title:\n    figure.suptitle(title, fontsize=40)\n\n  return figure, ax",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "aee79977a4bae8103781e1e4f83d03962fa29a3f3f6e1fb195a73952c7ddc3c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if title:\n    figure.suptitle(title, fontsize=40)\n\nreturn figure, ax\n\n\ndef plot_histo_and_pie(x, y, xlabel, ylabel, path, annotate=None, **kwargs):\n  \"\"\"\n  Create 3 subplots:\n  1. absolute values\n  2. relative values\n  3. pie chart of relative values\n\n  parameters:\n    x, y: iterables\n      values for x- and y-axis\n    xlabel, ylabel: str\n      labels for x- and y-axis\n    path: str\n      location to save the figure\n    kwargs: dict\n      title: str\n        title for the figure\n      scale: float\n        scaling factor before plotting\n  \"\"\"\n  figure, axes = plt.subplots(1, 2, figsize=(40, 20))\n\n  if not x or not y:\n    print(\"No data available for plotting...\")\n    return\n\n  title = kwargs.pop(\"title\", None)\n  scale = kwargs.pop(\"scale\", 1.)\n  y = [i * scale for i in y]\n  make_histo(x, y, xlabel, ylabel, axes[0], norm=False, annotate=annotate, **kwargs)\n  make_pie(x, y, axes[1], **kwargs)\n  if title:\n    figure.suptitle(title, fontsize=60)\n  save_figure(figure, path)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "aca760be82bc62814a9368f4ad8aff91b0288e072d5fc1c4456cd80f6f0f069a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def resources_per_iteration(resources, fields, task_filter=None, per_what=None):\n  \"\"\"\n  Extract specified fields from the pipeline based on a potential regex filter.\n  \"\"\"\n  df = resources.df\n  if task_filter:\n    # filter on task names (which can include \"|\" for \"or\")\n    df = df[df[\"name\"].str.contains(task_filter)]\n\n  iterations = df[\"iter\"].unique()\n  start = int(min(iterations))\n  end = int(max(iterations))\n\n  # each sub-list provides the corresponding resource value per iteration\n  # iterations in pipeline_metric begin at 1\n  values = [[0] * (end - start + 1) for _ in fields]\n\n  # ensure fields is a list (e.g., in case it is a tuple)\n  fields = list(fields)\n  # columns to be selected\n  columns = fields.copy()\n\n  if per_what:\n    what_values = df[per_what].dropna().unique()\n    columns.append(per_what)\n    values = {tn: deepcopy(values) for tn in what_values}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "cd1e0b16594bab8274620b7207516cea5439350001a8f11635a7b7a56d6caf56": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for iteration in iterations:\n    list_index = iteration - start\n    df_skim = df.query(f\"iter == {iteration}\")[columns]\n    if df_skim.empty:\n      continue\n    for index, field in enumerate(fields):\n      if per_what:\n        for _, row in df_skim.iterrows():\n          per_what_value = row[per_what]\n          if not per_what_value:\n            continue\n          values[per_what_value][index][list_index] += row[field]\n        continue\n      values[index][list_index] = sum(df_skim[field].values)\n\n  return list(range(start, end + 1)), values\n\n\ndef plot_resource_history(json_pipelines, out_dir, task_filter=None, suffix=\"\", labels=None):\n  \"\"\"\n  Plotting the history of resources\n\n  Include min, max, and average values, especially helpful for examining changes in the resources required by the workflow.\n  \"\"\"\n  suffix = f\"_{suffix}\" if suffix else \"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "804814454e1a41ce05996d66aa0a1374fec9994e7211587f4e35a17863e7bed0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# the metrics we aim to extract\nmetrics = (METRIC_NAME_PSS, METRIC_NAME_USS, METRIC_NAME_CPU)\n# corresponding y-axis labels\ny_labels = (\"PSS [MB]\", \"USS [MB]\", \"CPU efficiency [%]\")\nfigures = []\naxes = []\nfor _ in metrics:\n    # gathering the figures and axes for plotting\n    figure, ax = make_default_figure()\n    figures.append(figure)\n    axes.append(ax)\n\n# names for the legends\nnames = []\n\n# collect to plot them together in another overlay plot\naverages = [[] for _ in metrics]\nmins = [[] for _ in metrics]\nmaxs = [[] [[] for _ in metrics]\n\n# to distinguish between resources from different pipelines visually\nlinestyles = [\"solid\", \"dashed\", \"dashdot\"]\nlabels = labels if labels and len(labels) == len(json_pipelines) else [jp.name for jp in json_pipelines]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "25986b77f0c261d388b33c12e22542cb3425da771840ff3c87e6b8db4dcd60fe": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for each jp_i, ranging through json_pipelines:\n\n    name = labels[jp_i]\n    n_cpu = jp.meta[\"cpu_limit\"]\n    iterations, iterations_y = resources_per_iteration(jp, metrics, task_filter)\n\n    names.append(f\"{jp_i}_{name}\")\n\n    ls = linestyles[jp_i%len(linestyles)]\n\n    for index, it_y in enumerate(iterations_y):\n      if index == 2:\n        # for CPU efficiency, we need to scale to the CPU limit; multiply by 100 to express it in percentage\n        it_y = [it / n_cpu * 100 for it in it_y]\n\n      average = np.mean(it_y)\n      averages[index].append(average)\n      mins[index].append(min(it_y))\n      maxs[index].append(max(it_y))\n\n      make_plot(iterations, it_y, \"sampling iterations\", y_labels[index], axes[index], label=f\"{name} (Avg: {average:.2f})\", ls=ls, linewidth=3)\n\n  for fig, ax, me in zip(figures, axes, metrics):\n    ax.legend(loc=\"best\", fontsize=30)\n    save_figure(fig, join(out_dir, f\"{me}_vs_iterations{suffix}.png\"))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "1f74ea213104fba5c87b3970655e4fb7426358afeb45d489108c99c831c911b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if len(json_pipelines) > 1:\n    for av, mi, ma, y_label, me in zip(averages, mins, maxs, y_labels, metrics):\n      # this function overlays minima, maxima, and averages\n      fig, ax = create_default_figure()\n      plot_data(names, av, \"pipeline names\", y_label, ax, label=\"average\", marker=\"o\", ms=30, linewidth=0)\n      plot_data(names, mi, \"pipeline names\", y_label, ax, label=\"min\", marker=\"v\", ms=30, linewidth=0)\n      plot_data(names, ma, \"pipeline names\", y_label, ax, label=\"max\", marker=\"P\", ms=30, linewidth=0)\n      adjust_x_ticks(ax, rotation=90)\n      add_legend(ax, loc=\"best\", fontsize=30)\n      save_plot(fig, join(out_dir, f\"{me}_min_max_average{suffix}.png\"))\n\n\ndef plot_resource_history_stacked(res, out_dir, per_what, task_filter=None):\n  \"\"\"\n  Plotting resource history\n\n  Include min, max, and average plots, especially useful for analyzing changes in workflow resource requirements.\n  \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "da08fa8bdbe7a005ddd62162ae4ffd083ba4ced0ba20ad76819bb27885c79aa0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# the metrics we aim to extract\nmetrics = (METRIC_NAME_PSS, METRIC_NAME_USS, METRIC_NAME_CPU)\n# corresponding y-axis labels\ny_labels = (\"PSS [MB]\", \"USS [MB]\", \"CPU efficiency [%]\")\nfigures = []\naxes = []\nfor _ in metrics:\n    # gathering figures and axes for plotting\n    figure, ax = make_default_figure(figsize=(60, 20))\n    figures.append(figure)\n    axes.append(ax)\n\nn_cpu = res.meta[\"cpu_limit\"]\niterations, iterations_y = resources_per_iteration(res, metrics, task_filter, per_what=per_what)\n\n# print every modulo iteration on the x-axis for better readability\nmodulo = 10**(max(0, len(str(len(iterations))) - 2))\n# enhance bar visibility with hatches\nhatches = [\"/\", \"|\", \"-\", \"+\", \"*\", \"x\"]\n\ndef find_last_non_zero(it_y):\n    \"\"\"\n    helper function to locate the last non-zero value and return its index\n    \"\"\"\n    for index, y in reversed(list(enumerate(it_y))):\n        if y:\n            return index\n    return 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "923e30286ebdc374ea1f293726986a1c8157806a4d79241f0306390905e81b51": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    for metric_index, _ in enumerate(metrics):\n     # checkpoints to be added\n    last_appearance = [\"\"] * len(iterations)\n    # add current to stack\n    bottom = [0] * len(iterations)\n    per_what_values = list(iterations_y.keys())\n    per_what_values.sort()\n    for hatch_index, per_what_value in enumerate(per_what_values):\n      it_y = iterations_y[per_what_value][metric_index]\n      if metric_index == 2:\n        # for CPU efficiency, we need to scale to the CPU limit; multiply by 100 to express it as a percentage\n        it_y = [it / n_cpu * 100 for it in it_y]\n      # determine where the last appearance was to attach it to the legend label\n      last_appearance = iterations[get_last_appearance(it_y)]\n      make_histo([i for i, _ in enumerate(it_y)], it_y, \"sampling iterations\", y_labels[metric_index], axes[metric_index], label=f\"{per_what_value} (last appeared at {last_appearance})\", bottom=bottom, sort=False, norm=False, hatch=hatches[hatch_index%len(hatches)])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "4c1f7b7f879e0b433d7745c5f6d7eee5b59cc1a321256624cc940c1385b58600": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# stack on top\n      bottom = [b + y for b, y in zip(bottom, it_y)]\n\n    axes[metric_index].legend(loc='lower left', bbox_to_anchor=(0., 1.02, 1., .102), ncols=5, mode=\"expand\", borderaxespad=0., fontsize=30, title=per_what, title_fontsize=40)\n    axes[metric_index].set_xticklabels([it if not ((it - 1) % modulo) else None for it in iterations])\n    figure.suptitle(y_labels[metric_index], fontsize=50)\n    save_figure(figures[metric_index], join(out_dir, f\"{metrics[metric_index]}_{per_what}_history_stacked.png\"))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "31e59f1d8fc5d484462e204575639a13761f647c4fd8a6017e68cd5350ded893": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def calculate_resources_per_category(res):\n  \"\"\"\n  Aggregate the peak resource demands of each task within their respective category\n  \"\"\"\n  df = res.df[[\"name\", \"category\", \"timeframe\"] + METRICS]\n  # identify the categories\n  categories = [cat for cat in df[\"category\"].unique() if cat is not None]\n  resources_per_category = {metric: [0] * len(categories) for metric in METRICS}\n  for i, cat in enumerate(categories):\n    # filter for the specified category\n    df_category = df.query(f\"category == '{cat}'\")\n    task_names = df_category[\"name\"].unique()\n    for tn in task_names:\n      # filter for the specific task and extract the maximum resource value\n      df_name = df_category.query(f\"name == '{tn}'\")\n      for key, current_res in resources_per_category.items():\n        # add the extracted maximum value to the corresponding category\n        current_res[i] += max(df_name[key].values)\n\n  return categories, resources_per_category",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "403d22e765a44e3a245f777356b28bacb6e72ff0b7c7811b4584f3ffb75c2217": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return categories, resources_per_category\n\n\ndef get_resources_per_task_within_category(res, category=None):\n    \"\"\"\n    Select one category and retrieve resources from there.\n    \"\"\"\n    df = res.df\n    if category:\n        df = res.df.query(f\"category == '{category}'\")[[\"name\"] + METRICS]\n    task_names = df[\"name\"].unique()\n    # the first entry is the maximum, the second the average\n    resources_max_mean = {\"max\": [0] * len(task_names), \"mean\": [0] * len(task_names)}\n    resources_per_task = {metric: deepcopy(resources_max_mean) for metric in METRICS}\n    for i, tn in enumerate(task_names):\n        # filter by the specific task name and extract the maximum from it\n        df_name = df.query(f\"name == '{tn}'\")\n        for key, current_res in resources_per_task.items():\n            # add the extracted value to this category\n            values = df_name[key].values\n            if len(values):\n                current_res[\"max\"][i] = max(df_name[key].values)\n                current_res[\"mean\"][i] = np.mean(df_name[key].values)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "b180d8a117f1c48b122c457070e8586f0b372a135fb67185868034570923b848": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return task_names, resources_per_task\n\n\ndef extract_resources(pipelines):\n    \"\"\"\n    A convenience function for extracting resources\n    \"\"\"\n    # Gather all metrics we obtained, with the goal of obtaining the median from all iterations\n    return [Resources(p) for p in pipelines]\n\n\ndef print_statistics(resource_object):\n  \"\"\"\n  Outputs resource statistics for a dataframe of pipeline resources\n  \"\"\"\n  print (\"<--- Summary of extracted resources from file \", resource_object.pipeline_file)\n  dframe = resource_object.df\n  meta = resource_object.meta\n\n  # estimate the runtime based on the maximum iteration\n  max_iter = dframe['iter'].max()\n  print (\"Iterations: \", max_iter)\n  # each iteration is estimated to take 5 seconds in the pipeline runner -- this should be made more dynamic and adaptive\n  print (\"Estimated runtime (s): \", max_iter * 5)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "efc1e845286069637a65d78f03989de44cc54b76006c0ae6700dd2359049388f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#(a) PSS memory\n  summed_pss_per_iter = dframe.groupby(\"iter\")['pss'].sum()\n  mean_pss = summed_pss_per_iter.mean()\n  max_pss = summed_pss_per_iter.max()\n  print (\"Mean-PSS (MB): \", mean_pss)\n  print (\"Max-PSS (MB): \", max_pss)\n\n  #(b) CPU consumption\n  summed_cpu_per_iter = dframe.groupby(\"iter\")['cpu'].sum()\n  mean_cpu = summed_cpu_per_iter.mean()\n  max_cpu = summed_cpu_per_iter.max()\n  print (\"Mean-CPU (cores): \", mean_cpu)\n  print (\"Max-CPU (cores): \", max_cpu)\n  print (\"CPU-efficiency: \", mean_cpu / meta[\"cpu_limit\"])\n  print (\"---> \")\n\ndef stat(args):\n  \"\"\"\n  Providing basic global statistics of resource usage\n  \"\"\"\n  resources = extract_resources(args.pipelines)\n  # iterate over all resource objects and generate individual statistics\n  for res in resources:\n    print_statistics(res)\n\n\ndef history(args):\n  \"\"\"\n  Entrypoint for resource history\n  \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "07b02dc35e75da31094a7e1b45b522cbf589d2afa223dc896fab3adf36e6d043": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def history(args):\n  \"\"\"\n  Entrypoint for history\n\n  Based on specific features (such as centre-of-mass energy or event count), extract various feature values and compare the resources.\n  \"\"\"\n  \"\"\"\n  Generate multiple plots for the resource history, along with bar and pie charts for summaries.\n  \"\"\"\n  resources = extract_resources(args.pipelines)\n\n  out_dir = args.output\n  if not out_dir.exists():\n    out_dir.mkdir()\n\n  # visualize the history of all resources\n  plot_resource_history(resources, out_dir, args.filter_task, args.suffix, args.names)\n\n  # utilize a consistent color map\n  cmap = matplotlib.cm.get_cmap(\"coolwarm\")\n\n  for res in resources:\n    name = res.name\n\n    # store in a sub-directory for each analyzed pipeline\n    out_dir = out_dir / f\"{name}_dir\"\n    if not out_dir.exists():\n      out_dir.mkdir()\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "baf10d21d1a1fd27e9dfba22b793f39f0aad7558c2e3fca200c604fefd003d3e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# generate stacked bar charts across iterations\n# based on task\nplot_resource_history_stacked(res, out_dir, per_what=\"name\", task_filter=args.filter_task)\n# based on timeframe\nplot_resource_history_stacked(res, out_dir, per_what=\"timeframe\", task_filter=args.filter_task)\n# based on category\nplot_resource_history_stacked(res, out_dir, per_what=\"category\", task_filter=args.filter_task)\n\n# the subsequent bar charts depict the peak resource demands for each task throughout all iterations",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "8ad4b73f9f8cba6e4fbc33eed17d3f6f1253b2bb5970afcc93246cf8ae4683bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# per category\ncategories, resources_per_category = get_resources_per_category(res)\nplot_histo_and_pie(categories, resources_per_category[METRIC_NAME_TIME], \"category\", \"$\\sum_{i\\in\\{\\mathrm{tasks}\\}_\\mathrm{category}} \\mathrm{walltime}_i\\,\\,[s]$\", join(out_dir, f\"walltimes_categories.png\"), cmap=cmap, title=\"Wall Time\")\nplot_histo_and_pie(categories, resources_per_category[METRIC_NAME_CPU], \"category\", \"$\\sum_{i\\in\\{\\mathrm{tasks}\\}_\\mathrm{category}} \\#\\mathrm{CPU}_i$\", join(out_dir, f\"cpu_categories.png\"), cmap=cmap, title=\"CPU Usage\")\nplot_histo_and_pie(categories, resources_per_category[METRIC_NAME_USS], \"category\", \"$\\sum_{i\\in\\{\\mathrm{tasks}\\}_\\mathrm{category}} \\mathrm{USS}_i /\\,\\,[MB]$\", join(out_dir, f\"uss_categories.png\"), cmap=cmap, title=\"USS\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "06c4d5cd0b92e15310a843b8d6ec256aeb4b51794597ba168a4c2d3a1c176591": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "plot_histo_and_pie(categories, resources_per_category[METRIC_NAME_PSS], \"category\", \"$\\sum_{i\\in\\{\\mathrm{tasks}\\}_\\mathrm{category}} \\mathrm{PSS}_i\\,\\,[MB]$\", join(out_dir, f\"pss_categories.png\"), color_map=cmap, title=\"PSS\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "7d7bc3717dc22185d9c37a487635900274b8b826f32bc48abcd652994bd09739": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# per single task\ntask_names, resources_per_task = get_resources_per_task_within_category(res)\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_TIME][\"max\"], \"task\", \"$\\mathrm{walltime}\\,\\,[s]$\", join(out_dir, f\"walltimes_tasks.png\"), cmap=cmap, title=\"TIME\")\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_CPU][\"max\"], \"task\", \"$\\max\\left(\\#\\mathrm{CPU}\\right)$\", join(out_dir, f\"cpu_tasks.png\"), cmap=cmap, title=\"CPU\", annotate=resources_per_task[METRIC_NAME_CPU][\"mean\"])\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_USS][\"max\"], \"task\", \"$\\max\\left(\\mathrm{USS}\\,\\,[MB]\\right)$\", join(out_dir, f\"uss_tasks.png\"), cmap=cmap, title=\"USS\", annotate=resources_per_task[METRIC_NAME_USS][\"mean\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "cece1710e87993d0474299c36dd5241efd8904b09f55a76118f22959ea97ef8d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "plot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_PSS][\"max\"], \"task\", \"$\\max\\left(\\mathrm{PSS}\\,\\,[MB]\\\\right)$\", join(out_dir, f\"pss_tasks.png\"), cmap=cmap, title=\"PSS\", annotate=resources_per_task[METRIC_NAME_PSS][\"mean\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "3cd07098fb1836c540fb187144323aedec5004dd792c9702a1013e57d61ee26a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# per task within digi category\ntask_names, resources_per_task = get_resources_per_task_within_category(res, \"digi\")\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_TIME][\"max\"], \"task\", \"$\\mathrm{walltime}\\,\\,[s]$\", join(out_dir, f\"walltimes_tasks_digi.png\"), cmap=cmap, title=\"TIME (digi)\")\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_CPU][\"max\"], \"task\", \"$\\max\\left(\\#\\mathrm{CPU}\\\\right)$\", join(out_dir, f\"cpu_tasks_digi.png\"), cmap=cmap, title=\"CPU (digi)\", annotate=resources_per_task[METRIC_NAME_CPU][\"mean\"])\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_USS][\"max\"], \"task\", \"$\\max\\left(\\mathrm{USS}\\,\\,[MB]\\\\right)$\", join(out_dir, f\"uss_tasks_digi.png\"), cmap=cmap, title=\"USS (digi)\", annotate=resources_per_task[METRIC_NAME_USS][\"mean\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "58c7b630aadb75642a7da271b2ded094e4f3a4b7d12c87bb250415263160a1c8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "plot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_PSS][\"max\"], \"task\", \"$\\max\\left(\\mathrm{PSS}\\,\\,[MB]\\\\right)$\", join(out_dir, f\"pss_tasks_digi.png\"), color_map=cmap, title=\"PSS (digi)\", annotate=resources_per_task[METRIC_NAME_PSS][\"mean\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "7d0e5d966cbccd8952b888837ce667bb24ab1eeca96e9a1be5bad43281f469a0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# per task within reco category\ntask_names, resources_per_task = get_resources_per_task_within_category(res, \"reco\")\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_TIME][\"max\"], \"task\", \"$\\mathrm{walltime}\\,\\,[s]$\", join(out_dir, f\"walltimes_tasks_reco.png\"), cmap=cmap, title=\"TIME (reco)\")\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_CPU][\"max\"], \"task\", \"$\\max\\left(\\#\\mathrm{CPU}\\\\right)$\", join(out_dir, f\"cpu_tasks_reco.png\"), cmap=cmap, title=\"CPU (reco)\", annotate=resources_per_task[METRIC_NAME_CPU][\"mean\"])\nplot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_USS][\"max\"], \"task\", \"$\\max\\left(\\mathrm{USS}\\,\\,[MB]\\\\right)$\", join(out_dir, f\"uss_tasks_reco.png\"), cmap=cmap, title=\"USS (reco)\", annotate=resources_per_task[METRIC_NAME_USS][\"mean\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "ddc79697a71cabab0cf5a4fc1a918f3cb4a403a42df370b360b80707bfd01260": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "plot_histo_and_pie(task_names, resources_per_task[METRIC_NAME_PSS][\"max\"], \"task\", \"$\\max\\left(\\mathrm{PSS}\\,\\,[MB]\\\\right)$\", join(out_dir, f\"pss_tasks_reco.png\"), cmap=cmap, title=\"Peak Resident Set Size (reco)\", annotate=resources_per_task[METRIC_NAME_PSS][\"mean\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "925d776e877d5f3367ec90b391f2e05b1cd13d959cd64b4ff6f28c2b3703b9a1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return 0\n\n\ndef compare(args):\n  \"\"\"\n  Entrypoint for comparison\n\n  Depending on a specific feature (e.g., centre-of-mass energy or number of events), extract all distinct feature values\n  and compare the resources.\n  \"\"\"\n  # accumulate all resources\n  resources_single = extract_resources(args.pipelines)\n  resources = resources_single[0]\n  for m in resources_single[1:]:\n    resources += m\n\n  # proceed with the dataframe, skim it to the necessary data\n  df_full = resources.df[[\"name\", \"timeframe\", \"col\", args.feature] + METRICS]\n\n  def plot_resources_versus_tasks(df, metric, feature, y_label, save_path, title=None, add_to_legend=None, select=None):\n    \"\"\"\n    Plot resources against tasks\n    \"\"\"\n    if select:\n      # filter based on the query if any\n      df = df.query(select)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "1e0f67d887cfdf7960ab001bce27468a02e41d37dedb2a4e19e2e954af6ceba1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# retrieve distinct task names\ntask_names = df[\"name\"].unique()\n# obtain unique feature values as strings\nfeature_values = [str(v) for v in df[feature].unique()]\n# organize values by task\ntask_values = {v: [] for v in feature_values}\n\nfig, ax = plt.subplots(figsize=(40, 30))\n# iterate through various markers\nmarkers = [\"o\", \"v\", \"P\"]\n\nfor i, feat in enumerate(feature_values):\n  for task in task_names:\n    df_filt = df.query(f\"{feature} == {feat} and name == \\'{task}\\'\")\n    if df_filt.empty:\n      val_append = None\n    else:\n      # find the maximum value\n      val_append = max(df_filt[metric].values)\n    task_values[feat].append(val_append)\n  label = f\"{feature}: {feat}\"\n  if add_to_legend:\n    label = f\"{label}, {add_to_legend}\"\n  ax.plot(task_names, task_values[feat], label=label, lw=0, ms=30, marker=markers[i%len(markers)])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "1b77d370e1070867d7b93ffbf0a496d16550d51e62548481281ad63b500adc39": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ax.set_xlabel(\"tasks\", fontsize=40)\nax.set_ylabel(y_label, fontsize=40)\nax.legend(loc=\"best\", fontsize=40)\n\nax.tick_params(labelsize=40)\nax.tick_params(axis=\"x\", rotation=90)\nif title:\n    # add user-defined title if provided\n    fig.suptitle(title, fontsize=60)\n# adjust, save and close\nsave_figure(fig, save_path)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "ae848cdc4c410c3b8d20e5dbb14e2d9a331f1b05226d7fb8e28061ad468ad464": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not exists(args.output):\n  makedirs(args.output)\nplot_resources_versus_tasks(df_full, METRIC_NAME_CPU, args.feature, \"# CPU\", join(args.output, f\"{args.feature}_cpu.png\"), \"system: pp\", select=\"col == 'pp'\")\nplot_resources_versus_tasks(df_full, METRIC_NAME_USS, args.feature, \"USS [GB]\", join(args.output, f\"{args.feature}_uss.png\"), \"system: pp\", select=\"col == 'pp'\")\nplot_resources_versus_tasks(df_full, METRIC_NAME_PSS, args.feature, \"PSS [GB]\", join(args.output, f\"{args.feature}_pss.png\"), \"system: pp\", select=\"col == 'pp'\")\nplot_resources_versus_tasks(df_full, METRIC_NAME_TIME, args.feature, \"time [s]\", join(args.output, f\"{args.feature}_time.png\"), \"system: pp\", select=\"col == 'pp'\")\n\n\ndef influx(args):\n  \"\"\"\n  Entry point for influx\n\n  \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "4dbb22a1902457e2575d274ba98ed54dcb3adfc4b6286b04b894f546adc11b62": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def influx(args):\n  \"\"\"\n  Entry point for influx\n\n  Create a text file for upload to InfluxDB\n  \"\"\"\n  # gather the tags provided by the user\n  tags = {}\n  if args.tags:\n    pairs = args.tags.split(\";\")\n    for p in pairs:\n      key_val = p.split(\"=\")\n      if len(key_val) != 2:\n        print(f\"WARNING: Invalid key-value pair {p}, skipped\")\n        continue\n      tags[key_val[0]] = key_val[1]\n\n  # initialize the pipeline\n  resources = Resources(args.pipeline)\n  n_cpu = resources.meta[\"cpu_limit\"]\n\n  # include the number of timeframes in the tags\n  tags[\"ntfs\"] = resources.number_of_timeframes\n  tags = \",\".join([f\"{k}={v}\" for k, v in tags.items()])\n  if tags:\n    # prepend a comma\n    tags = \",\" + tags\n\n  # retrieve the history of metrics of interest\n  _, iterations_y = resources_per_iteration(resources, METRICS)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "3cf940bf52bf89bcd45cd9bf0589b9c7051a658f6bea45496021b891b6bea097": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def make_db_string(names, values, metric_name, sub_key=None):\n    # this is the final table name for resources accumulated in categories\n    table_suffix = metric_name if sub_key is None else f\"{metric_name}_{sub_key}\"\n    tab_name = f\"{args.table_base}_workflows_{table_suffix}\"\n    # start building the string for the influx file to be uploaded\n    db_string = f\"{tab_name}{tags}\"\n    # accumulate the total resources for this metric\n    total = 0\n    # resource measurements go into the fields and are separated from the tags by a space\n    fields = []\n    values_to_extract = values[metric_name]\n    if sub_key:\n      values_to_extract = values_to_extract[sub_key]\n    for name, val in zip(names, values_to_extract):\n      if sub_key is not None:\n        val = val\n      fields.append(f\"{name}={val}\")\n      total += val\n    # join fields by comma...\n    fields = \",\".join(fields)\n    # ...add to the string and write to file\n    db_string += f\" {fields},total={total}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "8ac3cc9c495f4249dbf099750efe1ce3907550f3e5c3b8d17f33d05162a4dccb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ...append to the string and write to file\ndb_string += f\" {fields},total={total}\"\nreturn db_string",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "90ca39cff0880190ace35b0dbd6037d87766aa87708cacaa2d9211a2c5ea713c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    categories, values_categories = get_resources_per_category(resources)\n    tasks, values_tasks = get_resources_per_task_within_category(resources)\n    with open(args.output, \"w\") as f:\n        for metric_id, metric_name in enumerate(METRICS):\n            # write for categories\n            db_string = make_db_string(categories, values_categories, metric_name)\n            f.write(f\"{db_string}\\n\")\n            # write for single tasks\n            db_string = make_db_string(tasks, values_tasks, metric_name, \"max\")\n            f.write(f\"{db_string}\\n\")\n            db_string = make_db_string(tasks, values_tasks, metric_name, \"mean\")\n            f.write(f\"{db_string}\\n\")\n\n            if metric_name == METRIC_NAME_TIME:\n                # skip the following for time; using min, max and average does not make sense here\n                continue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "230b76d2900ec70a70ba06f448f86b5bf05e7dda04d80cc02ef24d8ae2516b5a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# table name for resources per CPU\ntab_name = f\"{args.table_base}_workflows_{metric_name}_per_cpu\"\n# normalize resources to number of CPUs\niterations = [it / n_cpu for it in iterations_y[metric_id]]\n# assemble string for InfluxDB and write to file\ndb_string = f\"{tab_name}{tags} minimum={min(iterations)},maximum={max(iterations)},average={sum(iterations) / len(iterations)}\"\nf.write(f\"{db_string}\\n\")\n\nreturn 0\n\n\ndef pandas_to_json(args):\n  \"\"\"\n  Convert a pipeline_metric file to pandas DataFrame and dump to JSON\n\n  This can be useful for later inspection\n  \"\"\"\n  resources_single = extract_resources(args.pipelines)\n  resources = resources_single[0]\n  for m in resources_single[1:]:\n    resources += m\n  resources.df.to_json(args.output, indent=2)\n  return 0\n\n\ndef main():\n\n  parser = argparse.ArgumentParser(description=\"Evaluate metrics of O2 simulation workflow\")\n  sub_parsers = parser.add_subparsers(dest=\"command\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "3cb18f9c518b8904f31fde51464e33f77d4ae2d8153ea2ce470737d746b3cf6a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    stat_parser = sub_parsers.add_parser(\"stat\", help=\"Display a basic summary of resource usage\")\n    stat_parser.set_defaults(func=stat)\n    stat_parser.add_argument(\"-p\", \"--pipelines\", nargs=\"*\", help=\"pipeline_metric files from o2_dpg_workflow_runner\", required=True)\n\n    plot_parser = sub_parsers.add_parser(\"history\", help=\"Generate plots from extracted metrics JSON file(s)\")\n    plot_parser.set_defaults(func=history)\n    plot_parser.add_argument(\"-p\", \"--pipelines\", nargs=\"*\", help=\"pipeline_metric files from o2_dpg_workflow_runner\", required=True)\n    plot_parser.add_argument(\"--output\", help=\"output directory\", default=\"resource_history\")\n    plot_parser.add_argument(\"--filter-task\", dest=\"filter_task\", help=\"regex pattern to filter tasks in pipeline iterations\")\n    plot_parser.add_argument(\"--suffix\", help=\"append a suffix to the end of the output file names\")\n    plot_parser.add_argument(\"--names\", nargs=\"*\", help=\"assign a custom name to each pipeline\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "0e79937a81d9a104fe97bc64aade1444f7c7e967059233a3cbd75a96c4d72890": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "plot_comparison_parser = sub_parsers.add_parser(\"compare\", help=\"Compare resources from pipeline_metric file\")\nplot_comparison_parser.set_defaults(func=compare)\nplot_comparison_parser.add_argument(\"-p\", \"--pipelines\", nargs=\"*\", help=\"pipeline_metric files generated by o2_dpg_workflow_runner\", required=True)\nplot_comparison_parser.add_argument(\"--output\", help=\"output directory for results\", default=\"resource_comparison\")\nplot_comparison_parser.add_argument(\"--names\", nargs=\"*\", help=\"assign a custom name to each pipeline\")\nplot_comparison_parser.add_argument(\"--feature\", help=\"select the feature to investigate\", required=True, choices=FEATURES)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "87c2c88a57f44e71ff79fc03bf3d5316585cbe44279a26891e3a11969e18bb42": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "influx_parser = sub_parsers.add_parser(\"influx\", help=\"Convert data into a format suitable for InfluxDB\")\ninflux_parser.set_defaults(func=influx)\ninflux_parser.add_argument(\"-p\", \"--pipeline\", help=\"specify exactly one pipeline_metric file from o2_dpg_workflow_runner for InfluxDB preparation\", required=True)\ninflux_parser.add_argument(\"--table-base\", dest=\"table_base\", help=\"set the base name for the InfluxDB table\", default=\"O2DPG_MC\")\ninflux_parser.add_argument(\"--output\", \"-o\", help=\"define the output file name\", default=\"metrics_influxDB.dat\")\ninflux_parser.add_argument(\"--tags\", help=\"provide key-value pairs separated by \\\";\\\", for example: alidist=1234567;o2=7654321;tag=someTag\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "4d7087d6a54c1b20769c7227ce4ba95c20a8d7f796114f34e23cb831bc7efdd7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "pandas_json_parser = sub_parsers.add_parser(\"pandas-json\", help=\"read pipeline_metric file, convert to pandas and write to JSON\")\npandas_json_parser.set_defaults(func=pandas_to_json)\npandas_json_parser.add_argument(\"-p\", \"--pipelines\", nargs=\"*\", help=\"pipeline file to be converted\", required=True)\npandas_json_parser.add_argument(\"-o\", \"--output\", help=\"custom output filename\", default=\"df.json\")\n\n\nargs = parser.parse_args()\nargs.func(args)\n\nif __name__ == \"__main__\":\n  sys.exit(main())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_sim_metrics.py"
        }
    ],
    "c5eb12237e367c87bdf07de5e5afbb1d421ca618e9d02362cc5d86ab5968b38f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nimport sys\nfrom os.path import dirname\nimport argparse\nimport re\nfrom glob import glob\nimport json\nimport math\n\n################################################################\n#                                                              #\n# Script designed to extract CPU/MEM resource estimates from   #\n# the log_time files generated by individual tasks.            #\n#                                                              #\n# Outputs a JSON file for use in dynamic scheduling decisions. #\n################################################################\n\n# helper function for locating files\ndef locate_files(path, search, depth=0):\n  files = []\n  for d in range(depth + 1):\n    wildcards = \"/*\" * d\n    path_search = path + wildcards + f\"/{search}\"\n    files.extend(glob(path_search))\n  return files",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_get_resource_estimates.py"
        }
    ],
    "84d8f3e979c5ccab39e4de9fec7a08ab91b21c4c3e730d5a490dc254b8e777d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This function retrieves essential metrics from a single resource file (generated by O2 jobutils/taskwrapper).\ndef extract_time_single(path):\n  r = {}\n  with open(path, \"r\") as f:\n    for line in f:\n      if \"walltime\" in line:\n        r[\"walltime\"] = float(line.strip().split()[-1])\n      elif \"CPU\" in line:\n        r[\"cpu\"] = float(line.strip().split()[-1].split('%')[0])\n      elif \"mem\" in line:\n        r[\"mem\"] = float(line.strip().split()[-1])\n  return r\n\ndef process(args):\n  pipeline_dir = dirname(args.path)\n  files = find_files(pipeline_dir, \"*.log_time\", 1)\n  if not files:\n      print(f\"WARNING: Unable to locate time logs in {pipeline_dir}.\")\n      return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_get_resource_estimates.py"
        }
    ],
    "7427a31c1b2390e3152e3428125eaa47dca7fe324cc5f6a1bdd588673047fbe0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    resource_accum = {}  # collects resources based on task names\n    for f in files:\n        # extract task name from the time log file\n        name = f.split(\"/\")[-1]\n        name = re.sub(\"\\.log_time$\", \"\", name)\n        name_notf = name.split(\"_\")[0]\n        resources = extract_time_single(f)\n        resources[\"name\"] = name\n        resource_accum[name_notf] = resource_accum.get(name_notf, [])\n        resource_accum[name_notf].append(resources)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_get_resource_estimates.py"
        }
    ],
    "a1b0228d57a8e8bcc92fba60350068e5fba805414b6a21ed65136afb60757d70": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# finalizes metrics; average for CPU; maximum for MEM; average for walltime\n# returns final metric result suitable for output to json\ndef finalize(resource_list):\n    \"\"\"\n    input is a map of lists of resource dictionaries\n    output is a map of final resource estimates\n    \"\"\"\n    result = {}\n    for task in resource_list:\n        finalr = {\"walltime\": 0, \"cpu\": 0, \"mem\": 0}\n        for r in resource_list[task]:  # r is a resource estimate\n            finalr[\"walltime\"] += r[\"walltime\"]\n            finalr[\"mem\"] = max(r[\"mem\"], finalr[\"mem\"])\n            finalr[\"cpu\"] += r[\"cpu\"]\n        finalr[\"walltime\"] /= len(resource_list[task])\n        finalr[\"cpu\"] /= 100 * len(resource_list[task])  # we use the number of CPUs, not the percentage\n        finalr[\"mem\"] /= 1024  # we prefer the value in MB\n        finalr[\"mem\"] = math.ceil(finalr[\"mem\"])\n        result[task] = finalr\n    return result\n\nestimate = finalize(resource_accum)\nprint(estimate)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_get_resource_estimates.py"
        }
    ],
    "4f88788cc7ecf1fa71186ba7678f89d4f4faefe27e3147df6a9d8dd6a89f5dac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    estimate = finalize(resource_accum)\n    print(estimate)\n\n    # finally save to JSON\n    with open(args.output, \"w\") as f:\n        json.dump(estimate, f, indent=2)\n\n\ndef main():\n    parser = argparse.ArgumentParser(description=\"Create a O2DPG workflow resource file from existing time logs\")\n    parser.add_argument('-o','--output', help='Filename of output metric json file', default='learned_O2DPG_resource_metrics.json')\n    parser.add_argument('-p','--path', help='Path to O2DPG workspace', default=\"./\")\n    args = parser.parse_args()\n    process(args)\n\nif __name__ == \"__main__\":\n    sys.exit(main())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/utils/o2dpg_get_resource_estimates.py"
        }
    ],
    "5caae8d9a9e0b362200b041e65e7003b1b30c9b56be2e74a08aeb75615bb0f6c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nimport sys\nfrom os.path import join, dirname, exists\nimport argparse\n\nsys.path.append(join(dirname(__file__), '.', 'o2dpg_workflow_utils'))\n\nfrom o2dpg_workflow_utils import createTask, read_workflow, dump_workflow, check_workflow, update_workflow_resource_requirements, make_workflow_filename\n\ndef extend(args):\n    \"\"\"merge another workflow into the original one\n\n    The original workflow's overall configuration remains unchanged\n    \"\"\"\n    # load workflows\n    workflow_orig, meta = read_workflow(args.orig_wf)\n    workflow_extend, _ = read_workflow(args.extend_wf)\n\n    # merge\n    workflow_orig.extend(workflow_extend)\n\n    # save to new file\n    filename = args.output if args.output else args.orig_wf\n    # preserve meta data from the original workflow being extended\n    dump_workflow(workflow_orig, filename, meta)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "d14a30b423157515854e87ddbbc8f06fa5719802336ae09de84cf28da7e3b57f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def create(args):\n    \"\"\"create an empty workflow structure or append task skeletons to an existing workflow\n    \"\"\"\n    filename = make_workflow_filename(args.file)\n    if not args.add_task and os.path.exists(filename):\n        print(f\"Workflow file {filename} already exists. Please delete it and try again.\")\n        return\n    if not args.add_task or not os.path.exists(filename):\n        # simply create an empty workflow\n        dump_workflow([], filename)\n    if args.add_task:\n        # append task skeletons with specified names\n        workflow, meta = read_workflow(filename)\n        for name in args.add_task:\n            workflow.append(createTask(name=name))\n        dump_workflow(workflow, filename, meta=meta)\n\n\ndef find_task(workflow, task_name):\n    for s in workflow:\n        if s[\"name\"] == task_name:\n            return s\n    return None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "90fd57d79db2bbf5abd03824a5cacde6bc69b45e0c90816494bc5a73d79c0fa3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def inspect(args):\n    workflow, meta = read_workflow(args.file)\n    for task in workflow:\n        if task[\"name\"] == args.task:\n            print(f\"Inspecting task with name {args.task}\")\n            for attr in (\"name\", \"needs\", \"timeframe\", \"cwd\", \"labels\", \"cmd\"):\n                if hasattr(args, attr) and getattr(args, attr) is not None:\n                    task[attr] = getattr(args, attr)\n            for attr in (\"cpu\", \"relative_cpu\", \"mem\"):\n                if hasattr(args, attr) and getattr(args, attr) is not None:\n                    task[\"resources\"][attr] = getattr(args, attr)\n            break\n    else:\n        print(f\"Task with name {args.task} does not exist\")\n        exit(1)\n    dump_workflow(workflow, args.file, meta=meta)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "661dda3c7750de5191d1c61f34a05fd7ba6b4d3607ead91d68377b6205df9fad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def inspect(args):\n    \"\"\"Workflow Inspection\n\n    Currently, this function demonstrates various inspection capabilities.\n    \"\"\"\n    workflow, meta = read_workflow(args.file)\n    if args.check:\n        check_workflow(workflow)\n    if args.task:\n        task = find_task(workflow, args.task)\n        if not task:\n            print(f\"Task with name {args.task} not found\")\n            exit(1)\n        print(\"Here are the requested task details\")\n        print(task)\n    if meta:\n        print(\"Here are the metadata details\")\n        for key, value in meta.items():\n            print(f\"{key}: {value}\")\n\n\ndef main():\n\n    parser = argparse.ArgumentParser(description='Create an ALICE (Run3) MC simulation workflow')\n\n    sub_parsers = parser.add_subparsers(dest=\"command\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "6c39f79a30b542c389c2baff79586d2c50d2af5594b00ea2fc7e6d8fc674e1fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    sub_parsers = parser.add_subparsers(dest=\"command\")\n\n    create_parser = sub_parsers.add_parser(\"create\", help=\"handle workflow management\")\n    create_parser.set_defaults(func=create)\n    create_parser.add_argument(\"file\", help=\"workflow file to create or modify\")\n    create_parser.add_argument(\"--add-task\", dest=\"add_task\", nargs=\"+\", help=\"add named tasks to the workflow file\")\n\n    # Append to (sim) workflow\n    merge_parser = sub_parsers.add_parser(\"merge\", help=\"append stages\")\n    merge_parser.set_defaults(func=extend)\n    merge_parser.add_argument(\"orig_wf\", help=\"original workflow file\")\n    merge_parser.add_argument(\"extend_wf\", help=\"workflow JSON to merge into the original\")\n    merge_parser.add_argument(\"--output\", \"-o\", help=\"name of the extended workflow output file\", default=\"workflow_merged.json\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "ec04ea7a05d1f73bf39904a34a1c9a322d4e7c9a369cc69fb0db5a814d0993d3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "nworker_parser = sub_parsers.add_parser(\"nworkers\", help=\"adjust the number of workers\")\nnworker_parser.set_defaults(func=nworkers)\nnworker_parser.add_argument(\"file\", help=\"the workflow file that needs to be edited\")\nnworker_parser.add_argument(\"jobs\", type=int, help=\"the new number of workers to recalculate based on CPU\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "b1aa9cc3c8dac6eca3ad7b94bd6ca4690db0db967e061ef3b8cbf744276fdec2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "modify_parser = sub_parsers.add_parser(\"modify\", help=\"adjust a task within the workflow\")\nmodify_parser.set_defaults(func=modify)\nmodify_parser.add_argument(\"file\", help=\"the workflow file to be adjusted\")\nmodify_parser.add_argument(\"task\", help=\"name of the task to be modified\")\n# currently, renaming the task is not supported as it affects the log-file name\n#modify_parser.add_argument(\"--name\", help=\"new name for this task\")\nmodify_parser.add_argument(\"--needs\", nargs=\"+\", help=\"tasks that must be completed before this one\")\nmodify_parser.add_argument(\"--timeframe\", type=int, help=\"timeframe for the task\")\nmodify_parser.add_argument(\"--cwd\", help=\"current working directory for this task\")\nmodify_parser.add_argument(\"--labels\", nargs=\"+\", help=\"labels attached to this task\")\nmodify_parser.add_argument(\"--cpu\", type=int, help=\"number of workers to be used for this task\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "3ab62a887c9714778313dd6cf78ce363c1de8692a7a2dc98ca61dc8bd5a9bd3d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "modify_parser.add_argument(\"--relative-cpu\", dest=\"relative_cpu\", type=float, help=\"the relative fraction of the maximum available workers\")\nmodify_parser.add_argument(\"--mem\", type=int, help=\"estimated memory usage\")\nmodify_parser.add_argument(\"--cmd\", help=\"the command line to be executed\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "e7430eec82fa3664d483475b9ed56bac5ffefad3faa2b443775a6b59d6cec43e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    inspect_parser = sub_parsers.add_parser(\"inspect\", help=\"examine a workflow\")\n    inspect_parser.set_defaults(func=inspect)\n    inspect_parser.add_argument(\"file\", help=\"Workflow file to examine\")\n    inspect_parser.add_argument(\"--check\", action=\"store_true\", help=\"Verify the workflow's integrity\")\n    inspect_parser.add_argument(\"--task\", help=\"name of task to examine in detail\")\n\n    args = parser.parse_args()\n\n    if not hasattr(args, \"func\"):\n        parser.parse_args([\"--help\"])\n        exit(0)\n\n    args.func(args)\n\n\nif __name__ == \"__main__\":\n    # offer this as a standalone option if run directly from the interpreter\n    main()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg-workflow-tools.py"
        }
    ],
    "6e81ad5793743e2c0ff071bf3fb2bfb9611fe9144ab2bdbd6f1535a0a6e9f038": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nimport sys\nimport time\nimport argparse\nfrom os import environ, makedirs\nfrom os.path import join, expanduser, exists, dirname\nfrom os.path import split as ossplit\nfrom copy import deepcopy\nimport array as arr\nimport os\nimport requests\nimport re\nimport json\nimport math\nimport pandas as pd\nimport subprocess\nimport shlex\n\n# a workaround to locate the script for metadata upload\no2dpg_root = os.environ.get(\"O2DPG_ROOT\")\nif o2dpg_root is None:\n  raise EnvironmentError(\"O2DPG_ROOT is not configured in the environment.\")\nmc_prodinfo_path = os.path.abspath(os.path.join(o2dpg_root, \"MC\", \"prodinfo\"))\nsys.path.append(mc_prodinfo_path)\nfrom mcprodinfo_ccdb_upload import MCProdInfo, upload_mcprodinfo_meta, query_mcprodinfo\nimport dataclasses\n\n# generates a time-stamped MC workflow; integrated into a specified run number (depending on production scale, etc.)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "2b0815284b30399afe99407fb261792e44da20e098191104c13e63e602780fd1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Example:\n#  ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow_anchored.py -tf 500 --split-id ${s} --cycle ${cycle} --prod-split 100 --run-number 505600         \\\n#                                                       -- -gen pythia8 -eCM 900 -col pp -gen pythia8 -proc inel                             \\\n#                                                           -ns 22 -e TGeant4                                                                \\\n#                                                           -j 8 -interactionRate 2000                                                       \\\n#                                                           -field +2                                                                        \\\n#                                                           -confKey \"Diamond.width[2]=6\"\n# (the initial set of parameters is used to define the anchoring point, while the subsequent parameters are passed directly to the workflow creation process)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "4bc404c3fa82ae449ca934abcd80b6a585b32f5ae9e45250e636cd40019f83dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# this is PyROOT; enables reading ROOT C++ objects\nfrom ROOT import o2, TFile, TString, TBufferJSON, TClass, std\n\n# some global constants\n# these values should be derived from the C++ code (via PyROOT and library access)\nLHCMaxBunches = 3564;                           # maximum number of bunches\nLHCRFFreq = 400.789e6;                          # LHC RF frequency in Hz\nLHCBunchSpacingNS = 10 * 1.e9 / LHCRFFreq;      # bunch spacing in ns (10 RF buckets)\nLHCOrbitNS = LHCMaxBunches * LHCBunchSpacingNS; # orbit duration in ns\nLHCOrbitMUS = LHCOrbitNS * 1e-3;                # orbit duration in microseconds\nLHCBunchSpacingMUS = LHCBunchSpacingNS * 1e-3   # bunch spacing in microseconds\n\n# these should be part of a module or support layer\nclass CCDBAccessor:\n    def __init__(self, url):\n        # This is utilized for specific operations\n        self.api = o2.ccdb.CcdbApi()\n        self.api.init(url)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "5dc5fa8d6bdf1aa087b296da87a7d2a2c6f6c6a033252f35c0aa678e3a1db931": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# this is used for the actual fetching for now\no2.ccdb.BasicCCDBManager.instance().setURL(url)\n# we allow nullptr responses and will handle them ourselves\no2.ccdb.BasicCCDBManager.instance().setFatalWhenNull(False)\n\ndef fetch(self, path, obj_type, timestamp=None, meta_info=None):\n    \"\"\"\n    TODO We could use CcdbApi::snapshot at some point, needs revision\n    \"\"\"\n\n    if not timestamp:\n        timestamp = o2.ccdb.BasicCCDBManager.instance().getTimestamp()\n    else:\n        o2.ccdb.BasicCCDBManager.instance().setTimestamp(timestamp)\n\n    if not meta_info:\n        obj = o2.ccdb.BasicCCDBManager.instance().get(obj_type)(path)\n    else:\n        obj = o2.ccdb.BasicCCDBManager.instance().get(obj_type)(path, meta_info)\n\n    return timestamp, obj\n\ndef get_run_duration(self, run_number):\n    return o2.ccdb.BasicCCDBManager.instance().getRunDuration(run_number)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "b713be0dc3a3c2c9c50949b62a0c87627238f482037444bc9c0bdf165caafc66": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def fetch_header(self, path, timestamp=None):\n    meta_info = std.map[\"std::string\", \"std::string\"]()\n    if timestamp is None:\n        timestamp = -1\n    header = self.api.retrieveHeaders(path, meta_info, timestamp)\n    return header\n\n\ndef retrieve_CCDBObject_asJSON(ccdbreader, path, timestamp, objtype_external=None):\n    \"\"\"\n    Fetches a CCDB object as a JSON/dictionary.\n    The object type does not need to be known beforehand.\n    \"\"\"\n    header = ccdbreader.fetch_header(path, timestamp)\n    if not header:\n        print(f\"WARNING: Could not get header for path {path} and timestamp {timestamp}\")\n        return None\n    objtype = header[\"ObjectType\"]\n    if objtype is None:\n        objtype = objtype_external\n    if objtype is None:\n        return None\n\n    ts, obj = ccdbreader.fetch(path, objtype, timestamp)\n    # convert object to json\n    jsonTString = TBufferJSON.ConvertToJSON(obj, TClass.GetClass(objtype))\n    return json.loads(jsonTString.Data())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "0cafbeb285fa1073cac134fcb147e1f75c33bfa91e34a04089413853e7eb1c7d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def fetch_Aggregated_RunInfos(run_number):\n    \"\"\"\n    Obtains start of run (sor), end of run (eor), and other global parameters using the\n    AggregatedRunInfo object in O2, which ensures consistent information building.\n    This method is recommended over the older function \"retrieve_params_fromGRPECS_and_OrbitReset\".\n    \"\"\"\n\n    runInfo = o2.parameters.AggregatedRunInfo.buildAggregatedRunInfo(o2.ccdb.BasicCCDBManager.instance(), run_number)\n    detectorList = o2.detectors.DetID.getNames(runInfo.grpECS.getDetsReadOut())\n    assert (run_number == runInfo.runNumber)\n    assert (run_number == runInfo.grpECS.getRun())\n    return {\"SOR\" : runInfo.sor,\n            \"EOR\" : runInfo.eor,\n            \"FirstOrbit\" : runInfo.orbitSOR,\n            \"LastOrbit\" : runInfo.orbitEOR,\n            \"OrbitsPerTF\" : int(runInfo.orbitsPerTF),\n            \"detList\" : detectorList}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "77f29ebef6a66ae2f47cede36f27f80c3844171aac048cb80dd7d07161854681": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "FUNCTION parse_orbits_per_tf(orbitsPerTF, intRate):\n\"\"\"\nFunction to calculate the number of orbits per TF based on the interaction rate.\n\"\"\"\nif intRate is None or intRate < 0:\n    return -1\n\n# If the argument is a single integer, we use it directly\nif orbitsPerTF.isdigit():\n    return int(orbitsPerTF)\n\n# Otherwise, we interpret the argument as a string in the format\n# a1:b1:o1,a2:b2:o2,...\n# where we apply orbit o2 if the intRate is within the range a2 <= intRate < b2.\nranges = orbitsPerTF.split(',')\nfor entry in ranges:\n    try:\n        a, b, x = map(int, entry.split(':'))\n        if a <= intRate < b:\n            return x\n    except ValueError:\n        raise ValueError(f\"Invalid format in entry: {entry}\")\n\n# If no valid range is found, we return -1, indicating\n# that the orbit number will be determined from GRPECS\nreturn -1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "09725deb886fd07b9091319a5a8ba67ec67dbd96ca11049fb7ca43106887b59e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def retrieve_params_fromGRPECS_and_OrbitReset(ccdbreader, run_number, run_start, run_end):\n    \"\"\"\n    Fetches the start of run (sor), end of run (eor), and other global parameters from the GRPECS object using a run number. \n    To achieve this, we must locate the appropriate object through a browsing request and metadata filtering.\n    Optionally, you can provide an existing result from RCT/Info/RunInformation for consistency checks. \n    If inconsistencies are detected, we will use the time from RCT and issue a warning message.\n\n    NOTE: This function is deprecated; it should no longer be used and may be removed soon.\n    \"\"\"\n\n    # perform a simple HTTP request to the \"browsing\" endpoint\n    url=\"http://alice-ccdb.cern.ch/browse/GLO/Config/GRPECS/runNumber=\"+str(run_number)\n    ansobject=requests.get(url)\n    tokens=ansobject.text.split(\"\\n\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "ed5f40c667153c50170d7f8e1539e3ee1616170a9cb28833f4097dad10140d76": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# search for the initial ID and validity token\nID=None\nVALIDITY=None\nfor t in tokens:\n  if \"ID:\" in t:\n    ID=t.split(\":\")[1]\n  if \"Validity:\" in t:\n    VALIDITY=t.split(\":\")[1]\n  if ID is not None and VALIDITY is not None:\n    break\n\nassert(ID is not None)\nassert(VALIDITY is not None)\n\nmatch_object=re.match(\"\\s*([0-9]*)\\s*-\\s*([0-9]*)\\s*.*\", VALIDITY)\nSOV = -1  # start of object validity, not necessarily coinciding with the actual run start\nif match_object:\n  SOV=match_object.group(1)\n\n# generate an appropriate request at the start time, which provides us with the actual object, allowing us to determine its end time as well\ngrp=retrieve_CCDBObject_asJSON(ccdbreader, \"/GLO/Config/GRPECS\" + \"/runNumber=\" + str(run_number) + \"/\", int(SOV))\n\n# ensure that this object corresponds to the intended run based on the run number\nassert(int(grp[\"mRun\"]) == int(run_number))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "1850aae0a6108fac10eacdf6ac1e0fb6e2c8a34512a68f94f278ffde3deae7a1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# retrieve orbit reset for determining orbitFirst\n_, oreset = ccdbreader.fetch(\"CTP/Calib/OrbitReset\", \"vector<Long64_t>\", timestamp=run_start)\nprint(\"All orbit resets\")\nfor i in range(len(oreset)):\n    print(\" oreset \" + str(i) + \" \" + str(oreset[i]))\n\nprint(\"OrbitReset:\", int(oreset[0]))\norbitFirst = int((1000*run_start - oreset[0])//LHCOrbitMUS)  # calculation in microseconds\norbitLast = int((1000*run_end - oreset[0])//LHCOrbitMUS)\nprint(\"OrbitFirst\", orbitFirst) # first orbit of the run\nprint(\"LastOrbit of run\", orbitLast)\n\n# Retrieve the detector list\nprint(\"DetsReadout-Mask: \", grp[\"mDetsReadout\"]['v'])\ndetList = o2.detectors.DetID.getNames(grp[\"mDetsReadout\"]['v'])\nprint(\"Detector list is \", detList)\n\n# orbitReset.get(run_number)\nreturn {\"FirstOrbit\" : orbitFirst, \"LastOrbit\" : orbitLast, \"OrbitsPerTF\" : int(grp[\"mNHBFPerTF\"]), \"detList\" : detList}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "46d65788ff296e7c8ffbc1bb9022b2339acc07cdb360e6d4632dce9a62a53aa7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def fetch_GRP(ccdbreader, timestamp):\n    \"\"\"\n    fetches the GRP for a given time stamp\n    \"\"\"\n    grp_path = \"GLO/GRP/GRP\"\n    header = ccdbreader.fetch_header(grp_path, timestamp)\n    if not header:\n        print(f\"WARNING: Failed to download GRP object for timestamp {timestamp}\")\n        return None\n    ts, grp = ccdbreader.fetch(grp_path, \"o2::parameters::GRPObject\", timestamp = timestamp)\n    return grp\n\ndef fetch_GRPLHCIF(ccdbreader, timestamp):\n    \"\"\"\n    fetches the GRPLHCIF object for a given time stamp\n    \"\"\"\n    _, grplhcif = ccdbreader.fetch(\"GLO/Config/GRPLHCIF\", \"o2::parameters::GRPLHCIFData\", timestamp = timestamp)\n    return grplhcif",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "031f9eb0742f3651596ce92edbfe7132effe4704d94f50ac16d54e51732895c2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def fetch_CTPScalers(ccdbreader, run_number, timestamp=None):\n    \"\"\"\n    fetches the CTP scalers object for a specified timestamp and run number\n    and computes the interaction rate for Monte Carlo digitizers\n    \"\"\"\n    path = \"CTP/Calib/Scalers/runNumber=\" + str(run_number)\n    _, ctpscaler = ccdbreader.fetch(path, \"o2::ctp::CTPRunScalers\", timestamp=timestamp)\n    if ctpscaler is not None:\n      ctpscaler.convertRawToO2()\n      return ctpscaler\n    return None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "d90ba868a6bfce58da2d9a7dba797436be60bfb97583154186fb30e21dd94a4d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def fetch_MinBias_CTPScaler_Rate(ctpscaler, finaltime, trig_eff_arg, NBunches, ColSystem, eCM):\n    \"\"\"\n    fetches the CTP scaler object for a specified timestamp\n    and determines the interaction rate for Monte Carlo digitizers.\n    Utilizes trig_eff_arg if it is positive, otherwise computes the effTrigger.\n    \"\"\"\n    trigger_efficiencies = {\n        \"pp\": {\n            \"1000\": 0.68,\n            \"6000\": 0.737,\n            \"default\": 0.759\n        },\n        \"pO\": {\n            \"default\": 0.8222\n        },\n        \"Op\": {\n            \"default\": 0.8222\n        },\n        \"OO\": {\n            \"default\": 0.8677\n        },\n        \"NeNe\": {\n            \"default\": 0.9147\n        },\n        \"PbPb\": {\n            \"default\": 28.0  # this is ZDC\n        }\n    }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "011ef379cb47483b106986fa11a51fd18a4cc245ceb7cc0f1f9695059f1ccc4b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# First, determine the trigger efficiency\neffTrigger = trig_eff_arg\nif effTrigger < 0:\n  # Verify if ColSystem is listed in trigger_effs\n  if ColSystem in trigger_effs:\n    if ColSystem == \"pp\":\n      if eCM < 1000:\n        effTrigger = trigger_effs[\"pp\"][\"1000\"]\n      elif eCM < 6000:\n        effTrigger = trigger_effs[\"pp\"][\"6000\"]\n      else:\n        effTrigger = trigger_effs[\"pp\"][\"default\"]\n    else:\n      effTrigger = trigger_effs[ColSystem][\"default\"]\n  else:\n    effTrigger = 0.759  # The simulation will fail later if the collision system is not specified",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "f94f5739ca2f73d9adb91c9d070ab74fb77c4f9ff4528a453f58a9c329a9da23": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# this is the default setting for pp collisions\nctpclass = 0 # <---- we use the scaler from FT0\nctptype = 1\n# this is the default for PbPb collisions\nif ColSystem == \"PbPb\":\n  ctpclass = 25  # <--- we use scalers from ZDC\n  ctptype = 7\nprint(f\"Fetching rate at time {finaltime} with class {ctpclass} and type {ctptype}\")\nrate = ctpscaler.getRateGivenT(finaltime, ctpclass, ctptype)\n\nprint(f\"Global rate: {rate.first}, local rate: {rate.second}\")\nctp_local_rate_raw = None\nif rate.second >= 0:\n  ctp_local_rate_raw = rate.second\nif rate.first >= 0:\n  # calculate the true rate (based on input from Chiara Zampolli) using the number of bunches\n  coll_bunches = NBunches\n  mu = - math.log(1. - rate.second / 11245 / coll_bunches) / effTrigger\n  finalRate = coll_bunches * mu * 11245\n  return finalRate, ctp_local_rate_raw\n\nprint(f\"[ERROR]: Could not determine interaction rate; using some (external) default values\")\nreturn None, None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "97b39c105a4be7fff2cfb68382ab0bd65aa618e6e39ebacb82e05aadbaf38813": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def determine_timestamp(sor, eor, splitinfo, cycle, ntf, HBF_per_timeframe = 256):\n    \"\"\"\n    Calculates the timestamp and production offset based on the production's global properties\n    (such as MC splitting) and the run's characteristics. The parameter ntf represents the number of timeframes per MC job.\n    Args:\n        sor: int\n            start-of-run in milliseconds since epoch\n        eor: int\n            end-of-run in milliseconds since epoch\n        splitinfo: tuple (int, int)\n            splitinfo[0]: the split ID of this job\n            splitinfo[1]: the total number of jobs to split into\n        cycle: int\n            cycle number for this production. A run is usually not completely filled by a single simulation\n            but only a fraction of events is simulated. With each additional cycle, the data run is covered more comprehensively.\n        ntf: int\n            number of timeframes\n        HBF_per_timeframe: int\n            number of orbits per timeframe\n    Returns:\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "fbd7a332578f46a90ba2cf9f891d9841325516a030d5ed087091dcbaf0432baf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "HBF_per_timeframe: int\n            number of orbits per timeframe\n    Returns:\n        int: timestamp in milliseconds\n        int: production offset, also known as \"which timeslot in this production to simulate\"\n    \"\"\"\n    totaljobs = splitinfo[1]\n    thisjobID = splitinfo[0]\n    # duration of this run in microseconds, as we utilize the orbit duration in microseconds\n    time_length_inmus = 1000 * (eor - sor)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "20ba70d16bb9bcb07234cf8bde3d97d0e47650594937ec3b0383c597765a5f02": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# determine the number of timeframes that fit within the run duration\n# calculate the number of orbits per timeframe and then multiply by the orbit duration to find the number of timeframes\nntimeframes = time_length_inmus / (HBF_per_timeframe * LHCOrbitMUS)\n# also compute the total number of orbits in the run duration\nprint (f\"This run accommodates {ntimeframes} timeframes\")\n\n# ascertain the maximum number of timeframes a single job can handle\nmaxtimeframesperjob = ntimeframes / totaljobs\nprint (f\"Each job can process up to {maxtimeframesperjob} timeframes at a production split of {totaljobs}\")\nprint (f\"Given that each job processes {ntf} timeframes, this translates to a filling rate of {ntf / maxtimeframesperjob}\")\n# ensure the filling rate does not exceed 100%\nassert(ntf <= maxtimeframesperjob)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "84888ba4fe19883acf92b4f6e901d62edf1458b5c0d6438c9a0b398fd31ee22f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Each cycle gradually fills the run range. The maximum number of cycles needed to fully populate the run is:\nmaxcycles = maxtimeframesperjob / ntf\nprint (f\"We can complete this many cycle iterations to achieve 100%: {maxcycles}\")\n\n# In total, we have maxcycles * totaljobs slots to fill the run range with ntf timeframes per slot.\n# Determine the slot for simulation.\nproduction_offset = int(thisjobID * maxcycles) + cycle\n# Add the time difference of this slot to the start-of-run to obtain the final timestamp.\ntimestamp_of_production = sor + production_offset * ntf * HBF_per_timeframe * LHCOrbitMUS / 1000\n# This is a closure test. With perfect floating point precision everywhere, it wouldn't fail.\n# However, since we lack that and have some integer conversions, it's better to verify again.\nassert (timestamp_of_production >= sor)\nassert (timestamp_of_production <= eor)\nreturn int(timestamp_of_production), production_offset",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "a6a0620ee0e607a17275989af603be9dfde2c8046bdd70475a6d9abd47ce969a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def exclude_timestamp(ts, orbit, run, filename, global_run_params):\n    \"\"\"\n    Determines if the timestamp ts (or orbit) is within a period of bad data.\n    Returns true if the timestamp should be excluded; false otherwise.\n    \n    The timestamp ts should be in milliseconds.\n    Orbit refers to an orbit after the orbitreset of the run.\n    \"\"\"\n    if len(filename) == 0:\n       return False\n\n    if not os.path.isfile(filename):\n       return False\n\n    def parse_file(filename):\n      parsed_data = []\n      with open(filename, 'r') as file:\n        for line in file:\n            # Split the line into exactly 4 parts (first three numbers + comment)\n            columns = re.split(r'[,\\s;\\t]+', line.strip(), maxsplit=3)\n\n            if len(columns) < 3:\n                continue  # Skip lines with insufficient columns",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "e9377a1e999686189b2f5aeab966bbe46079998d92d3dc5f8fc60c76d9cecaa8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the number of columns is less than 3:\n                continue  # Skip lines with insufficient columns\n\n            try:\n                # Extract the first three columns as numbers\n                num1, num2, num3 = map(int, columns[:3])  # Assuming integers in the data\n                comment = columns[3] if len(columns) > 3 else \"\"\n                parsed_data.append({\"Run\": num1, \"From\": num2, \"To\": num3, \"Message\": comment})\n            except ValueError:\n                continue  # Skip lines where the first three columns are not numeric\n      return parsed_data\n\n    data = parse_file(filename)\n    # print (data)\n    df = pd.DataFrame(data) # convert to data frame for easy handling\n\n    # extract data for this run number\n    filtered = df[df['Run'] == run]\n\n    # now extract from and to lists\n    exclude_list =  list(zip(filtered[\"From\"].to_list() , filtered[\"To\"].to_list()))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "17b2b5644b2949d2e36bcc7e209cd074b62c2e0ee741d45b98f019907de0f7ce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print(\"The exclusion list contains \" + str(len(exclude_list)) + \" entries\")\nif len(exclude_list) == 0:\n    return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "602c8b23ac0cf7f7e0ccfa807b3198547b398eee725f97339dfd4efda31020b8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "timeframelength_intime = global_run_params[\"EOR\"] - global_run_params[\"SOR\"]\ntimeframelength_inorbits = global_run_params[\"LastOrbit\"] - global_run_params[\"FirstOrbit\"]\ntotal_excluded_fraction = 0\nexcluded = False\nfor exclusion_entry in exclude_list:\n    data_is_in_orbits = exclusion_entry[0] < 1514761200000\n    print(\"Checking data\", exclusion_entry)\n    if data_is_in_orbits:\n        total_excluded_fraction += (exclusion_entry[1] - exclusion_entry[0]) / timeframelength_inorbits\n        if exclusion_entry[0] <= orbit and orbit <= exclusion_entry[1]:\n            print(\"Excluding orbit \", str(orbit))\n            excluded = True\n    else:\n        total_excluded_fraction += (exclusion_entry[1] - exclusion_entry[0]) / timeframelength_intime\n        if exclusion_entry[0] <= ts and ts <= exclusion_entry[1]:\n            print(\"Excluding timestamp \", str(ts))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "eecaee799adc2d2951ec25a854378f8a18e603e689fba8a686c78055760e27cc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print(\"Excluding the timestamp \", str(ts))\nexcluded = True",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "de56120e487c4e0472ce7224ae08f2eda604aa5c1f275b5a9ac58970b6349aae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print(f\"This run represents globally {total_excluded_fraction} of its data marked for exclusion.\")\nreturn excluded\n\ndef publish_MCProdInfo(mc_prod_info, ccdb_url=\"https://alice-ccdb.cern.ch\", username=\"aliprod\", include_meta_into_aod=False):\n   print(\"Publishing MCProdInfo\")\n\n   # check if metadata is already uploaded, otherwise do nothing\n   mc_prod_info_q = query_mcprodinfo(ccdb_url, username, mc_prod_info.RunNumber, mc_prod_info.LPMProductionTag)\n   if mc_prod_info_q is None:\n    # could extend this to depend on hash values in the future\n    upload_mcprodinfo_meta(ccdb_url, username, mc_prod_info.RunNumber, mc_prod_info.LPMProductionTag, dataclasses.asdict(mc_prod_info))\n\ndef main():\n    parser = argparse.ArgumentParser(description='Generates an O2DPG simulation workflow, anchored to a specified LHC run. The workflows are synchronized at regular intervals within a run based on production size, split-id, and cycle.')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "ce261865615480c14e984a0a8fcda598e082d58e8511a35babeafb7b5a1aa046": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument(\"--run-number\", type=int, help=\"Specify the run number to anchor the simulation to\", required=True)\nparser.add_argument(\"--ccdb-url\", dest=\"ccdb_url\", help=\"Provide the URL for accessing the CCDB\", default=\"http://alice-ccdb.cern.ch\")\nparser.add_argument(\"--prod-split\", type=int, help=\"Set the number of MC jobs to sample from the given time range\", default=1)\nparser.add_argument(\"--cycle\", type=int, help=\"Define the MC cycle, which determines the sampling offset\", default=0)\nparser.add_argument(\"--split-id\", type=int, help=\"Identify the split id of this job within the entire production (--prod-split)\", default=0)\nparser.add_argument(\"-tf\", type=int, help=\"Specify the number of timeframes per job\", default=1)\nparser.add_argument(\"--ccdb-IRate\", type=bool, help=\"Indicate whether to attempt fetching IRate from CCDB/CTP\", default=True)\nparser.add_argument(\"--trig-eff\", type=float, dest=\"trig_eff\", help=\"Set the trigger efficiency needed for IR (default is automatic mode)\", default=-1.0)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "e2536bec29d931887704680081b3c0c5476c28b776d33eaa022a30d4c5b47064": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument(\"--run-time-span-file\", type=str, dest=\"run_span_file\", help=\"A file specifying run-time spans for excluding timestamps (bad data periods, etc.)\", default=\"\")\nparser.add_argument(\"--invert-irframe-selection\", action='store_true', help=\"Reverses the logic applied by --run-time-span-file\")\nparser.add_argument(\"--orbitsPerTF\", type=str, help=\"Forces a specific number of orbits per timeframe; defaults to auto-fetching from CCDB if not specified.\", default=\"\")\nparser.add_argument('--publish-mcprodinfo', action='store_true', default=False, help=\"Publishes MCProdInfo metadata to CCDB\")\nparser.add_argument('forward', nargs=argparse.REMAINDER) # forwards any remaining arguments to the actual workflow creation\nargs = parser.parse_args()\nprint(args)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "c0cf7f8cdd89c672a64603aa231c9c4964a501ce4ba8d103d2187cfc0e620134": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The split ID must be less than or equal to the production ID.\nassert(args.split_id <= args.prod_split)\n\n# Create a CCDB accessor object.\nccdbreader = CCDBAccessor(args.ccdb_url)\n\n# Obtain the EOR, SOR, and initial run parameters.\nGLOparams = retrieve_Aggregated_RunInfos(args.run_number)\nrun_start = GLOparams[\"SOR\"]\nrun_end = GLOparams[\"EOR\"]\n\nmid_run_timestamp = (run_start + run_end) // 2\n\n# --------\n# Retrieve additional crucial global properties required later.\n# --------\nctp_scalers = retrieve_CTPScalers(ccdbreader, args.run_number, timestamp=mid_run_timestamp)\nif ctp_scalers is None:\n   print(f\"ERROR: Unable to retrieve scalers for run number {args.run_number}\")\n   exit(1)\n\n# Fetch the GRPHCIF object using the mid-run timestamp.\ngrplhcif = retrieve_GRPLHCIF(ccdbreader, int(mid_run_timestamp))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "a2f765a19b86475c3952f14e5306378cbec1b8e7383cf386c44c1ba0a7f144ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# calculate essential physics parameters\neCM = grplhcif.getSqrtS()\neA = grplhcif.getBeamEnergyPerNucleonInGeV(o2.constants.lhc.BeamDirection.BeamC)\neB = grplhcif.getBeamEnergyPerNucleonInGeV(o2.constants.lhc.BeamDirection.BeamA)\nA1 = grplhcif.getAtomicNumberB1()\nA2 = grplhcif.getAtomicNumberB2()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "b33413ddc262bc72b94dae9f834882bfe18b4995614dbd66d06d70a32b362632": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# identify the collision system and energy\nprint(\"Identified eCM \", eCM)\nprint(\"Identified eA \", eA)\nprint(\"Identified eB \", eB)\nprint(\"Identified atomic number A1 \", A1)\nprint(\"Identified atomic number A2 \", A2)\nColSystem = \"\"\ncol_systems = {\n    \"pp\": (1, 1),\n    \"pO\": (1, 8),\n    \"Op\": (8, 1),\n    \"OO\": (8, 8),\n    \"NeNe\": (10, 10),\n    \"PbPb\": (82, 82)\n}\n# verify if the collision system is known\nfor system, (a1, a2) in col_systems.items():\n    if A1 == a1 and A2 == a2:\n        ColSystem = system\n        break\nif ColSystem == \"\":\n    print(f\"ERROR: Unknown collision system for A1={A1}, A2={A2}. Check the GRPLHCIF object.\")\n    exit(1)\n\nprint(\"Collision system \", ColSystem)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "0c796b9b4bd34b504643a51fb025ebf54a96971255948acaa6e5b192b5bf7737": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print(\"Collision system \", ColSystem)\n\n# potentially override orbitsPerTF with external choices\nif args.orbitsPerTF!=\"\":\n   # we need the interaction rate for this calculation\n   # let's use the one from IR.txt (async reco) as a quick way to make the decision\n   run_rate, _ = retrieve_MinBias_CTPScaler_Rate(ctp_scalers, mid_run_timestamp/1000., args.trig_eff, grplhcif.getBunchFilling().getNBunches(), ColSystem, eCM)\n   determined_orbits = parse_orbits_per_tf(args.orbitsPerTF, run_rate)\n   if determined_orbits != -1:\n      print(\"Adjusting orbitsPerTF from \" + str(GLOparams[\"OrbitsPerTF\"]) + \" to \" + str(determined_orbits))\n      GLOparams[\"OrbitsPerTF\"] = determined_orbits\n\n# determine the timestamp and production offset for the final MC job\ntimestamp, prod_offset = determine_timestamp(run_start, run_end, [args.split_id - 1, args.prod_split], args.cycle, args.tf, GLOparams[\"OrbitsPerTF\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "4d879a32781b9b8455d292435e9585131f43632a98c549786499e641983a4389": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# identify the orbit associated with the timestamp (primarily utilized in exclude_timestamp function)\norbit = GLOparams[\"FirstOrbit\"] + int((timestamp - GLOparams[\"SOR\"]) / ( LHCOrbitMUS / 1000))\n\n# these values are based on\nprint (\"Detected start-of-run as: \", run_start)\nprint (\"Detected end-of-run as: \", run_end)\nprint (\"Detected timestamp as: \", timestamp)\nprint (\"Detected offset as: \", prod_offset)\nprint (\"SOR: \", GLOparams[\"SOR\"])\nprint (\"EOR: \", GLOparams[\"EOR\"])\nprint (\"TIM: \", timestamp) # this specific timestamp\nprint (\"OS: \", GLOparams[\"FirstOrbit\"])\nprint (\"OE: \", GLOparams[\"LastOrbit\"])\nprint (\"TO: \", orbit) # this particular orbit\n\n# evaluate if the timestamp should be excluded\njob_is_excluded = exclude_timestamp(timestamp, orbit, args.run_number, args.run_span_file, GLOparams)\n# potentially reverse the selection\nif args.invert_irframe_selection:\n   job_is_excluded = not job_is_excluded",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "f591665ee1f50373211b608ef8b45938a557c7a9e8a3703b2be017ec9f917698": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    forwardargs = \" \".join([arg for arg in args.forward if arg != '--'])\n    # retrieve the interaction rate\n    rate = None\n    ctp_local_rate_raw = None\n\n    if args.ccdb_IRate:\n       rate, ctp_local_rate_raw = retrieve_MinBias_CTPScaler_Rate(ctp_scalers, timestamp/1000., args.trig_eff, grplhcif.getBunchFilling().getNBunches(), ColSystem, eCM)\n\n       if rate is not None:\n         # if the rate was successfully calculated, we use it; otherwise, we use a rate from args.forward\n         # a regular expression to match \"interactionRate\" followed by an integer\n         pattern = r\"-interactionRate\\s+\\d+\"\n         # use re.sub() to remove the pattern\n         forwardargs = re.sub(pattern, \" \", forwardargs)\n         forwardargs += ' -interactionRate ' + str(int(rate))\n       if ctp_local_rate_raw is not None:\n         forwardargs += ' --ctp-scaler ' + str(ctp_local_rate_raw)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "2ebc51ea5c85dae5b38b6e1be55347ab71233aacba99c019d153884b0accb80f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# we proceed to the unanchored MC workflow creation\n# TODO: this should be implemented in a more pythonic manner clearly\n# NOTE: forwardargs can - in principle - include some of the arguments added here. However, the last argument takes precedence, overwriting any previous ones.\nenergyarg = (\" -eCM \" + str(eCM)) if A1 == A2 else (\" -eA \" + str(eA) + \" -eB \" + str(eB))\nforwardargs += \" -tf \" + str(args.tf) + \" --sor \" + str(run_start) + \" --timestamp \" + str(timestamp) + \" --production-offset \" + str(prod_offset) + \" -run \" + str(args.run_number) + \" --run-anchored --first-orbit \"       \\\n               + str(GLOparams[\"FirstOrbit\"]) + \" -field ccdb -bcPatternFile ccdb\" + \" --orbitsPerTF \" + str(GLOparams[\"OrbitsPerTF\"]) + \" -col \" + str(ColSystem) + str(energyarg)\nif '--readoutDets' not in forwardargs:\n   forwardargs += ' --readoutDets ' + GLOparams['detList']\nprint (\"forward args \", forwardargs)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "6cb5ec77230b67a5fea42601c48bd966dd471bc82970375bd571e73c5f3c0fb9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print (\"forward arguments \", forwardargs)\ncmd = \"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py \" + forwardargs",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "da34729b04fef4970e1ee6d9b2727c11c71ea69b0a22ec9e61f27f371bf4c957": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if job_is_exluded:\n  print (\"TIMESTAMP IS EXCLUDED IN RUN\")\nelse:\n  print (\"Creating time-anchored workflow...\")\n  print (\"Executing: \" + cmd)\n  try:\n    cmd_list = shlex.split(os.path.expandvars(cmd))\n    output = subprocess.check_output(cmd_list, text=True, stdin=subprocess.DEVNULL, timeout=120)\n    print (output)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "cda56d748e9e3782f49b7cde5d3c87bde0ce7c1d7646835c5f5d110ae803f740": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# here, we can share details about the production (if desired)\n    if args.publish_mcprodinfo == True or os.getenv(\"PUBLISH_MCPRODINFO\") != None:\n        prod_tag = os.getenv(\"ALIEN_JDL_LPMPRODUCTIONTAG\")\n        grid_user_name = os.getenv(\"JALIEN_USER\")\n        mcprod_ccdb_server = os.getenv(\"PUBLISH_MCPRODINFO_CCDBSERVER\")\n        if mcprod_ccdb_server == None:\n            mcprod_ccdb_server = \"https://alice-ccdb.cern.ch\"\n        if prod_tag != None and grid_user_name != None:\n            info = MCProdInfo(LPMProductionTag = prod_tag,\n                              Col = ColSystem,\n                              IntRate = rate,\n                              RunNumber = args.run_number,\n                              OrbitsPerTF = GLOparams[\"OrbitsPerTF\"])\n            publish_MCProdInfo(info, username = grid_user_name, ccdb_url = mcprod_ccdb_server)\n        else:\n            print(\"No production tag or GRID user name available. Not publishing MCProdInfo\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "6e4130066a9dbb3971520ba8ff19749f5249c8cff1ce9ae6e42543df4833ba5f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXCEPT=subprocess.CalledProcessError AS e:\n    PRINT(f\"Command failed with return code {e.returncode}\")\n    PRINT(\"Output:\")\n    PRINT(e.output)\n    RETURN {}, {}\n\nIF __name__ == \"__main__\":\n    sys.exit(main())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow_anchored.py"
        }
    ],
    "be2645fb355c9081296c6b21e33b4357366aff46c0a0fba67d0a77c11706125a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nimport json\nimport re\nimport sys\nfrom collections import defaultdict\nfrom copy import deepcopy\nimport os\nfrom o2dpg_workflow_utils import merge_dicts\nimport shlex\n\nBUILTIN_BLACKLIST = {\n    \"--session\", \"--severity\", \"--shm-segment-id\", \"--shm-segment-size\",\n    \"--resources-monitoring\", \"--resources-monitoring-dump-interval\",\n    \"--delay\", \"--loop\", \"--early-forward-policy\", \"--fairmq-rate-logging\",\n    \"--pipeline\", \"--disable-mc\", \"--disable-root-input\", \"--timeframes-rate-limit\",\n    \"--timeframes-rate-limit-ipcid\",\n    \"--lumi-type\",  # TPC corrections are handled individually in o2dpg_sim_workflow\n    \"--corrmap-lumi-mode\", # TPC corrections are managed separately in o2dpg_sim_workflow\n    \"--enable-M-shape-correction\" # TPC correction option is not required for MC\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "4dcde3ee2d3a542507b546c6ae7394d2b9ff64af667b56f67aba75ab10cafb88": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def parse_command_string(cmd_str):\n    \"\"\"\n    Parse a DPL command string into a structured configuration:\n    {\n        \"executable\": str,\n        \"options\": {key: val, ...},\n        \"configKeyValues\": {\"Group\": {subkey: val}}\n    }\n    \"\"\"\n    try:\n        tokens = shlex.split(cmd_str, posix=False)\n    except ValueError as e:\n        print(f\"[ERROR] Failed to parse command string: {cmd_str}\")\n        raise e\n\n    if not tokens:\n        return {}\n\n    exe = tokens[0]\n    opts = {}\n    config_keyvals_raw = None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "86e4d97430a952bf42ab6b1cb518e2d05d3a69b41d5d03616dff7bb848f8c733": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    exe = tokens[0]\n    opts = {}\n    config_keyvals_raw = None\n\n    i = 1\n    while i < len(tokens):\n        token = tokens[i]\n        if token.startswith('--') or (token.startswith('-') and len(token) == 2):\n            key = token  # keep the dash prefix: \"-b\" or \"--run-number\"\n            if i + 1 < len(tokens) and not tokens[i + 1].startswith('-'):\n                value = tokens[i + 1].strip('\"').strip(\"'\")\n                i += 1\n            else:\n                value = True\n            if key == \"--configKeyValues\":\n                config_keyvals_raw = value\n            else:\n                opts[key] = value\n        i += 1\n\n    config_kv_parsed, config_groups = {}, set()\n    if config_keyvals_raw:\n        config_kv_parsed, config_groups = parse_configKeyValues_block(config_keyvals_raw)\n\n    return {\n        \"executable\": exe,\n        \"options\": opts,\n        \"configKeyValues\": config_kv_parsed,\n        \"configKeyGroups\": sorted(config_groups)\n    }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "694d540978dbbb9e3e52ec229112078cf4ca4f1350d82e57b95ff52bdcca728c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def parse_command_string_symmetric(cmd_str, configname = None):\n    \"\"\"\n    Parses a DPL command string into a similar structure as parse_workflow_config(...):\n    {\n      \"ConfigParams\": { group: {key: value, ...} },\n      \"Executables\": {\n        \"o2-executable\": {\n          \"full\": {...},\n          \"filtered\": {...},\n          \"blacklisted\": [],\n          \"configKeyValues\": [group, ...]\n        }\n      }\n    }\n    \"\"\"\n    try:\n        tokens = shlex.split(cmd_str, posix=False)\n    except ValueError as e:\n        print(f\"[ERROR] Failed to parse command string: {cmd_str}\")\n        raise e\n\n    if not tokens:\n        return {}\n\n    executable = os.path.basename(tokens[0]) if configname == None else configname\n    options = {}\n    config_kv_raw = None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "20019729fca9c72e46fbb2e85be1cb420db2e5b1f87fa546e796a2207e25fcd4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "i = 1\nwhile i < len(tokens):\n    token = tokens[i]\n    if token.startswith('--') or (token.startswith('-') and len(token) == 2):\n        key = token  # keep the dash prefix: \"-b\" or \"--run-number\"\n        if i + 1 < len(tokens) and not tokens[i + 1].startswith('-'):\n            value = tokens[i + 1].strip('\"').strip(\"'\")\n            i += 1\n        else:\n            value = True\n        if key == \"--configKeyValues\":\n            config_kv_raw = value\n        else:\n            opts[key] = value\n    i += 1\n\nconfig_params = {}\nconfig_key_groups = []\n\nif config_kv_raw:\n    parsed_kv, groups = parse_configKeyValues_block(config_kv_raw)\n    config_params = parsed_kv\n    config_key_groups = sorted(groups)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "f59907d549fb7720cc6c2d48b0ae164ee90cf811af243f04cc14c3fb32368067": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "return {\n        \"ConfigParams\": config_params,\n        \"Executables\": {\n            exe: {\n                \"full\": opts,\n                \"filtered\": dict(opts),\n                \"blacklisted\": [],\n                \"configKeyValues\": config_key_groups\n            }\n        }\n    }\n\n\ndef parse_configKeyValues_block(raw_value):\n    result = defaultdict(dict)\n    seen_groups = set()\n    raw_value = raw_value.replace('\\\\\"', '\"').replace(\"\\\\'\", \"'\")\n    parts = raw_value.split(\";\")\n    for part in parts:\n        part = part.strip()\n        if not part or \"=\" not in part:\n            continue\n        key, val = part.split(\"=\", 1)\n        key = key.strip()\n        val = val.strip()\n        if \".\" in key:\n            group, subkey = key.split(\".\", 1)\n            result[group][subkey] = val\n            seen_groups.add(group)\n    return dict(result), seen_groups",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "0682614de215316fe1280a5792e0d34a9b42767388f41e95daf1be57bdb4fd1b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def log_line(logger, message):\n    if logger is None or logger == sys.stdout:\n        print(message)\n    elif isinstance(logger, str):\n        with open(logger, \"a\") as f:\n            f.write(message + \"\\n\")\n    else:\n        logger.write(message + \"\\n\")\n\n    def modify_dpl_command(cmd_str, config_anchor, allow_overwrite=False, logger=None, configname=None):\n        # verify if cmd_str is provided as a list, in which case we convert it to a string\n        if isinstance(cmd_str, list):\n            cmd_str = \" \".join(filter(None, cmd_str))\n\n        base = parse_command_string(cmd_str)\n        exe = base[\"executable\"]\n        existing_opts = base[\"options\"]\n        existing_kv = base[\"configKeyValues\"]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "d10f737abe595a73ca6b9da92b320afe72a87b743c7d04bd435757099162343e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Begin creating a new command\nnew_cmd = [exe]\nadded = []\noverwritten = []\n\nexe_basename = os.path.basename(exe) if configname is None else configname\nanchor_exec = None\nif \"Executables\" in config_anchor:\n    anchor_exec = config_anchor[\"Executables\"].get(exe_basename, None)\nif anchor_exec is None:\n    # attempt without the Executables section\n    anchor_exec = config_anchor.get(exe_basename, None)\n\nif anchor_exec is None:\n    print(f\"[WARN] No anchor configuration found for {exe}\")\n    return cmd_str\n\nanchor_opts = anchor_exec.get(\"filtered\", {})\nanchor_kv_groups = anchor_exec.get(\"configKeyValues\", [])\n\n# --- Step 1: Reconstruct the executable and its command-line options\nnew_cmd = [exe]\nadded = []\noverwritten = []\n\ndef quote_if_needed(val):\n    s = str(val)\n    if \" \" in s and not (s.startswith('\"') and s.endswith('\"')):\n        return f'\"{s}\"'\n    return s",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "8d619ce36ff36e304a5f0a37f6cd4fe1ae2d1820b8d01112d894833d754c364f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Step 1: Preserved or Overwritten Options\nfor key, val in existing_opts.items():\n    if allow_overwrite and key in anchor_opts:\n        val = anchor_opts[key]\n        overwritten.append(key)\n    new_cmd.append(f\"{key} {quote_if_needed(val)}\" if val is not True else f\"{key}\")\n\n# Step 2: Add Missing Options from Anchor\nfor key, val in anchor_opts.items():\n    if key not in existing_opts:\n        new_cmd.append(f\"{key} {quote_if_needed(val)}\" if val is not True else f\"{key}\")\n        added.append(key)\n\n# Handling Config Key Values (should already be completed)\nmerged_kv = deepcopy(existing_kv)\n# for group in anchor_kv_groups:\n#     group_kvs = config_anchor.get(\"ConfigParams\", {}).get(group, {})\n#     if group not in merged_kv:\n#         merged_kv[group] = group_kvs\n#     elif allow_overwrite:\n#         merged_kv[group].update(group_kvs)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "3464c070ea51a72436a4e2bec1e2e21bc3887c8c7ff011102bba5425e0bfdc03": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if merged_kv:\n    kv_flat = [f\"{g}.{k}={v}\" for g, kv in merged_kv.items() for k, v in kv.items()]\n    new_cmd.append('--configKeyValues \"' + \";\".join(kv_flat) + '\"')\n\n    # log changes\n    log_line(logger, f\"\\n[Executable: {exe}]\")\n    if added:\n        log_line(logger, f\"  Added options: {added}\")\n    if overwritten:\n        log_line(logger, f\"  Overwritten options: {overwritten}\")\n    if not added and not overwritten:\n        log_line(logger, f\"  No changes were made to the command.\")\n\n    return \" \".join(new_cmd)\n\n# CLI: Convert log and blacklist data into output.json\ndef parse_configKeyValues(raw_value):\n    return parse_configKeyValues_block(raw_value)\n\ndef parse_workflow_config(log_path):\n    config_params = defaultdict(dict)\n    executables = {}\n\n    with open(log_path) as f:\n        for line in f:\n            line = line.strip()\n            if not line or line.startswith(\"#\"):\n                continue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "770accb1f64c229b04bf1945b98824962bdcc688ecd965be52a7f65d41b13965": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PARAPHRASED DOCUMENT:\n    parsed = parse_command_string(line)\n            exe = parsed[\"executable\"]\n            config_groups_used = parsed[\"configKeyGroups\"]\n            full_opts = parsed[\"options\"]\n\n            for group, kv in parsed[\"configKeyValues\"].items():\n                config_params[group].update(kv)\n\n            executables[exe] = {\n                \"configKeyValues\": sorted(config_groups_used),\n                \"full\": full_opts\n            }\n\n    return config_params, executables\n\n\ndef apply_blacklist(executables, blacklist_cfg):\n    for exe, data in executables.items():\n        full_opts = data[\"full\"]\n        exe_blacklist = set(blacklist_cfg.get(exe, []))\n        total_blacklist = BUILTIN_BLACKLIST.union(exe_blacklist)\n\n        blacklisted = []\n        filtered = {}\n\n        for key, val in full_opts.items():\n            if key in total_blacklist:\n                blacklisted.append(key)\n            else:\n                filtered[key] = val",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "7056d98a3445638ae033defc313fdddaa736052acdd78712ea7ea6755c3ee237": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "data[\"blacklisted\"] = sorted(blacklisted)\ndata[\"filtered\"] = filtered\ndata[\"full\"] = deepcopy(full_opts)  # maintain the original\nreturn executables",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "83a7a57752ae04698c0524f2aec9d6ddfe836d82fea216c22c3cbb69250b56b8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def dpl_option_from_config(config, dpl_workflow, key, section=\"filtered\", default_value=None):\n      \"\"\"\n      A utility function to retrieve a DPL option for the workflow `dpl_workflow` from\n      the configuration dictionary `config`. The configuration can either be:\n      - a flat JSON output from the older tool `parse-async-WorkflowConfig.py`\n      - a more structured version from `o2dpg_dpl_config_tools` (this tool)\n      \"\"\"\n      if \"Executables\" in config:\n        # follows the new standard\n        return config[\"Executables\"].get(dpl_workflow,{}).get(section,{}).get(key, default_value)\n      else:\n        # backward compatibility\n        dpl_workflow_key = dpl_workflow + '-options'\n        if dpl_workflow_key in config:\n           return config.get(dpl_workflow_key, {}).get(key, default_value)\n        dpl_workflow_key = dpl_workflow_key\n        if dpl_workflow_key in config:\n           return config.get(dpl_workflow_key, {}).get(key, default_value)\n        return default_value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "9fcc9324933f3f401e1b7e1238bc0cecf0e097716123949c7bd20456d038a0f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def main():\n    if len(sys.argv) == 4:\n        log_path = sys.argv[1]\n        blacklist_path = sys.argv[2]\n        output_path = sys.argv[3]\n\n        with open(blacklist_path) as file:\n            blacklist_data = json.load(file)\n\n        config_params, executables = parse_workflow_config(log_path)\n        executables = apply_blacklist(executables, blacklist_data)\n\n        result = {\n            \"ConfigParams\": dict(config_params),\n            \"Executables\": executables\n        }\n\n        with open(output_path, \"w\") as file_out:\n            json.dump(result, file_out, indent=2)\n\n        print(f\"[INFO] Wrote structured config to: {output_path}\")\n    else:\n        print(\"Usage:\")\n        print(\"  CLI parsing: python3 dpl_config_tools.py workflowconfig.log blacklist.json output.json\")\n        print(\"  Python usage: import and call parse_command_string() or modify_dpl_command()\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "43fcb2380adf47616513251ad1f0c40d2997a4f674a97b143f86a54f98ea95b0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "CLASS TaskFinalizer:\n    def __init__(self, anchor_config, allow_overwrite=False, logger=None):\n        self.anchor_config = anchor_config\n        self.allow_overwrite = allow_overwrite\n        self.logger = logger\n        self.final_config = {\n            \"ConfigParams\": {},\n            \"Executables\": {}\n        }\n\n    def __call__(self, cmd_str_or_list, configname = None):\n        final_cmd = modify_dpl_command(cmd_str_or_list, self.anchor_config.get(\"Executables\",{}), logger=self.logger, configname=configname)\n        this_config_final = parse_command_string_symmetric(final_cmd, configname)\n        print (this_config_final)\n        merge_dicts (self.final_config, this_config_final)\n        return final_cmd\n\n    def dump_collected_config(self, path):\n        with open(path, \"w\") as f:\n            json.dump(self.final_config, f, indent=2)\n\n\nif __name__ == \"__main__\":\n    main()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_dpl_config_tools.py"
        }
    ],
    "a9c07aef3ec7feea9b1ec3b4db6a837890c4375f2eaa0abd3442e9fd598c7db3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n#\n# A script for generating the finalization quality control workflow.\n# When executed as the main program, it outputs the workflow to the specified file without setting task dependencies.\n# Example usage:\n#   ${O2DPG_ROOT}/MC/bin/o2dpg_qc_finalization_workflow.py -o qc_workflow.json \n\n\n# The script can also be utilized as an import.\n# In this scenario, one can employ the include_all_QC_finalization function to integrate QC finalization within another workflow script.\n\nimport sys\nimport argparse\nfrom os import environ, mkdir\nfrom os.path import join, dirname, isdir\nimport re\n\nsys.path.append(join(dirname(__file__), '.', 'o2dpg_workflow_utils'))\n\nfrom o2dpg_workflow_utils import createTask, dump_workflow, isActive\n\ndef getDPL_global_options(bigshm=False, noIPC=None):\n   common=\"-b --run --driver-client-backend ws:// \"\n   if noIPC != None:\n      return common + \" --no-IPC \"\n   if bigshm:\n      return common + \" --shm-segment-size ${SHMSIZE:-50000000000} \"\n   else:\n      return common",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "4759e1e99aa9c8617dda0af796c97c392720dce6e099d510e5900e8c95b6f099": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def QC_finalize_name(name):\n  return name + \"_finalize\"\n\nqcdir = \"QC\"\ndef include_all_QC_finalization(ntimeframes, standalone, run, productionTag, conditionDB, qcdbHost, beamType):\n\n  stages = []\n\n  ## Adds a 'remote-batch' component to standard QC workflows\n  # taskName     - name of the QC workflow, it should match the main workflow's task name\n  # qcConfigPath - path to the QC configuration file\n  # needs        - a list of tasks that need to be completed first. By default, the function includes the 'local-batch' part of the QC workflow\n  def add_QC_finalization(taskName, qcConfigPath, needs=None):\n    if standalone == True:\n      needs = []\n    elif needs == None:\n      needs = [taskName + '_local' + str(tf) for tf in range(1, ntimeframes + 1)]\n\n    task = createTask(name=QC_finalize_name(taskName), needs=needs, cwd=qcdir, lab=[\"QC\"], cpu=1, mem='2000')\n    def remove_json_prefix(path):\n           return re.sub(r'^json://', '', path)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "73c47215dde7b7f5055a22daf03aa0f247954157e7995607b24cf1603b90688a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "configFilePathOnDisk = qcConfigPath.replace('json://', '')\n# We verify if the configFilePath exists in the currently loaded software. If it doesn't, we exit gracefully.\ntask['cmd'] = ' if [ -f ' + configFilePathOnDisk + ' ]; then { '\ntask['cmd'] += f'o2-qc --config {qcConfigPath} --remote-batch {taskName}.root' + \\\n               f' --override-values \"qc.config.database.host={qcdbHost};qc.config.Activity.number={run};qc.config.Activity.type=PHYSICS;qc.config.Activity.periodName={productionTag};qc.config.Activity.beamType={beamType};qc.config.conditionDB.url={conditionDB}\"' + \\\n               ' ' + getDPL_global_options()\ntask['cmd'] += ' ;} else { echo \"Task ' + taskName + ' not performed due to config file not found \"; } fi'\n\nstages.append(task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "59a37612ff68597ca0f6074862b74852857e766a7f3f34a2e01df7f9b3a1067c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Introduces a postprocessing quality control workflow\n  # taskName     - the name of the QC workflow\n  # qcConfigPath - the path to the QC configuration file\n  # needs        - a list of tasks that must be completed first; typically, these are finalization tasks for QC that generate necessary objects for the post-processing\n  # runSpecific  - if set to true, a specific run number is included in the configuration, meaning the post-processing will handle objects from that particular run only\n  # prodSpecific - if set to true, a specific production name is included in the configuration, meaning the post-processing will handle objects from that production only\n  def add_QC_postprocessing(taskName, qcConfigPath, needs, runSpecific, prodSpecific):\n    task = createTask(name=taskName, needs=needs, cwd=qcdir, lab=[\"QC\"], cpu=1, mem='2000')\n    overrideValues = '--override-values \"'\n    overrideValues += f'qc.config.Activity.number={run};' if runSpecific else 'qc.config.Activity.number=0;';",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "8d026b9317060dbba0e2ac8f65b4277822a51f48e2c54814c3f6c736d9aaa917": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    overrideValues += f'qc.config.Activity.type=PHYSICS;'\n    overrideValues += f'qc.config.Activity.periodName={productionTag};' if prodSpecific else 'qc.config.Activity.periodName=;'\n    overrideValues += f'qc.config.Activity.beamType={beamType};'\n    overrideValues += f'qc.config.database.host={qcdbHost};qc.config.conditionDB.url={conditionDB}'\n    task['cmd'] = f'o2-qc --config {qcConfigPath} ' + \\\n                  overrideValues + ' ' + getDPL_global_options()\n    stages.append(task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "b7f26a77f0457f339c5f9f1455203203ca739abe7f436dce71fb31310601a9da": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## The list of remote-batch workflows (reading merged QC tasks results, applying Checks, and uploading them to QCDB)\n  MFTDigitsQCneeds = []\n  for flp in range(5):\n    MFTDigitsQCneeds.extend(['mftDigitsQC'+str(flp)+'_local'+str(tf) for tf in range(1, ntimeframes + 1)])\n  add_QC_finalization('mftDigitsQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mft-digits-0.json', MFTDigitsQCneeds)\n  add_QC_finalization('mftClustersQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mft-clusters.json')\n  add_QC_finalization('mftTracksQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mft-tracks.json')\n  add_QC_finalization('mftMCTracksQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mft-tracks-mc.json')\n  add_QC_finalization('emcRecoQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/emc-reco-tasks.json')\n  add_QC_finalization('emcBCQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/emc-reco-tasks.json')\n  #add_QC_finalization('tpcTrackingQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/tpc-qc-tracking-direct.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "7cd9be7f0e3af2644cfafb3a3224e225130e973aadbbcd6e7b0098ca8fd16db4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "add_QC_finalization('tpcStandardQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/tpc-qc-standard-direct.json')\nadd_QC_finalization('trdDigitsQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/trd-standalone-task.json')\nadd_QC_finalization('trdTrackingQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/trd-tracking-task.json')\nadd_QC_finalization('vertexQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/vertexing-qc-direct-mc.json')\nadd_QC_finalization('ITSTPCmatchQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/ITSTPCmatchedTracks_direct_MC.json')\nadd_QC_finalization('TOFMatchQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/tofMatchedTracks_ITSTPCTOF_TPCTOF_direct_MC.json')\nadd_QC_finalization('tofDigitsQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/tofdigits.json')\nadd_QC_finalization('TOFMatchWithTRDQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/tofMatchedTracks_AllTypes_direct_MC.json')\nadd_QC_finalization('ITSTrackSimTask', 'json://${O2DPG_ROOT}/MC/config/QC/json/its-mc-tracks-qc.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "8f2c6cdc149a49d77c4064beec52bc0b05ae474d2b1031862fd5727e742f385c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    add_QC_finalization('ITSTracksClusters', 'json://${O2DPG_ROOT}/MC/config/QC/json/its-clusters-tracks-qc.json')\n  if 'MID' is active:\n     add_QC_finalization('MIDTaskQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mid-task.json')\n  if 'MCH' is active:\n     add_QC_finalization('MCHDigitsTaskQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mch-digits-task.json')\n     add_QC_finalization('MCHErrorsTaskQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mch-errors-task.json')\n     add_QC_finalization('MCHRecoTaskQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mch-reco-task.json')\n     add_QC_finalization('MCHTracksTaskQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mch-tracks-task.json')\n  if 'MCH' is active and 'MID' is active:\n     add_QC_finalization('MCHMIDTracksTaskQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/mchmid-tracks-task.json')\n  if 'MCH' is active and 'MID' is active and 'MFT' is active:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "893a58af7ff25fbcdf4567f0ce1c087c000e0e937d22fc9a95d81ab9ff15425e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the 'MCH' and 'MID' and 'MFT' components are active:\n  add final QC configuration for 'MUONTracksMFTTaskQC' using 'json://${O2DPG_ROOT}/MC/config/QC/json/mftmchmid-tracks-task.json'\nelif the 'MCH' and 'MFT' components are active:\n  add final QC configuration for 'MCHMFTTaskQC' using 'json://${O2DPG_ROOT}/MC/config/QC/json/mftmch-tracks-task.json'\nif 'FT0' and 'TRD' components are active:\n  add final QC configuration for 'tofft0PIDQC' using 'json://${O2DPG_ROOT}/MC/config/QC/json/pidft0tof.json'\nelif only 'FT0' is active:\n  add final QC configuration for 'tofft0PIDQC' using 'json://${O2DPG_ROOT}/MC/config/QC/json/pidft0tofNoTRD.json'\nelif only 'TRD' is active:\n  add final QC configuration for 'tofPIDQC' using 'json://${O2DPG_ROOT}/MC/config/QC/json/pidtof.json'\notherwise:\n  add final QC configuration for 'tofPIDQC' using 'json://${O2DPG_ROOT}/MC/config/QC/json/pidtofNoTRD.json'\nadd final QC configuration for 'RecPointsQC' using 'json://${O2DPG_ROOT}/MC/config/QC/json/ft0-reconstruction-config.json'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "a05ba234345029b34c0dfbe731c5f6d342653b6f100745c7dcd6ae863dc2bb06": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "add_QC_finalization('FV0DigitsQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/fv0-digits.json')\nadd_QC_finalization('FDDRecPointsQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/fdd-recpoints.json')\nadd_QC_finalization('CPVDigitsQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/cpv-digits-task.json')\nadd_QC_finalization('CPVClustersQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/cpv-clusters-task.json')\nadd_QC_finalization('PHSCellsClustersQC', 'json://${O2DPG_ROOT}/MC/config/QC/json/phs-cells-clusters-task.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "a8dcff45e49112de01254cb86c1b067dec54254f4d7155e0393684373e1a9121": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The list of QC Post-processing workflows\n  add_QC_postprocessing('tofTrendingHits', 'json://${O2DPG_ROOT}/MC/config/QC/json/tof-trending-hits.json', [QC_finalize_name('tofDigitsQC')], runSpecific=False, prodSpecific=True)\n\n  return stages\n\n\ndef main() -> int:\n  \n  parser = argparse.ArgumentParser(description='Generate the ALICE QC finalization workflow')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "9751d22d21c03f16a7f0b1228bb8289b506233ddadfe9e09ce209e5aa3d92925": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--noIPC', help='disable shared memory in DPL')\nparser.add_argument('-o', help='output workflow file', default='workflow.json')\nparser.add_argument('-run', help=\"Run number for this MC\", default=300000)\nparser.add_argument('-productionTag', help=\"Production tag for this MC\", default='unknown')\nparser.add_argument('-conditionDB', help=\"CCDB url for QC workflows\", default='http://alice-ccdb.cern.ch')\nparser.add_argument('-qcdbHost', help=\"QCDB url for QC object uploading\", default='http://ali-qcdbmc-gpn.cern.ch:8083')\nparser.add_argument('-beamType', help=\"Collision system, e.g. PbPb, pp\", default='')\nargs = parser.parse_args()\nprint(args)\n\n# ensure that O2DPG and O2 are loaded\nO2DPG_ROOT = environ.get('O2DPG_ROOT')\nO2_ROOT = environ.get('O2_ROOT')\nQUALITYCONTROL_ROOT = environ.get('QUALITYCONTROL_ROOT')\n\nif O2DPG_ROOT is None: \n    print('Error: O2DPG must be loaded')\n\nif O2_ROOT is None: \n    print('Error: O2 must be loaded')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "6770ad129fed6872a0e70b02f0a6a2b676a90031c7346e67f5d243fa9ab56dcc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if O2_ROOT is None: \n    print('Error: O2 must be loaded')\n\nif QUALITYCONTROL_ROOT is None:\n    print('Error: QUALITYCONTROL_ROOT must be loaded')\n\nif not isdir(qcdir):\n    mkdir(qcdir)\n\nworkflow={}\nworkflow['stages'] = include_all_QC_finalization(ntimeframes=1, standalone=True, run=args.run, productionTag=args.productionTag, conditionDB=args.conditionDB, qcdbHost=args.qcdbHost, beamType=args.beamType)\n  \ndump_workflow(workflow[\"stages\"], args.o)\n  \nreturn 0\n\n\nif __name__ == '__main__':\n  sys.exit(main())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_qc_finalization_workflow.py"
        }
    ],
    "25791084d32e9ef7dc43000fdd78195f3acb0c838f937ce418f76c9fe5472708": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    from functools import lru_cache\nimport subprocess\nimport re\nimport os\n\ndef create_sim_config(args):\n    # generates a general simulation configuration\n    # based on input arguments args (run number, energy, etc.) initially provided\n    # to o2dpg_sim_workflow.py\n\n    COLTYPEIR = args.col\n    if args.embedding:\n        COLTYPEIR = args.colBkg\n\n    config = {}\n    def add(cfg, flatconfig):\n       for entry in flatconfig:\n           mk = entry.split(\".\")[0]\n           sk = entry.split(\".\")[1]\n           d = cfg.get(mk,{})\n           d[sk] = flatconfig[entry]\n           cfg[mk] = d",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "aa5187584269535410fa8d9d8ef4d1e2a964fd8382a5ba7636cacd61fcb81d62": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# specific configurations for pp collisions\nif COLTYPEIR == 'pp':\n   # Alpide detector settings\n   add(config, {\"MFTAlpideParam.roFrameLengthInBC\" : 198})\n   if 302000 <= int(args.run) and int(args.run) < 309999:\n       add(config, {\"ITSAlpideParam.roFrameLengthInBC\" : 198})\n   # ITS reconstruction settings\n   add(config, {\"ITSVertexerParam.phiCut\" : 0.5,\n                \"ITSVertexerParam.clusterContributorsCut\" : 3,\n                \"ITSVertexerParam.tanLambdaCut\" : 0.2})\n   # primary vertex settings\n   if 301000 <= int(args.run) and int(args.run) <= 301999:\n       add(config, {\"pvertexer.acceptableScale2\" : 9,\n                    \"pvertexer.minScale2\" : 2.,\n                    \"pvertexer.nSigmaTimeTrack\" : 4.,\n                    \"pvertexer.timeMarginTrackTime\" : 0.5,\n                    \"pvertexer.timeMarginVertexTime\" : 7.,\n                    \"pvertexer.nSigmaTimeCut\" : 10,})",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "b04caddf298ee90ed40b5d15b3d3884919232abc715274ac5b287debfd738766": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"pvertexer.nSigmaTimeCut\" : 10,\n                       \"pvertexer.dbscanMaxDist2\" : 36,\n                       \"pvertexer.dcaTolerance\" : 3.,\n                       \"pvertexer.pullIniCut\" : 100,\n                       \"pvertexer.addZSigma2\" : 0.1,\n                       \"pvertexer.tukey\" : 20.,\n                       \"pvertexer.addZSigma2Debris\" : 0.01,\n                       \"pvertexer.addTimeSigma2Debris\" : 1.,\n                       \"pvertexer.maxChi2Mean\" : 30,\n                       \"pvertexer.timeMarginReattach\" : 3.,\n                       \"pvertexer.dbscanDeltaT\" : 24,\n                       \"pvertexer.maxChi2TZDebris\" : 100,\n                       \"pvertexer.maxMultRatDebris\" : 1.,\n                       \"pvertexer.dbscanAdaptCoef\" : 20.}\n       elif 302000 <= int(args.run) and int(args.run) <= 309999:\n          # specific settings for high pp runs",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "8e4eee89ce4fcfcfc2ac68586567b33562e3dc3f6b920f808b87d9b0bb870083": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# specific settings for high pp\n# data range sourced from https://twiki.cern.ch/twiki/bin/viewauth/ALICE/O2DPGMCSamplingSchema\n# details from JIRA https://alice.its.cern.ch/jira/browse/O2-2691\n# reduce additional errors in time margin for tracks and ITS clusters\nadd(config, {\"pvertexer.timeMarginTrackTime\" : 0.,\n             \"pvertexer.dbscanDeltaT\" : 7,\n             \"pvertexer.maxChi2TZDebris\": 50,\n             \"pvertexer.maxMultRatDebris\": 1.,\n             \"pvertexer.dbscanAdaptCoef\" : 20,\n             \"pvertexer.maxVerticesPerCluster\" : 20,\n             \"pvertexer.dbscanMaxDist2\" : 36})\nelse:\n# general settings for pp\n# reduce additional errors in time margin for tracks and ITS clusters\nadd(config, {\"pvertexer.acceptableScale2\" : 9,\n             \"pvertexer.dbscanMaxDist2\" : 36,\n             \"pvertexer.dbscanDeltaT\" : 24,})",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "cae0cd11363d5bfa098110a4bf54782d58eb414eb613a9b65cc23b1c9d512f0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"pvertexer.dbscanDeltaT\" : 24,\n                       \"pvertexer.maxChi2TZDebris\" : 100,\n                       \"pvertexer.maxMultRatDebris\" : 1.,\n                       \"pvertexer.dbscanAdaptCoef\" : 20.)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "9581527594b71cc696969f7b067792dc2ffdb990696f5b6edb4018b2b37d0c6a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# MFT tracking settings\nif args.mft_reco_full:\n    add(config, {\"MFTTracking.forceZeroField\" : 0,\n                 \"MFTTracking.LTFclsRCut\" : 0.0100})\n\n# Forward matching settings\nif args.fwdmatching_4_param:\n    add(config, {\"FwdMatching.matchFcn\" : \"matchsXYPhiTanl\"})\nif args.fwdmatching_cut_4_param:\n    add(config, {\"FwdMatching.cutFcn\" : \"cut3SigmaXYAngles\"})\n\n# manage larger combinatorics\nif args.col == \"PbPb\" or (args.embedding and args.colBkg == \"PbPb\"):\n    add(config, {\"ITSVertexerParam.lowMultBeamDistCut\": \"0.\"})",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "7218af4bf34c56cb7dcc47f537b7b93fa044fb837b8e2400d1601c4fe7f02e21": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# FIT digitizer settings\n# 2023 PbPb\nif 543437 <= int(args.run) and int(args.run) <= 545367:\n    add(config, {\"FT0DigParam.mMip_in_V\": \"7\", \"FT0DigParam.mMV_2_Nchannels\": \"2\", \"FT0DigParam.mMV_2_NchannelsInverse\": \"0.5\"})\n    add(config, {\"FV0DigParam.adcChannelsPerMip\": \"4\"})\n# 2024\n# initial and final run of 2024\nif 546088 <= int(args.run) and int(args.run) <= 560623:\n    # 14 ADC channels per MIP for FT0\n    add(config, {\"FT0DigParam.mMip_in_V\": \"7\", \"FT0DigParam.mMV_2_Nchannels\": \"2\", \"FT0DigParam.mMV_2_NchannelsInverse\": \"0.5\"})\n    # 15 ADC channels per MIP for FV0\n    add(config, {\"FV0DigParam.adcChannelsPerMip\": \"15\"})\n    if COLTYPEIR == \"PbPb\":\n        # 4 ADC channels per MIP for FV0\n        add(config, {\"FV0DigParam.adcChannelsPerMip\": \"4\"})\n\nreturn config",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "d0a2c16fdbf36f4f438dc9697fd27646a09daecf7f4df5825f23ebf9683e1900": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return config\n\n\ndef create_geant_config(args, externalConfigString):\n    # generates a generic transport simulation configuration based on the arguments (run number, energy, etc.) originally provided to o2dpg_sim_workflow.py\n    #\n    # returns a dictionary with mainkey -> dictionary of subkey : values\n    config = {}\n    def add(cfg, flatconfig):\n       for entry in flatconfig:\n           mk = entry.split(\".\")[0]\n           sk = entry.split(\".\")[1]\n           d = cfg.get(mk,{})\n           d[sk] = flatconfig[entry]\n           cfg[mk] = d\n\n    # ----- special setting for the hepmc generator -----\n    if args.gen == \"hepmc\":\n      eventSkipPresent = config.get(\"HepMC\",{}).get(\"eventsToSkip\")\n      if eventSkipPresent == None:\n          # add it\n          add(config, {\"HepMC.eventsToSkip\" : '${HEPMCEVENTSKIP:-0}'})\n\n    # ----- add default settings -----\n\n    add(config, {\"MFTBase.buildAlignment\" : \"true\"})",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "fe7a218564ee0f7c96245ee7bff4eab147133261cb409ab4b260a80fdf2333a5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ----- add default settings -----\n\nadd(config, {\"MFTBase.buildAlignment\" : \"true\"})\n\n# ----- apply external overwrites from command line ------\nfor keyval in externalConfigString.split(\";\"):\n    if len(keyval) > 0:\n        key, val = keyval.split(\"=\")\n        add(config, {key : val})\n\nreturn config\n\ndef constructConfigKeyArg(config):\n    # flattens the dictionary created in create_geant_config\n    # and forms the --configKeyValues options for the simulation\n    if len(config) == 0:\n        return ''\n    arg = '--configKeyValues \"'\n    for mainkey in config:\n        for subkey in config[mainkey]:\n            arg = arg + mainkey + '.' + subkey + '=' + config[mainkey][subkey] + ';'\n    arg = arg + '\"'\n    return arg\n\ndef load_env_file(env_file):\n    \"\"\"Converts an environment file produced by 'export > env.txt' into a python dictionary.\"\"\"\n    env_vars = {}\n    with open(env_file, \"r\") as f:\n        for line in f:\n            line = line.strip()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "ebfaaa111c3e16ed61f0d0b912840554587f74cbb72b46ca10195c0fde983c11": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # Ignore empty lines or comments\n    if not line or line.startswith(\"#\"):\n        continue\n\n    # Remove 'declare -x ' if present\n    if line.startswith(\"declare -x \"):\n        line = line.replace(\"declare -x \", \"\", 1)\n\n    # Handle case: \"FOO\" without \"=\" (assign empty string)\n    if \"=\" not in line:\n        key, value = line.strip(), \"\"\n    else:\n        key, value = line.split(\"=\", 1)\n        value = value.strip('\"')  # Remove surrounding quotes if present\n\n    env_vars[key.strip()] = value\n    return env_vars\n\n# functions to determine dpl option availability dynamically\ndef parse_dpl_help_output(executable, envfile):\n    \"\"\"Parses the --help full output of an executable to extract available options.\"\"\"\n    try:\n        env = os.environ.copy()\n        if envfile is not None:\n            print(\"Loading from alternative environment\")\n            env = load_env_file(envfile)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "5167b515cfc4035ca045b3a37da4176b8b78fd9a466feeb3ae139b48d5cf5259": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Using DEVNULL is crucial for o2-dpl workflows to avoid hanging in non-interactive environments without a terminal.\n# This approach is more straightforward than using the echo | method.\noutput = subprocess.check_output([executable, \"--help\", \"full\"], env=env, text=True, stdin=subprocess.DEVNULL, timeout=100)\nexcept subprocess.CalledProcessError:\n    return {}, {}\n    \noption_pattern = re.compile(r\"(\\-\\-[\\w\\-]+)\")\nsections = {}\ninverse_lookup = {}\ncurrent_section = \"global\"\n    \nfor line in output.split(\"\\n\"):\n    section_match = re.match(r\"^([A-Za-z\\s]+):$\", line.strip())\n    if section_match:\n        current_section = section_match.group(1).strip()\n        sections[current_section] = []\n        continue\n        \n    option_match = option_pattern.findall(line)\n    if option_match:\n        for option in option_match:\n            sections.setdefault(current_section, []).append(option)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "9bf61313eb663b8e11bb2e9761bea1fcdb303890f1eaf91447d9f8ee0f23fd22": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    sections.setdefault(current_section, []).append(option)\n    inverse_lookup.setdefault(option, []).append(current_section)\n    \n    return sections, inverse_lookup",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "ab37be24c685396e31ef83205eaa04c52d2eaa69fc42c8b3126be2b9906f03c8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "@lru_cache(maxsize=10)\ndef get_dpl_options_for_executable(executable, envfile):\n    \"\"\"Provides available options and their inverse lookup for a specified executable, with the result cached.\"\"\"\n    return parse_dpl_help_output(executable, envfile)\n\ndef option_if_available(executable, option, envfile = None):\n    \"\"\"Determines if an option is available for a specific executable and returns it as a string. If not available, returns an empty string.\"\"\"\n    _, inverse_lookup = get_dpl_options_for_executable(executable, envfile)\n    return ' ' + option if option in inverse_lookup else ''",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "f85b0da8f7855fa57b972c050d049aba85f75684f9ce00d98a4285472dc5f6d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# helper function to update certain values and logs the changes made\ndef update_config(config, mainkey, subkey, value):\n    oldvalue = config.get(mainkey,{}).get(subkey, None)\n    print (f\"Updating {mainkey}.{subkey}: {'None' if oldvalue is None else oldvalue} -> {value}\")\n    if mainkey not in config:\n      # Initialize the main key in the dictionary if it does not already exist\n      config[mainkey] = {}\n    config[mainkey][subkey] = value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_config.py"
        }
    ],
    "6b59053a0ef5c699d27eb53fbf2b0a31ded122758cca8e7fea0aa1aead07c8c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n# initiated in February 2021, by sandro.wenzel@cern.ch\n\nimport re\nimport subprocess\nimport time\nimport json\nimport logging\nimport os\nimport signal\nimport socket\nimport sys\nimport traceback\nimport platform\nimport tarfile\ntry:\n    from graphviz import Digraph\n    have_graphviz = True\nexcept ImportError:\n    have_graphviz = False\n\nformatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')\n\nsys.setrecursionlimit(100000)\n\nimport argparse\nimport psutil\nmax_system_mem = psutil.virtual_memory().total\n\nsys.path.append(os.path.join(os.path.dirname(__file__), '.', 'o2dpg_workflow_utils'))\nfrom o2dpg_workflow_utils import read_workflow\n\n# specifying command line options\nparser = argparse.ArgumentParser(description='Parallel execution of an (O2-DPG) DAG data/job pipeline under resource constraints.',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "1c4e2694372afc4d081d6e202ab2c5e8bce1cedd961bb41b8e89ad8d44bcd752": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('-f','--workflowfile', help='The name of the input workflow file', required=True)\nparser.add_argument('-jmax','--maxjobs', type=int, help='The maximum number of parallel tasks to run.', default=100)\nparser.add_argument('-k','--keep-going', action='store_true', help='Continue executing the pipeline even if errors occur.')\nparser.add_argument('--dry-run', action='store_true', help='Display what the pipeline would do without executing it.')\nparser.add_argument('--visualize-workflow', action='store_true', help='Generates a visual representation of the workflow.')\nparser.add_argument('--target-labels', nargs='+', help='Run the pipeline based on target labels such as \"TPC\" or \"DIGI\". This condition is applied in conjunction with --target-tasks using a logical AND.', default=[])\nparser.add_argument('-tt','--target-tasks', nargs='+', help='Run the pipeline based on target tasks such as \"tpcdigi\". By default, all tasks in the graph are executed. Regular expressions are supported.', default=[\"*\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "03b2f18c13b26fc3db6f5969bb25420759fbfea23ffa683818058973bfe8989f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--produce-script', help='Generates a shell script to execute the workflow sequentially and then terminates.')\nparser.add_argument('--rerun-from', help='Re-executes the workflow starting from specified task (or pattern), rerunning all dependent jobs.')\nparser.add_argument('--list-tasks', help='Displays the names of all tasks and then exits.', action='store_true')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "9860b0a34dad7a6a1fb496b34cfe5200c95a229959ab5ca516671cbe05055432": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Resources\nparser.add_argument('--update-resources', dest=\"update_resources\", help='Read resource estimates from a JSON and apply where possible.')\nparser.add_argument(\"--dynamic-resources\", dest=\"dynamic_resources\", action=\"store_true\", help=\"Adjust task resource estimates based on completed related tasks.\") # dynamically update resources\nparser.add_argument('--optimistic-resources', dest=\"optimistic_resources\", action=\"store_true\", help=\"Attempt to run the workflow despite potential underestimation of resource needs for some tasks.\")\nparser.add_argument(\"--n-backfill\", dest=\"n_backfill\", type=int, default=1)\nparser.add_argument('--mem-limit', help='Define memory limit as a scheduling constraint (in MB)', default=0.9*max_system_mem/1024./1024, type=float)\nparser.add_argument('--cpu-limit', help='Specify CPU limit (core count)', default=8, type=float)\nparser.add_argument('--cgroup', help='Run the pipeline under a specified cgroup (e.g., 8coregrid) to emulate resource constraints.')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "202a4753cd065cea18e5e647499a4da93523d29eb7162ad5ee28d9ea336d6e69": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The processes must exist and the tasks file must be writable by the current user.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "f9d84db177305e8511a2d78ad6743241165ed167558d09fd87fade48f8fad80c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run control, webhooks\nparser.add_argument('--stdout-on-failure', action='store_true', help='Redirect log files from failed tasks to standard output,')\nparser.add_argument('--webhook', help=argparse.SUPPRESS) # log relevant information to this webhook channel\nparser.add_argument('--checkpoint-on-failure', help=argparse.SUPPRESS) # a debugging option that creates a debug-tarball and sends it to a specified address\n                                                                       # the argument is an alien-path\nparser.add_argument('--retry-on-failure', help=argparse.SUPPRESS, default=0) # specify the number of times a failed task should be retried\nparser.add_argument('--no-rootinit-speedup', help=argparse.SUPPRESS, action='store_true') # disable the initialization of ROOT environment variables to speed up initialization/startup",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "1624713027f234c4c33aff8f6546043aed9af6f87429deda7dafc27c0b558808": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Logging Configuration\nparser.add_argument('--action-logfile', help='Specify the log filename for action logs. If not provided, the default will be pipeline_action_#PID.log')\nparser.add_argument('--metric-logfile', help='Specify the log filename for metric logs. If not provided, the default will be pipeline_metric_#PID.log')\nparser.add_argument('--production-mode', action='store_true', help='Enable production mode')\n# This mode activates specific features optimized for non-interactive or production environments, such as automatic file cleanup.\nargs = parser.parse_args()\n\ndef configure_logger(name, log_file, log_level=logging.DEBUG):\n    \"\"\"Function to configure multiple loggers\"\"\"\n    handler = logging.FileHandler(log_file, mode='w')\n    handler.setFormatter(formatter)\n\n    logger = logging.getLogger(name)\n    logger.setLevel(log_level)\n    logger.addHandler(handler)\n\n    return logger\n\n# Initialize the action logger\nactionlogger = configure_logger('pipeline_action_logger', ('pipeline_action_' + str(os.getpid()) + '.log', args.action_logfile)[args.action_logfile is not None], level=logging.DEBUG)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "7fbabdb747fd02e1d89fcef82963c495e052d42bed07b2b2f344c9f61f6f32ba": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# second file logger setup\nmetriclogger = setup_logger('pipeline_metric_logger', ('pipeline_metric_' + str(os.getpid()) + '.log', args.action_logfile)[args.action_logfile!=None])\n\n# Log the imposed memory and CPU limits, along with other relevant metadata immediately\n_ , meta = read_workflow(args.workflowfile)\nmeta[\"cpu_limit\"] = args.cpu_limit\nmeta[\"mem_limit\"] = args.mem_limit\nmeta[\"workflow_file\"] = os.path.abspath(args.workflowfile)\nmeta[\"target_task\"] = args.target_tasks\nmeta[\"rerun_from\"] = args.rerun_from\nmeta[\"target_labels\"] = args.target_labels\nmetriclogger.info(meta)\n\n# For debugging purposes when terminal access is unavailable\n# TODO: Integrate into the standard logger\ndef send_webhook(hook, t):\n    if hook!=None:\n      command=\"curl -X POST -H 'Content-type: application/json' --data '{\\\"text\\\":\\\" \" + str(t) + \"\\\"}' \" + str(hook) + \" &> /dev/null\"\n      os.system(command)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "18b2467dd2edccb94d2b69d91d1ae49908ee6ee10843c2c6111223e2a3dbaf30": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# A backup method to obtain all child processes\n# when psutil encounters issues (such as PermissionError).\n# It yields the same list as psutil.children(recursive=True).\ndef getChildProcs(basepid):\n  script='''\n  childprocs() {\n  local parent=$1\n  if [ ! \"$2\" ]; then\n    child_pid_list=\"\"\n  fi\n  if [ \"$parent\" ] ; then\n    child_pid_list=\"$child_pid_list $parent\"\n    for childpid in $(pgrep -P ${parent}); do\n      childprocs $childpid \"nottoplevel\"\n    done;\n  fi\n  # return through a string list (only if toplevel)\n  if [ ! \"$2\" ]; then\n    echo \"${child_pid_list}\"\n  fi\n  }\n  '''\n  script = script + '\\n' + 'childprocs ' + str(basepid)\n  result = subprocess.check_output(script, shell=True)\n  process_list = []\n  for pid in result.strip().split():\n     try:\n         proc=psutil.Process(int(pid))\n     except psutil.NoSuchProcess:\n         continue\n\n     process_list.append(proc)\n  return process_list",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "4842245ce7053aaf481c49f51ebaf55ec7afa0c29a2b8fd4e61650cb93008ce8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    plist.append(proc)\n    return plist\n\n#\n# Code section to identify all topological orderings\n# of a Directed Acyclic Graph (DAG). This helps in understanding\n# when tasks can be scheduled in parallel.\n# Adapted from https://www.geeksforgeeks.org/all-topological-sorts-of-a-directed-acyclic-graph/\n\n# class to represent a graph object\nclass Graph:\n\n    # Constructor\n    def __init__(self, edges, N):\n\n        # A List of Lists to represent an adjacency list\n        self.adjList = [[] for _ in range(N)]\n\n        # stores in-degree of a vertex\n        # initialize in-degree of each vertex to 0\n        self.indegree = [0] * N\n\n        # add edges to the graph\n        for (src, dest) in edges:\n\n            # add an edge from source to destination\n            self.adjList[src].append(dest)\n\n            # increment in-degree of destination vertex by 1\n            self.indegree[dest] = self.indegree[dest] + 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "c6c507a00cce3697b3ee38c8d4e26c46e6630b2a7a97a7f301ef86e9abe8d126": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Recursive function to discover all possible topological orderings of a given DAG\ndef findAllTopologicalOrders(graph, path, discovered, N, allpaths, maxnumber=1):\n    if len(allpaths) >= maxnumber:\n        return\n\n    # process each vertex\n    for v in range(N):\n\n        # proceed only if the in-degree of the current node is 0 and\n        # the current node has not been processed yet\n        if graph.indegree[v] == 0 and not discovered[v]:\n\n            # for each adjacent vertex u of v, decrease the in-degree of u by 1\n            for u in graph.adjList[v]:\n                graph.indegree[u] -= 1\n\n            # add the current node to the path and mark it as discovered\n            path.append(v)\n            discovered[v] = True\n\n            # recursively call the function\n            findAllTopologicalOrders(graph, path, discovered, N, allpaths)\n\n            # backtrack: restore in-degree information for the current node\n            for u in graph.adjList[v]:\n                graph.indegree[u] += 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "7f664e419994a40b7ca52a6d612b0823a797c6edc50e90438d3802c2df659c9e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# backtrack: remove the current node from the path and\n# mark it as undiscovered\npath.pop()\ndiscovered[v] = False\n\n# record the valid sequence\nif len(path) == N:\n    allpaths.append(path.copy())\n\n\n# obtain all topological sequences of a given directed acyclic graph as a list\ndef printAllTopologicalOrders(graph, maxnumber=1):\n    # determine the number of nodes in the graph\n    N = len(graph.adjList)\n\n    # create an auxiliary array to track if a vertex is discovered\n    discovered = [False] * N\n\n    # list to hold the topological sequence\n    path = []\n    allpaths = []\n    # find all topological sequences and print them\n    findAllTopologicalOrders(graph, path, discovered, N, allpaths, maxnumber=maxnumber)\n    return allpaths\n\n# <--- end code section for topological sorts",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "3580242db1ed6bb77bc4c1ecaf1c9c65173bc67e08a81e77c67ed6a86ff75ed4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# <--- end code section for topological sorts\n\n# locate all tasks that rely on a specified task (id); if a cache\n# dictionary is provided, we can populate the entire graph in a single pass...\ndef locate_all_dependent_tasks(possiblenexttask, tid, cache=None):\n    c=cache.get(tid) if cache else None\n    if c!=None:\n        return c\n\n    daughterlist=[tid]\n    # potentially recurse\n    for n in possiblenexttask[tid]:\n        c = cache.get(n) if cache else None\n        if c == None:\n            c = locate_all_dependent_tasks(possiblenexttask, n, cache)\n        daughterlist += c\n        if cache is not None:\n            cache[n]=c\n\n    if cache is not None:\n        cache[tid]=daughterlist\n    return list(set(daughterlist))\n\n\n# a wrapper that accepts some edges, constructs the graph,\n# retrieves all topological orderings and some supporting data structures\ndef analyseGraph(edges, nodes):\n    # total number of nodes in the graph\n    N = len(nodes)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "83b6bafd9075e4e13256849b01433db95590b841b9a34c43c18eabc9006b85d2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# candidate list trivial\nnextjobtrivial = { n:[] for n in nodes }\n# initial nodes\nnextjobtrivial[-1] = nodes\nfor edge in edges:\n    nextjobtrivial[edge[0]].append(edge[1])\n    if nextjobtrivial[-1].count(edge[1]):\n        nextjobtrivial[-1].remove(edge[1])\n\n# determine topological orderings of the graph\n# construct a graph from the edges\ngraph = Graph(edges, N)\norderings = printAllTopologicalOrders(graph)\n\nreturn (orderings, nextjobtrivial)\n\n\ndef visualize_workflow(workflowspec):\n    if not havegraphviz:\n        print('graphviz not installed, unable to visualize workflow')\n        return\n\n    dot = Digraph(comment='MC workflow')\n    nametoindex={}\n    index=0\n    # node creation\n    for stage in workflowspec['stages']:\n        name=stage['name']\n        nametoindex[name]=index\n        dot.node(str(index), name)\n        index=index+1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "5e56e725fb33703e9cc9a3e33f6e0cc0cc268732c67958400bb2cde430303402": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# edges\nfor node in workflowspec['stages']:\n    toindex = nametoindex[node['name']]\n    for req in node['needs']:\n        fromindex = nametoindex[req]\n        dot.edge(str(fromindex), str(toindex))\n\ndot.render('workflow.gv')\n\n# constructs the graph from a \"taskuniverse\" list and builds accompanying structures tasktoid and idtotask\ndef build_graph(taskuniverse, workflowspec):\n    tasktoid = { t[0]['name']: i for i, t in enumerate(taskuniverse, 0) }\n    # print (tasktoid)\n\n    nodes = []\n    edges = []\n    for t in taskuniverse:\n        nodes.append(tasktoid[t[0]['name']])\n        for n in t[0]['needs']:\n            edges.append((tasktoid[n], tasktoid[t[0]['name']]))\n\n    return (edges, nodes)\n\n\n# reads JSON file into a dictionary, e.g., for workflow specification\ndef load_json(workflowfile):\n    with open(workflowfile) as fp:\n        workflowspec = json.load(fp)\n    return workflowspec",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "8dc7f1c8a6b092620dd2f12fd96369ea213c304fbd1a2217ed7ad19b540a65b5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# filters the original workflowspec based on specified targets or labels\n# returns a new workflowspec\ndef filter_workflow(workflowspec, targets=[], targetlabels=[]):\n    if len(targets) == 0:\n        return workflowspec\n    if len(targetlabels) == 0 and len(targets) == 1 and targets[0] == \"*\":\n        return workflowspec\n\n    transformedworkflowspec = workflowspec\n\n    def task_matches(t):\n        for filt in targets:\n            if filt == \"*\":\n                return True\n            if re.match(filt, t) is not None:\n                return True\n        return False\n\n    def task_matches_labels(t):\n        # it's acceptable if no labels are provided at all\n        if len(targetlabels) == 0:\n            return True\n\n        for l in t['labels']:\n            if l in targetlabels:\n                return True\n        return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "08ae0fecb5728aa87f3c33c84cb048836bc01ac46e8f2a4f380a171424602e2e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This sequence of operations functions and has a somewhat structured approach.\n# However, it creates lookups utilized elsewhere, so there might be CPU savings by reusing\n# some structures across functions or by processing the data in fewer passes.\n\n# helper lookup\ntasknametoid = { t['name']:i for i, t in enumerate(workflowspec['stages'],0) }\n\n# check if a task can be executed at all\n# or if it is prevented due to missing requirements\ndef canBeDone(t, cache={}):\n    ok = True\n    c = cache.get(t['name'])\n    if c is not None:\n        return c\n    for r in t['needs']:\n        taskid = tasknametoid.get(r)\n        if taskid is not None:\n            if not canBeDone(workflowspec['stages'][taskid], cache):\n                ok = False\n                break\n        else:\n            ok = False\n            break\n    cache[t['name']] = ok\n    return ok",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "8c7be44523611935a0f510ff5c7a8bd5a730039ed6d1c145fcd3f43b43301c21": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "okcache = {}\n# create the complete list of targets\nfull_target_list = [ t for t in workflowspec['stages'] if task_matches(t['name']) and task_matches_labels(t) and canBeDone(t,okcache) ]\nfull_target_name_list = [ t['name'] for t in full_target_list ]\n\n# generate the full dependency list for a task t\ndef getallrequirements(t):\n    _l=[]\n    for r in t['needs']:\n        fulltask = workflowspec['stages'][tasknametoid[r]]\n        _l.append(fulltask)\n        _l=_l+getallrequirements(fulltask)\n    return _l\n\nfull_requirements_list = [ getallrequirements(t) for t in full_target_list ]\n\n# flatten and retrieve the names only\nfull_requirements_name_list = list(set([ item['name'] for sublist in full_requirements_list for item in sublist ]))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "b8f76e78d6bf9caab482be6dba7e4332cb19c2202affe6a24a2c002ef896a309": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# inner \"lambda\" helper determining if a task \"name\" is required by specified targets\ndef needed_by_targets(name):\n    if name in full_target_name_list:\n        return True\n    if name in full_requirements_name_list:\n        return True\n    return False\n\n# we then replicate all entries that match the targets along with their requirements\ntransformedworkflowspec['stages'] = [l for l in workflowspec['stages'] if needed_by_targets(l['name'])]\nreturn transformedworkflowspec\n\n\n# constructs topological orderings (for each timeframe)\ndef build_dag_properties(workflowspec):\n    globaltaskuniverse = [(l, i) for i, l in enumerate(workflowspec['stages'], 1)]\n    timeframeset = set(l['timeframe'] for l in workflowspec['stages'])\n\n    edges, nodes = build_graph(globaltaskuniverse, workflowspec)\n    tup = analyseGraph(edges, nodes.copy())\n    #\n    global_next_tasks = tup[1]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "ea781e4965e54364caa23b02704141d0c39b506fd09c7132910ba5d7ffb78d60": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "dependency_cache = {}\n# The weight that affects the scheduling order can be anything as defined by the user. For now, we prioritize staying within a timeframe, and then consider the number of tasks that depend on a specific task as an additional factor.\n# TODO: Incorporate resource estimates like CPU and MEM from runtime.\n# TODO: Turn this into a policy of the runner to explore various strategies.\ndef getweight(tid):\n    return (globaltaskuniverse[tid][0]['timeframe'], len(find_all_dependent_tasks(global_next_tasks, tid, dependency_cache)))\n\ntask_weights = [ getweight(tid) for tid in range(len(globaltaskuniverse)) ]\n\nfor tid in range(len(globaltaskuniverse)):\n    actionlogger.info(\"The score for \" + str(globaltaskuniverse[tid][0]['name']) + \" is \" + str(task_weights[tid]))\n\n# print (global_next_tasks)\nreturn { 'nexttasks' : global_next_tasks, 'weights' : task_weights, 'topological_ordering' : tup[0] }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "994d2df4c1e110aa74e38e815a2bed3ef86ab18c043e86bd17a9008616449d93": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# adjust the resource requirements for a workflow using JSON-specified resources\ndef update_resource_estimates(workflow, resource_json):\n    resource_dict = load_json(resource_json)\n    stages = workflow[\"stages\"]\n\n    for task in stages:\n        if task[\"timeframe\"] >= 1:\n            name = \"_\".join(task[\"name\"].split(\"_\")[:-1])\n        else:\n            name = task[\"name\"]\n\n        if name not in resource_dict:\n            continue\n\n        new_resources = resource_dict[name]\n\n        # memory\n        newmem = new_resources.get(\"mem\", None)\n        if newmem is not None:\n            oldmem = task[\"resources\"][\"mem\"]\n            actionlogger.info(\"Updating the mem estimate for \" + task[\"name\"] + \" from \" + str(oldmem) + \" to \" + str(newmem))\n            task[\"resources\"][\"mem\"] = newmem\n        newcpu = new_resources.get(\"cpu\", None)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "c2ca50c93bb72fad513af1b4f67eb1cad2d233096095c5a711ba4223680d0949": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# cpu\n    if newcpu is not None:\n        oldcpu = task[\"resources\"][\"cpu\"]\n        rel_cpu = task[\"resources\"][\"relative_cpu\"]\n        if rel_cpu is not None:\n            # honor the relative CPU settings\n            # By default, the CPU value in the workflow is already adjusted if relative_cpu is specified.\n            # The new estimate, however, is not yet adjusted so it must be done here.\n            newcpu *= rel_cpu\n        actionlogger.info(\"Modifying cpu estimate for \" + task[\"name\"] + \" from \" + str(oldcpu) + \" to \" + str(newcpu))\n        task[\"resources\"][\"cpu\"] = newcpu\n\n# a function to read a software environment from alienv into a python dictionary\ndef get_alienv_software_environment(packagestring):\n    \"\"\"\n    packagestring can be a string like O2::v202298081-1,O2Physics::xxx representing packages\n    published on CVMFS ... or ... a file containing the software environment to apply directly\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "e6cf36f1799bc8fbf2cba24bca674c89156a628ed73e02c832716a175081ff13": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# the simple cases take no action\nif packagestring is None or packagestring == \"\" or packagestring == \"None\":\n    return {}\n\ndef convert_env_file(env_file):\n    \"\"\"Convert an environment file created with 'export > env.txt' into a python dictionary.\"\"\"\n    env_vars = {}\n    with open(env_file, \"r\") as f:\n        for line in f:\n            line = line.strip()\n\n            # Ignore blank lines or comments\n            if not line or line.startswith(\"#\"):\n                continue\n\n            # Remove 'declare -x ' if it exists\n            if line.startswith(\"declare -x \"):\n                line = line.replace(\"declare -x \", \"\", 1)\n\n            # Handle the case: \"FOO\" without \"=\" (assign an empty string)\n            if \"=\" not in line:\n                key, value = line.strip(), \"\"\n            else:\n                key, value = line.split(\"=\", 1)\n                value = value.strip('\"')  # Remove surrounding quotes if present",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "d7a3baec23d8bd6f7f8da3d8ba12a6984d506177d2c72e54a4b946aea17e83ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    env_vars[key.strip()] = value\n        return env_vars\n\n    # check if it's a file\n    if os.path.exists(packagestring) and os.path.isfile(packagestring):\n       actionlogger.info(\"Using software environment from file \" + packagestring)\n       return load_env_file(packagestring)\n\n    # alienv printenv packagestring --> dictionary\n    # currently works only with CVMFS\n    cmd=\"/cvmfs/alice.cern.ch/bin/alienv printenv \" + packagestring\n    proc = subprocess.Popen([cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\n\n    envstring, err = proc.communicate()\n    # check if the printenv command was successful\n    if len(err.decode()) > 0:\n       print (err.decode())\n       raise Exception",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "4afc900ec910aa9246490826f6069aa50de3c11e9bf4d8f7a8277a8558fa0013": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# functions for execution; encapsulated in a WorkflowExecutor class\n#\n\nclass Semaphore:\n    \"\"\"\n    Object that can be used as a semaphore\n    \"\"\"\n    def __init__(self):\n        self.locked = False\n    def lock(self):\n        self.locked = True\n    def unlock(self):\n        self.locked = False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "0cd6e1a29db3a1c1c23621abcefe8476c4528228ff0277c3018a4596029b7e5e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "class ResourceBoundaries:\n    \"\"\"\n    Holds global resource properties\n    \"\"\"\n    def __init__(self, cpu_limit, mem_limit, dynamic_resources=False, optimistic_resources=False):\n        self.cpu_limit = cpu_limit\n        self.mem_limit = mem_limit\n        self.dynamic_resources = dynamic_resources\n        # if set, tasks exceeding resource limits will be attempted to run regardless\n        self.optimistic_resources = optimistic_resources",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "a4d9bf6c9f6d7caf9a37232cedf0d1fcba300dec853fc10312cc34b2a943134c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "class TaskResources:\n    \"\"\"\n    Container holding the resources allocated to a single task\n    \"\"\"\n    def __init__(self, tid, name, cpu, cpu_relative, mem, resource_boundaries):\n        # the task ID associated with these resources\n        self.tid = tid\n        self.name = name\n        # initial CPU and memory allocations (permanent)\n        self.cpu_assigned_original = cpu\n        self.mem_assigned_original = mem\n        # relative CPU adjustment, to be applied to sampled CPU; set by the user, for example, to enable backfilling tasks\n        # only applies when sampling resources; permanent\n        self.cpu_relative = cpu_relative if cpu_relative else 1\n        # current CPU and memory allocations (temporary)\n        self.cpu_assigned = cpu\n        self.mem_assigned = mem\n        # overall resource constraints\n        self.resource_boundaries = resource_boundaries\n        # sampled resources for this task\n        self.cpu_sampled = None\n        self.mem_sampled = None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "1fb6331224391d9be56b1344ac861c928003d574bc771f6c84d099c6b7538b67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Collected resources from this\n    self.cpu_sampled = None\n    self.mem_sampled = None\n    # Set these after a task finishes to calculate new estimates for related tasks\n    self.walltime = None\n    self.cpu_taken = None\n    self.mem_taken = None\n    # Gathered during monitoring\n    self.time_collect = []\n    self.cpu_collect = []\n    self.mem_collect = []\n    # Linked to other tasks of the same type\n    self.related_tasks = None\n    # Can assign a semaphore\n    self.semaphore = None\n    # The task's nice value\n    self.nice_value = None\n    # Indicates if the task's resources are currently booked\n    self.booked = False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "3dc7cea44756ec4c46cb3ff9ab0a3cbdc58044b2d6511c0ca66d643e8cdca23e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "@Property\ndef is_done(self):\n    return self.time_collect and not self.booked\n\ndef check_within_limits(self):\n    \"\"\"\n    Verify if allocated resources comply with established limits\n    \"\"\"\n    cpu_within_limits = True\n    mem_within_limits = True\n    if self.cpu_assigned > self.resource_boundaries.cpu_limit:\n        cpu_within_limits = False\n        actionlogger.warning(\"CPU of task %s exceeds limits %d > %d\", self.name, self.cpu_assigned, self.resource_boundaries.cpu_limit)\n    if self.cpu_assigned > self.resource_boundaries.mem_limit:\n        mem_within_limits = False\n        actionlogger.warning(\"MEM of task %s exceeds limits %d > %d\", self.name, self.cpu_assigned, self.resource_boundaries.cpu_limit)\n    return cpu_within_limits and mem_within_limits",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "98bd3b0a2c318ede052b9fa8ea6248af0bbc8c2c4c312204cd53ba8d059c25df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def restrict_resources(self, cpu_limit=None, mem_limit=None):\n        \"\"\"\n        Restrict the resources for this task\n        \"\"\"\n        if cpu_limit is None:\n            cpu_limit = self.resource_boundaries.cpu_limit\n        if mem_limit is None:\n            mem_limit = self.resource_boundaries.mem_limit\n        self.cpu_assigned = min(self.cpu_assigned, cpu_limit)\n        self.mem_assigned = min(self.mem_assigned, mem_limit)\n\n    def record_resources(self, time_passed, cpu, mem):\n        \"\"\"\n        A brief interface to record measured resources after a certain time\n        \"\"\"\n        self.time_collect.append(time_passed)\n        self.cpu_collect.append(cpu)\n        self.mem_collect.append(mem)\n\n    def capture_resources(self):\n        \"\"\"\n        If this task has concluded, sample CPU and MEM for all tasks that have yet to start\n        \"\"\"\n        if not self.is_done:\n            return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "e698d4c0a0a706bccfab6fdc7b072f499bb2400fee8c4509374375b752d58531": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if len(self.time_collect) < 3:\n    # Require at least 3 points for resource sampling\n    self.cpu_sampled = self.cpu_assigned\n    self.mem_sampled = self.mem_assigned\n    actionlogger.debug(\"Task %s does not have enough points (< 3) to sample resources; using previously assigned values.\", self.name)\nelse:\n    # Calculate time deltas excluding the initial CPU measurement, which may be less meaningful\n    time_deltas = [self.time_collect[i+1] - self.time_collect[i] for i in range(len(self.time_collect) - 1)]\n    cpu = sum([cpu * time_delta for cpu, time_delta in zip(self.cpu_collect[1:], time_deltas) if cpu >= 0])\n    self.cpu_sampled = cpu / sum(time_deltas)\n    self.mem_sampled = max(self.mem_collect)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "8e591332644d1695c1948822956d84bd18aaa98c53a49adbf09086af26d3ffb4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mem_sampled = 0\ncpu_sampled = []\nfor res in self.related_tasks:\n    if res.is_done:\n        mem_sampled = max(mem_sampled, res.mem_sampled)\n        cpu_sampled.append(res.cpu_sampled)\ncpu_sampled = sum(cpu_sampled) / len(cpu_sampled)\n\n# This task has already executed with the given resources, so we'll set it to the limit\nif cpu_sampled > self.resource_boundaries.cpu_limit:\n    actionlogger.warning(\"Sampled CPU (%.2f) is greater than assigned CPU limit (%.2f)\", cpu_sampled, self.resource_boundaries.cpu_limit)\nelif cpu_sampled < 0:\n    actionlogger.debug(\"Sampled CPU for %s is %.2f < 0, setting to previously assigned value %.2f\", self.name, cpu_sampled, self.cpu_assigned)\n    cpu_sampled = self.cpu_assigned",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "6bad43915ac5e8e10fbc999ccc09600bf99561a28c25a84d100507dd5220d9ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if mem_sampled > self.resource_boundaries.mem_limit:\n            actionlogger.warning(\"Sampled memory (%.2f) exceeds assigned memory limit (%.2f)\", mem_sampled, self.resource_boundaries.mem_limit)\n        elif mem_sampled <= 0:\n            actionlogger.debug(\"Sampled memory for %s is %.2f which is less than or equal to zero, setting it to the previously assigned value %.2f\", self.name, mem_sampled, self.mem_assigned)\n            mem_sampled = self.mem_assigned\n\n        for res in self.related_tasks:\n            if res.is_done or res.booked:\n                continue\n            res.cpu_assigned = cpu_sampled * res.cpu_relative\n            res.mem_assigned = mem_sampled\n            # This task has been run before, so we stay optimistic and limit the resources if the sampled ones exceed the limits\n            res.limit_resources()\n\nclass ResourceManager:\n    \"\"\"\n    Central class for managing resources\n\n    - CPU limits\n    - MEM limits\n    - Semaphores\n\n    Provides an entry point to set and query resources for updates.\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "7a7b466b4a426a88f7ca717eac5e9dfe86b3f56166bd17a31231248d8380a32a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ENTRPOINT TO MANAGE AND QUERY RESOURCES FOR UPDATES.\n\nABLE TO DETERMINE IF A TASK CAN BE EXECUTED BASED ON CURRENT RESOURCE USAGE.\nALLOWS RESOURCES TO BE RESERVED AND RELEASED.\n\"\"\"\nINITIALIZE MEMBERS WITH DEFAULT VALUES\n\"\"\"\n# STORE ALL TASK RESOURCES\nself.resources = []\n\n# STORE COMMON OBJECTS TO BE SHARED AMONG TASK RESOURCES FOR EFFICIENCY\nself.resources_related_tasks_dict = {}\nself.semaphore_dict = {}\n\n# MANAGE GLOBAL RESOURCE SETTINGS SUCH AS CPU AND MEMORY LIMITS\nself.resource_boundaries = ResourceBoundaries(cpu_limit, mem_limit, dynamic_resources, optimistic_resources)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "f9dbca3591991743d4ba837bfd868658b2a82c773113a933b97d1aa3144b796a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# track resources reserved with default priority level\nself.cpu_booked = 0\nself.mem_booked = 0\n# count tasks reserved with default priority\nself.n_procs = 0\n\n# track resources reserved with higher priority level\nself.cpu_booked_backfill = 0\nself.mem_booked_backfill = 0\n# count tasks reserved with higher priority\nself.n_procs_backfill = 0\n\n# define the maximum number of tasks running concurrently\nself.procs_parallel_max = procs_parallel_max\n\n# determine the default priority level of this script\nself.nice_default = os.nice(0)\n# increase by 19 to get the priority level for lower-priority tasks\nself.nice_backfill = self.nice_default + 19",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "7b95ae736b4cc30039a09fd728cf64322a8efb1989fe0dc01d343721c69f2513": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def add_task_resources(self, name, related_tasks_name, cpu, cpu_relative, mem, semaphore_string=None):\n    \"\"\"\n    Create and append a new TaskResources object\n    \"\"\"\n    resources = TaskResources(len(self.resources), name, cpu, cpu_relative, mem, self.resource_boundaries)\n    if not resources.is_within_limits() and not self.resource_boundaries.optimistic_resources:\n        # exit if we cannot proceed\n        print(f\"Resources for task {name} exceed the boundaries.\\nCPU: {cpu} (estimate) vs. {self.resource_boundaries.cpu_limit} (boundary)\\nMEM: {mem} (estimated) vs. {self.resource_boundaries.mem_limit} (boundary).\")\n        print(\"Use --optimistic-resources with the runner to proceed anyway.\")\n        exit(1)\n    # if we reach this point, either the resources are within limits or the user opted for an optimistic run, in which case we limit the resources, typically to the specified CPU and memory limits.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "5fdda5b9631786f728bc02ad73109d5267df22f6fc1449732ceedf11db206871": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    self.resources.append(resources)\n        # perform these steps to ensure all related TaskResources share the same Semaphore object, eliminating the need for a lookup\n        if semaphore_string:\n            if semaphore_string not in self.semaphore_dict:\n                self.semaphore_dict[semaphore_string] = Semaphore()\n            resources.semaphore = self.semaphore_dict[semaphore_string]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "0d3f8fcc771e159a2efb51cdcd0494e056a11f5835fafb22b3402bb5b3ce987d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Here are the steps to ensure each TaskResources has a list of associated tasks to avoid extra lookups:\n    if related_tasks_name is not empty:\n        if related_tasks_name is not in self.resources_related_tasks_dict:\n            # the list includes: [valid to be used, list of CPU, list of MEM, list of walltimes for each related task, list of parallel processes on average, list of CPUs taken, list of assigned CPUs, list of tasks completed in the meantime]\n            self.resources_related_tasks_dict[related_tasks_name] = []\n        add resources to self.resources_related_tasks_dict[related_tasks_name]\n        set resources.related_tasks to self.resources_related_tasks_dict[related_tasks_name]\n\ndef add_monitored_resources(self, tid, time_delta_since_start, cpu, mem):\n    self.resources[tid].add(time_delta_since_start, cpu, mem)\n\ndef book(self, tid, nice_value):\n    \"\"\"\n    Reserve the resources for this task with the specified nice value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "f735ca97c1abead3be201e4ddad70f98719578fd6a4588bda7cfb6630ccbc40c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The final nice value is set during the final submission and may differ. This can occur if the nice value was supposed to change but the system doesn't permit it.\n```\nres = self.resources[tid]\n# use the previously assigned nice value from the last resource check\nprevious_nice_value = res.nice_value\n\nif previous_nice_value is None:\n    # this task hasn't been checked before, treating it as backfill\n    actionlogger.warning(\"Task ID %d has never been checked for resources. Treating as backfill\", tid)\n    nice_value = self.nice_backfill\nelif res.nice_value != nice_value:\n    actionlogger.warning(\"Task ID %d was last checked for a different nice value (%d) but is now submitted with (%d).\", tid, res.nice_value, nice_value)\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "64d0bd14673172c3a52e3281a7566dc2bdf55b5a44646a962d040a0cc9c6f597": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    res.nice_value = nice_value\n    res.booked = True\n    if res.semaphore is not None:\n        res.semaphore.lock()\n    if nice_value != self.nice_default:\n        self.n_procs_backfill += 1\n        self.cpu_booked_backfill += res.cpu_assigned\n        self.mem_booked_backfill += res.mem_assigned\n        return\n    self.n_procs += 1\n    self.cpu_booked += res.cpu_assigned\n    self.mem_booked += res.mem_assigned",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "7e644379d2c81a4f8e17c777fcf3a21515c39e4c8096cb4850f113881c83cc3a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def unbook(self, tid):\n    \"\"\"\n    Release the resources allocated to this task.\n    \"\"\"\n    res = self.resources[tid]\n    res.booked = False\n    if self.resource_boundaries.dynamic_resources:\n        res.sample_resources()\n    if res.semaphore is not None:\n        res.semaphore.unlock()\n    if res.nice_value != self.nice_default:\n        self.cpu_booked_backfill -= res.cpu_assigned\n        self.mem_booked_backfill -= res.mem_assigned\n        self.n_procs_backfill -= 1\n        if self.n_procs_backfill <= 0:\n            self.cpu_booked_backfill = 0\n            self.mem_booked_backfill = 0\n        return\n    self.n_procs -= 1\n    self.cpu_booked -= res.cpu_assigned\n    self.mem_booked -= res.mem_assigned\n    if self.n_procs <= 0:\n        self.cpu_booked = 0\n        self.mem_booked = 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "f58ffc9e75499b826929a1a912ca1563651d2e72cdc77c53a61b7a4b16eca0b4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def ok_to_submit(self, tids):\n    \"\"\"\n    This generator yields the tid and nice value tuple from the list of task ids to be verified.\n    \"\"\"\n    tids_copy = tids.copy()\n\n    def ok_to_submit_default(res):\n        \"\"\"\n        Returns the default nice value if the conditions are satisfied, or None otherwise.\n        \"\"\"\n        # check CPU usage\n        okcpu = (self.cpu_booked + res.cpu_assigned <= self.resource_boundaries.cpu_limit)\n        # check MEM usage\n        okmem = (self.mem_booked + res.mem_assigned <= self.resource_boundaries.mem_limit)\n        actionlogger.debug('Condition check --normal-- for ' + str(res.tid) + ':' + res.name + ' CPU ' + str(okcpu) + ' MEM ' + str(okmem))\n        return self.nice_default if (okcpu and okmem) else None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "f872c19376c31f0b17f574facd62e666b37fa48f856bcc97d02c09e11dbdd88e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def ok_to_submit_backfill(res, backfill_cpu_factor=1.5, backfill_mem_factor=1.5):\n    \"\"\"\n    Return the backfill nice value if the conditions are satisfied, otherwise return None\n    \"\"\"\n    if self.n_procs_backfill >= args.n_backfill:\n        return None\n\n    if res.cpu_assigned > 0.9 * self.resource_boundaries.cpu_limit or res.mem_assigned / self.resource_boundaries.cpu_limit >= 1900:\n        return None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "bc9622e32875f062d7f558680a96040b29aaa9b26dce42c61e2fe0caf6f589ea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# evaluate CPU\n    okcpu = (self.cpu_booked_backfill + res.cpu_assigned <= self.resource_boundaries.cpu_limit)\n    okcpu = okcpu and (self.cpu_booked + self.cpu_booked_backfill + res.cpu_assigned <= backfill_cpu_factor * self.resource_boundaries.cpu_limit)\n    # evaluate MEM\n    okmem = (self.mem_booked + self.mem_booked_backfill + res.mem_assigned <= backfill_mem_factor * self.resource_boundaries.mem_limit)\n    actionlogger.debug ('Condition check --backfill-- for  ' + str(res.tid) + ':' + res.name + ' CPU ' + str(okcpu) + ' MEM ' + str(okmem))\n\n    return self.nice_backfill if (okcpu and okmem) else None\n\nif self.n_procs + self.n_procs_backfill >= self.procs_parallel_max:\n    # in this scenario, no actions can be taken\n    return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "63ba39b6828cb1dd6b06acddb3be42e31ebc2ce5fe4a3b13a9b34c943ae43172": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for ok_to_submit_impl, should_break in ((ok_to_submit_default, True), (ok_to_submit_backfill, False)):\n    tid_index = 0\n    while tid_index < len(tids_copy):\n        tid = tids_copy[tid_index]\n        res = self.resources[tid]\n\n        actionlogger.info(\"Setup resources for task %s, cpu: %f, mem: %f\", res.name, res.cpu_assigned, res.mem_assigned)\n        tid_index += 1\n\n        if (res.semaphore is not None and res.semaphore.locked) or res.booked:\n            continue\n\n        nice_value = ok_to_submit_impl(res)\n        if nice_value is not None:\n            # if we receive a non-None nice value, this indicates that the task is ready to be submitted\n            res.nice_value = nice_value\n            # provide the tid and its assigned nice value\n            yield tid, nice_value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "788514fed177b006cd5b3e39686e1d7d99b46b4d2aaee38de858d86c9112447a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "elif should_break:\n    # halt execution if resources required by the subsequent task are insufficient\n    break\n\n\nclass WorkflowExecutor:\n    # Constructor\n    def __init__(self, workflowfile, args, jmax=100):\n        self.args = args\n        self.is_productionmode = args.production_mode == True  # os.getenv(\"ALIEN_PROC_ID\") != None\n        self.workflowfile = workflowfile\n        self.workflowspec = load_json(workflowfile)\n        self.globalinit = self.extract_global_environment(self.workflowspec)  # set up global environment settings\n        for e in self.globalinit['env']:\n            if os.environ.get(e, None) is None:\n                value = self.globalinit['env'][e]\n                actionlogger.info(\"Applying global environment from init section \" + str(e) + \" : \" + str(value))\n                os.environ[e] = str(value)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "14b97ccc99db3e7ea9273fd72cb4ebafea2b0f7e617082d6463a0a6bccf33c3e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# retain only the tasks required to run based on user's filters\n    self.workflowspec = filter_workflow(self.workflowspec, args.target_tasks, args.target_labels)\n\n    if not self.workflowspec['stages']:\n        if args.target_tasks:\n            print('It seems that some of the selected target tasks are missing from the workflow')\n            exit(0)\n        print('The workflow is empty. There is nothing to proceed with')\n        exit(0)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "467988b9b6c9d210ac199d7c57dedb4cc40bc96218fbc654952d602958fd7bf1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create the DAG and calculate task weights\nworkflow = build_dag_properties(self.workflowspec)\nif args.visualize_workflow:\n    draw_workflow(self.workflowspec)\nself.possiblenexttask = workflow['nexttasks']\nself.taskweights = workflow['weights']\nself.topological_orderings = workflow['topological_ordering']\nself.taskuniverse = [ l['name'] for l in self.workflowspec['stages'] ]\n# establish a mapping from task ID to task name\nself.idtotask = [ 0 for _ in self.taskuniverse ]\nself.tasktoid = {}\nfor i, name in enumerate(self.taskuniverse):\n    self.tasktoid[name]=i\n    self.idtotask[i]=name\n\nif args.update_resources:\n    update_resource_estimates(self.workflowspec, args.update_resources)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "333fc35596212ff933202ebc847f23881e6c2cd80b355eb4e7d0ecda9e53c44f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# establish the entity responsible for managing resources...\n    self.resource_manager = ResourceManager(args.cpu_limit, args.mem_limit, args.maxjobs, args.dynamic_resources, args.optimistic_resources)\n    for task in self.workflowspec['stages']:\n        # then, include all initial resource estimates\n        global_task_name = self.get_global_task_name(task[\"name\"])\n        try:\n            cpu_relative = float(task[\"resources\"][\"relative_cpu\"])\n        except TypeError:\n            cpu_relative = 1\n        self.resource_manager.add_task_resources(task[\"name\"], global_task_name, float(task[\"resources\"][\"cpu\"]), cpu_relative, float(task[\"resources\"][\"mem\"]), task.get(\"semaphore\"))\n\n    self.procstatus = { tid: 'ToDo' for tid in range(len(self.workflowspec['stages'])) }\n    self.taskneeds = { t: set(self.getallrequirements(t)) for t in self.taskuniverse }\n    self.stoponfailure = not args.keep_going\n    print(\"Stop on failure \", self.stoponfailure)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "97672a7b37c8d5b8d3601b9d5ea316ec41af61f3c58a55dbf2e518db4556643d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "=document=\n    self.scheduling_iteration = 0 # track the number of attempts to schedule new tasks\n      self.process_list = []  # list of currently active processes with standard priority\n      self.backfill_process_list = [] # list of currently active processes with low backfill priority (uncertain if necessary)\n      self.pid_to_psutilsproc = {}  # cache of psutil processes for resource monitoring\n      self.pid_to_files = {} # can automatically detect which files are produced by each task (to a certain extent)\n      self.pid_to_connections = {} # can automatically detect which connections are opened by each task (to a certain extent)\n      signal.signal(signal.SIGINT, self.SIGHandler)\n      signal.siginterrupt(signal.SIGINT, False)\n      self.internalmonitorcounter = 0 # internal use\n      self.internalmonitorid = 0 # internal use\n      self.tids_marked_toretry = [] # sometimes tasks may need to be retried (if they were \"unlucky\") and they are listed here",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "0e683f74ccad644be9cd705d13bf980cf72fb6242f0dad70bbe74737ad141d3e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "self.retry_counter = [0 for tid in range(len(self.taskuniverse))] # we monitor the number of retries for each task\nself.task_retries = [self.workflowspec['stages'][tid].get('retry_count', 0) for tid in range(len(self.taskuniverse))] # retrieves the specific \"retry\" count for each task from the JSON specification",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "6904c23bc79b8a48d83e06442da13d999f7cb9bdaf11d546e25e198dc8f0b20a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    self.alternative_envs = {} # a dictionary to map task IDs to alternative software environments (to be applied per task)\n      # initialize alternative software environments\n      self.init_alternative_software_environments()\n\n    def SIGHandler(self, signum, frame):\n       \"\"\"\n       essentially forcing the shutdown of all child processes\n       \"\"\"\n       actionlogger.info(\"Signal \" + str(signum) + \" received\")\n       try:\n           procs = psutil.Process().children(recursive=True)\n       except (psutil.NoSuchProcess):\n           pass\n       except (psutil.AccessDenied, PermissionError):\n           procs = getChildProcs(os.getpid())\n\n       for p in procs:\n           actionlogger.info(\"Terminating \" + str(p))\n           try:\n             p.terminate()\n           except (psutil.NoSuchProcess, psutil.AccessDenied):\n             pass",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "2be859cc73a51d4b3cad9b4e6a4d3597baae2fe7ec42a4e8a8a906e80ec5f579": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "_, alive = psutil.wait_procs(procs, timeout=3)\nfor p in alive:\n    try:\n        actionlogger.info(\"Terminating \" + str(p))\n        p.terminate()\n    except (psutil.NoSuchProcess, psutil.AccessDenied):\n        pass\n\nexit(1)\n\ndef extract_initial_environment(workflowspec):\n    \"\"\"\n    Verifies if the workflow has a specific initial task\n    that sets a global environment. Extracts the environment details and removes them from workflowspec.\n    \"\"\"\n    init_index = 0 # this must be the first task in the workflow\n    globalenv = {}\n    initcmd = None\n    if workflowspec['stages'][init_index]['name'] == '__global_init_task__':\n        env = workflowspec['stages'][init_index].get('env', None)\n        if env is not None:\n            globalenv = { e : env[e] for e in env }\n        cmd = workflowspec['stages'][init_index].get('cmd', None)\n        if cmd != 'NO-COMMAND':\n            initcmd = cmd",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "ea1e4941558aa3f344ca717b30e0d8ebfc161bef5b61a60d42e088809f5cae8b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n        del workflowspec['stages'][init_index]\n\n        return {\"env\" : globalenv, \"cmd\" : initcmd }\n\n    def execute_globalinit_cmd(self, cmd):\n        actionlogger.info(\"Executing global initialization command \" + str(cmd))\n        # run the global initialization command (think of cleanup or setup tasks that need to be performed in any case)\n        p = subprocess.Popen(['/bin/bash','-c', cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        stdout, stderr = p.communicate()\n\n        # verify if the command was successful (return code 0)\n        if p.returncode == 0:\n            actionlogger.info(stdout.decode())\n        else:\n            # this should be treated as an error\n            actionlogger.error(\"Error executing global initialization function\")\n            return False\n        return True\n\n    def get_global_task_name(self, name):\n        \"\"\"\n        Obtain the global task name\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "beedf9cf7427af8261d88b7c9e7da6b10a2b1963836f0af6b0bc6cc2fdde4eb1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def get_global_task_name(self, name):\n        \"\"\"\n        Obtain the global task name\n\n        Tasks are considered related if only the suffix _<i> differs\n        \"\"\"\n        tokens = name.split(\"_\")\n        try:\n            int(tokens[-1])\n            return \"_\".join(tokens[:-1])\n        except ValueError:\n            pass\n        return name\n\n    def getallrequirements(self, task_name):\n        \"\"\"\n        Retrieve all requirements for a task based on its name\n        \"\"\"\n        l = []\n        for required_task_name in self.workflowspec['stages'][self.tasktoid[task_name]]['needs']:\n            l.append(required_task_name)\n            l += self.getallrequirements(required_task_name)\n        return l",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "d8f9e48e8e8115de2874d74e7eef8547d528cade3813b1c7243fb17df9c83a84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def get_logfile(self, tid):\n        \"\"\"\n        The O2 taskwrapper records the task's stdout and stderr in a logfile named <task>.log.\n        Retrieve the precise path of this logfile using the task ID.\n        \"\"\"\n        # calculates the name of the logfile for this specific task\n        name = self.workflowspec['stages'][tid]['name']\n        workdir = self.workflowspec['stages'][tid]['cwd']\n        return os.path.join(workdir, f\"{name}.log\")\n\n    def get_done_filename(self, tid):\n        \"\"\"\n        After a task successfully completes, the O2 taskwrapper creates a file named <task>.log_done.\n        Obtain the exact path of this file using the task ID.\n        \"\"\"\n        return f\"{self.get_logfile(tid)}_done\"\n\n    def get_resources_filename(self, tid):\n        \"\"\"\n        Upon completion, the O2 taskwrapper generates a file named <task>.log_time.\n        Retrieve the exact path of this file using the task ID.\n        \"\"\"\n        return f\"{self.get_logfile(tid)}_time\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "85ab4f484b2cae3fd3cc91d4ff808f78e95a2eceb996f8fdcbf535dd6c87cbca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# resets the done status for tasks that need to be re-run\n    def remove_done_flag(self, listoftaskids):\n       \"\"\"\n       Remove <task>.log_done files for the specified task IDs\n       \"\"\"\n       for tid in listoftaskids:\n          done_filename = self.get_done_filename(tid)\n          task_name=self.workflowspec['stages'][tid]['name']\n          if args.dry_run:\n              print (\"Would reset task \" + task_name + \" to be re-run\")\n          else:\n              print (\"Resetting task \" + task_name + \" to be re-run\")\n              if os.path.exists(done_filename) and os.path.isfile(done_filename):\n                  os.remove(done_filename)\n\n    # launches a task as a subprocess and logs the Popen instance\n    def submit(self, tid, nice):\n      \"\"\"\n      Submit a task for execution\n      \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "e824db45fd5f65746db07495d9b987b236f7b5bc58c13ae37cb984ebf37aaa14": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "1. if necessary, create the working directory if it doesn't already exist\n2. mark the task as running by updating the lookup structures\n3. configure the environment if specified for the task\n4. build a psutil.Process from the command line\n4.1 modify the priority of that process if specified\n5. return the psutil.Process object\n\"\"\"\nactionlogger.debug(\"Submitting task \" + str(self.idtotask[tid]) + \" with niceness \" + str(nice))\nc = self.workflowspec['stages'][tid]['cmd']\nworkdir = self.workflowspec['stages'][tid]['cwd']\nif workdir:\n    if os.path.exists(workdir) and not os.path.isdir(workdir):\n        actionlogger.error('Cannot create working directory ... another resource already exists there')\n        return None\n\n    if not os.path.isdir(workdir):\n        os.makedirs(workdir)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "7f99257c070d3d7467cd92ada0f02800c46032d20b44cbd4e22039f1baa0eb1f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the directory does not exist in workdir:\n                  create it using os.makedirs()\n\n      set self.procstatus[tid] to 'Running'\n      if a dry_run is specified:\n          construct drycommand as \"echo \\( \" + str(self.scheduling_iteration) + \" : would do \" + str(self.workflowspec['stages'][tid]['name']) + \"\\)\"\n          return subprocess.Popen(['/bin/bash','-c',drycommand], working_directory=workdir)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "9029b74a7758920d0e263f0850d1c41d44699a8a807eb6b9f99da76de0216207": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    taskenv = os.environ.copy()\n      # apply specific (non-default) software version, if available\n      # (this was configured earlier)\n      alternative_env = self.alternative_envs.get(tid, None)\n      if alternative_env is not None and len(alternative_env) > 0:\n          actionlogger.info('Applying alternative software environment to task ' + self.idtotask[tid])\n          if alternative_env.get('TERM') is not None:\n              # the environment is a complete environment\n              taskenv = {}\n              taskenv = alternative_env\n          else:\n            for entry in alternative_env:\n              # overwrite existing values\n              taskenv[entry] = alternative_env[entry]\n\n      # add task-specific environment settings\n      if self.workflowspec['stages'][tid].get('env') != None:\n          taskenv.update(self.workflowspec['stages'][tid]['env'])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "8a8e98750ce919ed60804033534de10765788f53faaafacc8c66aad921e138dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# envfilename = \"taskenv_\" + str(tid) + \".json\"\n      # with open(envfilename, \"w\") as file:\n      #    json.dump(taskenv, file, indent=2)\n\n      p = psutil.Popen(['/bin/bash','-c',c], cwd=workdir, env=taskenv)\n      try:\n          p.nice(nice)\n      except (psutil.NoSuchProcess, psutil.AccessDenied):\n          actionlogger.error('Failed to set nice value of ' + str(p.pid) + ' to ' + str(nice))\n\n      return p\n\n    def ok_to_skip(self, tid):\n        \"\"\"\n        Determine if the task can be skipped based on the existence of <task>.log_done\n        \"\"\"\n        done_filename = self.get_done_filename(tid)\n        if os.path.exists(done_filename) and os.path.isfile(done_filename):\n          return True\n        return False\n\n    def try_job_from_candidates(self, taskcandidates, finished):\n       \"\"\"\n       Attempt to schedule the next tasks\n       \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "fea525b19947704361b16594993861a0ef610562eb6f6ccbf4024637bc1b0476": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\nArgs:\n    taskcandidates: list\n        list of potential tasks to be submitted\n    finished: list\n        empty list that will be populated with IDs of tasks that were completed during this iteration\n\"\"\"\n\nself.scheduling_iteration = self.scheduling_iteration + 1\n\n# immediately remove \"completed or skippable\" tasks\nfor tid in taskcandidates.copy():  # <--- the copy is crucial !! otherwise this loop does not function as intended\n    if self.ok_to_skip(tid):\n        finished.append(tid)\n        taskcandidates.remove(tid)\n        actionlogger.info(\"Skipping task \" + str(self.idtotask[tid]))\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "fc791a2ea9a5dd2e53001f84f46df6069f584c04e543897266e8f75d16414c4a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# if tasks_skipped:\n   # return # ---> we return early to maintain job order (the next candidate should be the daughters of skipped jobs)\n   # retrieve task ID and suggested niceness from the generator\n   for (tid, nice_value) in self.resource_manager.ok_to_submit(taskcandidates):\n      actionlogger.debug (\"attempting to submit \" + str(tid) + ':' + str(self.idtotask[tid]))\n      if p := self.submit(tid, nice_value):\n        # re-set the niceness explicitly from the process, as the submit operation might not have changed it\n        # inform the ResourceManager of the final niceness\n        self.resource_manager.book(tid, p.nice())\n        self.process_list.append((tid,p))\n        taskcandidates.remove(tid)\n        # short delay\n        time.sleep(0.1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "c6377b459eb0c122fe867416a5be1b62fe889681df4420a49af17bf31a1c81c5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def stop_pipeline_and_exit(self, process_list):\n    # terminate all remaining jobs\n    for p in process_list:\n       p[1].terminate()\n\n    exit(1)\n\n\ndef monitor(self, process_list):\n    \"\"\"\n    Iterate through all active tasks and retrieve their current resource usage.\n\n    Resource usage is aggregated for each task and its offspring.\n\n    Pass the CPU, PSS, USS, niceness, and current time to the metriclogger.\n\n    Issue a warning if the total PSS surpasses the allocated memory limit.\n    \"\"\"\n    self.internalmonitorcounter+=1\n    if self.internalmonitorcounter % 5 != 0:\n        return\n\n    self.internalmonitorid+=1\n\n    globalCPU=0.\n    globalPSS=0.\n    resources_per_task = {}\n\n    for tid, proc in process_list:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "afe4f26e2d3c5c309aea630cd088397c04bf629ff777e77fff5d16ed8b3b04d4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for tid, proc in process_list:\n\n            # proc is a Popen object\n            pid = proc.pid\n            if self.pid_to_files.get(pid) is None:\n                self.pid_to_files[pid] = set()\n                self.pid_to_connections[pid] = set()\n            try:\n                psutilProcs = [proc]\n                # utilize psutil for CPU measurement\n                psutilProcs += proc.children(recursive=True)\n            except psutil.NoSuchProcess:\n                continue\n\n            except (psutil.AccessDenied, PermissionError):\n                psutilProcs += getChildProcs(pid)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "f1d4d186e207f9e6903f6ff2900219b11ba6ed0a9c8a073e63a6f85c7a76ec64": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# accumulate total metrics (CPU, memory)\n            totalCPU = 0.\n            totalPSS = 0.\n            totalSWAP = 0.\n            totalUSS = 0.\n            for p in psutilProcs:\n                \"\"\"\n                try:\n                    for f in p.open_files():\n                        self.pid_to_files[pid].add(str(f.path)+'_'+str(f.mode))\n                    for f in p.connections(kind=\"all\"):\n                        remote=f.raddr\n                        if remote==None:\n                            remote='none'\n                        self.pid_to_connections[pid].add(str(f.type)+\"_\"+str(f.laddr)+\"_\"+str(remote))\n                except Exception:\n                    pass\n                \"\"\"\n                thispss=0\n                thisuss=0\n                # MEMORY part\n                try:\n                    fullmem=p.memory_full_info()\n                    thispss=getattr(fullmem,'pss',0) #<-- pss not available on MacOS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "33d6bc1bff16e446fc403b4347909e515e84bf57b5e7e5640bae100030ab8f97": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    thispss = getattr(fullmem, 'pss', 0)  # <--- pss not available on MacOS\n    totalPSS += thispss\n    totalSWAP += fullmem.swap\n    thisuss = fullmem.uss\n    totalUSS += thisuss\nexcept (psutil.NoSuchProcess, psutil.AccessDenied):\n    pass",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "5e180e463f597bba8a737e31383c77addb77459531dc3c402294ca1f47220cb4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# CPU part\n# Retrieve or add a process\ncachedproc = self.pid_to_psutilsproc.get(p.pid)\nif cachedproc is not None:\n    try:\n        thiscpu = cachedproc.cpu_percent(interval=None)\n    except (psutil.NoSuchProcess, psutil.AccessDenied):\n        thiscpu = 0.\n    totalCPU += thiscpu\n    # thisresource = {'iter':self.internalmonitorid, 'pid': p.pid, 'cpu':thiscpu, 'uss':thisuss/1024./1024., 'pss':thispss/1024./1024.}\n    # metriclogger.info(thisresource)\nelse:\n    self.pid_to_psutilsproc[p.pid] = p\n    try:\n        self.pid_to_psutilsproc[p.pid].cpu_percent()\n    except (psutil.NoSuchProcess, psutil.AccessDenied):\n        pass",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "cbe4b036432adfbf811cd773e23f914b099a17177a079ec2b9e2f1b30cd02ce1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "time_delta = int((time.perf_counter() - self.start_time) * 1000)\ntotalUSS /= 1024 / 1024\ntotalPSS /= 1024 / 1024\nnice_value = proc.nice()\nresources_per_task[tid]={'iter':self.internalmonitorid, 'name':self.idtotask[tid], 'cpu':totalCPU, 'uss':totalUSS, 'pss':totalPSS, 'nice':nice_value, 'swap':totalSWAP, 'label':self.workflowspec['stages'][tid]['labels']}\nself.resource_manager.add_monitored_resources(tid, time_delta, totalCPU / 100, totalPSS)\nif nice_value == self.resource_manager.nice_default:\n    globalCPU += totalCPU\n    globalPSS += totalPSS\n\nmetriclogger.info(resources_per_task[tid])\nsend_webhook(self.args.webhook, resources_per_task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "62dcaa3e45aa33edf5107c12fa05a7c87006905740f06e92aed4fe2e2fdf050f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if globalPSS exceeds self.resource_manager.resource_boundaries.mem_limit:\n            metriclogger.info('*** MEMORY LIMIT PASSED !! ***')\n            # --> This could be utilized for corrective actions like terminating ongoing jobs\n            # (or more effectively, hibernating them)\n\n    def waitforany(self, process_list, finished, failingtasks):\n       \"\"\"\n       Iterate through all submitted tasks and verify their completion status.\n\n       1. If the process is still running, take no action.\n       2. If the process has completed, retrieve its return value, update the finished and failingtasks lists.\n       2.1 Free the utilized resources.\n       2.2 Release the taken resources and hand them over to the ResourceManager.\n       \"\"\"\n       failuredetected = False\n       failingpids = []\n       if len(process_list) == 0:\n           return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "122a6121a0f06a1aa2c53f6b08aeb8c006580aecc063b2dacfb8a21a5ac714dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for p in list(process_list):\n    pid = p[1].pid\n    tid = p[0]  # the task id of this process\n    returncode = 0\n    if not self.args.dry_run:\n        returncode = p[1].poll()\n    if returncode is not None:\n        actionlogger.info('Task ' + str(pid) + ' ' + str(tid)+':'+str(self.idtotask[tid]) + ' completed with status ' + str(returncode))\n        # account for released resources\n        self.resource_manager.unbook(tid)\n        self.procstatus[tid]='Completed'\n        finished.append(tid)\n        #self.validate_resources_running(tid)\n        process_list.remove(p)\n        if returncode != 0:\n            print (str(self.idtotask[tid]) + ' failed ... checking for resubmission')\n            # we check if this is due to an \"unlucky\" circumstance that could be resolved by resubmitting",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "b8b8de1138f7350904ae5d5794d6ec20956ba2e6c9a1cfc3d30addc5d942f933": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the task is worth retrying (tid) and either the retry counter is less than the specified retry limit or the retry counter is less than the task-specific retry count:\n    print ('Task ' + str(self.idtotask[tid]) + ' will be retried')\n    actionlogger.info ('Task ' + str(self.idtotask[tid]) + ' failed but is marked for retry')\n    self.tids_marked_toretry.append(tid)\n    self.retry_counter[tid] += 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "77410b32c9d3507303a7a94a8ae95326017eb9566f82913049263eff93384754": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "else:\n    failuredetected = True\n    failingpids.append(pid)\n    failingtasks.append(tid)\n\nif failuredetected and self.stoponfailure:\n    actionlogger.info('Stopping pipeline due to failure in stages with PID ' + str(failingpids))\n    # self.analyse_files_and_connections()\n    if self.args.stdout_on_failure:\n        self.cat_logfiles_tostdout(failingtasks)\n    self.send_checkpoint(failingtasks, self.args.checkpoint_on_failure)\n    self.stop_pipeline_and_exit(process_list)\n\n# an empty finished list means we need to wait\nreturn len(finished)==0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "1d632bf95bccc17bf305faa807e24a8fd2a7c40b99d6635b9aaf815813947af9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# empty finished means we need to wait more\n    return len(finished)==0\n\ndef is_worth_retrying(self, tid):\n    # This function checks for specific signatures in logfiles that suggest a retry might be successful.\n    # Ideally, this should be customizable by the user, allowing them to define a lambda function or a regex. For now, we have a hardcoded list.\n    logfile = self.get_logfile(tid)\n\n    return True #! --> currently, we retry tasks a few times\n\n    # 1) ZMQ_EVENT + interrupted system calls (DPL bug during shutdown)\n    # It's unclear if using `grep` is more efficient than native Python text search ...\n    # status = os.system('grep \"failed setting ZMQ_EVENTS\" ' + logfile + ' &> /dev/null')\n    # if os.WEXITSTATUS(status) == 0:\n    #   return True\n\n    # return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "7d32b0443592503a606df763914a95f097c984123051ba13895c36fa889e9230": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # return False\n\n\n    def cat_logfiles_tostdout(self, taskids):\n        # In the event of errors, we can display the logfiles for each taskname\n        # directly on the standard output. Assuming the taskname corresponds to a \"taskname.log\" file.\n        for tid in taskids:\n            logfile = self.get_logfile(tid)\n            if os.path.exists(logfile):\n                print(' ----> START OF LOGFILE ', logfile, ' -----')\n                os.system('cat ' + logfile)\n                print(' <---- END OF LOGFILE ', logfile, ' -----')\n\n    def send_checkpoint(self, taskids, location):\n        # Creates a tarball that includes all base directory files (timeframe-independent) and directories containing corrupted timeframes.\n        # Then, it copies this tarball to a specified ALIEN location. This is not a core function, but rather a tool for managing error conditions on the GRID.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "1aa2a028a1e5c4e5d3da97b0a56c258e39e1d492a96870c378f45e9351089398": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def get_tar_command(dir='./', flags='cf', findtype='f', filename='checkpoint.tar'):\n    return 'find ' + str(dir) + ' -maxdepth 1 -type ' + str(findtype) + ' -print0 | xargs -0 tar ' + str(flags) + ' ' + str(filename)\n\nif location is not None:\n    print('Creating a failure checkpoint')\n    # let's determine a filename based on ALIEN_PROC_ID, hostname, and PID\n\n    aliprocid = os.environ.get('ALIEN_PROC_ID')\n    if aliprocid is None:\n        aliprocid = 0\n\n    fn = 'pipeline_checkpoint_ALIENPROC' + str(aliprocid) + '_PID' + str(os.getpid()) + '_HOST' + socket.gethostname() + '.tar'\n    actionlogger.info(\"Checkpointing to file \" + fn)\n    tarcommand = get_tar_command(filename=fn)\n    actionlogger.info(\"Tarring \" + tarcommand)\n\n    # generate a README file with instructions on using the checkpoint\n    readmefile = open('README_CHECKPOINT_PID' + str(os.getpid()) + '.txt', 'w')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "31554524cf483dc8661b1bb8b0b0346c4c2f37f993b47b598a0642986e275762": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for tid in taskids:\n             taskspec = self.workflowspec['stages'][tid]\n             name = taskspec['name']\n             readmefile.write('A checkpoint was created due to a failure in task ' + name + '\\n')\n             readmefile.write('To reproduce using this checkpoint, follow these steps:\\n')\n             readmefile.write('a) Set up the necessary O2sim environment with alienv\\n')\n             readmefile.write('b) Execute: $O2DPG_ROOT/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ' + name + '$ --retry-on-failure 0\\n')\n           readmefile.close()\n\n           # starting with the base directory\n           os.system(tarcommand)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "ca0cd920ad89c0cfaa6fef2d91830b25cfbf684beac63baf32f4cf81aec3f9de": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Initially, the base directory is handled\nos.system(tarcommand)\n\n# Subsequently, we append elements for the specific timeframes IDs if applicable\nfor tid in taskids:\n    taskspec = self.workflowspec['stages'][tid]\n    directory = taskspec['cwd']\n    if directory != \"./\":\n        tarcommand = get_tar_command(dir=directory, flags='rf', filename=fn)\n        actionlogger.info(\"Tar command is \" + tarcommand)\n        os.system(tarcommand)\n        # Similarly for symbolic links\n        tarcommand = get_tar_command(dir=directory, flags='rf', findtype='l', filename=fn)\n        actionlogger.info(\"Tar command is \" + tarcommand)\n        os.system(tarcommand)\n\n# Add file:/// to indicate a local file\nfn = \"file://\" + fn\nactionlogger.info(\"Local checkpoint file is \" + fn)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "b86f71fc9e08d0882b7c00712d417a34eb3cbc1d971b1fd6131178b6e9f40168": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The location must be an alien path such as alien:///foo/bar/\n           copycommand='alien.py cp ' + fn + ' ' + str(location) + '@disk:1'\n           actionlogger.info(\"Copying to alien \" + copycommand)\n           os.system(copycommand)\n\ndef initialize_alternative_software_environments(self):\n    \"\"\"\n    Initializes alternative software environments for specific tasks if there\n    is an annotation in the workflow specification.\n    \"\"\"\n\n    environment_cache = {}\n    # Iterate through all tasks and set up the environment\n    for taskid in range(len(self.workflowspec['stages'])):\n        packagestr = self.workflowspec['stages'][taskid].get(\"alternative_alienv_package\")\n        if packagestr is None:\n            continue\n\n        if environment_cache.get(packagestr) is None:\n            environment_cache[packagestr] = get_alienv_software_environment(packagestr)\n\n        self.alternative_envs[taskid] = environment_cache[packagestr]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "6b946cdf949e4eb0af88ada77910a26a1f238bad66dd7270f82a78319a11211b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def analyse_files_and_connections(self):\n    for process_id, files in self.pid_to_files.items():\n        for file in files:\n            print(\"F\" + str(file) + \" : \" + str(process_id))\n    for process_id, connections in self.pid_to_connections.items():\n        for connection in connections:\n            print(\"C\" + str(connection) + \" : \" + str(process_id))\n        #print(str(process_id) + \" CONS \" + str(connection))\n    try:\n        # check for intersections\n        for p1, files1 in self.pid_to_files.items():\n            for p2, files2 in self.pid_to_files.items():\n                if p1 != p2:\n                    if isinstance(files1, set) and isinstance(files2, set):\n                        if len(files1) > 0 and len(files2) > 0:\n                            try:\n                                inters = files1.intersection(files2)\n                            except Exception:\n                                print('Exception during intersect inner')\n                                pass\n                            if len(inters) > 0:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "b12ce078c32007708e0a9bcfafc884cd8cb0581947da9065ac2e0e58b98e1c54": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if len(inters) > 0:\n        print('FILE Intersection ' + str(p1) + ' ' + str(p2) + ' ' + str(inters))\n    # check for intersections\n    for p1, s1 in self.pid_to_connections.items():\n        for p2, s2 in self.pid_to_connections.items():\n            if p1 != p2:\n                if type(s1) is set and type(s2) is set:\n                    if len(s1) > 0 and len(s2) > 0:\n                        try:\n                            inters = s1.intersection(s2)\n                        except Exception:\n                            print('Exception during intersect inner')\n                            pass\n                        if len(inters) > 0:\n                            print('CON Intersection ' + str(p1) + ' ' + str(p2) + ' ' + str(inters))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "74ae7a8020aa5bcbbbf81a456d02623293531afe42f1b2e4f7defebdb7c58101": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verify for overlaps\n            #for p1, s1 in self.pid_to_files.items():\n            #    for p2, s2 in self.pid_to_files.items():\n            #        if p1 != p2 and len(s1.intersection(s2)) != 0:\n            #            print('Overlap detected between files ' + str(p1) + ' ' + str(p2) + ' ' + str(s1.intersection(s2)))\n        except Exception as e:\n            exc_type, exc_obj, exc_tb = sys.exc_info()\n            fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]\n            print(exc_type, fname, exc_tb.tb_lineno)\n            print('Error during overlap check')\n            pass\n\n    def check_valid_candidate(self, candid, finishedtasks):\n        if self.procstatus[candid] != 'ToDo':\n            return False\n        required_tasks = set([self.tasktoid[t] for t in self.taskneeds[self.idtotask[candid]]])\n        if set(finishedtasks).intersection(required_tasks) == required_tasks:\n            return True\n        return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "10e39350c32db542a40fe4a53a2deea5e15c8a6050be71cf7d7255a410275aa7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def generate_code_for_task(self, tid, lines):\n    actionlogger.debug(\"Submitting task \" + str(self.idtotask[tid]))\n    taskspec = self.workflowspec['stages'][tid]\n    command = taskspec['cmd']\n    working_directory = taskspec['cwd']\n    environment = taskspec.get('env')\n    # typically:\n    # create directory if it doesn't exist\n    lines.append('[ ! -d ' + working_directory + ' ] && mkdir ' + working_directory + '\\n')\n    # change directory\n    lines.append('cd ' + working_directory + '\\n')\n    # set local environment variables\n    if environment:\n        for key, value in environment.items():\n            lines.append('export ' + key + '=' + str(value) + '\\n')\n    # execute command\n    lines.append(command + '\\n')\n    # unset local environment variables\n    if environment:\n        for key, value in environment.items():\n            lines.append('unset ' + key + '\\n')\n\n    # return to previous directory\n    lines.append('cd $OLDPWD\\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "d02debc62a74491ecd2565548b0609e8e6c262488ab2ba50dd8b9fb395a1b8a5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# navigate back\n    lines.append('cd $OLDPWD\\n')\n\n\n# generate a standalone bash script for the workflow\n    def generate_script(self, filename):\n        # select the initial task order\n        taskorder = self.topological_orderings[0]\n        outF = open(filename, \"w\")\n\n        lines=[]\n        # header\n        lines.append('#!/usr/bin/env bash\\n')\n        lines.append('#THIS FILE IS AUTOGENERATED\\n')\n        lines.append('export JOBUTILS_SKIPDONE=ON\\n')\n\n        # document the global environment settings\n        # which include the workflow's initialization\n        lines.append('#-- GLOBAL INIT SECTION FROM WORKFLOW --\\n')\n        for e in self.globalinit['env']:\n            lines.append('export ' + str(e) + '=' + str(self.globalinit['env'][e]) + '\\n')\n        lines.append('#-- TASKS FROM WORKFLOW --\\n')\n        for tid in taskorder:\n            print ('Processing task ' + self.idtotask[tid])\n            self.emit_code_for_task(tid, lines)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "5d73571f6961703de35a4afcf87cb9fb831c4af15736fb1dde8eb3f36ce0be28": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    outF.writelines(lines)\n    outF.close()\n\n    def production_endoftask_hook(self, tid):\n        # This function runs at the end of a successful task, designed for GRID productions.\n        # Currently, it archives log files, done files, and time files from jobutils.\n        # In the future, it could perform more generic tasks such as dynamic cleanup of intermediate files.\n        # Special attention is needed with the continue feature as `_done` files are stored elsewhere now.\n        actionlogger.info(\"Cleaning up log files for task \" + str(tid))\n        logf = self.get_logfile(tid)\n        donef = self.get_done_filename(tid)\n        timef = logf + \"_time\"\n\n        # Add files to the tar archive\n        tf = tarfile.open(name=\"pipeline_log_archive.log.tar\", mode='a')\n        if tf is not None:\n            tf.add(logf)\n            tf.add(donef)\n            tf.add(timef)\n            tf.close()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "56cbf7f77b21dba6fcdcf7c28a5c8bad7700897281591d4dd06725979ea81efd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# remove original file\n          os.remove(logf)\n          os.remove(donef)\n          os.remove(timef)\n\n    # print error message when no progress can be made\n    def noprogress_errormsg(self):\n        # TODO: instead of repeating this, link to the documentation for further details.\n        msg = \"\"\"Scheduler runtime error: The scheduler is unable to proceed even though there is a non-empty candidate set.\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "65483f68df68323e5721e8d31d50b11ffd369dbd5d46b89f964c2008e7300ab5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Explanation: This usually occurs when the estimated resource needs for certain tasks in the workflow surpass the available CPU cores or memory (either explicitly or implicitly set using the --cpu-limit and --mem-limit options). It is often observed on laptops with ≤16GB of RAM if a task requires approximately 16GB. To address this, one can instruct the scheduler to use a slightly higher memory limit with a specific --mem-limit option (for example, `--mem-limit 20000` to allocate 20GB). This adjustment may be effective if the actual resource usage of the tasks is lower than anticipated (due to running smaller test cases).",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "5d1d30dba0d40b0125e76c99aed8857c54e288056c7f03a5874c2b01f28a2289": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Additionally, it could be beneficial to run the workflow without the resource-aware, dynamic scheduler.\nThis can be achieved by converting the JSON workflow into a linearized shell script and directly executing it.\nTo do this, use the `--produce-script myscript.sh` option.\n\"\"\"\n        print (msg, file=sys.stderr)\n\n    def execute(self):\n        self.start_time = time.perf_counter()\n        psutil.cpu_percent(interval=None)\n        os.environ['JOBUTILS_SKIPDONE'] = \"ON\"\n        errorencountered = False\n\n        def speedup_ROOT_Init():\n               \"\"\"initialize some environment variables that speed up ROOT initialization\n               and prevent ROOT from spawning numerous short-lived child processes\"\"\"\n\n               # only perform this on Linux\n               if platform.system() != 'Linux':\n                  return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "502422db761993b8e5136416c4f783c615bdb092f2d34f8975e49c1c72c79453": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if os.environ.get('ROOT_LDSYSPATH') != None and os.environ.get('ROOT_CPPSYSINCL') != None:\n                  # do nothing if already defined\n                  return\n\n               # a) the PATH for system libraries\n               # search taken from ROOT TUnixSystem\n               cmd='LD_DEBUG=libs LD_PRELOAD=DOESNOTEXIST ls /tmp/DOESNOTEXIST 2>&1 | grep -m 1 \"system search path\" | sed \\'s/.*=//g\\' | awk \\'//{print $1}\\''\n               proc = subprocess.Popen([cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\n               libpath, err = proc.communicate()\n               if not args.no_rootinit_speedup:\n                  print(\"setting up ROOT system\")\n                  os.environ['ROOT_LDSYSPATH'] = libpath.decode()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "14d1efb97ff0bc8bed5b77cfe8c2a20ce5dfa43c0ce1d380dc7affd3ae1ab1f2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# b) the PATH for compiler includes needed by Cling\ncmd = \"LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n '/^#include/,${/^ \\\\/.*++/{p}}'\"\nproc = subprocess.Popen([cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\nincpath, err = proc.communicate()\nincpaths = [ line.lstrip() for line in incpath.decode().splitlines() ]\njoined = ':'.join(incpaths)\nif not args.no_rootinit_speedup:\n    actionlogger.info(\"Determined ROOT_CPPSYSINCL=\" + joined)\n    os.environ['ROOT_CPPSYSINCL'] = joined\n\nspeedup_ROOT_Init()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "062561fb3497e1f8c1dca02a1b0a7ab86dd418ceeaa68f4f6126bc18a8adc9b2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "speedup_ROOT_Init()\n\n    # we create a \"tmp\" directory here\n    # for temporary files such as sockets (especially for DPL FAIR-MQ sockets)\n    # this might not be necessary if running inside a Docker/Singularity container\n    if not os.path.isdir(\"./.tmp\"):\n      os.mkdir(\"./.tmp\")\n    if os.environ.get('FAIRMQ_IPC_PREFIX') is None:\n      socketpath = os.getcwd() + \"/.tmp\"\n      actionlogger.info(\"Setting FAIRMQ socket path to \" + socketpath)\n      os.environ['FAIRMQ_IPC_PREFIX'] = socketpath\n\n    # perform initial setup tasks\n    if args.list_tasks:\n      print('List of tasks in this workflow:')\n      for i, t in enumerate(self.workflowspec['stages'], 0):\n        print(t['name'] + '  (' + str(t['labels']) + ')' + ' ToDo: ' + str(not self.ok_to_skip(i)))\n      exit(0)\n\n    if args.produce_script != None:\n      self.produce_script(args.produce_script)\n      exit(0)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "00c087061189c96cba2fa6944c2fafca66f3accb973166af85cff8363380571b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# carry out the user-defined global initialization command for this workflow\n    globalinitcmd = self.globalinit.get(\"cmd\", None)\n    if globalinitcmd is not None:\n       if not self.execute_globalinit_cmd(globalinitcmd):\n          exit (1)\n\n    if args.rerun_from:\n      reruntaskfound=False\n      for task in self.workflowspec['stages']:\n          taskname=task['name']\n          if re.match(args.rerun_from, taskname):\n            reruntaskfound=True\n            taskid=self.tasktoid[taskname]\n            self.remove_done_flag(find_all_dependent_tasks(self.possiblenexttask, taskid))\n      if not reruntaskfound:\n          print('No task matching ' + args.rerun_from + ' found; will not proceed ')\n          exit (1)\n\n    # *************************\n    # main control loop\n    # *************************\n    candidates = [ tid for tid in self.possiblenexttask[-1] ]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "9ee00b4d43ab41806b4f2f046a78226366134534baa2d192a734cbbe41a34512": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    self.process_list=[] # list of tuples containing node IDs and Popen subprocess instances\n\n        finishedtasks=[] # global list tracking completed tasks\n\n        try:\n\n            while True:\n                # arrange candidate list based on task weights\n                candidates = [ (tid, self.taskweights[tid]) for tid in candidates ]\n                candidates.sort(key=lambda tup: (tup[1][0],-tup[1][1])) # prioritize tasks with smaller weights and matching timeframes, then prioritize important tasks within the same timeframe\n                # eliminate weights from the list\n                candidates = [ tid for tid,_ in candidates ]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "a5d0a86a586b52c3cb84ce698742b9a721f9b689322062a6a97c62397b0a562f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "finished = []  # --> to account for finished tasks that are already done or skipped\nactionlogger.debug('Sorted current candidates: ' + str([(c, self.idtotask[c]) for c in candidates]))\nself.try_job_from_candidates(candidates, finished)\nif len(candidates) > 0 and self.process_list == []:\n    self.noprogress_errormsg()\n    send_webhook(self.args.webhook, \"Unable to make further progress: Quitting\")\n    errorencountered = True\n    break",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "ac77e66879114e7aca33f4d0ccd30ec135a7ca0730d54046259ef184ee082f2c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    finished_from_started = []  # to track tasks that finished even if they were started later\n    failing = []\n    while self.waitforany(self.process_list, finished_from_started, failing):\n        if not args.dry_run:\n            self.monitor(self.process_list)  # should this be asynchronous?\n            time.sleep(1)  # consider a smaller initial wait time\n        else:\n            time.sleep(0.001)\n\n    finished = finished + finished_from_started\n    actionlogger.debug(\"finished now: \" + str(finished_from_started))\n    finishedtasks = finishedtasks + finished",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "9ea253b2b6ac91d3f7e4187b0c7bbcff7ae326f09f0f2eaf68e7e95655e0f8c8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if self.is_productionmode:\n    # we can perform some general cleanup of completed tasks in non-interactive/GRID mode\n    # TODO: this process can be run asynchronously\n    for _t in finished_from_started:\n        self.production_endoftask_hook(_t)\n\n    # if a task was flagged as \"failed\" and we reach this point (due to using --keep-going) ...\n    # we need to remove the pid from the list of finished tasks to avoid processing their children\n    if len(failing) > 0:\n        # remove these from the list of finished tasks to prevent further processing of their children\n        errorencountered = True\n        for t in failing:\n            finished = [ x for x in finished if x != t ]\n            finishedtasks = [ x for x in finishedtasks if x != t ]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "66a2b916dcff4242bbd5c872bd9a4b66df40bd361b3a376742478b19ae106232": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# If a task was marked for retry, we reinsert it into the candidate list.\n    if len(self.tids_marked_toretry) > 0:\n        # First, we remove these tasks from those marked as finished.\n        for t in self.tids_marked_toretry:\n            finished = [ x for x in finished if x != t ]\n            finishedtasks = [ x for x in finishedtasks if x != t ]\n\n        candidates = candidates + self.tids_marked_toretry\n        self.tids_marked_toretry = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "bf15de1fe19dd6132d7a4979b7c3ed163953092b38f650eebfc17645f05f5a6f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# identifying new candidates\nfor tid in finished:\n    if self.possiblenexttask.get(tid) is not None:\n        potential_candidates = list(self.possiblenexttask[tid])\n        for candidate in potential_candidates:\n            # check if it is a valid candidate:\n            if self.is_good_candidate(candidate, finishedtasks) and candidates.count(candidate) == 0:\n                candidates.append(candidate)\n\nactionlogger.debug(\"New candidates identified as: \" + str(candidates))\nsend_webhook(self.args.webhook, \"New candidates identified as: \" + str(candidates))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "6dc28780884f1030ed4e16d136d38bb22de5ea75086f7d379d49b0b23301aa68": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if there are no candidates and the process list is empty:\n    break\nexcept any errors:\n    exc_type, exc_obj, exc_tb = sys.exc_info()\n    fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]\n    print(exc_type, fname, exc_tb.tb_lineno)\n    traceback.print_exc()\n    print ('Cleaning up ')\n\n    self.SIGHandler(0,0)\n\nendtime = time.perf_counter()\nstatusmsg = \"success\"\nif errors occurred:\n    statusmsg = \"with failures\"\n\nprint ('\\n**** Pipeline done ' + statusmsg + ' (global_runtime : {:.3f}s) *****\\n'.format(endtime-self.start_time))\nactionlogger.debug(\"global_runtime : {:.3f}s\".format(endtime-self.start_time))\nreturn errors occurred",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "d9f179028cfd5a45400902dbffec6d597be9e650b52403c4cb22e2a0f7b54d3f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if args.cgroup is not None:\n    myPID = os.getpid()\n    # cgroups like /sys/fs/cgroup/cpuset/<cgroup-name>/tasks\n    # or /sys/fs/cgroup/cpu/<cgroup-name>/tasks\n    command = f\"echo {myPID} > {args.cgroup}\"\n    actionlogger.info(f\"Attempting to run in cgroup {args.cgroup}\")\n    waitstatus = os.system(command)\n    if code := os.waitstatus_to_exitcode(waitstatus):\n        actionlogger.error(f\"Failed to apply cgroup\")\n        exit(code)\n    actionlogger.info(\"Running in cgroup\")\n\nexecutor = WorkflowExecutor(args.workflowfile, jmax=int(args.maxjobs), args=args)\nexit(executor.execute())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_runner.py"
        }
    ],
    "c44ca0e1878aaeff939ad316d9a2495fbaab58831b3c7936c05467f7e38ae7ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n# This script is written in Python 3.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "4308754f561fe31b530d3167dc405fc011d2d428d10bb05f34a38a7b050369b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This script generates a template JSON file for configuring the hybrid generator in O2sim.\n# A list of generators to be utilized is provided through the --gen flag, and the output file name is specified with --output.\n# All generators available in O2sim are supported. Alternatively, the --iniFile flag can be used to incorporate external generators\n# configured via ini files. The --clone flag enables creating multiple instances of the generator list, which is beneficial for\n# running multi-threaded event pools. This feature can be activated by setting the --mode flag to 'parallel', which is 'sequential' by default.\n# The script leverages the ROOT dictionary to import parameter names; hence, O2 must be loaded to ensure the template generation works correctly.\n# Example usage:\n# $O2DPG_ROOT/MC/bin/o2_hybrid_gen.py --gen pythia8 boxgen external extkinO2 hepmc pythia8hf --clone 2 \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "e308b709db428a7b94295d5e612ff8a9f103a8ce7d959de3d28339fc25b12205": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#                                     --output config.json --mode parallel --iniFile /path/to/file0.ini /path/to/file1.ini",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "6b7f644f5c2c4573b7b6545bc69c105931ea6408a98c3e63138db77bf9c1decf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "import argparse\nimport json\nimport ROOT\nimport cppyy\nimport numpy as np\n\n# Retrieve the TClass object for the struct\ntclass = ROOT.TClass.GetClass(\"o2::eventgen::Pythia8GenConfig\")\ntclass1 = ROOT.TClass.GetClass(\"o2::eventgen::BoxGenConfig\")\n\ngenerators_params = {\"pythia8\": \"o2::eventgen::Pythia8GenConfig\", \"external\": \"o2::eventgen::ExternalGenConfig\",\n        \"evtpool\": \"o2::eventgen::EventPoolGenConfig\", \"extkinO2\": \"o2::eventgen::O2KineGenConfig\",\n        \"hepmc\": \"o2::eventgen::HepMCGenConfig\", \"boxgen\": \"o2::eventgen::BoxGenConfig\"}\ncmd_params = \"o2::eventgen::FileOrCmdGenConfig\"\ngenerators_instances = {\"pythia8\": ROOT.o2.eventgen.Pythia8GenConfig(), \"external\": ROOT.o2.eventgen.ExternalGenConfig(),\n        \"evtpool\": ROOT.o2.eventgen.EventPoolGenConfig(), \"extkinO2\": ROOT.o2.eventgen.O2KineGenConfig(),\n        \"hepmc\": ROOT.o2.eventgen.HepMCGenConfig(), \"boxgen\": ROOT.o2.eventgen.BoxGenConfig()}\ncmd_instance = ROOT.o2.eventgen.FileOrCmdGenConfig()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "af379a4c6e40e0e5d98bb7e08c2988effacae4bd5021b6f3098663894dcfd8af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def get_params(instance, class_name):\n    tclass = ROOT.TClass.GetClass(class_name)\n    members = tclass.GetListOfDataMembers()\n    params = {}\n    for member in members:\n        if isinstance(member, ROOT.TDataMember):\n            member_value = getattr(instance, member.GetName())\n            params[member.GetName()] = member_value\n    # replace C++ strings and arrays\n    for key, value in params.items():\n        if isinstance(value, cppyy.gbl.std.string):\n            # convert to a JSON serializable Python string\n            params[key] = str(value)\n        elif hasattr(value, '__len__') and hasattr(value, '__getitem__'):\n            # convert C++ numerical array to Python array, no string arrays are declared as parameters, so far\n            params[key] = np.array(value).tolist()\n    return params",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "6d6e070d6bb590df9e2e12f292ad44159fdfec64441dbe52f1930e94d2af1545": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def main():\n    parser = argparse.ArgumentParser(description='Generate a JSON file using command line arguments.')\n    parser.add_argument('--gen', type=str, nargs='+', help='List of generators to be utilized')\n    parser.add_argument('--iniFile', type=str, nargs='+', help='List of external generators configured with ini files')\n    parser.add_argument('--mode', type=str, help='Run generators in sequential or parallel mode for faster event generation (multi-threading)')\n    parser.add_argument('--output', type=str, required=True, help='Path for the output JSON file')\n    parser.add_argument('--clone', type=int, help='Number of generator list clones to create')\n    parser.add_argument('--trigger', action='store_true', help='Include triggers in the template JSON file')\n\n    args = parser.parse_args()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "745aa7cf371ccfcefd7a0a6b02eabd680f8fe7f77d286a14778eafd69c177c79": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    args = parser.parse_args()\n\n    # Validate the mode\n    valid_modes = [\"sequential\", \"parallel\"]\n    mode = args.mode if args.mode in valid_modes else \"sequential\"\n    if args.mode and args.mode not in valid_modes:\n        print(f\"The mode {args.mode} is invalid. Please choose between 'sequential' or 'parallel'\")\n        print(\"Sequential mode will be used by default\")\n    else:\n        print(f\"Running in {mode} mode\")\n\n    # The trigger options are limited to \"off\", \"or\", \"and\". Any other option will result in \"off\"\n\n    add_trigger = lambda d: d.update({\"triggers\": {\"mode\": \"off\", \"specs\": [{\"macro\": \"\", \"function\": \"\"}]}}) if args.trigger else None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "5b04fa7b737b475c968c378959d81fdedb18018b727555c2d66aa7b0b8b000b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Compile a list of elements in the gen flag\nnoConfGen = [\"pythia8pp\", \"pythia8hf\", \"pythia8hi\", \"pythia8powheg\"]\ngens = []\nif args.gen is None and args.iniFile is None:\n    print(\"No generators specified\")\n    exit(1)\nif args.gen:\n    print(f\"Generators to be used: {args.gen}\")\n    for gen in args.gen:\n        if gen in gens_params:\n            if gen == \"hepmc\":\n                configs = [get_params(cmd_instance, cmd_params), get_params(gens_instances[gen], gens_params[gen])]\n                gens.append({\n                    'name': gen,\n                    'config': {\n                        \"configcmd\": configs[0],\n                        \"confighepmc\": configs[1]\n                    }\n                })\n                add_trigger(gens[-1])\n            else:\n                configs = get_params(gens_instances[gen], gens_params[gen])\n                gens.append({",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "26e1a182eed931916f4d2f43b5153b051cd0fdf998fd7b4948ad04434ecb5bec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    gens.append({\n        'name': gen,\n        'config': configs\n    })\n    add_trigger(gens[-1])\nelif gen in noConfGen:\n    gens.append({\n        \"name\": gen,\n        \"config\": \"\"\n    })\n    add_trigger(gens[-1])\nelse:\n    print(f\"The generator {gen} was not found in the list of available generators\")\n    exit(1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "8dcccca562bafdd26002537872270d4ad4768fa46d1931c60aac101512e193c5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if args.iniFile:\n    print(f\"External generators to be used: {args.iniFile}\")\n    for file in args.iniFile:\n        if \".ini\" != file[-4:]:\n            print(f\"File {file} is not an ini file\")\n            exit(1)\n        configs = get_params(gens_instances[\"external\"],gens_params[\"external\"])\n        configs[\"iniFile\"] = file\n        gens.append({\n            'name': 'external',\n            'config': configs\n        })\n        add_trigger(gens[-1])\n\nif args.clone:\n    if args.clone < 2:\n        print(\"The cloning value must be greater than 1\")\n        print(\"Skipping procedure...\")\n    else:\n        print(f\"Cloning the generator list {args.clone} times\")\n        gens = gens * args.clone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "38abfc0a6b6ee1f09d6b7e431ec51daa80d1da86827b87d0804ea631aaf5e9d1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Initialize fractions list with 1 for each generator\nfractions = [1] * len(gens)\n    \n# Insert generators and fractions into the data dictionary\ndata = {\n    \"mode\": mode,\n    \"generators\": gens,\n    \"fractions\": fractions\n}\n    \n# Save the data dictionary to a JSON file\nwith open(args.output, 'w') as f:\n    json.dump(data, f, indent=2)\n\nprint(f\"JSON file saved at {args.output}\")\n\nif __name__ == \"__main__\":\n    main()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_hybrid_gen.py"
        }
    ],
    "87e53f59d5072c6818a1ad4cdd6614495c8cb5b20e9236287f0a28cbc614d6d9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\nfrom os import environ, getcwd\nfrom copy import deepcopy\nimport json\n\n\n# List of active detectors\nACTIVE_DETECTORS = [\"all\"]\nINACTIVE_DETECTORS = []\n\ndef activate_detector(det):\n    try:\n        # first of all, remove \"all\" if a specific detector is provided\n        if \"all\" in ACTIVE_DETECTORS:\n            ACTIVE_DETECTORS.remove(\"all\")\n    except ValueError:\n        pass\n    ACTIVE_DETECTORS.append(det)\n\ndef deactivate_detector(det):\n    INACTIVE_DETECTORS.append(det)\n\ndef isActive(det):\n    return det not in INACTIVE_DETECTORS and (\"all\" in ACTIVE_DETECTORS or det in ACTIVE_DETECTORS)\n\ndef compute_n_workers(interaction_rate, collision_system, n_workers_user=8, n_workers_min=1, interaction_rate_linear_below=300000):\n    \"\"\"\n    Calculate the number of workers\n\n    n_workers = m * IR + b\n\n    based on\n    https://indico.cern.ch/event/1395900/contributions/5868567/attachments/2823967/4932440/20240320_slides_cpu_eff.pdf, slide 3\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "d9b1c3caedfe534821fcf99da37c6f2863c8a8ef7895ed278abf4c580f618ae3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ASSUME n_workers_in=8 IS OPTIMAL FOR pp IR > interaction_rate_linear_below\n\nBEGIN WITH 1 WORKER AT IR=0 AND INCREASE LINEARLY UNTIL interaction_rate_linear_below\n\"\"\"\nIF collision_system == \"PbPb\" OR interaction_rate >= interaction_rate_linear_below:\n    RETURN n_workers_user\n\nSET n_workers_min TO MAX(1, n_workers_min)\nm = (n_workers_user - n_workers_min) / interaction_rate_linear_below\nENSURE AT LEAST 1 WORKER\nRETURN MAX(1, ROUND(m * interaction_rate + n_workers_min))\n\ndef relativeCPU(n_rel, n_workers):\n    # CALCULATE NUMBER OF CPUS BASED ON A GIVEN NUMBER OF WORKERS AND A FRACTION n_rel\n    # HANDLE CASES WHERE n_rel > 1 OR n_workers * n_rel\n    RETURN ROUND(MIN(n_workers, n_workers * n_rel), 2)\n\ndef trimString(cmd):\n    # REMOVE UNNECESSARY SPACES\n    RETURN ' '.JOIN(cmd.split())\n\ndef make_workflow_filename(filename):\n    IF filename.lower().rfind(\".json\") < 0:\n        # APPEND EXTENSION IF NOT PRESENT\n        RETURN filename + \".json\"\n    RETURN filename",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "645e8a440529620ba515ce34a4ad0d14118b2785330bcbc16704282487622979": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def update_workflow_resource_requirements(workflow, n_workers):\n    \"\"\"Modify resource requirements/settings\n    \"\"\"\n    for s in workflow:\n        if s[\"resources\"][\"relative_cpu\"]:\n            s[\"resources\"][\"cpu\"] = relativeCPU(s[\"resources\"][\"relative_cpu\"], n_workers)\n\n\ndef createTask(name='', needs=[], tf=-1, cwd='./', lab=[], cpu=1, relative_cpu=None, mem=500, n_workers=8):\n    \"\"\"Generates a new task. A task is a dictionary or class with common attributes like\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "dd2b188c6cda18ea4395e18ef1e45af30b01527833e7369969c401bfad637ebb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    Args:\n        name: str\n            task identifier\n        needs: list\n            list of task names this task relies on\n        tf: int\n            associated timeframe\n        cwd: str\n            working directory for this task, which will be created automatically\n        lab: list\n            list of labels to be applied\n        cpu: float\n            average CPU usage required by this task\n        relative_cpu: float or None\n            if provided, cpu usage is recalculated based on the number of available workers\n        mem: int\n            memory size required by this task",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "daf3c2995856fcfd79b3aab8e0f8cb2c538263fc63ac933a17523de93b5eb20d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    Returns:\n        dict representing the task\n    \"\"\"\n    if relative_cpu is not None:\n        # Re-compute, if relative number of CPUs requested\n        cpu = relativeCPU(relative_cpu, n_workers)\n    return { 'name': name,\n             'cmd':'',\n             'needs': needs,\n             'resources': { 'cpu': cpu, 'relative_cpu': relative_cpu , 'mem': mem },\n             'timeframe' : tf,\n             'labels' : lab,\n             'cwd' : cwd }\n\n\ndef createGlobalInitTask(keys_values=None, set_defaults=True):\n    \"\"\"Returns a special task recognized by the executor as needing a global environment\n       section applied to all tasks in a workflow.\n\n    Args:\n        keys_values: dict or None\n            a dictionary of environment variables and their values to be globally applied to all tasks\n            if there are overlapping keys with defaults, the values from keys_values take precedence\n        set_defaults: bool\n            whether to include default values or not",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "19549a8411fdd1b78f385325827d0104204b1e7bf276ee76cd8b61f2d1430ae1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\nReturns:\n        dict: task dictionary\n    \"\"\"\n\n    # dictionary holding global environment to be passed to task\n    env_dict = {}\n\n    if set_defaults:\n        if environ.get('ALICEO2_CCDB_LOCALCACHE') is None:\n            print (\"ALICEO2_CCDB_LOCALCACHE is not set; defaulting to \" + getcwd() + '/ccdb')\n            env_dict['ALICEO2_CCDB_LOCALCACHE'] = getcwd() + \"/ccdb\"\n        else:\n        # ensures the workflow uses and remembers the externally provided path\n            env_dict['ALICEO2_CCDB_LOCALCACHE'] = environ.get('ALICEO2_CCDB_LOCALCACHE')\n        env_dict['IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE'] = '${ALICEO2_CCDB_LOCALCACHE:+\"ON\"}'\n\n    if keys_values:\n        # keys_values takes precedence in case of overlapping keys\n        env_dict |= keys_values\n\n    t = createTask(name = '__global_init_task__')\n    t['cmd'] = 'NO-COMMAND'\n    t['env'] = env_dict\n    return t\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "71169753ddcdfb22a9331b633cc936d0d220f961a735f3197ab46ba823b2f937": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def summary_workflow(workflow):\n        print(\"=== WORKFLOW SUMMARY ===\\n\")\n        print(f\"-> The workflow consists of {len(workflow)} tasks\")\n\n\n    def dump_workflow(workflow, filename, meta=None):\n        \"\"\"Save this workflow to a file\n\n        Args:\n            workflow: list\n                stages of the workflow\n            filename: str\n                name of the output file\n        \"\"\"\n\n        # Perform sanity checks on the list of tasks\n        check_workflow(workflow)\n        taskwrapper_string = \"${O2_ROOT}/share/scripts/jobutils2.sh; taskwrapper\"\n        # Prepare for saving, use deepcopy to ensure independence from the current instance\n        to_dump = deepcopy(workflow)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "84aa5900ddd54913b2024f13d9009c3cd21b2a3bb05e96212c4617c223e28e8e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for each item in to_dump:\n    if the item contains a command and its name is not '__global_init_task__' and the taskwrapper_string is not in the command:\n        # add taskwrapper if it's missing and the command is not empty\n        item['cmd'] = '. ' + taskwrapper_string + ' ' + item['name']+'.log \\'' + item['cmd'] + '\\''\n    # clean up whitespace for clarity\n    item['cmd'] = trimString(item['cmd'])\n# prepare the final structure for dumping\nto_dump = {\"stages\": to_dump}\nfilename = make_workflow_filename(filename)\nto_dump[\"meta\"] = meta if meta else {}\n\nwith open(filename, 'w') as outfile:\n    json.dump(to_dump, outfile, indent=2)\n\nprint(f\"Workflow saved at {filename}\")\n\ndef read_workflow(filename):\n    workflow = None\n    filename = make_workflow_filename(filename)\n    with open(filename, \"r\") as wf_file:\n        loaded = json.load(wf_file)\n        workflow = loaded[\"stages\"]\n        meta = loaded.get(\"meta\", {})\n    return workflow, meta",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "586751f558fc73f1b8efdda612a502239561e1f694f4a867e39217b68260dbbd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\ndef check_workflow_unique_names(workflow, collect_warnings, collect_errors):\n    \"\"\"verify that all task names are unique\n\n    Args:\n        collect_warnings: list\n            collect all warnings that might come up\n        collect_errors: list\n            collect all errors that might come up\n    \"\"\"\n\n    is_sane = True\n    task_names = []\n\n    for task in workflow:\n        if task[\"name\"] in task_names:\n            collect_warnings.append(f\"WARNING: Task name '{task['name']}' is not unique\")\n            is_sane = False\n        task_names.append(task[\"name\"])\n\n    return is_sane\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "4def0eb8655a2b11306051331c4b51cf845363037d82bfaa85476b248ae0f901": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\nArgs:\n    collect_warnings: list\n        store any warnings that occur\n    collect_errors: list\n        store any errors that occur\n\"\"\"\n\nis_sane = True\nduplicates = []\nfor step in workflow:\n    if step[\"name\"] in duplicates:\n        # This is an error because adding another task won't fix this issue\n        collect_errors.append(f\"A task named {step['name']} is already defined\")\n        is_sane = False\n        continue\n    duplicates.append(step[\"name\"])\nreturn is_sane\n\n\ndef validate_workflow(workflow):\n    \"\"\"Perform sanity checks on the workflow\n    \"\"\"\n\n    warning_log = []\n    error_log = []\n    is_sane = validate_workflow_dependencies(workflow, warning_log, error_log) and validate_workflow_unique_names(workflow, warning_log, error_log)\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "933d4a40ac4b08fcc9c618c2c4aea6d6535eba7a7a044a0d617d038c29073b4e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\nprint(f\"=== There are {len(collect_warnings)} warnings ===\")\nfor w in collect_warnings:\n    print(w)\nprint(f\"=== There are {len(collect_errors)} errors ===\")\nfor e in collect_errors:\n    print(e)\n\nif is_sane:\n    print(\"===> The workflow looks sane\")\nelse:\n    print(\"===> Please check warnings and errors!\")\n\nreturn is_sane\n\n# Modifies the software version for RECO (and subsequent) stages\n# (if desired). The function enacts a specific request from operations to manage varying sim and reco software versions, given their differing rates of development and bug fixes.\ndef adjust_RECO_environment(workflowspec, package = \"\"):\n    if len(package) == 0:\n       return\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "58bf8209f07ba05d57edbe3edda2fdaa7d730f846de93b8f27ad5ddf8e9f6cca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# We aim to derive the stage from the path (which can be specified using '@' separation)\n# For example, O2sim::daily-xxx@DIGI ---> apply this environment at the DIGI phase\n# For example, O2sim::daily-xxx@RECO ---> apply this environment at the RECO phase\n# If no '@' is present, O2sim::daily-xxx ---> apply this environment at the RECO phase (default setting)\nfrom_stage = \"RECO\"\nif package.count('@') == 1:\n    package, from_stage = package.split('@')\n\n# Essentially, we need to traverse the graph and apply the mapping\n# Start by examining the workflow spec to check if the task or any child task is labeled RECO\n# Typical graph traversal with caching is required\n\n# Helper structures\ntaskuniverse = [ l['name'] for l in workflowspec['stages'] ]\ntasktoid = {}\nfor i in range(len(taskuniverse)):\n    tasktoid[taskuniverse[i]] = i",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "a041574116343defbf058f6a09eeac2ef35b34d9b558ac426051939d93feb7f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    matches_label = {}\n    # internal helper for recursive graph traversal\n    def check_label_or_inheritance(taskid, label, cache):\n        if cache.get(taskid) is not None:\n            return cache[taskid]\n        result = False\n        if label in workflowspec['stages'][taskid]['labels']:\n            result = True\n        else:\n            # check mother tasks\n            for mothertask in workflowspec['stages'][taskid]['needs']:\n                motherid = tasktoid[mothertask]\n                if check_label_or_inheritance(motherid, label, cache):\n                    result = True\n                    break\n\n        cache[taskid] = result\n        return result",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "2e16360598a536504bbb0ed017f8aaf7967b0b8443f76743b3f317b90d7a3ee2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "CACHE[taskid] = result\n    RETURN result\n\n    # populates the matches_label dictionary\n    FOR taskid IN RANGE(LEN(workflowspec['stages'])):\n        IF (matches_or_inherits_label(taskid, from_stage, matches_label)):\n            # now we make the final adjustment (as annotation) in the workflow itself\n            IF workflowspec['stages'][taskid].get('disable_alternative_reco_software', False) != True:\n                IF workflowspec['stages'][taskid].get(\"alternative_alienv_package\") == None:\n                    workflowspec['stages'][taskid][\"alternative_alienv_package\"] = package",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "d70d66146b3617ec2170bc3a62f7cd3264abfc9cf285cc0637f4bda1c7d3e576": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def merge_dicts(dict1, dict2):\n    \"\"\"\n    combines dict2 into dict1 (with possible value overwrites)\n    \"\"\"\n    for key, value in dict2.items():\n        if key in dict1 and isinstance(dict1[key], dict) and isinstance(value, dict):\n            # If both keys point to dictionaries, merge those recursively\n            merge_dicts(dict1[key], value)\n        else:\n            # Otherwise, replace dict1's value with dict2's value\n            dict1[key] = value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_workflow_utils.py"
        }
    ],
    "49059a7fa8f08434e37f63a6bd006f5a081b336b7d9128b0412ee4d0db7b6684": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n# Initiated in February 2021, by sandro.wenzel@cern.ch\n\nimport re\nimport subprocess\nimport time\nimport json\nimport logging\nimport os\nimport signal\nimport socket\nimport sys\nimport traceback\nimport platform\nimport tarfile\ntry:\n    from graphviz import Digraph\n    havegraphviz=True\nexcept ImportError:\n    havegraphviz=False\n\nformatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')\n\nsys.setrecursionlimit(100000)\n\nimport argparse\nimport psutil\nmax_system_mem=psutil.virtual_memory().total\n\nsys.path.append(os.path.join(os.path.dirname(__file__), '.', 'o2dpg_workflow_utils'))\nfrom o2dpg_workflow_utils import read_workflow\n\n# specifying command line options\nparser = argparse.ArgumentParser(description='Parallel execution of an (O2-DPG) Directed Acyclic Graph data/job pipeline under resource constraints.',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "a29d39c862a3b4c4f9d8c9642bc5c1aa225bc2869faf8c3f30c10f585d55ccc3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('-f','--workflowfile', help='Name of the input workflow file', required=True)\nparser.add_argument('-jmax','--maxjobs', type=int, help='Maximum number of parallel tasks.', default=100)\nparser.add_argument('-k','--keep-going', action='store_true', help='Continue executing the pipeline even if an error occurs.')\nparser.add_argument('--dry-run', action='store_true', help='Display the actions that would be performed without executing them.')\nparser.add_argument('--visualize-workflow', action='store_true', help='Generates a visual graph of the workflow.')\nparser.add_argument('--target-labels', nargs='+', help='Runs the pipeline based on target labels (e.g., \"TPC\" or \"DIGI\"). This condition is combined logically AND with --target-tasks.', default=[])\nparser.add_argument('-tt','--target-tasks', nargs='+', help='Runs the pipeline based on target tasks (e.g., \"tpcdigi\"). By default, all tasks in the graph are executed. Supports regular expressions.', default=[\"*\"])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "9755e758dfa941e8d886bcb74a209fa9009b5b14628e08ceb67cb9d8004021fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--produce-script', help='Generates a shell script to execute the workflow sequentially and exits.')\nparser.add_argument('--rerun-from', help='Re-executes the workflow starting from the specified task (or pattern), rerunning all dependent jobs.')\nparser.add_argument('--list-tasks', help='Lists all tasks by name and exits.', action='store_true')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "df06a9f7d819f89af5f4a93d670d74af1d4c70c7253703bb916733725674c90a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Resources\nparser.add_argument('--update-resources', dest=\"update_resources\", help='Read resource estimates from a JSON and apply them where feasible.')\nparser.add_argument(\"--dynamic-resources\", dest=\"dynamic_resources\", action=\"store_true\", help=\"Adjust resource estimates of tasks based on completed related tasks.\") # dynamically derive resources\nparser.add_argument('--optimistic-resources', dest=\"optimistic_resources\", action=\"store_true\", help=\"Attempt to run the workflow despite resource limits potentially underestimating some tasks' needs.\")\nparser.add_argument(\"--n-backfill\", dest=\"n_backfill\", type=int, default=1)\nparser.add_argument('--mem-limit', help='Set a memory limit for scheduling (in MB)', default=0.9*max_system_mem/1024./1024, type=float)\nparser.add_argument('--cpu-limit', help='Set a CPU limit (number of cores)', default=8, type=float)\nparser.add_argument('--cgroup', help='Run the pipeline under a specified cgroup (e.g., 8coregrid) to simulate resource constraints.')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "5c958a9ab0fc1ca72f155412c372543de2c04b4cf58a8c4ef3fc41531bc590a8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The processes must exist and the tasks file must be writable by the current user.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "ab60eeefa4f51d1bde7b3bd39a4b9b186bbb97109a620176910a7d81f4c30402": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run control, webhooks\nparser.add_argument('--stdout-on-failure', action='store_true', help='Display log files of failing tasks on standard output,')\nparser.add_argument('--webhook', help=argparse.SUPPRESS) # log some information to this webhook channel\nparser.add_argument('--checkpoint-on-failure', help=argparse.SUPPRESS) # a debugging option that creates a debug tarball and sends it to a specified address\n                                                                       # the argument should be an alien path\nparser.add_argument('--retry-on-failure', help=argparse.SUPPRESS, default=0) # specifies the number of times a failing task should be retried\nparser.add_argument('--no-rootinit-speedup', help=argparse.SUPPRESS, action='store_true') # disables the initialization of ROOT environment variables to speed up initialization/startup",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "e274116d64c10840c7897e6e59b543068a991f7bfee2e6923ff0767e18c62f68": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Logging\nparser.add_argument('--action-logfile', help='Specify a log filename for action logs. If not specified, the default will be pipeline_action_#PID.log')\nparser.add_argument('--metric-logfile', help='Specify a log filename for metric logs. If not specified, the default will be pipeline_metric_#PID.log')\nparser.add_argument('--production-mode', action='store_true', help='Enable production mode')\n# This will activate special features beneficial for non-interactive or production processing, such as automatic file cleanup.\nargs = parser.parse_args()\n\ndef setup_logger(name, log_file, level=logging.INFO):\n    \"\"\"Function to configure loggers for various needs\"\"\"\n\n    handler = logging.FileHandler(log_file, mode='w')\n    handler.setFormatter(formatter)\n\n    logger = logging.getLogger(name)\n    logger.setLevel(level)\n    logger.addHandler(handler)\n\n    return logger\n\n# Initialize the action logger\nactionlogger = setup_logger('pipeline_action_logger', ('pipeline_action_' + str(os.getpid()) + '.log', args.action_logfile)[args.action_logfile is not None], level=logging.DEBUG)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "1d80e64c89814a5b6d733c414f1c6f33b96be95676d2763f3260a7be26c084e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# second file logger setup\nmetriclogger = setup_logger('pipeline_metric_logger', ('pipeline_metric_' + str(os.getpid()) + '.log', args.action_logfile)[args.action_logfile is not None])\n\n# Log immediately the enforced memory and CPU limits along with additional relevant metadata\n_ , meta = read_workflow(args.workflowfile)\nmeta[\"cpu_limit\"] = args.cpu_limit\nmeta[\"mem_limit\"] = args.mem_limit\nmeta[\"workflow_file\"] = os.path.abspath(args.workflowfile)\nmeta[\"target_task\"] = args.target_tasks\nmeta[\"rerun_from\"] = args.rerun_from\nmeta[\"target_labels\"] = args.target_labels\nmetriclogger.info(meta)\n\n# For debugging without terminal access\n# TODO: integrate into standard logger\ndef send_webhook(hook, t):\n    if hook != None:\n      command=\"curl -X POST -H 'Content-type: application/json' --data '{\\\"text\\\":\\\" \" + str(t) + \"\\\"}' \" + str(hook) + \" &> /dev/null\"\n      os.system(command)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "1e13899c6682d93ac4af3623c489e5e9ff0d99a977b0910ec38b8c0815c31fd0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# An alternative method to retrieve all child processes\n# when psutil encounters issues (like PermissionError).\n# This function provides a list identical to what psutil.children(recursive=True) would return.\ndef getChildProcs(basepid):\n  cmd='''\n  childprocs() {\n  local parent=$1\n  if [ ! \"$2\" ]; then\n    child_pid_list=\"\"\n  fi\n  if [ \"$parent\" ] ; then\n    child_pid_list=\"$child_pid_list $parent\"\n    for childpid in $(pgrep -P ${parent}); do\n      childprocs $childpid \"nottoplevel\"\n    done;\n  fi\n  # return via a string list (only if toplevel)\n  if [ ! \"$2\" ]; then\n    echo \"${child_pid_list}\"\n  fi\n  }\n  '''\n  cmd += '\\n' + 'childprocs ' + str(basepid)\n  output = subprocess.check_output(cmd, shell=True)\n  plist = []\n  for p in output.strip().split():\n     try:\n         proc=psutil.Process(int(p))\n     except psutil.NoSuchProcess:\n         continue\n\n     plist.append(proc)\n  return plist",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "5d8e2791b9d38332575634d1e1aa8a2e265f5ca515e01ae995189f666995113f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    plist.append(proc)\n    return plist\n\n#\n# Code segment to identify all topological orderings\n# of a Directed Acyclic Graph (DAG). This helps in determining\n# when we can schedule tasks in parallel.\n# Source: https://www.geeksforgeeks.org/all-topological-sorts-of-a-directed-acyclic-graph/\n\n# A class to represent a graph\nclass Graph:\n\n    # Constructor\n    def __init__(self, edges, N):\n\n        # An adjacency list to represent the graph\n        self.adjList = [[] for _ in range(N)]\n\n        # A list to store the in-degree of each vertex\n        # Initialize the in-degree of each vertex to 0\n        self.indegree = [0] * N\n\n        # Add edges to the graph\n        for (src, dest) in edges:\n\n            # Add an edge from the source to the destination\n            self.adjList[src].append(dest)\n\n            # Increase the in-degree of the destination vertex by 1\n            self.indegree[dest] = self.indegree[dest] + 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "9a7c350895d8bf7d327b4ce977f8220b6412b741e82e7d182fbe7c1c5649c1f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Recursive function to find all topological orderings of a directed acyclic graph (DAG)\ndef findAllTopologicalOrders(graph, path, discovered, N, allpaths, maxnumber=1):\n    if len(allpaths) >= maxnumber:\n        return\n\n    # process each vertex\n    for v in range(N):\n\n        # proceed only if the in-degree of the current vertex is 0 and the vertex has not been processed yet\n        if graph.indegree[v] == 0 and not discovered[v]:\n\n            # for every adjacent vertex u of v, decrease the in-degree of u by 1\n            for u in graph.adjList[v]:\n                graph.indegree[u] -= 1\n\n            # add the current vertex to the path and mark it as discovered\n            path.append(v)\n            discovered[v] = True\n\n            # recurse\n            findAllTopologicalOrders(graph, path, discovered, N, allpaths)\n\n            # backtrack: restore in-degree information for the current vertex\n            for u in graph.adjList[v]:\n                graph.indegree[u] += 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "ab0d149be619caf0a2663226a8193c45eff7430b47099106b6ac4e1d917ca88f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# backtrack: remove the current node from the path and\n            # mark it as undiscovered\n            path.pop()\n            discovered[v] = False\n\n# document the valid sequence\nif len(path) == N:\n    allpaths.append(path.copy())\n\n\n# generate all topological orderings of a given directed acyclic graph (DAG) as a list\ndef printAllTopologicalOrders(graph, maxnumber=1):\n    # determine the number of nodes in the graph\n    N = len(graph.adjList)\n\n    # initialize an auxiliary array to track the discovery status of each vertex\n    discovered = [False] * N\n\n    # initialize the path and all possible paths\n    path = []\n    allpaths = []\n    # identify all topological orderings and record them\n    findAllTopologicalOrders(graph, path, discovered, N, allpaths, maxnumber=maxnumber)\n    return allpaths\n\n# <--- end code section for topological sorts",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "cabf89ec8d417627b0d840761da3f70a24f335cdb4bf231762e6fdd9f9d5a354": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# <--- end code section for topological sorts\n\n# identify all tasks that are dependent on a specified task (id); if a cache\n# dictionary is provided, we can populate the entire graph in a single pass...\ndef identify_all_dependent_tasks(possiblenexttask, tid, cache=None):\n    c = cache.get(tid) if cache else None\n    if c is not None:\n        return c\n\n    daughterlist = [tid]\n    # potentially recurse\n    for n in possiblenexttask[tid]:\n        c = cache.get(n) if cache else None\n        if c is None:\n            c = identify_all_dependent_tasks(possiblenexttask, n, cache)\n        daughterlist += c\n        if cache is not None:\n            cache[n] = c\n\n    if cache is not None:\n        cache[tid] = daughterlist\n    return list(set(daughterlist))\n\n\n# function to process given edges, build the graph, and derive all topological orderings along with auxiliary data structures\ndef analyze_graph(edges, nodes):\n    # total number of nodes in the graph\n    N = len(nodes)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "aa3782af6cf7d587d1693b37cf8b0d0ee7d305949803762529095397a4749fbc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# candidate list trivial\nnextjobtrivial = { n:[] for n in nodes }\n# startnodes\nnextjobtrivial[-1] = nodes\nfor e in edges:\n    nextjobtrivial[e[0]].append(e[1])\n    if nextjobtrivial[-1].count(e[1]):\n        nextjobtrivial[-1].remove(e[1])\n\n# determine topological orderings of the graph\n# construct a graph from the edges\ngraph = Graph(edges, N)\norderings = printAllTopologicalOrders(graph)\n\nreturn (orderings, nextjobtrivial)\n\n\ndef draw_workflow(workflowspec):\n    if not havegraphviz:\n        print('graphviz not installed, unable to draw workflow')\n        return\n\n    dot = Digraph(comment='MC workflow')\n    nametoindex={}\n    index=0\n    # nodes\n    for node in workflowspec['stages']:\n        name=node['name']\n        nametoindex[name]=index\n        dot.node(str(index), name)\n        index=index+1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "db3f194dfaba6571afe98df5b88cc33ae6261400b019553b3856268ef001ebc8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# edges\nfor node in workflowspec['stages']:\n    to_index = nametoindex[node['name']]\n    for requirement in node['needs']:\n        from_index = nametoindex[requirement]\n        dot.edge(str(from_index), str(to_index))\n\ndot.render('workflow.gv')\n\n# constructs the graph using a \"taskuniverse\" list and creates associated tasktoid and idtotask structures\ndef build_graph(taskuniverse, workflowspec):\n    tasktoid = { t[0]['name']:i for i, t in enumerate(taskuniverse, 0) }\n    # print (tasktoid)\n\n    nodes = []\n    edges = []\n    for task in taskuniverse:\n        nodes.append(tasktoid[task[0]['name']])\n        for need in task[0]['needs']:\n            edges.append((tasktoid[need], tasktoid[task[0]['name']]))\n\n    return (edges, nodes)\n\n\n# reads a JSON file and converts it into a dictionary, suitable for a workflow specification\ndef load_json(workflowfile):\n    with open(workflowfile) as fp:\n        workflowspec = json.load(fp)\n    return workflowspec",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "e58ad987ecba5cb9ee83c7fb1fb2d941f79e363c7bd307d8a85acae05010a37d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# filters the original workflowspec based on specified targets or labels\n# returns a new workflowspec\ndef filter_workflow(workflowspec, targets=[], targetlabels=[]):\n    if len(targets) == 0:\n        return workflowspec\n    if len(targetlabels) == 0 and len(targets) == 1 and targets[0] == \"*\":\n        return workflowspec\n\n    transformedworkflowspec = workflowspec\n\n    def task_matches(t):\n        for filt in targets:\n            if filt == \"*\":\n                return True\n            if re.match(filt, t) is not None:\n                return True\n        return False\n\n    def task_matches_labels(t):\n        # it's acceptable if no labels are provided at all\n        if len(targetlabels) == 0:\n            return True\n\n        for l in t['labels']:\n            if l in targetlabels:\n                return True\n        return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "2180f9038a0f4d1fb200bf028643d0d76107571e1e06460ce5b8b96f570f35b0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This sequence of operations is structured and functional.\n# However, it creates lookups used elsewhere, so some CPU time might be conserved by sharing some structures between functions or reducing the number of data passes.\n\n# helper lookup\ntasknametoid = { t['name']:i for i, t in enumerate(workflowspec['stages'],0) }\n\n# verify if a task can be executed\n# or if it cannot due to missing prerequisites\ndef canBeDone(t, cache={}):\n    ok = True\n    c = cache.get(t['name'])\n    if c is not None:\n        return c\n    for r in t['needs']:\n        taskid = tasknametoid.get(r)\n        if taskid is not None:\n            if not canBeDone(workflowspec['stages'][taskid], cache):\n                ok = False\n                break\n        else:\n            ok = False\n            break\n    cache[t['name']] = ok\n    return ok",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "1868c61d033ea4b24c82e49908927877b71fe57f4d360a611d4bc693a27edce8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    okcache = {}\n    # create complete target list\n    full_target_list = [ t for t in workflowspec['stages'] if task_matches(t['name']) and task_matches_labels(t) and canBeDone(t,okcache) ]\n    full_target_name_list = [ t['name'] for t in full_target_list ]\n\n    # construct full dependency list for a task t\n    def getallrequirements(t):\n        _l = []\n        for r in t['needs']:\n            fulltask = workflowspec['stages'][tasknametoid[r]]\n            _l.append(fulltask)\n            _l += getallrequirements(fulltask)\n        return _l\n\n    full_requirements_list = [ getallrequirements(t) for t in full_target_list ]\n\n    # flatten and retrieve names only\n    full_requirements_name_list = list(set([ item['name'] for sublist in full_requirements_list for item in sublist ]))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "d40136528c6ec638d2ecc6a8aae246c55f1350e14c955ed45a2262f0b2abd565": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# inner \"lambda\" helper function to determine if a task \"name\" is required by the specified targets\ndef needed_by_targets(name):\n    if name in full_target_name_list:\n        return True\n    if name in full_requirements_name_list:\n        return True\n    return False\n\n# finally, we copy over everything that matches the targets as well as all their requirements\ntransformedworkflowspec['stages'] = [ l for l in workflowspec['stages'] if needed_by_targets(l['name']) ]\nreturn transformedworkflowspec\n\n\n# constructs topological orderings for each timeframe\ndef build_dag_properties(workflowspec):\n    globaltaskuniverse = [ (l, i) for i, l in enumerate(workflowspec['stages'], 1) ]\n    timeframeset = set(l['timeframe'] for l in workflowspec['stages'])\n\n    edges, nodes = build_graph(globaltaskuniverse, workflowspec)\n    tup = analyseGraph(edges, nodes.copy())\n    global_next_tasks = tup[1]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "f8d9f5e9ccbc37698fa6ff9d6739cc45023891264fdef392e5e8e35112b8719c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "dependency_cache = {}\n# The weight affects the scheduling order and can be anything defined by the user. For now, we prioritize tasks within a timeframe and then consider the number of tasks that depend on a task as another weight factor.\n# TODO: Incorporate resource estimates like CPU and MEM from the runtime.\n# TODO: Develop this as a policy for the runner to explore various strategies.\ndef getweight(tid):\n    return (globaltaskuniverse[tid][0]['timeframe'], len(find_all_dependent_tasks(global_next_tasks, tid, dependency_cache)))\n\ntask_weights = [ getweight(tid) for tid in range(len(globaltaskuniverse)) ]\n\nfor tid in range(len(globaltaskuniverse)):\n    actionlogger.info(\"Score for \" + str(globaltaskuniverse[tid][0]['name']) + \" is \" + str(task_weights[tid]))\n\n# print (global_next_tasks)\nreturn { 'nexttasks' : global_next_tasks, 'weights' : task_weights, 'topological_ordering' : tup[0] }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "7c41f5e289333bdb1b8d7a4c834739c0b2eb14b4c7901415a3fc3dbba735a7a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def update_resource_estimates(workflow, resource_json):\n    resource_dict = load_json(resource_json)\n    stages = workflow[\"stages\"]\n\n    for task in stages:\n        if task[\"timeframe\"] >= 1:\n            name = \"_\".join(task[\"name\"].split(\"_\")[:-1])\n        else:\n            name = task[\"name\"]\n\n        if name not in resource_dict:\n            continue\n\n        new_resources = resource_dict[name]\n\n        # memory\n        newmem = new_resources.get(\"mem\", None)\n        if newmem is not None:\n            oldmem = task[\"resources\"][\"mem\"]\n            actionlogger.info(\"Updating the memory estimate for \" + task[\"name\"] + \" from \" + str(oldmem) + \" to \" + str(newmem))\n            task[\"resources\"][\"mem\"] = newmem\n        newcpu = new_resources.get(\"cpu\", None)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "5dc7f0938a45c27830ef1b57a6f98c421725be3a918626e6d7d5955063edaf78": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# cpu\n    if newcpu is not None:\n        oldcpu = task[\"resources\"][\"cpu\"]\n        rel_cpu = task[\"resources\"][\"relative_cpu\"]\n        if rel_cpu is not None:\n           # adhere to the relative CPU settings\n           # By default, the CPU value in the workflow is scaled if relative_cpu is specified.\n           # The new estimate, however, is not scaled, so it must be adjusted here.\n           newcpu *= rel_cpu\n        actionlogger.info(\"Modifying cpu estimate for \" + task[\"name\"] + \" from \" + str(oldcpu) + \" to \" + str(newcpu))\n        task[\"resources\"][\"cpu\"] = newcpu\n\n# a function to convert a software environment defined by alienv into\n# a python dictionary\ndef get_alienv_software_environment(packagestring):\n    \"\"\"\n    packagestring can be a string like O2::v202298081-1,O2Physics::xxx representing packages\n    published on CVMFS ... or ... a file containing the software environment to apply\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "44a13fd83edbed31abe516bb3b86e956d66a4f3ef49519d53018cdf1c01b2103": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# the trivial cases do nothing\nif packagestring is None or packagestring == \"\" or packagestring == \"None\":\n    return {}\n\ndef transform_env_file(env_file):\n    \"\"\"Convert an environment file created using 'export > env.txt' into a Python dictionary.\"\"\"\n    env_vars = {}\n    with open(env_file, \"r\") as f:\n        for line in f:\n            line = line.strip()\n\n            # Ignore empty lines or comments\n            if not line or line.startswith(\"#\"):\n                continue\n\n            # Remove 'declare -x ' if it exists\n            if line.startswith(\"declare -x \"):\n                line = line.replace(\"declare -x \", \"\", 1)\n\n            # Handle cases where \"FOO\" equals nothing (assign an empty string)\n            if \"=\" not in line:\n                key, value = line.strip(), \"\"\n            else:\n                key, value = line.split(\"=\", 1)\n                value = value.strip('\"')  # Remove any surrounding quotes if present",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "701658546f465b28485f783e93b12e59cb8950ece2a2a8d2f4d531632ff6670e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    env_vars[key.strip()] = value\n        return env_vars\n\n    # check if the provided string is a file\n    if os.path.exists(packagestring) and os.path.isfile(packagestring):\n       actionlogger.info(\"Using software environment from file \" + packagestring)\n       return load_env_file(packagestring)\n\n    # execute alienv printenv packagestring to get a dictionary\n    # currently this works only with CVMFS\n    cmd=\"/cvmfs/alice.cern.ch/bin/alienv printenv \" + packagestring\n    proc = subprocess.Popen([cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\n\n    envstring, err = proc.communicate()\n    # ensure the printenv command executed successfully\n    if len(err.decode()) > 0:\n       print (err.decode())\n       raise Exception",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "f2c38f2e75c7cf9d8fc6911a146dff43e2ae88530da7b0194054c92c60b361b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# the software environment is now in the evnstring\n# split it on semicolon\nenvstring = envstring.decode()\ntokens = envstring.split(\";\")\n# build envmap\nenvmap = {}\nfor t in tokens:\n    # check for assignment\n    if t.count(\"=\") > 0:\n        assignment = t.rstrip().split(\"=\")\n        envmap[assignment[0]] = assignment[1]\n    elif t.count(\"export\") > 0:\n        # the scenario when we export or deal with a simple variable\n        # account for the case where this hasn't been assigned before\n        variable = t.split()[1]\n        if variable not in envmap:\n            envmap[variable] = \"\"\n\nreturn envmap\n\n#\n# functions for execution; encapsulated within a WorkflowExecutor class\n#\n\nclass Semaphore:\n    \"\"\"\n    An object that can be used as a semaphore\n    \"\"\"\n    def __init__(self):\n        self.locked = False\n    def lock(self):\n        self.locked = True\n    def unlock(self):\n        self.locked = False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "957b0d9aa1ef19388588a150671a0ca72cbea7cfe87652bea925b932b3431f66": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "class ResourceBoundaries:\n    \"\"\"\n    Holds global resource properties\n    \"\"\"\n    def __init__(self, cpu_limit, mem_limit, dynamic_resources=False, optimistic_resources=False):\n        self.cpu_limit = cpu_limit\n        self.mem_limit = mem_limit\n        self.dynamic_resources = dynamic_resources\n        # if enabled, tasks exceeding resource limits will still be attempted to run\n        self.optimistic_resources = optimistic_resources",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "046bd2dfb43219426091252b19567c916563a1ed4e8ae45789e4d319009c348a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "class TaskResources:\n    \"\"\"\n    Container holding the resources of a single task\n    \"\"\"\n    def __init__(self, tid, name, cpu, cpu_relative, mem, resource_boundaries):\n        # the task ID associated with these resources\n        self.tid = tid\n        self.name = name\n        # original CPU and memory assigned (permanent)\n        self.cpu_assigned_original = cpu\n        self.mem_assigned_original = mem\n        # relative CPU multiplier, to be applied to sampled CPU; set by the user, for instance, to allow backfilling tasks\n        # only applies when sampling resources; permanent\n        self.cpu_relative = cpu_relative if cpu_relative else 1\n        # CPU and memory assigned (temporary)\n        self.cpu_assigned = cpu\n        self.mem_assigned = mem\n        # global resource configuration\n        self.resource_boundaries = resource_boundaries\n        # sampled resources of this task\n        self.cpu_sampled = None\n        self.mem_sampled = None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "70ec38caa9dfffd01a8011433a3fa0deba9706c57e028606cf03cbf2bcadc583": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# resources sampled by this\n    self.cpu_sampled = None\n    self.mem_sampled = None\n    # set after a task completes to estimate resources for related tasks\n    self.walltime = None\n    self.cpu_taken = None\n    self.mem_taken = None\n    # gathered during monitoring\n    self.time_collect = []\n    self.cpu_collect = []\n    self.mem_collect = []\n    # linked to other tasks of the same type\n    self.related_tasks = None\n    # semaphore can be assigned\n    self.semaphore = None\n    # the task's priority value\n    self.nice_value = None\n    # indicates if the task's resources are currently reserved\n    self.booked = False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "3ae25f2e6e0f40231eefc578ffb58e51323ce1bb632e682fd72ff7a022a9cd51": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "@[property]\ndef is_complete(self):\n    return self.time_collection and not self.booked\n\ndef validate_resource_limits(self):\n    \"\"\"\n    Verify that allocated resources stay within set constraints\n    \"\"\"\n    cpu_limit_adhered = True\n    mem_limit_adhered = True\n    if self.cpu_assigned > self.resource_boundaries.cpu_limit:\n        cpu_limit_adhered = False\n        actionlogger.warning(\"CPU usage for task %s surpasses limit: %d > %d\", self.name, self.cpu_assigned, self.resource_boundaries.cpu_limit)\n    if self.cpu_assigned > self.resource_boundaries.mem_limit:\n        mem_limit_adhered = False\n        actionlogger.warning(\"Memory usage for task %s surpasses limit: %d > %d\", self.name, self.cpu_assigned, self.resource_boundaries.cpu_limit)\n    return cpu_limit_adhered and mem_limit_adhered",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "33d4858aca258481263aeff6cc10931fdda0b403c8dc890a930c44e3e2c6d861": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def limit_resources(self, cpu_limit=None, mem_limit=None):\n        \"\"\"\n        Set resource limits for this task\n        \"\"\"\n        if cpu_limit is None:\n            cpu_limit = self.resource_boundaries.cpu_limit\n        if mem_limit is None:\n            mem_limit = self.resource_boundaries.mem_limit\n        self.cpu_assigned = min(self.cpu_assigned, cpu_limit)\n        self.mem_assigned = min(self.mem_assigned, mem_limit)\n\n    def add(self, time_passed, cpu, mem):\n        \"\"\"\n        Interface for adding measured resource data after a certain time\n        \"\"\"\n        self.time_collect.append(time_passed)\n        self.cpu_collect.append(cpu)\n        self.mem_collect.append(mem)\n\n    def sample_resources(self):\n        \"\"\"\n        If the task is complete, sample CPU and MEM usage for tasks that haven't started yet\n        \"\"\"\n        if not self.is_done:\n            return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "3821ae1c4177e26b201d8c80283be1bf83ca5881818ea3f0b3da9601b0912102": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the length of self.time_collect is less than 3:\n    # Need at least 3 points to sample resources\n    self.cpu_sampled = self.cpu_assigned\n    self.mem_sampled = self.mem_assigned\n    actionlogger.debug(\"Task %s does not have enough points (< 3) to sample resources, setting to previously assigned values.\", self.name)\nelse:\n    # Calculate time deltas and exclude the first CPU measurement, which may be less meaningful,\n    # particularly if it comes from psutil.Proc.cpu_percent(interval=None)\n    time_deltas = [self.time_collect[i+1] - self.time_collect[i] for i in range(len(self.time_collect) - 1)]\n    cpu = sum([cpu * time_delta for cpu, time_delta in zip(self.cpu_collect[1:], time_deltas) if cpu >= 0])\n    self.cpu_sampled = cpu / sum(time_deltas)\n    self.mem_sampled = max(self.mem_collect)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "b881b9385eefd964d56d24b28cadc925af721b9c2f6cd7b458b15344133d31f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mem_sampled = 0\n        cpu_sampled = []\n        for res in self.related_tasks:\n            if res.is_done:\n                mem_sampled = max(mem_sampled, res.mem_sampled)\n                cpu_sampled.append(res.cpu_sampled)\n        cpu_sampled = sum(cpu_sampled) / len(cpu_sampled)\n\n        # If this task has already run with the assigned resources, set it to the limit\n        if cpu_sampled > self.resource_boundaries.cpu_limit:\n            actionlogger.warning(\"Sampled CPU (%.2f) exceeds assigned CPU limit (%.2f)\", cpu_sampled, self.resource_boundaries.cpu_limit)\n        elif cpu_sampled < 0:\n            actionlogger.debug(\"Sampled CPU for %s is %.2f < 0, setting to previously assigned value %.2f\", self.name, cpu_sampled, self.cpu_assigned)\n            cpu_sampled = self.cpu_assigned",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "32f31ac38c6409a86e60faa5c806ff8f9074e2c7d47c75e35491f3cd01367667": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if mem_sampled > self.resource_boundaries.mem_limit:\n        actionlogger.warning(\"Sampled memory (%.2f) exceeds the assigned memory limit (%.2f)\", mem_sampled, self.resource_boundaries.mem_limit)\nelif mem_sampled <= 0:\n    actionlogger.debug(\"Sampled memory for %s is %.2f, which is less than or equal to zero; setting it to the previously assigned value %.2f\", self.name, mem_sampled, self.mem_assigned)\n    mem_sampled = self.mem_assigned\n\nfor resource in self.related_tasks:\n    if resource.is_done or resource.booked:\n        continue\n    resource.cpu_assigned = cpu_sampled * resource.cpu_relative\n    resource.mem_assigned = mem_sampled\n    # If this task has been run before, maintain an optimistic approach and limit the resources if the sampled values exceed the limits\n    resource.limit_resources()\n\n\nclass ResourceManager:\n    \"\"\"\n    Central class for managing resources\n\n    - CPU limits\n    - Memory limits\n    - Semaphores\n\n    Provides an entry point for setting and querying resources to be updated.\n\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "82b498455868580f663f56a4a1b352d4d04321b3735f1c7cc70e9d1a42ca8efa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ENTRYPoint for managing and querying resources for updates.\n\nCan determine if a specific task can be executed based on the current resource usage.\nReserve and release resources as needed.\n\"\"\"\ndef __init__(self, cpu_limit, mem_limit, procs_parallel_max=100, dynamic_resources=False, optimistic_resources=False):\n    \"\"\"\n    Initialize members with default values\n    \"\"\"\n    # store TaskResources for all tasks\n    self.resources = []\n\n    # helper dictionaries for common objects that will be distributed to individual TaskResources objects\n    # to prevent further lookups and to share the same common objects\n    self.resources_related_tasks_dict = {}\n    self.semaphore_dict = {}\n\n    # one common object holding global resource settings like CPU and MEM limits\n    self.resource_boundaries = ResourceBoundaries(cpu_limit, mem_limit, dynamic_resources, optimistic_resources)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "92c3be16e11031c922fe974bd42301e452a0f83765ffc9a3f5d1d64c96218527": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# track resources reserved with the default priority\nself.cpu_booked = 0\nself.mem_booked = 0\n# count the tasks reserved with the default priority\nself.n_procs = 0\n\n# track resources reserved with the higher priority\nself.cpu_booked_backfill = 0\nself.mem_booked_backfill = 0\n# count the tasks reserved with the higher priority\nself.n_procs_backfill = 0\n\n# define the maximum concurrent tasks\nself.procs_parallel_max = procs_parallel_max\n\n# determine the default priority of this script\nself.nice_default = os.nice(0)\n# add 19 to set the priority for low-priority tasks\nself.nice_backfill = self.nice_default + 19",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "e163ecc5a7ab1ae79ae1d56312d044e2fd582265ab530d672ba749bc4f8d09ff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def add_task_resources(self, name, related_tasks_name, cpu, cpu_relative, mem, semaphore_string=None):\n    \"\"\"\n    Construct and add a new TaskResources object\n    \"\"\"\n    resources = TaskResources(len(self.resources), name, cpu, cpu_relative, mem, self.resource_boundaries)\n    if not resources.is_within_limits() and not self.resource_boundaries.optimistic_resources:\n        # exit if we can't proceed\n        print(f\"Resources for task {name} exceed the boundaries.\\nCPU: {cpu} (estimate) vs. {self.resource_boundaries.cpu_limit} (boundary)\\nMEM: {mem} (estimate) vs. {self.resource_boundaries.mem_limit} (boundary).\")\n        print(\"Use the --optimistic-resources flag with the runner to proceed despite these constraints.\")\n        exit(1)\n    # if we reach this point, the resources are within limits or the user has opted for an optimistic run, in which case we limit the resources accordingly.\n    resources.limit_resources()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "040c0f967ce687fb943f0e9e79464f881aa24590a801f996fe8d2b720dd60fd4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    self.resources.append(resources)\n        # perform these steps to ensure the same Semaphore object is used for all matching TaskResources, thereby avoiding a lookup\n        if semaphore_string:\n            if semaphore_string not in self.semaphore_dict:\n                self.semaphore_dict[semaphore_string] = Semaphore()\n            resources.semaphore = self.semaphore_dict[semaphore_string]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "54d77c1c73e09052bc3dfffeccfaac39231d78cc55f2b04fbda67d5dcde14843": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# To ensure each TaskResources has a list of related tasks, thereby eliminating the need for an additional lookup:\n    if related_tasks_name exists:\n        if related_tasks_name is not already in self.resources_related_tasks_dict:\n            # Initialize the assigned list as [valid to use, list of CPU, list of MEM, list of walltimes, list of parallel processes, list of used CPUs, list of assigned CPUs, list of tasks finished in the meantime]\n            self.resources_related_tasks_dict[related_tasks_name] = []\n        append resources to self.resources_related_tasks_dict[related_tasks_name]\n        set resources.related_tasks to self.resources_related_tasks_dict[related_tasks_name]\n\ndef add_monitored_resources(self, tid, time_delta_since_start, cpu, mem):\n    self.resources[tid].add(time_delta_since_start, cpu, mem)\n\ndef book(self, tid, nice_value):\n    \"\"\"\n    Reserve the resources for this task with the specified nice value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "5b62d953dc3e0ca8b01cb8f75a28cf05f6db4afc72b0793a4fe96cd1664afc4b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The final nice value is set during the final submission and may differ. This discrepancy can occur if the nice value was intended to be updated but the system does not allow it.\n```python\nres = self.resources[tid]\n# retrieve the previously set nice value from the last resource check\nprevious_nice_value = res.nice_value\n\nif previous_nice_value is None:\n    # this task was never checked for resources before, so treat it as backfill\n    actionlogger.warning(\"Task ID %d has never been checked for resources. Treating as backfill.\", tid)\n    nice_value = self.nice_backfill\nelif res.nice_value != nice_value:\n    actionlogger.warning(\"Task ID %d was last checked with a different nice value (%d) but is now being submitted with (%d).\", tid, res.nice_value, nice_value)\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "a8e16a5ffd2712661f91abc54a1aca39019c2ca0870ad32a39fb7de44395858c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    res.nice_value = nice_value\n    res.booked = True\n    if res.semaphore is not None:\n        res.semaphore.lock()\n    if nice_value != self.nice_default:\n        self.n_procs_backfill += 1\n        self.cpu_booked_backfill += res.cpu_assigned\n        self.mem_booked_backfill += res.mem_assigned\n        return\n    self.n_procs += 1\n    self.cpu_booked += res.cpu_assigned\n    self.mem_booked += res.mem_assigned",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "df7b80e33bd4db345bf730bc6f0b25bbf83e9681257e3299ef218906f6f63031": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def unbook(self, tid):\n    \"\"\"\n    Release the resources allocated to this task\n    \"\"\"\n    res = self.resources[tid]\n    res.booked = False\n    if self.resource_boundaries.dynamic_resources:\n        res.sample_resources()\n    if res.semaphore is not None:\n        res.semaphore.unlock()\n    if res.nice_value != self.nice_default:\n        self.cpu_booked_backfill -= res.cpu_assigned\n        self.mem_booked_backfill -= res.mem_assigned\n        self.n_procs_backfill -= 1\n        if self.n_procs_backfill <= 0:\n            self.cpu_booked_backfill = 0\n            self.mem_booked_backfill = 0\n        return\n    self.n_procs -= 1\n    self.cpu_booked -= res.cpu_assigned\n    self.mem_booked -= res.mem_assigned\n    if self.n_procs <= 0:\n        self.cpu_booked = 0\n        self.mem_booked = 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "bdb253d1e671a1826b04393fb69be5b5e693295eb219ccf7bd31e4c86ea2d532": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def ok_to_submit(self, tids):\n        \"\"\"\n        This generator yields the tid and nice value tuple from the list of task ids to be verified\n        \"\"\"\n        tids_copy = tids.copy()\n\n        def ok_to_submit_default(res):\n            \"\"\"\n            Return the default nice value if the conditions are satisfied, otherwise return None\n            \"\"\"\n            # evaluate CPU usage\n            okcpu = (self.cpu_booked + res.cpu_assigned <= self.resource_boundaries.cpu_limit)\n            # evaluate MEM usage\n            okmem = (self.mem_booked + res.mem_assigned <= self.resource_boundaries.mem_limit)\n            actionlogger.debug ('Condition check --normal-- for  ' + str(res.tid) + ':' + res.name + ' CPU ' + str(okcpu) + ' MEM ' + str(okmem))\n            return self.nice_default if (okcpu and okmem) else None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "378d792ebed8f640902cfc29541c87f16bd4478713c80ba79f0eed55d0e59411": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def ok_to_submit_backfill(res, backfill_cpu_factor=1.5, backfill_mem_factor=1.5):\n    \"\"\"\n    Return the backfill nice value if the conditions are satisfied, otherwise return None.\n    \"\"\"\n    if self.n_procs_backfill >= args.n_backfill:\n        return None\n\n    if res.cpu_assigned > 0.9 * self.resource_boundaries.cpu_limit or res.mem_assigned / self.resource_boundaries.cpu_limit >= 1900:\n        return None",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "4f9a4bc3cc3c1b84d2696d043b8488a94bc4810f408305daf0104aa8e519a842": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Analyze CPU\n    okcpu = (self.cpu_booked_backfill + res.cpu_assigned <= self.resource_boundaries.cpu_limit)\n    okcpu = okcpu and (self.cpu_booked + self.cpu_booked_backfill + res.cpu_assigned <= backfill_cpu_factor * self.resource_boundaries.cpu_limit)\n    # Analyze MEM\n    okmem = (self.mem_booked + self.mem_booked_backfill + res.mem_assigned <= backfill_mem_factor * self.resource_boundaries.mem_limit)\n    actionlogger.debug ('Condition check --backfill-- for  ' + str(res.tid) + ':' + res.name + ' CPU ' + str(okcpu) + ' MEM ' + str(okmem))\n\n    return self.nice_backfill if (okcpu and okmem) else None\n\nif self.n_procs + self.n_procs_backfill >= self.procs_parallel_max:\n    # In this scenario, no action can be taken\n    return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "10d388b9ba8b4e23e13cffdb49950eb55f26a044cf1bf36eb51f78617da62197": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for ok_to_submit_impl, should_break in ((ok_to_submit_default, True), (ok_to_submit_backfill, False)):\n            tid_index = 0\n            while tid_index < len(tids_copy):\n                tid = tids_copy[tid_index]\n                res = self.resources[tid]\n\n                actionlogger.info(\"Prepare resources for task %s, cpu: %f, mem: %f\", res.name, res.cpu_assigned, res.mem_assigned)\n                tid_index += 1\n\n                if (res.semaphore is not None and res.semaphore.locked) or res.booked:\n                    continue\n\n                nice_value = ok_to_submit_impl(res)\n                if nice_value is not None:\n                    # if a non-None nice value is obtained, it indicates that this task is ready to submit\n                    res.nice_value = nice_value\n                    # yield the tid along with its assigned nice value\n                    yield tid, nice_value",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "a542d15bab2d26c96ebf6716f1313d03cc6ae5ea60c5de7075233ca99360c0ac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "elif should_break:\n                    # terminate execution if the resources required for the next task are insufficient\n                    break\n\n\nclass WorkflowExecutor:\n    # Constructor\n    def __init__(self, workflowfile, args, jmax=100):\n      self.args = args\n      self.is_productionmode = args.production_mode == True or os.getenv(\"ALIEN_PROC_ID\") is not None\n      self.workflowfile = workflowfile\n      self.workflowspec = load_json(workflowfile)\n      self.globalinit = self.extract_global_environment(self.workflowspec) # initialize global environment settings\n      for e in self.globalinit['env']:\n        if os.environ.get(e, None) is None:\n           value = self.globalinit['env'][e]\n           actionlogger.info(\"Applying global environment from init section \" + str(e) + \" : \" + str(value))\n           os.environ[e] = str(value)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "7d3b7a6ea637f82747fc87c72d875d109c7768bf8bcfabf4e5ad359927551427": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# retain only the tasks that are essential to run according to the user's criteria\n      self.workflowspec = filter_workflow(self.workflowspec, args.target_tasks, args.target_labels)\n\n      if not self.workflowspec['stages']:\n          if args.target_tasks:\n              print ('It seems that some of the selected target tasks are missing from the workflow')\n              exit (0)\n          print ('The workflow is empty; there is nothing to process')\n          exit (0)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "400c0c1473d559299a5cc2205308436c8e387eba7eb26c92a72749d2789ce704": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# build the DAG and calculate task weights\n    workflow = build_dag_properties(self.workflowspec)\n    if args.visualize_workflow:\n        draw_workflow(self.workflowspec)\n    self.possiblenexttask = workflow['nexttasks']\n    self.taskweights = workflow['weights']\n    self.topological_orderings = workflow['topological_ordering']\n    self.taskuniverse = [ l['name'] for l in self.workflowspec['stages'] ]\n    # create a task ID to task name lookup\n    self.idtotask = [ 0 for _ in self.taskuniverse ]\n    self.tasktoid = {}\n    for i, name in enumerate(self.taskuniverse):\n        self.tasktoid[name]=i\n        self.idtotask[i]=name\n\n    if args.update_resources:\n        update_resource_estimates(self.workflowspec, args.update_resources)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "7cfe7fe6765aad53b9e449eabfb19d657da6aee51d2e385d696876ac65b14426": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create the object responsible for managing resources...\n  self.resource_manager = ResourceManager(args.cpu_limit, args.mem_limit, args.maxjobs, args.dynamic_resources, args.optimistic_resources)\n  for task in self.workflowspec['stages']:\n      # ...and include all initial resource estimations\n      global_task_name = self.get_global_task_name(task[\"name\"])\n      try:\n          cpu_relative = float(task[\"resources\"][\"relative_cpu\"])\n      except TypeError:\n          cpu_relative = 1\n      self.resource_manager.add_task_resources(task[\"name\"], global_task_name, float(task[\"resources\"][\"cpu\"]), cpu_relative, float(task[\"resources\"][\"mem\"]), task.get(\"semaphore\"))\n\n  self.procstatus = { tid:'ToDo' for tid in range(len(self.workflowspec['stages'])) }\n  self.taskneeds= { t:set(self.getallrequirements(t)) for t in self.taskuniverse }\n  self.stoponfailure = not args.keep_going\n  print (\"Stop on failure \",self.stoponfailure)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "71d091983515f33095f24520677fe61e58a730083d75a2429fe5bbcc36c2cd90": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    self.scheduling_iteration = 0 # track the number of attempts to schedule new tasks\n    self.process_list = []  # list of tasks with normal priority currently scheduled\n    self.backfill_process_list = [] # list of tasks with low backfill priority that are currently scheduled (not sure if necessary)\n    self.pid_to_psutilsproc = {}  # cache of psutil processes for resource monitoring\n    self.pid_to_files = {} # can automatically detect which files are produced by which task (at least partially)\n    self.pid_to_connections = {} # can automatically detect which connections are opened by which task (at least partially)\n    signal.signal(signal.SIGINT, self.SIGHandler)\n    signal.siginterrupt(signal.SIGINT, False)\n    self.internalmonitorcounter = 0 # internal counter\n    self.internalmonitorid = 0 # internal identifier\n    self.tids_marked_toretry = [] # sometimes we might want to retry a failed task (simply because it was \"unlucky\") and we keep them in this list",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "f9df592566130173effd8211bf8f58edfaa97f025b5ae8b33b85b11000f65d88": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    self.retry_counter = [0 for tid in range(len(self.taskuniverse))] # we keep track of how many times each task has been retried\n    self.task_retries = [self.workflowspec['stages'][tid].get('retry_count',0) for tid in range(len(self.taskuniverse))] # the specific \"retry\" count for each task, which needs to be extracted from the JSON",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "c577f8dec0e68095ac5e220b43fe36fb8bdfcb60d89a181cd0d425071ad18004": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "self.alternative_envs = {} # mapping from taskid to alternative software environments (to be applied per task)\n      # initialize alternative software environments\n      self.init_alternative_software_environments()\n\n    def SIGHandler(self, signum, frame):\n       \"\"\"\n       essentially forcing the termination of all child processes\n       \"\"\"\n       actionlogger.info(\"Signal \" + str(signum) + \" received\")\n       try:\n           procs = psutil.Process().children(recursive=True)\n       except (psutil.NoSuchProcess):\n           pass\n       except (psutil.AccessDenied, PermissionError):\n           procs = getChildProcs(os.getpid())\n\n       for p in procs:\n           actionlogger.info(\"Terminating \" + str(p))\n           try:\n             p.terminate()\n           except (psutil.NoSuchProcess, psutil.AccessDenied):\n             pass",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "4b198b55810abea3fbb610884a3fb89b5a818027611826f8f3c3449d6bcd3e50": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "_, alive = psutil.wait_procs(procs, timeout=3)\nfor p in alive:\n    try:\n        actionlogger.info(\"Terminating \" + str(p))\n        p.terminate()\n    except (psutil.NoSuchProcess, psutil.AccessDenied):\n        pass\n\nexit(1)\n\ndef extract_global_environment(self, workflowspec):\n    \"\"\"\n    Verifies if the workflow includes a specific initialization task that sets a global environment.\n    Extract the relevant environment information and remove it from workflowspec.\n    \"\"\"\n    init_index = 0 # this must be the first task in the workflow\n    globalenv = {}\n    initcmd = None\n    if workflowspec['stages'][init_index]['name'] == '__global_init_task__':\n        env = workflowspec['stages'][init_index].get('env', None)\n        if env is not None:\n            globalenv = { e : env[e] for e in env }\n        cmd = workflowspec['stages'][init_index].get('cmd', None)\n        if cmd != 'NO-COMMAND':\n            initcmd = cmd",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "676d4a7ef01b45bbb718a428b37429086430cab39674fed8c75207ee600dda12": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    del workflowspec['stages'][init_index]\n\n    return {\"env\" : globalenv, \"cmd\" : initcmd }\n\n    def execute_globalinit_cmd(self, cmd):\n        actionlogger.info(f\"Executing global setup command: {cmd}\")\n        # execute the global initialization command (consider any cleanup or setup tasks that need to be done)\n        p = subprocess.Popen(['/bin/bash','-c', cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        stdout, stderr = p.communicate()\n\n        # verify if the command executed successfully (return code 0)\n        if p.returncode == 0:\n            actionlogger.info(stdout.decode())\n        else:\n            # this should be treated as an error\n            actionlogger.error(\"Error executing global initialization function\")\n            return False\n        return True\n\n    def get_global_task_name(self, name):\n        \"\"\"\n        Retrieve the global task name\n        \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "abeb952eb2b58c63aa518310b574311196032103c619487102500441db43d394": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def get_global_task_name(self, name):\n        \"\"\"\n        Retrieve the global task name\n\n        Tasks are considered related if only the suffix _<i> differs\n        \"\"\"\n        tokens = name.split(\"_\")\n        try:\n            int(tokens[-1])\n            return \"_\".join(tokens[:-1])\n        except ValueError:\n            pass\n        return name\n\n    def getallrequirements(self, task_name):\n        \"\"\"\n        Obtain all requirements of a task by its name\n        \"\"\"\n        l = []\n        for required_task_name in self.workflowspec['stages'][self.tasktoid[task_name]]['needs']:\n            l.append(required_task_name)\n            l += self.getallrequirements(required_task_name)\n        return l",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "8602d9894313a115396c6b51257e77c55fada7ed0071c898edd2ac18988b45c8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def get_logfile(self, tid):\n        \"\"\"\n        The O2 taskwrapper records task stdout and stderr in a logfile named <task>.log.\n        Retrieve the precise path of this logfile using the task ID.\n        \"\"\"\n        # calculates the name of the logfile for this task\n        name = self.workflowspec['stages'][tid]['name']\n        workdir = self.workflowspec['stages'][tid]['cwd']\n        return os.path.join(workdir, f\"{name}.log\")\n\n    def get_done_filename(self, tid):\n        \"\"\"\n        After a task successfully completes, the O2 taskwrapper creates a <task>.log_done file.\n        Obtain the exact path of this file based on the task ID.\n        \"\"\"\n        return f\"{self.get_logfile(tid)}_done\"\n\n    def get_resources_filename(self, tid):\n        \"\"\"\n        Upon task completion, the O2 taskwrapper generates a <task>.log_time file.\n        Retrieve the precise path of this file using the task ID.\n        \"\"\"\n        return f\"{self.get_logfile(tid)}_time\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "502ae7c98fa303617d61a77550259a54649b342e810bfd52ebfcc6ae88a284fc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # resets the done status for tasks that need to be executed again\n    def reset_done_status(self, listoftaskids):\n       \"\"\"\n       Reset the <task>.log_done files for the specified task IDs\n       \"\"\"\n       for tid in listoftaskids:\n          done_filename = self.get_done_filename(tid)\n          task_name=self.workflowspec['stages'][tid]['name']\n          if args.dry_run:\n              print (\"Would reset task \" + task_name + \" to be done again\")\n          else:\n              print (\"Resetting task \" + task_name + \" to be done again\")\n              if os.path.exists(done_filename) and os.path.isfile(done_filename):\n                  os.remove(done_filename)\n\n    # launches a task as a subprocess and keeps track of the Popen instance\n    def execute(self, tid, nice):\n      \"\"\"\n      Execute a task",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "aee0141f2f41283b06a01c8885f280a39ce29f641dc74a4e9d58a03caf5da75f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "1. if necessary, create the working directory if it doesn't already exist\n2. mark the task as running by updating the lookup structures\n3. configure the specific environment if required for the task\n4. initialize psutil.Process from the command line\n4.1 modify the niceness of this process if needed\n5. return the psutil.Process object\n\"\"\"\nactionlogger.debug(\"Submitting task \" + str(self.idtotask[tid]) + \" with nice value \" + str(nice))\ncommand = self.workflowspec['stages'][tid]['cmd']\nworking_directory = self.workflowspec['stages'][tid]['cwd']\nif working_directory:\n    if os.path.exists(working_directory) and not os.path.isdir(working_directory):\n        actionlogger.error('Cannot create working directory ... another resource is already present')\n        return None\n\n    if not os.path.isdir(working_directory):\n        os.makedirs(working_directory)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "b92d310c2d640efdb2b25d8a44efaba1d04cb750ae7feb27c3207254cb22dd7d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the directory does not exist at workdir:\n                  create it using os.makedirs()\n\n      update self.procstatus[tid] to 'Running'\n      if args.dry_run is True:\n          construct drycommand as \"echo \\' \" + str(self.scheduling_iteration) + \" : would do \" + str(self.workflowspec['stages'][tid]['name']) + \"\\'\"\n          return subprocess.Popen(['/bin/bash','-c',drycommand], cwd=workdir)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "04399d1832860ec1cb7e8964e642804921c452001a6810a1cf1ca79d521f6496": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    taskenv = os.environ.copy()\n      # apply specific (non-default) software version, if any\n      # (this was set previously)\n      alternative_env = self.alternative_envs.get(tid, None)\n      if alternative_env is not None and len(alternative_env) > 0:\n          actionlogger.info('Applying an alternative software environment to task ' + self.idtotask[tid])\n          if alternative_env.get('TERM') is not None:\n              # the environment is a complete environment\n              taskenv = {}\n              taskenv = alternative_env\n          else:\n            for entry in alternative_env:\n              # overwrite existing entries\n              taskenv[entry] = alternative_env[entry]\n\n      # include task-specific environment\n      if self.workflowspec['stages'][tid].get('env') != None:\n          taskenv.update(self.workflowspec['stages'][tid]['env'])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "49f0906ba3e293b704fe8c1a67a7ea8a2d066d5e06e92bac9dcc13bd76bdcebd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# envfilename = \"taskenv_\" + str(tid) + \".json\"\n      # with open(envfilename, \"w\") as file:\n      #    json.dump(taskenv, file, indent=2)\n\n      p = psutil.Popen(['/bin/bash','-c',c], cwd=workdir, env=taskenv)\n      try:\n          p.nice(nice)\n      except (psutil.NoSuchProcess, psutil.AccessDenied):\n          actionlogger.error('Failed to set nice value of ' + str(p.pid) + ' to ' + str(nice))\n\n      return p\n\n    def ok_to_skip(self, tid):\n        \"\"\"\n        Determine if a task can be skipped based on the existence of <task>.log_done\n        \"\"\"\n        done_filename = self.get_done_filename(tid)\n        if os.path.exists(done_filename) and os.path.isfile(done_filename):\n          return True\n        return False\n\n    def try_job_from_candidates(self, taskcandidates, finished):\n       \"\"\"\n       Attempt to schedule the next tasks\n       \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "587857f8c40d31ee2e33fae1d21ee66f151f2851cc5d41b089d57c2f03207b93": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```python\nArgs:\n    taskcandidates: list\n       list of possible tasks that can be submitted\n    finished: list\n       empty list that will be filled with IDs of tasks that were completed in the meantime\n    \"\"\"\n    self.scheduling_iteration = self.scheduling_iteration + 1\n\n    # immediately remove \"completed / skippable\" tasks\n    for tid in taskcandidates.copy():  # <--- the copy is crucial !! otherwise this loop might not function as intended\n       if self.ok_to_skip(tid):\n           finished.append(tid)\n           taskcandidates.remove(tid)\n           actionlogger.info(\"Skipping task \" + str(self.idtotask[tid]))\n```",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "96f3c34f8bfb14dd5cdea0457b0bbc0990ad71e1f291ca883c5ebc822491a813": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# if tasks_skipped:\n   #  return  # ---> we return early to maintain order (the next candidate should be the offspring of the skipped jobs)\n   # retrieve task ID and proposed niceness from the generator\n   for (tid, nice_value) in self.resource_manager.ok_to_submit(taskcandidates):\n      actionlogger.debug (\"attempting to submit \" + str(tid) + ':' + str(self.idtotask[tid]))\n      if p := self.submit(tid, nice_value):\n         # set the niceness explicitly here from the process again as submit might not have changed it\n         # inform the ResourceManager of the final niceness\n         self.resource_manager.book(tid, p.nice())\n         self.process_list.append((tid,p))\n         taskcandidates.remove(tid)\n         # short delay\n         time.sleep(0.1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "bcd9da6d3335f857f89665160a1c328df43a15ecc6367145e03e773def40003e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def stop_pipeline_and_exit(self, process_list):\n        # terminate all remaining processes\n        for p in process_list:\n           p[1].terminate()\n\n        exit(1)\n\n\n    def monitor(self, process_list):\n        \"\"\"\n        Iterate through all active tasks and collect their current resource usage.\n\n        Resources are aggregated for each task and its descendants.\n\n        Pass the CPU, PSS, USS, niceness, and current timestamp to the metriclogger.\n\n        Issue a warning if the total PSS surpasses the allocated memory limit.\n        \"\"\"\n        self.internalmonitorcounter+=1\n        if self.internalmonitorcounter % 5 != 0:\n            return\n\n        self.internalmonitorid+=1\n\n        globalCPU=0.\n        globalPSS=0.\n        resources_per_task = {}\n\n        for tid, proc in process_list:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "4fc28737d2220c8a36d7d0416abd329f3dd364c53a89eda82f4fb6165eff8f2c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for tid, proc in process_list:\n\n    # proc is a Popen object\n    pid = proc.pid\n    if self.pid_to_files.get(pid) is None:\n        self.pid_to_files[pid] = set()\n        self.pid_to_connections[pid] = set()\n    try:\n        psutilProcs = [proc]\n        # use psutil for CPU measurement\n        psutilProcs += proc.children(recursive=True)\n    except psutil.NoSuchProcess:\n        continue\n\n    except (psutil.AccessDenied, PermissionError):\n        psutilProcs += getChildProcs(pid)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "339930e2d644af15749cac9a11150083c30ba0e29fdcb0f281a25e53ab7b88d3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# accumulate total metrics (CPU, memory)\ntotalCPU = 0.\ntotalPSS = 0.\ntotalSWAP = 0.\ntotalUSS = 0.\nfor p in psutilProcs:\n    \"\"\"\n    try:\n        for f in p.open_files():\n            self.pid_to_files[pid].add(str(f.path)+'_'+str(f.mode))\n        for f in p.connections(kind=\"all\"):\n            remote=f.raddr\n            if remote==None:\n                remote='none'\n            self.pid_to_connections[pid].add(str(f.type)+\"_\"+str(f.laddr)+\"_\"+str(remote))\n    except Exception:\n        pass\n    \"\"\"\n    thispss=0\n    thisuss=0\n    # MEMORY part\n    try:\n        fullmem=p.memory_full_info()\n        thispss=getattr(fullmem,'pss',0) #<-- pss not available on MacOS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "c39734bc09d3449288c5c5520976783a0b69321a5254486e3eed8fc112e5d125": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    thispss=getattr(fullmem,'pss',0) #<-- pss not available on MacOS\n    totalPSS=totalPSS + thispss\n    totalSWAP=totalSWAP + fullmem.swap\n    thisuss=fullmem.uss\n    totalUSS=totalUSS + thisuss\nexcept (psutil.NoSuchProcess, psutil.AccessDenied):\n    pass",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "e4a85a9f1756a65818639502d1866c3b7285d80d8c7c1c24e09e9b3472a9fe1d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# CPU section\n# retrieve existing process or add new one\ncachedproc = self.pid_to_psutilsproc.get(p.pid)\nif cachedproc is not None:\n    try:\n        thiscpu = cachedproc.cpu_percent(interval=None)\n    except (psutil.NoSuchProcess, psutil.AccessDenied):\n        thiscpu = 0.\n    totalCPU += thiscpu\n    # thisresource = {'iter': self.internalmonitorid, 'pid': p.pid, 'cpu': thiscpu, 'uss': thisuss/1024./1024., 'pss': thispss/1024./1024.}\n    # metriclogger.info(thisresource)\nelse:\n    self.pid_to_psutilsproc[p.pid] = p\n    try:\n        self.pid_to_psutilsproc[p.pid].cpu_percent()\n    except (psutil.NoSuchProcess, psutil.AccessDenied):\n        pass",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "d1d1e8631417f473db23f78ae2c920ccf5154526866ab95a024a5a6f7387cc80": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "time_delta = int((time.perf_counter() - self.start_time) * 1000)\ntotalUSS /= 1024 / 1024\ntotalPSS /= 1024 / 1024\nnice_value = proc.nice()\nresources_per_task[tid] = {'iter': self.internalmonitorid, 'name': self.idtotask[tid], 'cpu': totalCPU, 'uss': totalUSS, 'pss': totalPSS, 'nice': nice_value, 'swap': totalSWAP, 'label': self.workflowspec['stages'][tid]['labels']}\nself.resource_manager.add_monitored_resources(tid, time_delta, totalCPU / 100, totalPSS)\nif nice_value == self.resource_manager.nice_default:\n    globalCPU += totalCPU\n    globalPSS += totalPSS\n\nmetriclogger.info(resources_per_task[tid])\nsend_webhook(self.args.webhook, resources_per_task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "24a3d85b4915e67e757beef4ca8dae1b24a86ca25bcf4b1a8b7603a18fd750c7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if globalPSS exceeds self.resource_manager.resource_boundaries.mem_limit:\n            metriclogger.info('*** MEMORY LIMIT EXCEEDED !! ***')\n            # --> This could be utilized for corrective actions like terminating ongoing jobs\n            # (or more appropriately, hibernating them)\n\n    def waitforany(self, process_list, finished, failingtasks):\n       \"\"\"\n       Cycle through all submitted tasks to check their completion status\n\n       1. If the process is still running, take no action\n       2. If the process has completed, retrieve its return value, update the finished and failingtasks lists\n       2.1 release resources\n       2.2 reclaim utilized resources and hand them over to the ResourceManager\n       \"\"\"\n       failuredetected = False\n       failingpids = []\n       if len(process_list) == 0:\n           return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "f52abc5b9d65328a17ebfaa033d9d6faa4ec0744b05863d0c34c78419549e1c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for p in list(process_list):\n    pid = p[1].pid\n    tid = p[0]  # the task id of this process\n    returncode = 0\n    if not self.args.dry_run:\n        returncode = p[1].poll()\n    if returncode is not None:\n        actionlogger.info('Task ' + str(pid) + ' ' + str(tid) + ':' + str(self.idtotask[tid]) + ' finished with status ' + str(returncode))\n        # account for cleared resources\n        self.resource_manager.unbook(tid)\n        self.procstatus[tid] = 'Done'\n        finished.append(tid)\n        #self.validate_resources_running(tid)\n        process_list.remove(p)\n        if returncode != 0:\n            print(str(self.idtotask[tid]) + ' failed ... checking retry')\n            # we inspect if this is something \"unlucky\" which could be resolved by a simple resubmit",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "6107e8cfdc04af0c445903e0e74af9b0e1c426248b2e29db5af3eede6318798b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if self.is_worth_retrying(tid) and ((self.retry_counter[tid] < int(args.retry_on_failure)) or (self.retry_counter[tid] < int(self.task_retries[tid]))):\n    print (str(self.idtotask[tid]) + ' to be retried')\n    actionlogger.info ('Task ' + str(self.idtotask[tid]) + ' failed but set to be retried ')\n    self.tids_marked_toretry.append(tid)\n    self.retry_counter[tid] += 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "4a834faef488bceb8527efb7fd06c35dfe37aad28dc25ba666afa9bb3d7af730": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "else:\n    failuredetected = True\n    failingpids.append(pid)\n    failingtasks.append(tid)\n\nif failuredetected and self.stoponfailure:\n    actionlogger.info('Stopping pipeline due to failure in stages with PID ' + str(failingpids))\n    # self.analyse_files_and_connections()\n    if self.args.stdout_on_failure:\n        self.cat_logfiles_tostdout(failingtasks)\n    self.send_checkpoint(failingtasks, self.args.checkpoint_on_failure)\n    self.stop_pipeline_and_exit(process_list)\n\n# empty finished means we need to wait more\nreturn len(finished)==0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "9ec18f9abecb7c1e488be27e7dd27563564997fbf0dd3cb956d9a58fdec3f3bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# empty finished means we need to wait longer\n    return len(finished)==0\n\ndef is_worth_retrying(self, tid):\n    # This function examines certain patterns in logfiles to determine if retrying the task could be beneficial.\n    # Ideally, this should be customizable by the user, allowing them to define a custom lambda or regular expression.\n    # For now, we simply retry the task a few times.\n    logfile = self.get_logfile(tid)\n\n    return True #! --> currently, we retry tasks multiple times\n\n    # 1) ZMQ_EVENT + interrupted system calls (DPL bug during shutdown)\n    # Uncertain if using 'grep' is more efficient than native Python text search...\n    # status = os.system('grep \"failed setting ZMQ_EVENTS\" ' + logfile + ' &> /dev/null')\n    # if os.WEXITSTATUS(status) == 0:\n    #   return True\n\n    # return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "ec5e8c16c9253fa3ca21f3740c57ee8d58ceacf8e843c3fdeb026c21ab3d4a2c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# return False\n\n\n    def cat_logfiles_tostdout(self, taskids):\n        # In case of errors, we can display the contents of the logfiles for each taskname on stdout. Assuming the taskname follows the convention of having a corresponding \"taskname.log\" file.\n        for tid in taskids:\n            logfile = self.get_logfile(tid)\n            if os.path.exists(logfile):\n                print(' ----> START OF LOGFILE ', logfile, ' -----')\n                os.system('cat ' + logfile)\n                print(' <---- END OF LOGFILE ', logfile, ' -----')\n\n    def send_checkpoint(self, taskids, location):\n        # Creates a tarball that includes all base directory files (timeframe-independent) and the directory containing corrupted timeframes, then copies it to a specified ALIEN location. This is not a core function but rather a utility for managing error conditions on the GRID.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "5db75e06b8a3ca713022530abde8b8211ca03339fd9d30d62fb61d96f1a672cb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def create_tar_command(dir='./', flags='cf', findtype='f', filename='checkpoint.tar'):\n    return 'find ' + str(dir) + ' -maxdepth 1 -type ' + str(findtype) + ' -print0 | xargs -0 tar ' + str(flags) + ' ' + str(filename)\n\nif location is not None:\n    print('Creating a failure checkpoint')\n    # let's determine a filename using ALIEN_PROC_ID, hostname, and PID\n\n    aliprocid = os.environ.get('ALIEN_PROC_ID')\n    if aliprocid is None:\n        aliprocid = 0\n\n    fn = 'pipeline_checkpoint_ALIENPROC' + str(aliprocid) + '_PID' + str(os.getpid()) + '_HOST' + socket.gethostname() + '.tar'\n    actionlogger.info(\"Checkpointing to file \" + fn)\n    tarcommand = create_tar_command(filename=fn)\n    actionlogger.info(\"Creating tar with command \" + tarcommand)\n\n    # generating a README file with instructions on how to use the checkpoint\n    readmefile = open('README_CHECKPOINT_PID' + str(os.getpid()) + '.txt', 'w')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "050e1db61b9ec2ff0f1e565d43e56a1a7c46a676b893628260fdf7c56a76c4ed": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for tid in taskids:\n             taskspec = self.workflowspec['stages'][tid]\n             name = taskspec['name']\n             readmefile.write('A checkpoint was created due to a failure in task ' + name + '\\n')\n             readmefile.write('To reproduce this checkpoint, follow these steps:\\n')\n             readmefile.write('a) Set up the necessary O2sim environment using alienv\\n')\n             readmefile.write('b) Execute: $O2DPG_ROOT/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ' + name + '$ --retry-on-failure 0\\n')\n           readmefile.close()\n\n           # Firstly, the base directory\n           os.system(tarcommand)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "e29374613778232af57a11fccd93b64cd91e275c9c98163b043163e18bca9fc2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# start by setting the base directory\nos.system(tarcommand)\n\n# subsequently, include specifics for the given task ids if applicable\nfor tid in taskids:\n  taskspec = self.workflowspec['stages'][tid]\n  directory = taskspec['cwd']\n  if directory != \"./\":\n    tarcommand = get_tar_command(dir=directory, flags='rf', filename=fn)\n    actionlogger.info(\"Tar command is \" + tarcommand)\n    os.system(tarcommand)\n    # similar action for symbolic links\n    tarcommand = get_tar_command(dir=directory, flags='rf', findtype='l', filename=fn)\n    actionlogger.info(\"Tar command is \" + tarcommand)\n    os.system(tarcommand)\n\n# prepend file:/// to indicate a local file\nfn = \"file://\" + fn\nactionlogger.info(\"Local checkpoint file is \" + fn)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "9adac40ee286160fdf05ce990f8c5d9ff4928e4b894a807d6622d61c5f2b9109": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # the location should be an alien path such as alien:///foo/bar/\n           copycommand='alien.py cp ' + fn + ' ' + str(location) + '@disk:1'\n           actionlogger.info(\"Copying to alien \" + copycommand)\n           os.system(copycommand)\n\n    def init_alternative_software_environments(self):\n        \"\"\"\n        Sets up alternative software environments for particular tasks, if the workflow specification includes a relevant annotation.\n        \"\"\"\n\n        environment_cache = {}\n        # iterate over all tasks and configure the environment\n        for taskid in range(len(self.workflowspec['stages'])):\n          packagestr = self.workflowspec['stages'][taskid].get(\"alternative_alienv_package\")\n          if packagestr is None:\n             continue\n\n          if environment_cache.get(packagestr) is None:\n             environment_cache[packagestr] = get_alienv_software_environment(packagestr)\n\n          self.alternative_envs[taskid] = environment_cache[packagestr]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "593677a87248d0c472efe3754018fca3c8e6051a64218ab8224e279d08863274": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def process_files_and_connections(self):\n    for p, s in self.pid_to_files.items():\n        for f in s:\n            print(\"F\" + str(f) + \" : \" + str(p))\n    for p, s in self.pid_to_connections.items():\n        for c in s:\n            print(\"C\" + str(c) + \" : \" + str(p))\n        #print(str(p) + \" CONS \" + str(c))\n    try:\n        # check for overlaps\n        for p1, s1 in self.pid_to_files.items():\n            for p2, s2 in self.pid_to_files.items():\n                if p1 != p2:\n                    if isinstance(s1, set) and isinstance(s2, set):\n                        if len(s1) > 0 and len(s2) > 0:\n                            try:\n                                inters = s1.intersection(s2)\n                            except Exception:\n                                print('Exception during intersection check')\n                                pass\n                            if len(inters) > 0:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "5085b7b0b94420e1bca94f31ae35cd0ebbc555649b9c1c3d1ecbc7c2cea25985": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if (len(inters)>0):\n        print ('FILE Intersection ' + str(p1) + ' ' + str(p2) + ' ' + str(inters))\n    # check for intersections\n    for p1, s1 in self.pid_to_connections.items():\n        for p2, s2 in self.pid_to_connections.items():\n            if p1!=p2:\n                if type(s1) is set and type(s2) is set:\n                    if len(s1)>0 and len(s2)>0:\n                        try:\n                            inters = s1.intersection(s2)\n                        except Exception:\n                            print ('Exception during intersect inner')\n                            pass\n                        if (len(inters)>0):\n                            print ('CON Intersection ' + str(p1) + ' ' ' + str(p2) + ' ' + str(inters))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "6f934137f865f0f467cdae02b2d7f1bb57810184f28d92f28c5372e3464a5dc1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# check for intersections\n            #for p1, s1 in self.pid_to_files.items():\n            #    for p2, s2 in self.pid_to_files.items():\n            #        if p1 != p2 and len(s1.intersection(s2)) != 0:\n            #            print('Intersection found between files ' + str(p1) + ' and ' + str(p2) + ' with common elements ' + str(s1.intersection(s2)))\n        except Exception as e:\n            exc_type, exc_obj, exc_tb = sys.exc_info()\n            fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]\n            print(exc_type, fname, exc_tb.tb_lineno)\n            print('Exception during intersect outer')\n            pass\n\n    def is_good_candidate(self, candid, finishedtasks):\n        if self.procstatus[candid] != 'ToDo':\n            return False\n        required_tasks = set([self.tasktoid[t] for t in self.taskneeds[self.idtotask[candid]]])\n        if set(finishedtasks).intersection(required_tasks) == required_tasks:\n            return True\n        return False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "1a60d60907e6f1d7319de9a3f0e203c2e57a9896087b708b9b2978dd8799b79d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def emit_code_for_task(self, tid, lines):\n    actionlogger.debug(\"Submitting task \" + str(self.idtotask[tid]))\n    taskspec = self.workflowspec['stages'][tid]\n    command = taskspec['cmd']\n    working_directory = taskspec['cwd']\n    environment = taskspec.get('env')\n    # generally:\n    # try to create directory\n    lines.append('[ ! -d ' + working_directory + ' ] && mkdir ' + working_directory + '\\n')\n    # change directory\n    lines.append('cd ' + working_directory + '\\n')\n    # set local environment variables\n    if environment:\n        for key, value in environment.items():\n            lines.append('export ' + key + '=' + str(value) + '\\n')\n    # execute command\n    lines.append(command + '\\n')\n    # unset local environment variables\n    if environment:\n        for key, value in environment.items():\n            lines.append('unset ' + key + '\\n')\n\n    # return to previous directory\n    lines.append('cd $OLDPWD\\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "0e85a771fb6a19cae8f5930f1356007226712fc700dd89d940eab14c2d3b29b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# navigate back\n    lines.append('cd $OLDPWD\\n')\n\n\n# generate a standalone bash script for running the workflow\n    def produce_script(self, filename):\n        # select one of the correct task sequences\n        taskorder = self.topological_orderings[0]\n        outF = open(filename, \"w\")\n\n        lines=[]\n        # header\n        lines.append('#!/usr/bin/env bash\\n')\n        lines.append('#THIS FILE IS AUTOGENERATED\\n')\n        lines.append('export JOBUTILS_SKIPDONE=ON\\n')\n\n        # record the overall environment configuration\n        # especially to capture the workflow's initialization\n        lines.append('#-- GLOBAL INIT SECTION FROM WORKFLOW --\\n')\n        for e in self.globalinit['env']:\n            lines.append('export ' + str(e) + '=' + str(self.globalinit['env'][e]) + '\\n')\n        lines.append('#-- TASKS FROM WORKFLOW --\\n')\n        for tid in taskorder:\n            print ('Processing task ' + self.idtotask[tid])\n            self.emit_code_for_task(tid, lines)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "59bfc9bef4cd9780befb7172360da06a8e5c87e107fe19dc1081e38c114686cf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    outF.writelines(lines)\n    outF.close()\n\n    def production_endoftask_hook(self, tid):\n        # Executes an end-of-task hook after a successful task, intended for use in GRID productions.\n        # Currently, it handles archiving log files and done + time files from jobutils.\n        # In the future, this may expand to include more generic tasks like dynamic cleanup of intermediate files.\n        # Special attention is needed for the continue feature as `_done` files are now stored elsewhere.\n        actionlogger.info(\"Cleaning up log files for task \" + str(tid))\n        logf = self.get_logfile(tid)\n        donef = self.get_done_filename(tid)\n        timef = logf + \"_time\"\n\n        # Add to the tar file archive\n        tf = tarfile.open(name=\"pipeline_log_archive.log.tar\", mode='a')\n        if tf is not None:\n            tf.add(logf)\n            tf.add(donef)\n            tf.add(timef)\n            tf.close()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "37910673a09da7de37c315bc979c91c7ff14843163187377522d17440f5dcc54": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# remove the original file\nos.remove(logf)\nos.remove(donef)\nos.remove(timef)\n\n# output an error message if no progress can be made\ndef noprogress_errormsg(self):\n    # TODO: instead of repeating this, link to the documentation for further details\n    msg = \"\"\"Scheduler runtime error: The scheduler cannot proceed given a non-empty candidate set.\n\n\"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "2b6e64fc5a423a693a6dd4ed58ee22fe6f4af5d6308f6a5db99b58a8da4165d5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Explanation: This often occurs when the **PREDICTED** resource needs for certain tasks in the workflow surpass the available CPU cores or memory (as explicitly or implicitly set via the --cpu-limit and --mem-limit options). It can be particularly common on laptops with <=16GB of RAM when one of the tasks requires around 16GB. To address this, one can instruct the scheduler to use a slightly higher memory limit with an explicit --mem-limit option (for example, `--mem-limit 20000` to set it to 20GB). This could be effective if the **ACTUAL** resource usage is lower than anticipated (as only small test cases are being run).",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "96cceec3885695f205bc44555acbb2879070dc461e448fbc00ec3680ee32c074": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In addition, it could be beneficial to run the workflow without the resource-aware, dynamic scheduler.\nThis can be achieved by converting the JSON workflow into a linear shell script and directly executing it.\nTo do this, use the `--produce-script myscript.sh` option.\n\"\"\"\n        print (msg, file=sys.stderr)\n\n    def execute(self):\n        self.start_time = time.perf_counter()\n        psutil.cpu_percent(interval=None)\n        os.environ['JOBUTILS_SKIPDONE'] = \"ON\"\n        errorencountered = False\n\n        def speedup_ROOT_Init():\n               \"\"\"initialize some environment variables that speed up ROOT initialization\n               and prevent ROOT from launching many short-lived child processes\"\"\"\n\n               # only perform this on Linux\n               if platform.system() != 'Linux':\n                  return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "20ca593d9b965a6d4eaa3ce3be419e5d3f1b09ba76797ea73aa7f0817e1e7895": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if os.environ.get('ROOT_LDSYSPATH') != None and os.environ.get('ROOT_CPPSYSINCL') != None:\n                  # do nothing if already set\n                  return\n\n               # a) the PATH for system libraries\n               # search adapted from ROOT TUnixSystem\n               cmd='LD_DEBUG=libs LD_PRELOAD=DOESNOTEXIST ls /tmp/DOESNOTEXIST 2>&1 | grep -m 1 \"system search path\" | sed \\'s/.*=//g\\' | awk \\'//{print $1}\\''\n               proc = subprocess.Popen([cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\n               libpath, err = proc.communicate()\n               if not (args.no_rootinit_speedup == True):\n                  print (\"initializing ROOT system\")\n                  os.environ['ROOT_LDSYSPATH'] = libpath.decode()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "8d661fd1107d235315a8f78af07d2bd5dd7bd4808f35314d15fdd7957219169d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# b) the PATH for compiler includes needed by Cling\ncmd = \"LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n '/^#include/,${/^ \\\\/.*++/{p}}'\"\nproc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\nincpath, err = proc.communicate()\nincpaths = [ line.lstrip() for line in incpath.decode().splitlines() ]\njoined = ':'.join(incpaths)\nif args.no_rootinit_speedup != True:\n    actionlogger.info(\"Determined ROOT_CPPSYSINCL=\" + joined)\n    os.environ['ROOT_CPPSYSINCL'] = joined\n\nspeedup_ROOT_Init()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "e01eb68725f6ac8bc85a7cfa5ef4b03693cbf282cb4d93e955a5027b35a2cc2e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "speedup_ROOT_Init()\n\n    # we create our own \"tmp\" directory\n    # to store temporary files such as socket files (e.g., DPL FAIR-MQ sockets)\n    # (This might be less relevant if running inside a Docker/singularity container)\n    if not os.path.isdir(\"./.tmp\"):\n      os.mkdir(\"./.tmp\")\n    if os.environ.get('FAIRMQ_IPC_PREFIX') is None:\n      socketpath = os.getcwd() + \"/.tmp\"\n      actionlogger.info(\"Setting FAIRMQ socket path to \" + socketpath)\n      os.environ['FAIRMQ_IPC_PREFIX'] = socketpath\n\n    # some initialization tasks\n    if args.list_tasks:\n      print ('List of tasks in this workflow:')\n      for i, t in enumerate(self.workflowspec['stages'], 0):\n        print (t['name'] + '  (' + str(t['labels']) + ')' + ' ToDo: ' + str(not self.ok_to_skip(i)))\n      exit (0)\n\n    if args.produce_script is not None:\n      self.produce_script(args.produce_script)\n      exit (0)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "7b08d6c1213b7d1d3c24b70e7a86e2a724e4b1054f57108bf799f2cc64fe2a06": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the user-specified global initialization command for this workflow\nglobalinitcmd = self.globalinit.get(\"cmd\", None)\nif globalinitcmd is not None:\n    if not self.execute_globalinit_cmd(globalinitcmd):\n        exit(1)\n\nif args.rerun_from:\n    reruntaskfound = False\n    for task in self.workflowspec['stages']:\n        taskname = task['name']\n        if re.match(args.rerun_from, taskname):\n            reruntaskfound = True\n            taskid = self.tasktoid[taskname]\n            self.remove_done_flag(find_all_dependent_tasks(self.possiblenexttask, taskid))\n    if not reruntaskfound:\n        print('No task matching ' + args.rerun_from + ' found; refusing to proceed ')\n        exit(1)\n\n# **************************\n# primary control loop\n# **************************\ncandidates = [ tid for tid in self.possiblenexttask[-1] ]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "dfcf3387b1ed1a5d73a2ddfc148d572963785b88e2e24e2dd23c0c2847ece4a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    self.process_list=[] # a list of tuples containing node IDs and Popen subprocess instances\n\n        finishedtasks=[] # a global list of completed tasks\n\n        try:\n\n            while True:\n                # sort the candidate list based on task weights\n                candidates = [ (tid, self.taskweights[tid]) for tid in candidates ]\n                candidates.sort(key=lambda tup: (tup[1][0],-tup[1][1])) # prioritize smaller tasks and those within the same timeframe, then prioritize important tasks within the same timeframe\n                # remove weights\n                candidates = [ tid for tid,_ in candidates ]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "8825f0dd02dcdb0eae77fad018ff02bf0f6cb66ddb1ff4a5e1697a0774955d3b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    finished = [] # --> to account for finished tasks that are already done or skipped\n                actionlogger.debug('Sorted current candidates: ' + str([(c,self.idtotask[c]) for c in candidates]))\n                self.try_job_from_candidates(candidates, finished)\n                if len(candidates) > 0 and len(self.process_list) == 0:\n                    self.noprogress_errormsg()\n                    send_webhook(self.args.webhook,\"Unable to make further progress: Quitting\")\n                    errorencountered = True\n                    break",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "f117b3f5eac1e92f740574d0a328ac729f390e2ce2d624014564283b5ca56896": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    finished_from_started = [] # to keep track of finished tasks that were started\n    failing = []\n    while self.waitforany(self.process_list, finished_from_started, failing):\n        if not args.dry_run:\n            self.monitor(self.process_list) #  ---> consider making this asynchronous\n            time.sleep(1) # <--- adjust to an incremental wait (short initial delay)\n        else:\n            time.sleep(0.001)\n\n    finished = finished + finished_from_started\n    actionlogger.debug(\"finished tasks now :\" + str(finished_from_started))\n    finishedtasks = finishedtasks + finished",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "81d5314c4f4f2e9c3d65f437e3f4ab878b42bf2c16ae3f6aeba27aeac342924e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if self.is_productionmode:\n    # we can perform some general cleanup of completed tasks in non-interactive/GRID mode\n    # TODO: this operation can run asynchronously\n    for _t in finished_from_started:\n        self.production_endoftask_hook(_t)\n\n    # if a task was flagged as \"failed\" and we proceed here (due to using --keep-going)...\n    # we must remove the pid from the finished list to prevent processing their children\n    if len(failing) > 0:\n        # remove these from the list of finished tasks to avoid continuing with their children\n        errorencountered = True\n        for t in failing:\n            finished = [ x for x in finished if x != t ]\n            finishedtasks = [ x for x in finishedtasks if x != t ]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "5555822f3b18b4ac48ea9a274a893269554b7610bdb8d0c8feeed34501bffcff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# If a task was flagged for \"retry\", we reintegrate it into the candidate pool.\n                if len(self.tids_marked_toretry) > 0:\n                    # First, we need to remove these tasks from the list of finished tasks.\n                    for t in self.tids_marked_toretry:\n                        finished = [ x for x in finished if x != t ]\n                        finishedtasks = [ x for x in finishedtasks if x != t ]\n\n                    candidates += self.tids_marked_toretry\n                    self.tids_marked_toretry = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "0bad1e2fb9990c3993c04c2dee998f97f2fbd8b94a74642423db56056cd5d8f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Identifying New Candidates\nfor each tid in finished tasks:\n    if there is a potential next task for tid:\n        potential candidates are listed from self.possiblenexttask[tid]\n        for each candidate:\n            # verify if it's a valid candidate:\n            if the candidate is suitable (using self.is_good_candidate) and it's not already in the candidates list:\n                add the candidate to the list\n\nactionlogger.debug(\"New candidates identified: \" + str(candidates))\nsend_webhook(self.args.webhook, \"New candidates identified: \" + str(candidates))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "68eecaa78474bb0e709d900c1c33da6a61e0220ce67fc18775848258746dea8a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if len(candidates)==0 and len(self.process_list)==0:\n                   break\n        except Exception as e:\n            exc_type, exc_obj, exc_tb = sys.exc_info()\n            fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]\n            print(exc_type, fname, exc_tb.tb_lineno)\n            traceback.print_exc()\n            print ('Cleaning up ')\n\n            self.SIGHandler(0,0)\n\n        endtime = time.perf_counter()\n        statusmsg = \"success\"\n        if errorencountered:\n           statusmsg = \"with failures\"\n\n        print ('\\n**** Pipeline done ' + statusmsg + ' (global runtime : {:.3f}s) *****\\n'.format(endtime-self.start_time))\n        actionlogger.debug(\"global runtime : {:.3f}s\".format(endtime-self.start_time))\n        return errorencountered",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "1667ecc167d1832e696832d69c996a490c112e0f5d450ca2405ce8bf01597a5d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if args.cgroup is not None:\n    myPID = os.getpid()\n    # cgroups like /sys/fs/cgroup/cpuset/<cgroup-name>/tasks\n    # or /sys/fs/cgroup/cpu/<cgroup-name>/tasks\n    command = \"echo \" + str(myPID) + \" > \" + args.cgroup\n    actionlogger.info(f\"Attempting to run within cgroup {args.cgroup}\")\n    waitstatus = os.system(command)\n    if code := os.waitstatus_to_exitcode(waitstatus):\n        actionlogger.error(f\"Failed to apply cgroup\")\n        exit(code)\n    actionlogger.info(\"Running within cgroup\")\n\nexecutor = WorkflowExecutor(args.workflowfile, jmax=int(args.maxjobs), args=args)\nexit(executor.execute())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2_dpg_workflow_runner.py"
        }
    ],
    "93ad2abffcba9a449e608411558da4a0cef810ecf50e69b97ead4039fe2023ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n#\n# Script that calculates final accounting figures / event counts\n# for submission to MonaLisa.\n#  \n# This script processes the AO2D / kinematics output from an O2DPG simulation run \n# and generates a file named in the format \n#\n# inputN_passedN_errorsN_outputN.stat \n# \n# which is then utilized by the MonaLisa system.\n#\n# Refer to the discussion at https://alice.its.cern.ch/jira/browse/O2-4553;\n# In this context, outputN refers to the number of events/collisions generated by this job.\n\nimport ROOT\nimport argparse\nimport os\nimport re\n\nparser = argparse.ArgumentParser(description='',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\nparser.add_argument('-f','--aod-file', default=\"AO2D.root\", help='AO2D file to check')\nargs = parser.parse_args()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_determine_eventstat.py"
        }
    ],
    "59dda45a0b9f20b578d46ad1dd64e9f727befa66d10bee9086bdfacf5f64f2b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def create_stat_file(eventcount):\n    \"\"\"\n    generates a file following the MonaLisa standard\n    \"\"\"\n    \n    file_name = '0_0_0_' + str(eventcount) + '.stat'\n    # create or open a new file\n    with open(file_name, 'w') as f:\n      print (\"#This file is automatically generated\", file=f)\n      print (\"#It informs MonaLisa about the number of created MC events\", file=f)\n      print (\"#Number of MC collisions in AOD : \" + str(eventcount), file=f)\n\ndef determine_eventcount_from_collision_context_file(file):\n    \"\"\"\n    extracts MC eventcount from collision context files\n    \"\"\"\n    pass\n\ndef locate_files_matching_pattern(directory='.', pattern='.*'):\n    matching_files = []\n\n    # Traverse the directory and its subdirectories\n    for root, dirs, files in os.walk(directory):\n      for file_name in files:\n        # Check if the filename matches the regular expression pattern\n        if re.match(pattern, file_name):\n          matching_files.append(os.path.join(root, file_name))\n\n    return matching_files",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_determine_eventstat.py"
        }
    ],
    "172b10d92b4d1932f32219bfa2519d9fcf240b6e7439aaad14dfdc1cd4b31eb8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return matching_files\n\ndef read_GEANT_eventcount(file):\n    # Open the ROOT file\n    eventcount = 0\n    tfile = ROOT.TFile.Open(file)\n    if tfile:\n      simtree = tfile.Get(\"o2sim\")\n      if simtree and isinstance(simtree, ROOT.TTree):\n        eventcount = simtree.GetEntries()\n\n      tfile.Close()\n    return eventcount\n\ndef read_accumulated_GEANT_eventcount(directory = \".\"):\n    \"\"\"\n    Calculates the MC eventcount from GEANT kinematics files located\n    in directory/tfX/ subdirectories.\n    \"\"\"\n    pattern_to_match = r'sgn.*_Kine.root'\n    kine_files = find_files_matching_pattern(directory, pattern_to_match)\n    eventcount = 0\n    for f in kine_files:\n      eventcount = eventcount + read_GEANT_eventcount(f)\n    return eventcount\n\ndef read_AO2D_eventcount(file):\n    \"\"\"\n    Determines the MC eventcount from the final AO2D file.\n    \"\"\"\n    eventcount = 0\n\n    # Open the ROOT file\n    tfile = ROOT.TFile.Open(file)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_determine_eventstat.py"
        }
    ],
    "cdc8540c954b43e90595da8f557b91b98a6ea66327b0b18aaecf7405576ae18f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Open the ROOT file\ntfile = ROOT.TFile.Open(file)\n\n# Retrieve the list of keys (TKeys) in the ROOT file\nkeys = tfile.GetListOfKeys()\n\n# Loop through the keys that start with \"DF_\" and gather the MC collisions\ncolfound = 0\n\nfor key in keys:\n  key_name = key.GetName()\n  if key_name.startswith(\"DF_\"):\n    obj = key.ReadObj()\n\n    # Obtain the list of keys for the available tables\n    tablelist = obj.GetListOfKeys()\n    for tab in tablelist:\n      # The O2mccollision_ tree holds the simulated collisions, but since the version number may vary, it's better to iterate over the keys and match them\n      tabname = tab.GetName()\n      if re.match(\"^O2mccollision(_[0-9]*)?$\", tabname):\n        coltreekey = obj.GetKey(tabname)\n        coltree = coltreekey.ReadObj()\n        if coltree and isinstance(coltree, ROOT.TTree):\n          eventcount += coltree.GetEntries()\n          colfound += 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_determine_eventstat.py"
        }
    ],
    "7778ee67bc3aeb548aae9aece6ff3445241032208595d0e402674724125498f8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if colfound == 0:\n  print (\"ERROR: MC collision table not found\")\n\n    # Close the files\n    tfile.Close()\n    return eventcount\n\nAO2D_eventcount = read_AO2D_eventcount(args.aod_file)\nGEANT_eventcount = read_accumulated_GEANT_eventcount()\nif AO2D_eventcount != GEANT_eventcount:\n    print (\"WARN: Divergence detected between AO2D MC event count and GEANT event count\")\n\nprint (\"Detected \" + str(AO2D_eventcount) + \" events in AO2D file\")\nwrite_stat_file(AO2D_eventcount)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_determine_eventstat.py"
        }
    ],
    "34b7346872d90e6ccd631aa5943e44afe3b41637232ed96df9c458983398c729": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n#BEGIN DOCUMENT\n\n#BEGIN PARAPHRASE",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "df413ce184ffd83546dd2119a9beef13bcc776ed568ff33329118e4fb634e788": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# A script that generates a consistent MC->RECO->AOD workflow\n# Its goal is to manage different MC configurations\n# It generates a workflow.json file, which must be executed by running\n#   ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json\n#\n# Execution examples:\n#  - pp PYTHIA jets, 2 events, triggered by high pT decay photons in all barrel calorimeters acceptance, eCMS at 13 TeV\n#     ./o2dpg_sim_workflow.py -e TGeant3 -ns 2 -j 8 -tf 1 -mod \"--skipModules ZDC\" -col pp -eCM 13000 \\\n#                             -proc \"jets\" -ptHatBin 3 \\\n#                             -trigger \"external\" -ini \"\\$O2DPG_ROOT/MC/config/PWGGAJE/ini/trigger_decay_gamma_allcalo_TrigPt3_5.ini\"\n#\n#  - pp PYTHIA ccbar events embedded in a heavy-ion environment, 2 PYTHIA events in 1 background event, beams energy 2.510\n#     ./o2dpg_sim_workflow.py -e TGeant3 -nb 1 -ns 2 -j 8 -tf 1 -mod \"--skipModules ZDC\" \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "ff3b274c46670e10669df37e4009c595b88db3839a2f92bea9d5f4bfc574cd9f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    #     ./o2dpg_sim_workflow.py -e TGeant3 -nb 1 -ns 2 -j 8 -tf 1 -mod \"--skipModules ZDC\"  \\\n#                             -col pp -eA 2.510 -proc \"ccbar\"  --embedding\n#\n\n    PARAPHRASED DOCUMENT:\n    #     ./o2dpg_sim_workflow.py -e TGeant3 -nb 1 -ns 2 -j 8 -tf 1 -mod \"--skipModules ZDC\"  \\\n#                             -col pp -eA 2.510 -proc \"ccbar\"  --embedding\n#",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "aa98e21213c99c3b72a42e51db8d0be5028ec6b7c79e17e991f8ab10ab9e2fa6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TODO:\n# - retrieve the final list of configKey values from the anchorConfig\n\nimport sys\nimport importlib.util\nimport argparse\nfrom os import environ, mkdir\nfrom os.path import join, dirname, isdir, isabs, isfile\nimport random\nimport json\nimport itertools\nimport math\nimport requests, re\nfrom functools import lru_cache\n\npandas_available = True\ntry:\n    import pandas as pd\nexcept (ImportError, ValueError):  # ARM architecture has issues with pandas and numpy\n    pandas_available = False\n\nsys.path.append(join(dirname(__file__), '.', 'o2dpg_workflow_utils'))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "afb8301410ecc4c0d86b1bb1dbc5f0cf717e3807270c48df635754fbeeb8ca11": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    sys.path.append(join(dirname(__file__), '.', 'o2dpg_workflow_utils'))\n\nfrom o2dpg_workflow_utils import createTask, createGlobalInitTask, dump_workflow, adjust_RECO_environment, isActive, activate_detector, deactivate_detector, compute_n_workers, merge_dicts\nfrom o2dpg_qc_finalization_workflow import include_all_QC_finalization\nfrom o2dpg_sim_config import create_sim_config, create_geant_config, constructConfigKeyArg, option_if_available, overwrite_config\nfrom o2dpg_dpl_config_tools import parse_command_string, modify_dpl_command, dpl_option_from_config, TaskFinalizer\n\n# for JAliEn interactions\nfrom alienpy.alien import JAlien\n\nparser = argparse.ArgumentParser(description='Generate an ALICE (Run3) MC simulation workflow')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "434c44e29f19f74bc6f433dd600e4f0b37c6e71f3a12a987342457d1f35e9764": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# the run number for data taking or a default if not specified\nparser.add_argument('-run', type=int, help=\"Specify the run number for this Monte Carlo simulation. Refer to https://twiki.cern.ch/twiki/bin/view/ALICE/O2DPGMCSamplingSchema for predefined choices.\", default=300000)\nparser.add_argument('-productionTag',help=\"Tag for the production of this Monte Carlo simulation\", default='unknown')\n# the timestamp when this Monte Carlo workflow will be executed\n# - should ideally align with the \"run\" number above\n# - an external tool can sample it, or we can sample it here\nparser.add_argument('--timestamp', type=int, help=\"The anchoring timestamp (defaults to current time)\", default=-1)\nparser.add_argument('--conditionDB',help=\"URL for CCDB for QC workflows\", default='http://alice-ccdb.cern.ch')\nparser.add_argument('--qcdbHost',help=\"URL for uploading QC objects\", default='http://ali-qcdbmc-gpn.cern.ch:8083')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "8c840acbfe88508add16b4a322903388af7fe9d4a4e3dec65d8291bfe9c985dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--condition-not-after', type=int, help=\"limits the consideration to CCDB objects not created after this timestamp (for TimeMachine)\", default=3385078236000)\nparser.add_argument('--orbitsPerTF', type=int, help=\"defines the timeframe size in terms of LHC orbits\", default=32)\nparser.add_argument('--anchor-config', help=\"a JSON file to provide external context for the workflow (such as config values) from data reconstruction workflows.\", default='')\nparser.add_argument('--overwrite-config', help=\"an additional JSON file with configs to override default settings or those from --anchor-config\", default='')\nparser.add_argument('--dump-config', help=\"saves a JSON file with all settings used in the workflow\", default='user_config.json')\nparser.add_argument('-ns', type=int, help='specifies the number of signal events per timeframe', default=20)\nparser.add_argument('-gen', help='specifies the generator: pythia8 or extgen', default='')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c156ac8e2fd4644743346e025bc86eaec71710bc3374e0dcc80add8571648046": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('-gen',help='Choose the generator: pythia8 or extgen', default='')\nparser.add_argument('-proc',help='Select the process type: inel, dirgamma, jets, ccbar, etc.', default='none')\nparser.add_argument('-trigger',help='Event selection criteria: particle or external', default='')\nparser.add_argument('-ini',help='Provide the full path to the generator initialization parameters file, for example: ${O2DPG_ROOT}/MC/config/PWGHF/ini/GeneratorHF.ini', default='')\nparser.add_argument('-confKey',help='Set the configuration key values for o2sim, generator, or trigger, for example: \"GeneratorPythia8.config=pythia8.cfg;A.x=y\"', default='')\nparser.add_argument('--readoutDets',help='Specify the detectors for readout using a comma separated string (hit creation only, no material budget modification)', default='all')\nparser.add_argument('--make-evtpool', help='Generate workflow for event pool creation.', action='store_true')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "321127294cbf1f186856ee7d41924d8dc8f730e4d8f7e97aa85ef5db008b6409": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('-interactionRate',help='Rate of interactions used in digitization', default=-1)\nparser.add_argument('-bcPatternFile',help='File containing bunch crossing pattern for digitization (a file name or \"ccdb\")', default='')\nparser.add_argument('-meanVertexPerRunTxtFile',help='Text file with mean vertex settings per run', default='')\nparser.add_argument('-eCM',help='Center-of-mass energy', default=-1)\nparser.add_argument('-eA',help='Energy of beam A', default=-1) #6369 PbPb, 2.510 pp 5 TeV, 4 pPb\nparser.add_argument('-eB',help='Energy of beam B', default=-1)\nparser.add_argument('-col',help='Collision system: pp, PbPb, pPb, Pbp, etc. Specify if embedding a different collision system for the signal', default='pp')\nparser.add_argument('-field',help='L3 magnetic field strength rounded to kGauss; allowed values: +-2, +-5, 0; +-5U for uniform field; or \"ccdb\" to fetch from conditions database', default='ccdb')\nparser.add_argument('--with-qed',action='store_true', help='Include QED background contribution (always included for PbPb)')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "1984be8da4275243a8e0072017702a5412a5901c9e68ec6b20c5490300649122": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('-ptHatMin', help='Minimum pT hard value when no bin is specified', default=0)\nparser.add_argument('-ptHatMax', help='Maximum pT hard value when no bin is specified', default=-1)\nparser.add_argument('-weightPow', help='Power to flatten the pT hard spectrum', default=-1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "aaa06e372ae811ef76ff0bc9a0cb44f9bf034505f7f160d3a56e9e8feb4ee5f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--embedding', action='store_true', help='Option to embed signal into background')\nparser.add_argument('--embeddPattern', help='Method for injecting signal into background', default='@0:e1')\nparser.add_argument('-nb', help='Number of background events per timeframe', default=20)\nparser.add_argument('-genBkg', help='Generator for background embedding', default='') #pythia8, not recommended: pythia8hi, pythia8pp\nparser.add_argument('-procBkg', help='Process type: inel, ..., leave empty for Pythia8 PbPb', default='heavy_ion')\nparser.add_argument('-iniBkg', help='Path to initialization parameters file for background generator (full path required)', default='${O2DPG_ROOT}/MC/config/common/ini/basic.ini')\nparser.add_argument('-confKeyBkg', help='Configuration key values for background embedding, for example: \"GeneratorPythia8.config=pythia8bkg.cfg\"', default='')\nparser.add_argument('-colBkg', help='Collision system for background embedding', default='PbPb')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c736e55932fc485a871a5e06a95a8833bdb4564405e565118fcd0b89a3736c0b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('-colBkg', help='specifies the background collision system for embedding', default='PbPb')\nparser.add_argument('-confKeyQED', help='config key for parameters affecting the QED background simulator', default='')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "776ba1119f9b8cabcc0af5f9d9b02a2d48534684ee83c957fbfd1d8d8b2cace1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('-e', help='simengine', default='TGeant4', choices=['TGeant4', 'TGeant3', 'TFluka'])\nparser.add_argument('-tf', type=int, help='number of timeframes', default=2)\nparser.add_argument('--production-offset', help='Offset that defines the bunch-crossing range within a (GRID) production. This offset sets the first orbit to Offset multiplied by the number of TimeFrames times OrbitsPerTimeframe (up for further refinement)', default=0)\nparser.add_argument('-j', '--n-workers', dest='n_workers', help='number of workers (if applicable)', default=8, type=int)\nparser.add_argument('--force-n-workers', dest='force_n_workers', action='store_true', help='by default, the number of workers is recalculated based on the interaction rate; use this flag to prevent such recalculation')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "e18c93e7ccdb03a56a10c416666a3963e874c98bd850b77df250905625df3646": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('-mod', help='Active modules (deprecated)', default='--skipModules ZDC')\nparser.add_argument('--with-ZDC', action='store_true', help='Activate ZDC in the workflow')\nparser.add_argument('-seed', help='random seed number', default=None)\nparser.add_argument('-o', help='output workflow file', default='workflow.json')\nparser.add_argument('--noIPC', help='disable shared memory in DPL')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "51cde9b1e915dd2a9b323fc3057a17bd08e37735aaeb80dd54c094a307b25f88": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# parameters for background event storage\nparser.add_argument('--upload-bkg-to', help='destination for uploading background event files (alien path)')\nparser.add_argument('--use-bkg-from', help='use background events from the specified alien path')\n\n# option for early cleanup\nparser.add_argument('--early-tf-cleanup', action='store_true', help='flag to cleanup interim products after each timeframe')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "b2a4758027fc92eaefbda7ac688d12017e7d7dd031ceea895d408f3e11962dbd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# power features (for playing) --> not included in the help message\n#  help='Treat smaller sensors in a single digitization')\nparser.add_argument('--pregenCollContext', action='store_true', help=argparse.SUPPRESS) # currently the default setting, providing this or not makes no difference; retained for backward compatibility\nparser.add_argument('--no-combine-smaller-digi', action='store_true', help=argparse.SUPPRESS)\nparser.add_argument('--no-combine-dpl-devices', action='store_true', help=argparse.SUPPRESS)\nparser.add_argument('--no-mc-labels', action='store_true', default=False, help=argparse.SUPPRESS)\nparser.add_argument('--no-tpc-digitchunking', action='store_true', help=argparse.SUPPRESS)\nparser.add_argument('--no-strangeness-tracking', action='store_true', default=False, help=\"Disable strangeness tracking\")\nparser.add_argument('--combine-tpc-clusterization', action='store_true', help=argparse.SUPPRESS) #<--- beneficial for small productions (pp, low interaction rate, few events)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "53993accc6d395e8a845c16a72249d1fdfa956929a603cc2bcb770d3825d15ce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--first-orbit', default=256, type=int, help=argparse.SUPPRESS)  # to define the initial orbit number for HBFUtils (only utilized when anchoring); set to 256 by default for convenience to accommodate some early orbits\n                                                                                     # (it might be better to handle this directly in the O2 digitization code)\nparser.add_argument('--orbits-early', default=1, type=float, help=argparse.SUPPRESS) # specifies the number of orbits to begin simulating earlier\n                                                                                     # to minimize the impact of the start of the timeframe in MC --> influences the collision context\nparser.add_argument('--sor', default=-1, type=int, help=argparse.SUPPRESS) # may be used to specify the start of the run (autodetermined otherwise from the run number)\nparser.add_argument('--run-anchored', action='store_true', help=argparse.SUPPRESS)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "472a4de65d6b2636a24f871e9cbeb44ef7bcf06a1f0796f4864300210fe18e39": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--run-anchored', action='store_true', help=argparse.SUPPRESS)\nparser.add_argument('--alternative-reco-software', default=\"\", help=argparse.SUPPRESS) # an advanced feature to specify the CVFMS alienv software version for reconstruction steps, distinct from the default setting\nparser.add_argument('--dpl-child-driver', default=\"\", help=\"The child driver to employ in DPL processes (for expert users)\")\nparser.add_argument('--event-gen-mode', choices=['separated', 'integrated'], default='separated', help=\"Indicates whether event generation occurs prior to (separated) or within the detector simulation (integrated).\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "bc17bcf685acd545195cb49f9206211d646b3f6b858b9ae7f60e386848ae7d49": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Quality Control (QC) related arguments\nparser.add_argument('--include-qc', '--include-full-qc', action='store_true', help='enables QC in the workflow, encompassing both per-tf processing and finalization')\nparser.add_argument('--include-local-qc', action='store_true', help='enables the per-tf QC, while omitting the finalization (e.g., to facilitate subjob merging first)')\n\n# O2 Analysis related arguments\nparser.add_argument('--include-analysis', '--include-an', '--analysis',\n                    action='store_true', help='a flag to incorporate O2 analysis into the workflow')\n\n# MFT Reconstruction Configuration\nparser.add_argument('--mft-reco-full', action='store_true', help='enables full MFT reconstruction instead of the simplified misaligned version')\nparser.add_argument('--mft-assessment-full', action='store_true', help='enables a thorough assessment of MFT reconstruction')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "dd916021f353f0cd989644e88fa20a4716b6f6817a852c160f82e3523d073e8c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TPC configuration options\nparser.add_argument('--tpc-distortion-type', default=0, type=int, help='Enable distortions in the TPC simulation (0=no distortions, 1=distortions without scaling, 2=distortions with CTP scaling)')\nparser.add_argument('--tpc-corrmap-lumi-mode', default=2, type=int, help='Select TPC corrections mode (0=linear, 1=derivative, 2=derivative for special MC maps)')\nparser.add_argument('--ctp-scaler', default=0, type=float, help='CTP raw scaler value for distortion simulation')\n\n# Global Forward Reconstruction Settings\nparser.add_argument('--fwdmatching-assessment-full', action='store_true', help='enables comprehensive evaluation of global forward reconstruction')\nparser.add_argument('--fwdmatching-4-param', action='store_true', help='excludes q/pt from the matching parameters')\nparser.add_argument('--fwdmatching-cut-4-param', action='store_true', help='apply selection cuts on position and angular parameters')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4915921a1b0598e8f8ca1410d9f297c7f6eae3dd7c49067384d7d9a9279c65f6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Training alignment for machine learning\nparser.add_argument('--fwdmatching-save-trainingdata', action='store_true', help='enables the saving of parameters at each plane for machine learning training')\n\nargs = parser.parse_args()\nprint (args)\n\n# Ensure that O2DPG and O2 are loaded\nO2DPG_ROOT=environ.get('O2DPG_ROOT')\nO2_ROOT=environ.get('O2_ROOT')\nQUALITYCONTROL_ROOT=environ.get('QUALITYCONTROL_ROOT')\nO2PHYSICS_ROOT=environ.get('O2PHYSICS_ROOT')\n\nif O2DPG_ROOT is None:\n   print('Error: This requires O2DPG to be loaded')\n#   exit(1)\n\nif O2_ROOT is None:\n   print('Error: This requires O2 to be loaded')\n#   exit(1)\n\nif (args.include_qc or args.include_local_qc) and QUALITYCONTROL_ROOT is None:\n   print('Error: The arguments --include-qc and --include-local-qc require QUALITYCONTROL_ROOT to be loaded')\n#   exit(1)\n\nif args.include_analysis and (QUALITYCONTROL_ROOT is None or O2PHYSICS_ROOT is None):\n   print('Error: The argument --include-analysis requires both O2PHYSICS_ROOT and QUALITYCONTROL_ROOT to be loaded')\n#   exit(1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "98537021f002c9703bbf91ce7f16479ba05f81d797e8f8fb550187dd3ddfca48": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "module_name = \"o2dpg_analysis_test_workflow\"\nspec = importlib.util.spec_from_file_location(module_name, join(O2DPG_ROOT, \"MC\", \"analysis_testing\", f\"{module_name}.py\"))\no2dpg_analysis_test_workflow = importlib.util.module_from_spec(spec)\nsys.modules[module_name] = o2dpg_analysis_test_workflow\nspec.loader.exec_module(o2dpg_analysis_test_workflow)\n\nfrom o2dpg_analysis_test_workflow import add_analysis_tasks, add_analysis_qc_upload_tasks\n\n# retrieve an external configuration if provided\n# loads the workflow specification\ndef load_external_config(configfile):\n    fp = open(configfile)\n    config = json.load(fp)\n    return config",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "d03ef86730f886013f5cd26811009d58f34fb6da40492f561fc8d2b6dfe1721e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    anchorConfig = {}\nanchorConfig_generic = { \"ConfigParams\": create_sim_config(args) }\nif args.anchor_config != '':\n   print (\"** Using external configuration **\")\n   anchorConfig = load_external_config(args.anchor_config)\n   # incorporate keys from the generic configuration into the anchorConfig if they are not present in the external configuration\n   # (this is helpful for digitization parameters and other settings that are typically not included in asynchronous reconstruction)\n   for key in anchorConfig_generic[\"ConfigParams\"]:\n      if key not in anchorConfig[\"ConfigParams\"]:\n         print (f\"Transferring key {key} from generic configuration to final configuration\")\n         anchorConfig[\"ConfigParams\"][key] = anchorConfig_generic[\"ConfigParams\"][key]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "8a05b9ab92ee2e663f8029e1c92dfdc0b28461581655ae69cba1b52bef4f60ce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "else:\n    # we load a standard configuration\n    print(\"** Using standard configuration **\")\n    anchorConfig = anchorConfig_generic\n# apply any external user preferences to the configuration\n# these preferences will override previous settings\nif args.overwrite_config != '':\n    # apply the final JSON override\n    config_overwrite = load_external_config(args.overwrite_config)\n    # ensure both configurations follow the same structure\n    if (\"ConfigParams\" in anchorConfig) != (\"ConfigParams\" in config_overwrite):\n        print(\"Error: overwrite config does not match base config format; cannot combine\")\n        exit(1)\n    \n    # merge the dictionaries, with anchorConfig taking priority\n    merge_dicts(anchorConfig, config_overwrite)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "2e4f485b6ab8a1308003b5a9cabcdb39ecd123ec0bb21614217f649f00616a94": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# We might still need to manually adjust configurations for consistency:\n#\n# * Force simpler TPC digitization if TPC reconstruction lacks the mc-time-gain option:\nasync_envfile = 'env_async.env' if environ.get('ALIEN_JDL_O2DPG_ASYNC_RECO_TAG') is not None else None\ntpcreco_mctimegain = option_if_available('o2-tpc-reco-workflow', '--tpc-mc-time-gain', envfile=async_envfile)\nif tpcreco_mctimegain == '':\n   # This was informed by Jens Wiechula@TPC; it addresses the dEdX issue https://its.cern.ch/jira/browse/O2-5486 related to the 2tag mechanism\n   print (\"TPC reconstruction does not support --tpc-mc-time-gain. Adjusting some configurations for TPC digitization\")\n   overwrite_config(anchorConfig['ConfigParams'],'TPCGasParam','OxygenCont',5e-6)\n   overwrite_config(anchorConfig['ConfigParams'],'TPCGEMParam','TotalGainStack',2000)\n   overwrite_config(anchorConfig['ConfigParams'],'GPU_global','dEdxDisableResidualGain',1)\n# TODO: encapsulate this in a function for better modularity",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c849e8536ca78bcaf9b0be0b08eb2fa848d87942407b11b13f4c064ecf39846a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# using the configuration, we will generate a task_finalizer functor\ntask_finalizer = TaskFinalizer(anchorConfig, logger=\"o2dpg_config_replacements.log\")\n\n# save this configuration\nconfig_key_param_path = args.dump_config\nwith open(config_key_param_path, \"w\") as f:\n   print(f\"INFO: Additional config key parameters have been written to JSON {config_key_param_path}\")\n   json.dump(anchorConfig, f, indent=2)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "8bd5b31ec6293af4edd9964fbc1841ca63067b64ff3076ef1954dd0e3899216b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# this allows us to adjust the workflow based on detector presence\n# these include all detectors assumed to be active\nreadout_detectors = args.readoutDets\n# here we list all detectors set in an anchored script\nactiveDetectors = dpl_option_from_config(anchorConfig, 'o2-ctf-reader-workflow', key='onlyDet', default_value='all')\nif activeDetectors == 'all':\n    # if \"all\" is specified, use the detectors passed to this script (which could be \"all\" or a subset)\n    activeDetectors = readout_detectors\nelif readout_detectors != 'all' and activeDetectors != 'all':\n    # in this scenario, both are comma-separated lists. We find the intersection\n    r = set(readout_detectors.split(','))\n    a = set(activeDetectors.split(','))\n    activeDetectors = ','.join(r & a)\n# in the final scenario, use the detectors from the anchored configuration",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "d95c76b2fe00d8a46659d050c628d327195a341404d9bc7ca15e5e75f58c1b55": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# convert to set/hashmap\nactiveDetectors = { det:1 for det in activeDetectors.split(',') }\nfor detector in activeDetectors:\n    activate_detector(detector)\n\nif not args.with_ZDC:\n   # deactivate ZDC to ensure consistent use of isActive\n   deactivate_detector('ZDC')\n   if 'ZDC' in activeDetectors:\n       del activeDetectors['ZDC']\n\ndef addWhenActive(detID, needslist, appendstring):\n   if isActive(detID):\n      needslist.append(appendstring)\n\ndef retrieve_sor(run_number):\n    \"\"\"\n    Retrieves the start of run (sor)\n    from the RCT/Info/RunInformation table via a simple http request.\n    In case of issues, 0 will be returned. The advantage of this simple http request\n    is that it does not require initializing a Ccdb object.\n    \"\"\"\n\n    url=\"http://alice-ccdb.cern.ch/browse/RCT/Info/RunInformation/\"+str(run_number)\n    ansobject=requests.get(url)\n    tokens=ansobject.text.split(\"\\n\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4d61c73b200e76e6077461c3767ebfc4911c7fe2b2169504d6b2f4cb8dc3662e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# identify the start of the run, earlier values are prioritized (refer to BasicCCDBManager::getRunDuration for more details)\nSTF=0\n# extract SOR using pattern matching\nfor t in tokens:\n  match_obj=re.match(r\"\\s*(STF\\s*=\\s*)([0-9]*)\\s*\", t)\n  if match_obj != None:\n    STF=int(match_obj[2])\n    break\nif STF > 0:\n  return STF\n\nSOX=0\n# extract SOX using pattern matching\nfor t in tokens:\n  match_obj=re.match(r\"\\s*(STF\\s*=\\s*)([0-9]*)\\s*\", t)\n  if match_obj != None:\n    SOX=int(match_obj[2])\n    break\nif SOX > 0:\n  return SOX\n\nSOR=0\n# extract SOR using pattern matching\nfor t in tokens:\n  match_obj=re.match(r\"\\s*(SOR\\s*=\\s*)([0-9]*)\\s*\", t)\n  if match_obj != None:\n    SOR=int(match_obj[2])\n    break\n    \nreturn SOR",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c99c2d2441e350b049840ef07900ac159a9ece45a18b7cb51857d9cfaf80a0ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# validate and purify config-key values (separate and isolate diamond vertex parameters into finalDiamondDict)\ndef extractVertexArgs(configKeyValuesStr, finalDiamondDict):\n  # split configKeyValuesStr by ;\n  tokens = configKeyValuesStr.split(';')\n  for t in tokens:\n    if \"Diamond\" in t:\n      left, right = t.split(\"=\")\n      value = finalDiamondDict.get(left, None)\n      if value is None:\n        finalDiamondDict[left] = right\n      else:\n        # this has been encountered previously, ensure consistent right side value, or terminate\n        if value != right:\n          print(\"Inconsistent repetition in Diamond values; Aborting\")\n          sys.exit(1)\n\nvertexDict = {}\nextractVertexArgs(args.confKey, vertexDict)\nextractVertexArgs(args.confKeyBkg, vertexDict)\nCONFKEYMV = \"\"\n# construct a new vertex-only config-key string\nfor e in vertexDict:\n  if len(CONFKEYMV) > 0:\n    CONFKEYMV += ';'\n  CONFKEYMV += str(e) + '=' + str(vertexDict[e])\n\nprint (\"Diamond is \" + CONFKEYMV)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "83ff50f65e56789a3a4897a543a0b7d9d2de9c922b7a09d462b1b80928981057": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Retrieve mean vertex parameters from an external text file\nif (pandas_available):\n  if len(args.meanVertexPerRunTxtFile) > 0:\n    if len(CONFKEYMV) > 0:\n       print(\"confKey already sets diamond, stop!\")\n       sys.exit(1)\n    df = pd.read_csv(args.meanVertexPerRunTxtFile, delimiter=\"\\t\", header=None)\n    df.columns = [\"runNumber\", \"vx\", \"vy\", \"vz\", \"sx\", \"sy\", \"sz\"]\n    MV_SX = float(df.loc[df['runNumber'].eq(args.run), 'sx'])\n    MV_SY = float(df.loc[df['runNumber'].eq(args.run), 'sy'])\n    MV_SZ = float(df.loc[df['runNumber'].eq(args.run), 'sz'])\n    MV_VX = float(df.loc[df['runNumber'].eq(args.run), 'vx'])\n    MV_VY = float(df.loc[df['runNumber'].eq(args.run), 'vy'])\n    MV_VZ = float(df.loc[df['runNumber'].eq(args.run), 'vz'])\n    print(\"** Using mean vertex parameters from file\",args.meanVertexPerRunTxtFile,\"for run =\",args.run,\n    \": \\n \\t vx =\",MV_VX,\", vy =\",MV_VY,\", vz =\",MV_VZ,\",\\n \\t sx =\",MV_SX,\", sy =\",MV_SY,\", sz =\",MV_SZ)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "8246bf501e659260524d300b622700b393d5950badfce9898f94c581a9cf4e5f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CONFKEYMV='Diamond.width[2]='+str(MV_SZ)+';Diamond.width[1]='+str(MV_SY)+';Diamond.width[0]='+str(MV_SX)+';Diamond.position[2]='+str(MV_VZ)+';Diamond.position[1]='+str(MV_VY)+';Diamond.position[0]='+str(MV_VX)+';'\n    args.confKey=args.confKey + CONFKEYMV\n    args.confKeyBkg=args.confKeyBkg + CONFKEYMV\n    print(\"** Configuration Key args including MeanVertex:\",args.confKey)\nelse:\n   print (\"Pandas not available. External file for mean vertex not read\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "a1dab545b1e6f16540e4f112f2060a34272674d5d1434c8982ee94936c3e1a63": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ----------- START WORKFLOW CONSTRUCTION -----------------------------\n\n# set the start time of the run (if no timestamp is given)\nif args.sor == -1:\n   args.sor = retrieve_sor(args.run)\n   assert args.sor != 0\n\nif args.timestamp == -1:\n   args.timestamp = args.sor\n\nNTIMEFRAMES = int(args.tf)\nNWORKERS = args.n_workers\nMODULES = \"--skipModules ZDC\" if not isActive(\"ZDC\") else \"\"\nSIMENGINE = args.e\nBFIELD = args.field\nRNDSEED = args.seed  # usually this should be the job ID, but if none is provided, the current time is used for initialization\nrandom.seed(RNDSEED)\nprint(\"Using initial seed:\", RNDSEED)\nSIMSEED = random.randint(1, 900000000 - NTIMEFRAMES - 1)  # the maximum seed for PYTHIA is 900 million for some reason\n\n# ---- initialize global (physics variables) for signal parts ----\nECMS = float(args.eCM)\nEBEAMA = float(args.eA)\nEBEAMB = float(args.eB)\nNSIGEVENTS = args.ns\nGENERATOR = args.gen\nif GENERATOR == '':\n   print('o2dpg_sim_workflow: Error! generator name not provided')\n   exit(1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "e61ed9bb5a191c2563dab255dc1609e1a4dd3cf2e5386856b2a78730a2774858": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    INIFILE=''\nif args.ini != '':\n   INIFILE=' --configFile ' + args.ini\nPROCESS=args.proc\nTRIGGER=''\nif args.trigger != '':\n   TRIGGER=' -t ' + args.trigger\n\n## Pt Hat productions\nWEIGHTPOW=float(args.weightPow)\nPTHATMIN=float(args.ptHatMin)\nPTHATMAX=float(args.ptHatMax)\n\ncolsys = {'pp':[2212,2212], 'pPb':[2212,1000822080], 'Pbp':[1000822080,2212], 'PbPb':[1000822080,1000822080], 'pO':[2212,1000080160], 'Op':[1000080160,2212], 'HeO':[1000020040,1000080160], 'OHe':[1000080160,1000020040], 'OO':[1000080160,1000080160], 'NeNe':[1000100200,1000100200]}\n# translate here collision type to PDG of allowed particles\nCOLTYPE=args.col\nif COLTYPE in colsys.keys():\n   PDGA=colsys[COLTYPE][0]\n   PDGB=colsys[COLTYPE][1]\nelse:\n   print('o2dpg_sim_workflow: Error! Unknown collision system %s' % COLTYPE)\n   exit(1)\n\ndoembedding=True if args.embedding=='True' or args.embedding==True else False",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c0a9573fffceab65a8959a627f20d9c0ffd78e2d3d8a0695d8d822e63036dbef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "doembedding=True if args.embedding=='True' or args.embedding==True else False\n\n# If not set previously, set beam energy B equal to A\nif EBEAMB < 0 and ECMS < 0:\n   EBEAMB=EBEAMA\n   print('o2dpg_sim_workflow: Beam energy in B set to match that in A')\n   if PDGA != PDGB:\n      print('o2dpg_sim_workflow: Caution! Beam energies set differently for particles in beams A and B!')\n\nif ECMS > 0:\n   if PDGA != PDGB:\n      print('o2dpg_sim_workflow: Caution! CM energy set for different particle beams!')\n\nif ECMS < 0 and EBEAMA < 0 and EBEAMB < 0:\n   print('o2dpg_sim_workflow: Error! Neither CM nor Beam energy is set!!!')\n   exit(1)\n\n# Determine interaction rate\nINTRATE=int(args.interactionRate)\nif INTRATE <= 0:\n   print('o2dpg_sim_workflow: Error! Interaction rate must be > 0 !!!')\n   exit(1)\nBCPATTERN=args.bcPatternFile\n\n# ----- global background specific stuff -------\nCOLTYPEBKG=args.colBkg\nhavePbPb = (COLTYPE == 'PbPb' or (doembedding and COLTYPEBKG == \"PbPb\"))\n\nworkflow={}\nworkflow['stages'] = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "6f4f62260996f956891596c3c406ae4354a700700160c6a376dfbd4ce957444e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    workflow={}\n    workflow['stages'] = []\n\n### Establish global environment variables applicable to all tasks\nglobal_env = {'ALICEO2_CCDB_CONDITION_NOT_AFTER': args.condition_not_after} if args.condition_not_after else None\nglobalinittask = createGlobalInitTask(global_env)\nglobalinittask['cmd'] = 'o2-ccdb-cleansemaphores -p ${ALICEO2_CCDB_LOCALCACHE}'\nworkflow['stages'].append(globalinittask)\n####\n\nusebkgcache=args.use_bkg_from!=None\nincludeFullQC=args.include_qc=='True' or args.include_qc==True\nincludeLocalQC=args.include_local_qc=='True' or args.include_local_qc==True\nincludeAnalysis = args.include_analysis\nincludeTPCResiduals=True if environ.get('ALIEN_JDL_DOTPCRESIDUALEXTRACTION') == '1' else False\nccdbRemap = environ.get('ALIEN_JDL_REMAPPINGS')\n\nqcdir = \"QC\"\nif (includeLocalQC or includeFullQC) and not isdir(qcdir):\n    mkdir(qcdir)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "74cfcfbb9c1f9ded2b2bb2f870249672090aa94083f69e4e6a9ecc9f4a84108d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def getDPL_global_options(bigshm=False, ccdbbackend=True):\n    common=\" -b --run \"\n    if len(args.dpl_child_driver) > 0:\n        common=common + ' --child-driver ' + str(args.dpl_child_driver)\n    if ccdbbackend:\n        common=common + \" --condition-not-after \" + str(args.condition_not_after)\n        if ccdbRemap != None:\n            common=common + \" --condition-remap \" + ccdbRemap\n    if args.noIPC!=None:\n        return common + \" --no-IPC \"\n    if bigshm:\n        return common + \" --shm-segment-size ${SHMSIZE:-50000000000} \"\n    else:\n        return common\n    \n# prepare and publish the GRPs and other GLO objects for consistent usage later in the pipeline\norbitsPerTF=int(args.orbitsPerTF)\nGRP_TASK = createTask(name='grpcreate', cpu='0')\nGRP_TASK['cmd'] = 'o2-grp-simgrp-tool createGRPs --timestamp ' + str(args.timestamp) + ' --run ' + str(args.run) + ' --publishto ${ALICEO2_CCDB_LOCALCACHE:-.ccdb} -o grp --hbfpertf ' + str(orbitsPerTF) + ' --field ' + args.field",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "528148874602a17ae285fd9af97fae096cc9afcac6f1b09624b30abe4295d6c9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    GRP_TASK['cmd'] += ' --readoutDets ' + \" \".join(activeDetectors) + ' --print ' + ('','--lhcif-CCDB')[args.run_anchored]\nif (args.run_anchored != True) and len(args.bcPatternFile) > 0:\n    GRP_TASK['cmd'] += ' --bcPatternFile ' + str(args.bcPatternFile)\nif len(CONFKEYMV) > 0:\n    # this allows the possibility to use a different MeanVertex object than the one from CCDB\n    GRP_TASK['cmd'] += ' --vertex Diamond --configKeyValues \"' + CONFKEYMV + '\"'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "79fd1ea9a7888c8b3749cbc124b0b4d3fac5cf3d425a92f91a21bfe8d5d1b361": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW:\n    workflow['stages'].append(GRP_TASK)\n\n# QED is currently active only for events with identical beam species\nQED_enabled = True if (PDGA==PDGB and PDGA!=2212) else False\nincludeQED = (QED_enabled or (doembedding and QED_enabled)) or (args.with_qed == True)\nsignalprefix='sgn'\n\n# Vertexing is not performed for event pool generation; instead, the vertex is sourced from the CCDB or from CollContext\n# (Note that the CCDB scenario includes the kDiamond case as it is handled within GRP_TASK)\nvtxmode_precoll = 'kNoVertex' if args.make_evtpool else 'kCCDB'\nvtxmode_sgngen = 'kCollContext'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "6c469ec3252531e9fa982485eacb569c12682d8a8ebc2c5647187055d50a6bb6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# prepare the collision context/timeframe structure for all timeframes at once\nprecollneeds=[GRP_TASK['name']]\n# specify the maximum number of QED events to be simulated per timeframe.\n# A significant pool of QED events (0.6*INTRATE) is essential to prevent repetition in the same or adjacent ITS readout frames, thus avoiding the activation of already fired pixels and discarding the event.\n# This approach is detailed in https://its.cern.ch/jira/browse/O2-5861\nNEventsQED = max(10000, int(INTRATE*0.6))\n# hadronic cross section values are derived from Glauber MC\nXSecSys = {'PbPb': 8., 'OO': 1.273, 'NeNe': 1.736}\n# QED cross section values were determined using TEPEMGEN\n# These values pertain to OO and NeNe at 5.36 TeV, whereas the older PbPb value remains unchanged.\n# If the collision energy alters, these values must be updated.\n# Further information on the calculation can be found in the TEPEMGEN directory of AEGIS, specifically in the epemgen.f file.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "bcf126cc3362d39e6d344dcdff4052ef044ddb3acefba1b0df0b8e72423491f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# particularly in the epemgen.f file\nQEDXSecExpected = {'PbPb': 35237.5, 'OO': 3.17289, 'NeNe': 7.74633} # the anticipated QED cross section value as generated by TEPEMGEN\nZsys = {'PbPb': 82, 'OO': 8, 'NeNe': 10} # the atomic number of the colliding species\nPreCollContextTask = createTask(name='precollcontext', needs=precollneeds, cpu='1')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "85cd147d860c4f84a41d62c3ca32c6cd192b0e4174446a0c3392765c23e3ed22": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# adjust timeframeID, orbits, and seed values, including qed\n# apply maximum collision offset\n# apply vertexing\ninteractionspecification = signalprefix + ',' + str(INTRATE) + ',' + str(1000000) + ':' + str(1000000)\nif doembedding:\n   interactionspecification = 'bkg,' + str(INTRATE) + ',' + str(NTIMEFRAMES*args.ns) + ':' + str(args.nb) + ' ' + signalprefix + ',' + args.embeddPattern",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "d6edeffc38baead9401aa847e6ef57d9fa6a54919c13fbb59d405fe5d7e0213d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PRECOLLCONTEXTTASK['CMD']='${O2_ROOT}/bin/o2-steer-colcontexttool -i ' + interactionspecification                      \\\n                           + ' --show-context'                                                                                  \\\n                           + ' --timeframeID ' + str(int(args.production_offset)*NTIMEFRAMES)                                  \\\n                           + ' --orbitsPerTF ' + str(orbitsPerTF)                                                              \\\n                           + ' --orbits ' + str(NTIMEFRAMES * (orbitsPerTF))                                                   \\\n                           + ' --seed ' + str(RNDSEED)                                                                         \\\n                           + ' --noEmptyTF --first-orbit ' + str(args.first_orbit)                                            \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "e21810ca597c78ff7b5f13dc83f4c7f45509e09791263b5d2c916354bea3ee84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "+ ' --extract-per-timeframe tf:sgn'                                                            \\\n                            + ' --with-vertices ' + vtxmode_precoll                                                        \\\n                            + ' --maxCollsPerTF ' + str(args.ns)                                                           \\\n                            + ' --orbits-early ' + str(args.orbits_early)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4eae318aca970f10f6b128d9f50122022e04bc1853f9054d80148b88efab3030": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    PreCollContextTask['cmd'] += ' --bcPatternFile ccdb'  # <--- the object should have been set in (local) CCDB\nif includeQED:\n   if PDGA==2212 or PDGB==2212:\n      # QED is not supported in pp and pA collisions\n      print('o2dpg_sim_workflow: Warning! QED is not supported in pp or pA collisions')\n      includeQED = False\n   else:\n      qedrate = INTRATE * QEDXSecExpected[COLTYPE] / XSecSys[COLTYPE]   # hadronic interaction rate * cross_section_ratio\n      qedspec = 'qed' + ',' + str(qedrate) + ',10000000:' + str(NEventsQED)\n      PreCollContextTask['cmd'] += ' --QEDinteraction ' + qedspec\nworkflow['stages'].append(PreCollContextTask)\n\n\nif doembedding:\n    if not usebkgcache:\n        # ---- handle background transport task ----\n        NBKGEVENTS=args.nb\n        GENBKG=args.genBkg\n        if GENBKG =='':\n           print('o2dpg_sim_workflow: Error! background generator name for embedding not provided')\n           exit(1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "f0e17925d28d1f9cc0fe84f6519ce638b3fe6d97ab7951e2a250fbe80d7f5f89": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# PDG translation for background\nif COLTYPEBKG in colsys.keys():\n   PDGABKG = colsys[COLTYPEBKG][0]\n   PDGBBKG = colsys[COLTYPEBKG][1]\nelse:\n   print('o2dpg_sim_workflow: Error! Unknown background collision system %s' % COLTYPEBKG)\n   exit(1)\n\nPROCESSBKG = args.procBkg\nECMSBKG = float(args.eCM)\nEBEAMABKG = float(args.eA)\nEBEAMBBKG = float(args.eB)\n\nif COLTYPEBKG == 'PbPb':\n   if ECMSBKG < 0:    # set 5.02 TeV as default for Pb-Pb\n      print('o2dpg_sim_workflow: Set BKG CM Energy to PbPb case 5.02 TeV')\n      ECMSBKG = 5020.0\n   if GENBKG == 'pythia8' and PROCESSBKG != 'heavy_ion':\n      PROCESSBKG = 'heavy_ion'\n      print('o2dpg_sim_workflow: Process type not applicable for Pythia8 PbPb')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "5aafd13c568cadd615600c6eaa9e5ffffe8c20d8ad3666b81cbe7330d00ae526": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # If the beam energy B has not been set, assign it the value of beam energy A.\n        if EBEAMBBKG < 0 and ECMSBKG < 0:\n           EBEAMBBKG=EBEAMABKG\n           print('o2dpg_sim_workflow: Beam energy in A and B beams set to be the same')\n           if PDGABKG != PDGBBKG:\n              print('o2dpg_sim_workflow: Warning! Different background beams have different beam energies!')\n\n        if ECMSBKG > 0:\n           if PDGABKG != PDGBBKG:\n              print('o2dpg_sim_workflow: Warning! ECM set for different background beams!')\n\n        if ECMSBKG < 0 and EBEAMABKG < 0 and EBEAMBBKG < 0:\n           print('o2dpg_sim_workflow: Error! ECM or beam energy not set for background beams!!!')\n           exit(1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c5c037b2e13ef64019db9bdaa5cad54a3714af7d184b9b0dcc89ef1d5eed7b29": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Background PYTHIA Setup\nBKG_CONFIG_task=createTask(name='genbkgconf')\nBKG_CONFIG_task['cmd'] = 'echo \"placeholder / dummy task\"'\nif GENBKG == 'pythia8':\n    print('Background generator seed: ', SIMSEED)\n    BKG_CONFIG_task['cmd'] = '${O2DPG_ROOT}/MC/config/common/pythia8/utils/mkpy8cfg.py \\\n                                   --output=pythia8bkg.cfg                                     \\\n                                   --seed='+str(SIMSEED)+'                                     \\\n                                   --idA='+str(PDGABKG)+'                                      \\\n                                   --idB='+str(PDGBBKG)+'                                      \\\n                                   --eCM='+str(ECMSBKG)+'                                      \\\n                                   --eA='+str(EBEAMABKG)+'                                     \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "b8b6d2e2734dc6006d6304d1644759b01557052e8d0193830e25dff398c2073d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "--eA='+str(EBEAMABKG)+'                                     \\\n--eB='+str(EBEAMBBKG)+'                                     \\\n--process='+str(PROCESSBKG)\n# if we set pythia8 here, we must also update the configuration\n# TODO: we require a proper config container/manager to integrate these local configurations with external ones, etc.\nargs.confKeyBkg = 'GeneratorPythia8.config=pythia8bkg.cfg;' + args.confKeyBkg",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "1b9efb33fb2265ed4370cfbd1da6f9915e76479bee37875121f3437706d0dbf3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    workflow['stages'].append(BKG_CONFIG_task)\n\n        # configuration for background task\n        INIBKG=''\n        if args.iniBkg != '':\n           INIBKG=' --configFile ' + args.iniBkg\n\n        # determine the final configKey values for background transport\n        CONFKEYBKG = constructConfigKeyArg(create_geant_config(args, args.confKeyBkg))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "e740ab909d5cab4073d8443d2cb185ed435f4434f1396dab0db27aa740f8acbf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    bkgsimneeds = [BKG_CONFIG_task['name'], GRP_TASK['name'], PreCollContextTask['name']]\n    BKGtask = createTask(name='bkgsim', lab=[\"GEANT\"], needs=bkgsimneeds, cpu=NWORKERS)\n    BKGtask['cmd'] = '${O2_ROOT}/bin/o2-sim -e ' + SIMENGINE + ' -j ' + str(NWORKERS) + ' -n ' + str(NBKGEVENTS) \\\n                     + ' -g ' + str(GENBKG) + ' ' + str(MODULES) + ' -o bkg ' + str(INIBKG) \\\n                     + ' --field ccdb ' + str(CONFKEYBKG) \\\n                     + ('', ' --timestamp ' + str(args.timestamp))[args.timestamp != -1] + ' --run ' + str(args.run) \\\n                     + ' --vertexMode kCCDB' \\\n                     + ' --fromCollContext collisioncontext.root:bkg'\n\n    if not isActive('all'):\n        BKGtask['cmd'] += ' --readoutDetectors ' + \" \".join(activeDetectors)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "bb50af9325fd38c69d414c55795f948d348fc0e8afc8f4a4da7ad806d65e7d6d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    workflow['stages'].append(BKGtask)\n\n        # check if we should upload background events\n        if args.upload_bkg_to!=None:\n            BKGuploadtask=createTask(name='bkgupload', needs=[BKGtask['name']], cpu='0')\n            BKGuploadtask['cmd']='alien.py mkdir ' + args.upload_bkg_to + ';'\n            BKGuploadtask['cmd']+='alien.py cp -f bkg* ' + args.upload_bkg_to + ';'\n            workflow['stages'].append(BKGuploadtask)\n\n    else:\n        # here we utilize existing background events from ALIEN\n\n        # when employing background caches, we have several smaller tasks\n        # this division is sensible as they are required at different stages:\n        # 1: download bkg_MCHeader.root, grp, and geometry\n        # 2: download individual bkg_Hit files\n        # 3: download bkg_Kinematics\n        # (A potential issue with individual copying could be higher error rates, but\n        #  we can introduce a \"retry\" function in the copy process)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "b537e2770330d4200b2e583cb21a02638862325c33f4642550430bc0a45c9e00": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Step 1: header and link files\nBKG_HEADER_task = createTask(name='bkgdownloadheader', cpu='0', lab=['BKGCACHE'])\nBKG_HEADER_task['cmd'] = 'alien.py cp ' + args.use_bkg_from + 'bkg_MCHeader.root .'\nBKG_HEADER_task['cmd'] += ';alien.py cp ' + args.use_bkg_from + 'bkg_geometry.root .'\nBKG_HEADER_task['cmd'] += ';alien.py cp ' + args.use_bkg_from + 'bkg_grp.root .'\nworkflow['stages'].append(BKG_HEADER_task)\n\n# A list of smaller sensors (used to construct digitization tasks in a parametrized manner)\nsmallsensorlist = [ \"ITS\", \"TOF\", \"FDD\", \"MCH\", \"MID\", \"MFT\", \"HMP\", \"PHS\", \"CPV\", \"ZDC\" ]\n# A list of detectors that serve as input for the trigger processor CTP; these must be processed together at the moment\nctp_trigger_inputlist = [ \"FT0\", \"FV0\", \"EMC\" ]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4f83a70a2dd225a1d8a0386b106bd7436fbbf661a00d273a3bca025731b7ce53": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "BKG_HITDOWNLOADER_TASKS={}\nfor sensor in [ 'TPC', 'TRD' ] + smallsensorlist + ctp_trigger_inputlist:\n   if usebkgcache:\n      BKG_HITDOWNLOADER_TASKS[sensor] = createTask(str(sensor) + 'hitdownload', cpu='0', lab=['BKGCACHE'])\n      BKG_HITDOWNLOADER_TASKS[sensor]['cmd'] = 'alien.py cp ' + args.use_bkg_from + 'bkg_Hits' + str(sensor) + '.root .'\n      workflow['stages'].append(BKG_HITDOWNLOADER_TASKS[sensor])\n   else:\n      BKG_HITDOWNLOADER_TASKS[sensor] = None\n\nif usebkgcache:\n   BKG_KINEDOWNLOADER_TASK = createTask(name='bkgkinedownload', cpu='0', lab=['BKGCACHE'])\n   BKG_KINEDOWNLOADER_TASK['cmd'] = 'alien.py cp ' + args.use_bkg_from + 'bkg_Kine.root .'\n   workflow['stages'].append(BKG_KINEDOWNLOADER_TASK)\n\n# Some binary files are downloaded for processing.\n# These files/objects might eventually be queried directly within these tasks.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "20ec78673fdc9c4288e6b8d24899d5b6172aec5ccb476d6275ab0bd606673b36": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Adjust (residual) geometry alignment for the simulation phase\n# Detectors that need special alignments (e.g., to correct residual effects) should be included in this list and download these files.\n# These objects will override standard alignments **and** will be applied exclusively during the transport simulation and digitization steps (Det/Calib/Align is read only in the simulation, as reconstruction tasks utilize GLO/Config/AlignedGeometry automatically).\nSIM_ALIGNMENT_PREFETCH_TASK = createTask(name='sim_alignment', cpu='0')\nSIM_ALIGNMENT_PREFETCH_TASK['cmd'] = '${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch -p MID/MisCalib/Align --timestamp ' + str(args.timestamp) + ' --created-not-after '  \\\n                                      + str(args.condition_not_after) + ' -d ${ALICEO2_CCDB_LOCALCACHE}/MID/Calib/Align --no-preserve-path ; '",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "403d14dac0b1128d7598cbb48d92d20fbee3656ad7a2a9fb93b8e8bbbdffece2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "SIM_ALIGNMENT_PREFETCH_TASK['cmd'] += '${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch -p MCH/MisCalib/Align --timestamp ' + str(args.timestamp) + ' --created-not-after ' + str(args.condition_not_after) + ' -d ${ALICEO2_CCDB_LOCALCACHE}/MCH/Calib/Align --no-preserve-path '\nworkflow['stages'].append(SIM_ALIGNMENT_PREFETCH_TASK)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "20941a6510db0bf8d105bc7e47e33e8cac96a89b9b66108181c2081f8116cc9f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# query initial configKey arguments for signal transport; primarily utilized to configure generators\nsimInitialConfigKeys = create_geant_config(args, args.confKey)\n\n# iterate through timeframes\nfor tf in range(1, NTIMEFRAMES + 1):\n   TFSEED = SIMSEED + tf\n   print(\"Timeframe \" + str(tf) + \" seed: \", TFSEED)\n   timeframeworkdir='tf'+str(tf)\n\n   # ----  transport task -------   \n   # generate QED background for PbPb collisions\n\n   QEDdigiargs = \"\"\n   if includeQED:\n     qedneeds=[GRP_TASK['name'], PreCollContextTask['name']]\n     QED_task=createTask(name='qedsim_'+str(tf), needs=qedneeds, tf=tf, cwd=timeframeworkdir, cpu='1')\n     ########################################################################################################\n     #\n     # CAUTION: MODIFICATIONS TO PARAMETERS/CUTS HERE CAN Invalidate THE QED INTERACTION RATES USED ELSEWHERE\n     #\n     ########################################################################################################",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "3f39f579661e734c495c9c6c6e3cbcb7346218e5c82373a0515d30a25aa916a5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# determine the final configuration key for QED simulation\nQEDBaseConfig = \"GeneratorExternal.fileName=$O2_ROOT/share/Generators/external/QEDLoader.C;QEDGenParam.yMin=-7;QEDGenParam.yMax=7;QEDGenParam.ptMin=0.001;QEDGenParam.ptMax=1.;QEDGenParam.xSectionHad=\"+str(XSecSys[COLTYPE])+\";QEDGenParam.Z=\"+str(Zsys[COLTYPE])+\";QEDGenParam.cmEnergy=\"+str(ECMS)+\";Diamond.width[2]=6.\"\nQEDCONFKEY = constructConfigKeyArg(create_geant_config(args, QEDBaseConfig + args.confKeyQED))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "f915a0e533671e342093de8436c84113685ed57a820524179bae6e09addf46e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "QED_task['cmd'] = 'o2-sim -e TGeant3 --field ccdb -j ' + str('1') + ' -o qed'                                               \\\n                  + ' -n ' + str(NEventsQED) + ' -m PIPE ITS MFT FT0 FV0 FDD '                                              \\\n                  + ('', ' --timestamp ' + str(args.timestamp))[args.timestamp != -1] + ' --run ' + str(args.run)            \\\n                  + ' --seed ' + str(TFSEED)                                                                                   \\\n                  + ' -g extgen '                                                                                               \\\n                  + QEDCONFKEY\n\nQED_task['cmd'] += '; RC=$?; QEDXSecCheck=`grep xSectionQED qedgenparam.ini | sed \\'s/xSectionQED=//\\'`'\nQED_task['cmd'] += '; echo \"CheckXSection ' + str(QEDXSecExpected[COLTYPE]) + ' = $QEDXSecCheck\"; [[ ${RC} == 0 ]]'\n# TODO: dynamically propagate the Xsection ratio",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "5ac928d39fffc25185a2f59a6d5f36e14a7da60cef3364a5abcb0ccacd79b747": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TODO: update the Xsection ratio dynamically\nQEDdigiargs=' --simPrefixQED qed' + ' --qed-x-section-ratio ' + str(QEDXSecExpected[COLTYPE]/XSecSys[COLTYPE])\nworkflow['stages'].append(QED_task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "20d0963d1d0c786a1c9dbe82aaef96dd76607abb7037cc1b8ad1e575d3ea9ac2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# recalculate the number of workers to enhance CPU efficiency\nNWORKERS_TF = compute_n_workers(INTRATE, COLTYPE, n_workers_user = NWORKERS) if (not args.force_n_workers) else NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "a3da53500a78aefdb3e6ab59cf1a03bcb7c4d2f40db18dd112975401816ce290": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# generate the signal configuration\nSGN_CONFIG_task=createTask(name='gensgnconf_'+str(tf), tf=tf, cwd=timeframeworkdir)\nSGN_CONFIG_task['cmd'] = 'echo \"placeholder / dummy task\"'\nif GENERATOR == 'pythia8':\n    # check if there is an external config\n    externalPythia8Config = simInitialConfigKeys.get(\"GeneratorPythia8\", {}).get(\"config\", None)\n    if externalPythia8Config:\n        # ensure the provided path is absolute\n        if not isabs(externalPythia8Config):\n            print ('Error: Argument to GeneratorPythia8.config must be an absolute path')\n            exit (1)\n        # copy the external configuration file to the local directory\n        SGN_CONFIG_task['cmd'] = 'cp ' + externalPythia8Config + ' pythia8.cfg'\n    else:\n        SGN_CONFIG_task['cmd'] = '${O2DPG_ROOT}/MC/config/common/pythia8/utils/mkpy8cfg.py \\\n                                  --output=pythia8.cfg'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "6d0bdb251379392f0b4119cb8da323e9121107135df386fed441c4efd3cd6bbe": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "--output=pythia8.cfg                                      \\\n                                  --seed='+str(TFSEED)+'                                    \\\n                                  --idA='+str(PDGA)+'                                       \\\n                                  --idB='+str(PDGB)+'                                       \\\n                                  --eCM='+str(ECMS)+'                                       \\\n                                  --eA='+str(EBEAMA)+'                                      \\\n                                  --eB='+str(EBEAMB)+'                                      \\\n                                  --process='+str(PROCESS)+'                                \\\n                                  --ptHatMin='+str(PTHATMIN)+'                              \\\n                                  --ptHatMax='+str(PTHATMAX)\n         if WEIGHTPOW   > 0:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "22b6830c5db4e1593a0a2714902472b09646efa38ec3da0098fc481ba0abbc77": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "--ptHatMax='+str(PTHATMAX)\n         if WEIGHTPOW   > 0:\n            SGN_CONFIG_task['cmd'] = SGN_CONFIG_task['cmd'] + ' --weightPow=' + str(WEIGHTPOW)\n      # if we set up pythia8 here, we must also update the configuration\n      # TODO: we need an appropriate configuration container/manager to integrate these local configurations with external ones, etc.\n      args.confKey = args.confKey + \";GeneratorPythia8.config=pythia8.cfg\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "02c85caee717961b00eff20e9b00228741293701c6d6c0e96e1fe1785aca75f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# elif GENERATOR == 'extgen': what happens if the generator is not pythia8?\n   # NOTE: The setup for the generator might be managed in a separate file or files (one per potential generator).\n\n   workflow['stages'].append(SGN_CONFIG_task)\n   \n   # default configuration for extkinO2 signal simulation (no transport)\n   extkinO2Config = ''\n   if GENERATOR == 'extkinO2':\n      extkinO2Config = ';GeneratorFromO2Kine.randomize=true;GeneratorFromO2Kine.rngseed=' + str(TFSEED)\n\n   # construct the final configuration key for signal simulation\n   CONFKEY = constructConfigKeyArg(create_geant_config(args, args.confKey + extkinO2Config))\n   # -----------------\n   # transport signals\n   # -----------------\n   signalneeds=[ SGN_CONFIG_task['name'], GRP_TASK['name'] ]\n   signalneeds.append(PreCollContextTask['name'])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "f72c6a698cf23ac3bcee00c57844cc2530f7e6dd3117d9fe3ca8d057d3893a51": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# add embedIntoFile only if embeddPattern includes a '@'\nembeddinto = \"--embedIntoFile ../bkg_MCHeader.root\" if (doembedding and \"@\" in args.embeddPattern) else \"\"\nif doembedding:\n    if not usebkgcache:\n        signalneeds.append(BKGtask['name'])\n    else:\n        signalneeds.append(BKG_HEADER_task['name'])\n\n# (separate) event generation task\nsep_event_mode = args.event_gen_mode == 'separated'\nsgngenneeds = signalneeds\n# for HepMC, we need special handling to ensure different timeframes read distinct events from this file\nif GENERATOR == \"hepmc\" and tf > 1:\n    sgngenneeds += signalneeds + ['sgngen_' + str(tf-1)]  # we serialize event generation\nSGNGENtask = createTask(name='sgngen_' + str(tf), needs=sgngenneeds, tf=tf, cwd='tf' + str(tf), lab=[\"GEN\"],\n                        cpu=8 if args.make_evtpool else 1, mem=1000)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "02d6d54b87983cbccd3b7471de94fd7dd1341b9ee4737e4df57ff2dd3010c9a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    SGNGENtask['cmd']=''\n   if GENERATOR==\"hepmc\":\n     if tf == 1:\n      # calculate the offset number\n       eventOffset = environ.get('HEPMCOFFSET')\n       print(\"HEPMCOFFSET: \", eventOffset)\n       if eventOffset is None:\n        eventOffset = 0\n       cmd = 'export HEPMCEVENTSKIP=$(${O2DPG_ROOT}/UTILS/InitHepMCEventSkip.sh ../HepMCEventSkip.json ' + str(eventOffset) + ');'\n     elif tf > 1:\n       # calculate the skip number\n       cmd = 'export HEPMCEVENTSKIP=$(${O2DPG_ROOT}/UTILS/ReadHepMCEventSkip.sh ../HepMCEventSkip.json ' + str(tf) + ');'\n     SGNGENtask['cmd'] = cmd",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c933de2b58c1080e6871f2387a755ea8761fee02210179a765d56fa6d004ffbd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "generationtimeout = -1 # potential timeout for event pool creation\nif args.make_evtpool:\n    JOBTTL=environ.get('JOBTTL', None)\n    if JOBTTL != None:\n        generationtimeout = 0.95*int(JOBTTL) # for GRID jobs, set timeout automatically\nSGNGENtask['cmd'] +=('','timeout ' + str(generationtimeout) + ' ')[args.make_evtpool and generationtimeout>0] \\\n                     + '${O2_ROOT}/bin/o2-sim --noGeant -j 1 --field ccdb --vertexMode ' + vtxmode_sgngen  \\\n                     + ' --run ' + str(args.run) + ' ' + str(CONFKEY) + str(TRIGGER)                  \\\n                     + ' -g ' + str(GENERATOR) + ' ' + str(INIFILE) + ' -o genevents ' + embeddinto   \\\n                     + ('', ' --timestamp ' + str(args.timestamp))[args.timestamp!=-1]                \\\n                     + ' --seed ' + str(TFSEED) + ' -n ' + str(NSIGEVENTS)                            \\\n                     + ' --fromCollContext collisioncontext.root:' + signalprefix",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "024a4d081231bf93a1f192e48b2796dd8fccbf37cf76c98753949b97ae683baf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "+ ' --fromCollContext collisioncontext.root:' + signalprefix\n   if GENERATOR==\"hepmc\":\n      SGNGENtask['cmd'] += \"; RC=$?; ${O2DPG_ROOT}/UTILS/UpdateHepMCEventSkip.sh ../HepMCEventSkip.json \" + str(tf) + '; [[ ${RC} == 0 ]]'\n   if sep_event_mode == True:\n      workflow['stages'].append(SGNGENtask)\n      signalneeds.append(SGNGENtask['name'])\n   if args.make_evtpool:\n      if generationtimeout > 0:\n         # final adjustment of the command for event pools and timeout --> we need to check the return code\n         # if there is a timeout, we continue processing and accept return code 124\n         SGNGENtask['cmd'] += ' ; RC=$? ; [[ ${RC} == 0 || ${RC} == 124 ]]'\n      continue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "dbd326b91ba74d79539d7c9b6517a712079eda402f07c4bd0eaf82604e5ee412": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Parameters for GeneratorFromO2Kine are only required prior to transport\n   CONFKEY = re.sub(r'GeneratorFromO2Kine.*?;', '', CONFKEY)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "03b223ee20ae8bddeb607514c9da4d548849384c924dcfaff92c15a1c918ce35": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "sgnmem = 6000 if COLTYPE == 'PbPb' else 4000\nSGNtask = createTask(name='sgnsim_'+str(tf), needs=signalneeds, tf=tf, cwd='tf'+str(tf), lab=[\"GEANT\"],\n                     relative_cpu=7/8, n_workers=NWORKERS_TF, mem=str(sgnmem))\nsgncmdbase = '${O2_ROOT}/bin/o2-sim -e ' + str(SIMENGINE) + ' ' + str(MODULES) + ' -n ' + str(NSIGEVENTS) + ' --seed ' + str(TFSEED)       \\\n             + ' --field ccdb -j ' + str(NWORKERS_TF) + ' ' + str(CONFKEY) + ' ' + str(INIFILE) + ' -o ' + signalprefix + ' ' + embeddinto       \\\n             + ('', ' --timestamp ' + str(args.timestamp))[args.timestamp!=-1] + ' --run ' + str(args.run)\nif sep_event_mode:\n   SGNtask['cmd'] = sgncmdbase + ' -g extkinO2 --extKinFile genevents_Kine.root ' + ' --vertexMode kNoVertex'\nelse:\n   SGNtask['cmd'] = sgncmdbase + ' -g ' + str(GENERATOR) + ' ' + str(TRIGGER) + ' --vertexMode kCCDB '\nif not isActive('all'):\n   SGNtask['cmd'] += ' --readoutDetectors ' + \" \".join(activeDetectors)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "3171ca63a16c8ef3e26422645ee5a35a920c90717a5a7af1a5696e8525a26c27": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    SGNtask['cmd'] += ' --readoutDetectors ' + \" \".join(activeDetectors)\n   \n   SGNtask['cmd'] += ' --fromCollContext collisioncontext.root'\n   workflow['stages'].append(SGNtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "7ade06040d7b77dfbe1817747b5d10515167750dba0bb20233e324d212d3773d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Some subsequent tasks require geometry and grp with fixed names, so we offer this solution.\n# Alternatively, given our timeframe isolation, we can use standard o2sim files.\n# We must be cautious here and differentiate between embedding and non-embedding scenarios.\n# This is necessary to prevent confusion in itstpcmatching (see O2-2026). Since only one of the GRPs is updated during digitization, we need to handle this distinction.\nif doembedding:\n   LinkGRPFileTask=createTask(name='linkGRP_'+str(tf), needs=[BKG_HEADER_task['name'] if usebkgcache else BKGtask['name'] ], tf=tf, cwd=timeframeworkdir, cpu='0',mem='0')\n   LinkGRPFileTask['cmd']='''\n                          ln -nsf ../bkg_grp.root o2sim_grp.root;\n                          ln -nsf ../bkg_grpecs.root o2sim_grpecs.root;\n                          ln -nsf ../bkg_geometry.root o2sim_geometry.root;\n                          ln -nsf ../bkg_geometry.root bkg_geometry.root;",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "fe78e7f47b64d1be5024f6e2dd583f1d38685e20d8b335d2c3c0209b860dc2c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ln -nsf ../bkg_geometry.root bkg_geometry.root;\n    ln -nsf ../bkg_geometry-aligned.root bkg_geometry-aligned.root;\n    ln -nsf ../bkg_geometry-aligned.root o2sim_geometry-aligned.root;\n    ln -nsf ../bkg_MCHeader.root bkg_MCHeader.root;\n    ln -nsf ../bkg_grp.root bkg_grp.root;\n    ln -nsf ../bkg_grpecs.root bkg_grpecs.root\n    '''\n    else:\n      LinkGRPFileTask=createTask(name='linkGRP_'+str(tf), needs=[SGNtask['name']], tf=tf, cwd=timeframeworkdir, cpu='0', mem='0')\n      LinkGRPFileTask['cmd']='ln -nsf ' + signalprefix + '_grp.root o2sim_grp.root ; ln -nsf ' + signalprefix + '_geometry.root o2sim_geometry.root; ln -nsf ' + signalprefix + '_geometry-aligned.root o2sim_geometry-aligned.root'\n    workflow['stages'].append(LinkGRPFileTask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "5a55fbe98d5eaa47a84bf900d2c9e3d6a6473f573a0ccc04ac90b6a8c6e76881": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ------------------\n# Digitization Steps\n# ------------------\nCONTEXTFILE='collisioncontext.root'\n\n# Determine interaction rate, which should be taken from CDB; otherwise, use default values.\nINTRATE=int(args.interactionRate)\nBCPATTERN=args.bcPatternFile\n\n# For embedding, use the intended background collision type rather than the signal.\nCOLTYPEIR=COLTYPE\nif doembedding:\n   COLTYPEIR=args.colBkg\n\nif INTRATE < 0:\n   if COLTYPEIR==\"PbPb\":\n      INTRATE=50000 #Hz\n   elif COLTYPEIR==\"pp\":\n      INTRATE=500000 #Hz\n   else: #pPb?\n      INTRATE=200000 #Hz ???\n\n# TOF -> \"--use-ccdb-tof\" (alternatively, use CCCDBManager \"--ccdb-tof-sa\")\nsimsoption=' --sims ' + ('bkg,'+signalprefix if doembedding else signalprefix)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "00b3e3575dc6def81e640978c79dc28a88c2ab122e231c896f07d7f7ed94da6c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# each timeframe should be processed for a distinct bunch crossing range based on the timeframe identifier\nstartOrbit = (tf-1 + int(args.production_offset)*NTIMEFRAMES)*orbitsPerTF\nglobalTFConfigValues = { \"HBFUtils.orbitFirstSampled\" : args.first_orbit + startOrbit,\n                         \"HBFUtils.nHBFPerTF\" : orbitsPerTF,\n                         \"HBFUtils.orbitFirst\" : args.first_orbit,\n                         \"HBFUtils.runNumber\" : args.run }\n# the timestamp is set here only if it is explicitly specified (otherwise, it will be derived from the simulation GRP and digitization)\nif (args.sor != -1):\n    globalTFConfigValues[\"HBFUtils.startTime\"] = args.sor",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "5df03d6e15cab2c44f575d95050d39381a3a78569748a2a1e16caae56031b5fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def putConfigValues(listOfMainKeys=[], localCF = {}):\n    \"\"\"\n    Generates the final --configValues string to be passed to the workflows by utilizing globalTFConfigValues and additional parameters.\n    listOfMainKeys : a list of keys to be applied from the global configuration object.\n    localCF: a dictionary that maps keys to parameters, potentially overriding settings from the global config.\n    \"\"\"\n    returnstring = ' --configKeyValues \"'\n    cf = globalTFConfigValues.copy()\n    isfirst=True\n\n    # now include the relevant keys\n    # from the external config\n    for key in listOfMainKeys:\n        # attempt to find the key directly in the dictionary (backward compatible)\n        keydict = anchorConfig.get(key)\n        if keydict is None:\n            # otherwise, look under the ConfigurableKey entry (standard)\n            keydict = anchorConfig.get(\"ConfigParams\",{}).get(key)\n        if keydict is not None:\n            for k in keydict:\n                cf[key+\".\"+k] = keydict[k]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "37ea7bc5672c0543a0d1aa8ba019ca98172c9ba55774fdfc3b040f5b242ed054": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# apply overrides\nfor e in localCF:\n    cf[e] = localCF[e]\n\nfor e in cf:\n    returnstring += (';', '')[isfirst] + str(e) + \"=\" + str(cf[e])\n    isfirst = False\n\nreturnstring = returnstring + '\"'\nreturn returnstring\n\n# parsing passName from environment variable\nPASSNAME = '${ALIEN_JDL_LPMANCHORPASSNAME:-unanchored}'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "da0a0f9780d929b7670c802b261e8b7b820f3953609698864f14881b60c58cfa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This task establishes the foundational configuration for all digitizers. All digitization configuration parameters must be specified here.\n# The goal of this concise task is to produce the digitization INI file that other tasks can utilize.\ncontextneeds = [LinkGRPFileTask['name'], SGNtask['name']]\nif includeQED:\n    contextneeds.append(QED_task['name'])\nContextTask = createTask(name='digicontext_' + str(tf), needs=contextneeds, tf=tf, cwd=timeframeworkdir, lab=[\"DIGI\"], cpu='1')\n# This is solely for generating the digitizer INI file\nContextTask['cmd'] = '${O2_ROOT}/bin/o2-sim-digitizer-workflow --only-context --interactionRate ' + str(INTRATE)                               \\\n                    + ' ' + getDPL_global_options(ccdbbackend=False) + ' -n ' + str(args.ns) + simsoption                                     \\\n                    + ' --seed ' + str(TFSEED)                                                                                                \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "3acfe8bcc48649d213202629c549cd0f36d157120d710d22601f22ca6c60ff97": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "+ ' ' + putConfigValues({\"DigiParams.maxOrbitsToDigitize\" : str(orbitsPerTF)},{\"DigiParams.passName\" : str(PASSNAME)}) \\\n                        + ' --incontext ' + CONTEXTFILE + QEDdigiargs\n   ContextTask['cmd'] += ' --bcPatternFile ccdb'\n   workflow['stages'].append(ContextTask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "dfb3475926e7801da858b16ff353c08937f9f1c79627f779253fba8f38df1c56": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ===| TPC Digitization Section |===\nCTPSCALER = args.ctp_scaler\ntpcDistortionType = args.tpc_distortion_type\nprint(f\"TPC distortion simulation type: {tpcDistortionType}, CTP scaler: {CTPSCALER}\")\ntpcdigineeds = [ContextTask['name'], LinkGRPFileTask['name']]\nif usebkgcache:\n   tpcdigineeds += [BKG_HITDOWNLOADER_TASKS['TPC']['name']]\n\ntpcLocalCF = {\"DigiParams.maxOrbitsToDigitize\" : str(orbitsPerTF), \"DigiParams.seed\" : str(TFSEED)}\n\n# enforce TPC common mode correction in all scenarios to prevent issues with CMk values in the CCDB\ntpcLocalCF['TPCEleParam.DigiMode'] = str(2) # 2 = o2::tpc::DigitzationMode::ZeroSuppressionCMCorr from TPCBase/ParameterElectronics.h",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "b5815b7d70beb4e655d37c625e0f2b9b4a8228965302ff40d4b24ce583f36212": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# manage distortions and scaling with MC maps\n# it is assumed that the lumi within the maps is recorded in the FT0 (pp) scalers\n# for PbPb interactions, the conversion factor from ZDC to FT0 (pp) must be considered in the scalers\nif tpcDistortionType == 2 and CTPSCALER <= 0:\n    print('Warning: lumi scaling is needed, but no ctp scaler value is set. The full map will be applied without adjustment.')\n    tpcDistortionType=1\nlumiInstFactor=1\nif COLTYPE == 'PbPb':\n    lumiInstFactor=2.414\nif tpcDistortionType == 2:\n    tpcLocalCF['TPCCorrMap.lumiInst'] = str(CTPSCALER * lumiInstFactor)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "8dbf04d55ca34bc35e337e319db42e23916558395815568d78e8ac2191d024b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "tpcdigimem = 12000 if havePbPb else 9000\nTPCDigitask = createTask(name='tpcdigi_'+str(tf), needs=tpcdigineeds, tf=tf, cwd=timeframeworkdir, lab=[\"DIGI\"], cpu=NWORKERS_TF, mem=str(tpcdigimem))\nTPCDigitask['cmd'] = ('','ln -nfs ../bkg_HitsTPC.root . ;')[doembedding]\nTPCDigitask['cmd'] += '${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch -p TPC/Config/RunInfoV2 --timestamp ' + str(args.timestamp) + ' --created-not-after ' + str(args.condition_not_after) + ' -d ${ALICEO2_CCDB_LOCALCACHE} ; '\nTPCDigitask['cmd'] += '${O2_ROOT}/bin/o2-sim-digitizer-workflow ' + getDPL_global_options(bigshm=True) + ' -n ' + str(args.ns) + simsoption + ' --onlyDet TPC --TPCuseCCDB --interactionRate ' + str(INTRATE) + ' --tpc-lanes ' + str(NWORKERS_TF)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "78f64b4e0f70f9306f743e7980e30ea1c37a396a497ef9182d5fa3d17a5d1dfc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "+ ' --incontext ' + str(CONTEXTFILE) + ' --disable-write-ini --early-forward-policy always --forceSelectedDets ' \\\n                         + ' --tpc-distortion-type ' + str(tpcDistortionType)                                                             \\\n                         + putConfigValues([\"TPCGasParam\",\"TPCGEMParam\",\"TPCEleParam\",\"TPCITCorr\",\"TPCDetParam\"],\n                                              localCF=tpcLocalCF)\n   TPCDigitask['cmd'] += (' --tpc-chunked-writer','')[args.no_tpc_digitchunking]\n   TPCDigitask['cmd'] += ('',' --disable-mc')[args.no_mc_labels]\n   # we include additional command line options (for advanced users) using an environment variable\n   if environ.get('O2DPG_TPC_DIGIT_EXTRA') != None:\n      TPCDigitask['cmd'] += ' ' + environ['O2DPG_TPC_DIGIT_EXTRA']\n   workflow['stages'].append(TPCDigitask)\n   # END TPC digi part",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "b808c4c63525412ee6949286e6fad504927ef3de6819855d9b6fcf631d549a69": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    trddigineeds = [ContextTask['name']]\n    if usebkgcache:\n        trddigineeds.append(BKG_HITDOWNLOADER_TASKS['TRD']['name'])\n    TRDDigitask = createTask(name='trddigi_' + str(tf), needs=trddigineeds, tf=tf, cwd=timeframeworkdir, lab=[\"DIGI\"], cpu=NWORKERS_TF, mem='8000')\n    TRDDigitask['cmd'] = ('','ln -nfs ../bkg_HitsTRD.root . ;')[doembedding]\n    TRDDigitask['cmd'] += '${O2_ROOT}/bin/o2-sim-digitizer-workflow ' + getDPL_global_options() + ' -n ' + str(args.ns) + simsoption         \\\n                          + ' --onlyDet TRD --interactionRate ' + str(INTRATE) + ' --incontext ' + str(CONTEXTFILE) + ' --disable-write-ini' \\\n                          + putConfigValues(localCF={\"TRDSimParams.digithreads\" : NWORKERS_TF, \"DigiParams.seed\" : str(TFSEED)}) + \" --forceSelectedDets\"\n    TRDDigitask['cmd'] += ('',' --disable-mc')[args.no_mc_labels]\n    workflow['stages'].append(TRDDigitask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c392c38e1af26f942911786e968bd0e6ad1ba5c2c1f11f5de20cfe887c4d3ce0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# These are single-threaded digitizers\ndef createRestDigiTask(name, det='ALLSMALLER'):\n    tneeds = [ContextTask['name']]\n    if includeQED:\n        tneeds += [QED_task['name']]\n    commondigicmd = '${O2_ROOT}/bin/o2-sim-digitizer-workflow ' + getDPL_global_options() + ' -n ' + str(args.ns) + simsoption \\\n                    + ' --interactionRate ' + str(INTRATE) + '  --incontext ' + str(CONTEXTFILE) + ' --disable-write-ini'      \\\n                    + putConfigValues([\"MFTAlpideParam\", \"ITSAlpideParam\", \"ITSDigitizerParam\"],\n                                         localCF={\"DigiParams.seed\" : str(TFSEED), \"MCHDigitizer.seed\" : str(TFSEED)}) + QEDdigiargs",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4c31132b3765700d2fa15b7f5a3d1133cc96eccb8f530ae6ed1e009ffc1f7a3b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if det=='ALLSMALLER': # combining all smaller digits into a single DPL workflow\n    if usebkgcache:\n        for d in itertools.chain(smallsensorlist, ctp_trigger_inputlist):\n            tneeds += [ BKG_HITDOWNLOADER_TASKS[d]['name'] ]\n    t = createTask(name=name, needs=tneeds,\n                   tf=tf, cwd=timeframeworkdir, lab=[\"DIGI\",\"SMALLDIGI\"], cpu='1')\n    t['cmd'] = ('','ln -nfs ../bkg_Hits*.root . ;')[doembedding]\n    detlist = ''\n    detlist = ','.join(smallsensorlist)\n    t['cmd'] += commondigicmd + ' --onlyDet ' + detlist\n    t['cmd'] += ' --ccdb-tof-sa --forceSelectedDets '\n    t['cmd'] += (' --combine-devices ','')[args.no_combine_dpl_devices]\n    t['cmd'] += ('',' --disable-mc')[args.no_mc_labels]\n    workflow['stages'].append(t)\n    return t",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "b201c401685b7540358fe8def5d990a215ec8e831ab1bb6a1e3350ee93f83e25": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ELSE: # here we create individual digitizers\n    if usebkgcache:\n        tneeds += [ BKG_HITDOWNLOADER_TASKS[det]['name'] ]\n    t = createTask(name=name, needs=tneeds, tf=tf, cwd=timeframeworkdir, lab=[\"DIGI\",\"SMALLDIGI\"], cpu='1')\n    t['cmd'] = ('','ln -nfs ../bkg_Hits' + str(det) + '.root . ;')[doembedding]\n    t['cmd'] += commondigicmd + ' --onlyDet ' + str(det)\n    t['cmd'] += ('',' --disable-mc')[args.no_mc_labels]\n    if det == 'TOF':\n        t['cmd'] += ' --ccdb-tof-sa'\n    workflow['stages'].append(t)\n    return t\n\ndet_to_digitask={}\n\nif not args.no_combine_smaller_digi:\n    det_to_digitask['ALLSMALLER']=createRestDigiTask(\"restdigi_\"+str(tf))\n\nfor det in smallsensorlist:\n    name=str(det).lower() + \"digi_\" + str(tf)\n    t = det_to_digitask['ALLSMALLER'] if not args.no_combine_smaller_digi else createRestDigiTask(name, det)\n    det_to_digitask[det]=t",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "01325651acfb8d231328114f0613429fada1f4e64db04dbacbe3ea235aeca5c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# detectors serving CTP require special handling as CTP needs these inputs simultaneously; this needs to be improved.\ntneeds = [ContextTask['name']]\nif includeQED:\n     tneeds += [QED_task['name']]\nFT0FV0EMCCTPDIGItask = createTask(name=\"ft0fv0emcctp_digi_\" + str(tf), needs=tneeds,\n                                     tf=tf, cwd=timeframeworkdir, lab=[\"DIGI\",\"SMALLDIGI\"], cpu='1')\nFT0FV0EMCCTPDIGItask['cmd'] = ('','ln -nfs ../bkg_HitsFT0.root . ; ln -nfs ../bkg_HitsFV0.root . ; ln -nfs ../bkg_HitsEMC.root; ln -nfs ../bkg_Kine.root; ')[doembedding]\nFT0FV0EMCCTPDIGItask['cmd'] += task_finalizer([\n      '${O2_ROOT}/bin/o2-sim-digitizer-workflow', \n      getDPL_global_options(), \n      f'-n {args.ns}', \n      simsoption,\n      '--onlyDet FT0,FV0,EMC,CTP', \n      f'--interactionRate {INTRATE}',\n      f'--incontext {CONTEXTFILE}',\n      f'--store-ctp-lumi {CTPSCALER}',\n      '--disable-write-ini',",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "9544905a0ea3bfe352659f4370a7c8cd34d5acebab40527826037b498c8a4f27": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "f'--store-ctp-lumi {CTPSCALER}',\n      '--disable-write-ini',\n      putConfigValues(listOfMainKeys=['EMCSimParam','FV0DigParam','FT0DigParam'], localCF={\"DigiParams.seed\" : str(TFSEED)}),\n      ('--combine-devices','')[args.no_combine_dpl_devices],\n      ('',' --disable-mc')[args.no_mc_labels], \n      QEDdigiargs,\n      '--forceSelectedDets'], configname = 'ft0fv0emcctp_digi'\n   \n   workflow['stages'].append(FT0FV0EMCCTPDIGItask)\n   det_to_digitask[\"FT0\"]=FT0FV0EMCCTPDIGItask\n   det_to_digitask[\"FV0\"]=FT0FV0EMCCTPDIGItask\n   det_to_digitask[\"EMC\"]=FT0FV0EMCCTPDIGItask\n   det_to_digitask[\"CTP\"]=FT0FV0EMCCTPDIGItask",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "cb2bb2a77249b525aa5dbb27d7fe74483bba4c7e6fc5200ad603cd3f5c579212": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def getDigiTaskName(det):\n    t = det_to_digitask.get(det)\n    if t is None:\n        return \"undefined\"\n    return t['name']",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "9ab8ffbfbc48a63a4a3b153333553858c118dafb419ee97119e7b7092264aac0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# -----------\n# reco\n# -----------\ntpcreconeeds=[FT0FV0EMCCTPDIGItask['name']]\ntpcclusterneed=[TPCDigitask['name'], FT0FV0EMCCTPDIGItask['name']]\nif not args.combine_tpc_clusterization:\n  # TPC clusterization is handled in multiple (sector) steps to ensure compliance with memory constraints or to enable parallel processing per sector from an external source (currently not supported within the cluster algorithm).\n  tpcclustertasks=[]\n  sectorpertask=18\n  for s in range(0,35,sectorpertask):\n    taskname = 'tpcclusterpart' + str(int(s/sectorpertask)) + '_' + str(tf)\n    tpcclustertasks.append(taskname)\n    tpcclussect = createTask(name=taskname, needs=tpcclusterneed, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], cpu='2', mem='8000')\n    digitmergerstr = '${O2_ROOT}/bin/o2-tpc-chunkeddigit-merger --tpc-sectors ' + str(s)+'-'+str(s+sectorpertask-1) + ' --tpc-lanes ' + str(NWORKERS_TF) + ' | '",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "5c3ebac966eaccac0479bbccd69220a3378bb638334d46c9824471cd3213f4dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    tpcclussect['cmd'] = ((digitmergerstr,'')[args.no_tpc_digitchunking] + ' ${O2_ROOT}/bin/o2-tpc-reco-workflow ' + getDPL_global_options(bigshm=True) + ' --input-type ' + ('digitizer','digits')[args.no_tpc_digitchunking] + ' --output-type clusters,send-clusters-per-sector --tpc-native-cluster-writer \\\" --outfile tpc-native-clusters-part'+ str((int)(s/sectorpertask)) + '.root\\\" --tpc-sectors ' + str(s)+'-'+str(s+sectorpertask-1) + ' ' + putConfigValues([\"GPU_global\"], {\"GPU_proc.ompThreads\" : 4}) + ('',' --disable-mc')[args.no_mc_labels])\n    tpcclussect['env'] = { \"OMP_NUM_THREADS\" : \"4\" , \"TBB_NUM_THREADS\" : \"4\" }\n    tpcclussect['semaphore'] = \"tpctriggers.root\"\n    tpcclussect['retry_count'] = 2  # the task has a race condition, hence it's sensible to retry\n    workflow['stages'].append(tpcclussect)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "8abd785cd3765806cee3162279d2c0d6e2440e67e9fa81a414ff17137f7901a0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    TPCCLUSMERGEtask=createTask(name='tpcclustermerge_'+str(tf), needs=tpcclustertasks, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], cpu='1', mem='10000')\n    TPCCLUSMERGEtask['cmd']='${O2_ROOT}/bin/o2-commonutils-treemergertool -i tpc-native-clusters-part*.root -o tpc-native-clusters.root -t tpcrec' #--asfriend preferable but does not work\n    workflow['stages'].append(TPCCLUSMERGEtask)\n    tpcreconeeds.append(TPCCLUSMERGEtask['name'])\n    else:\n        tpcclus = createTask(name='tpccluster_' + str(tf), needs=tpcclusterneed, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], cpu=NWORKERS_TF, mem='2000')\n        tpcclus['cmd'] = '${O2_ROOT}/bin/o2-tpc-chunkeddigit-merger --tpc-lanes ' + str(NWORKERS_TF)\n        tpcclus['cmd'] += ' | ${O2_ROOT}/bin/o2-tpc-reco-workflow ' + getDPL_global_options() + ' --input-type digitizer --output-type clusters,send-clusters-per-sector ' + putConfigValues([\"GPU_global\",\"TPCGasParam\",\"TPCCorrMap\"],{\"GPU_proc.ompThreads\" : 1}) + ('',' --disable-mc')[args.no_mc_labels]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "72128873527ecf8f1328992d01f2b20dba983ef3e756089faa754ab44e501f1c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "workflow['stages'].append(tpcclus)\ntpcreconeeds.append(tpcclus['name'])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "01a26a9192252c63f05117673bc3f3f865f5cee54e7b47d866080ff37e852f0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ===| TPC reco |===\ntpcLocalCFreco=dict()\n\n# handle distortion corrections and scaling using MC maps\n# this assumes the lumi inside the maps is stored in FT0 (pp) scalers\n# for PbPb data, a conversion factor from ZDC to FT0 (pp) must be specified\ntpc_corr_options_mc=''\n\ntpcCorrmapLumiMode = args.tpc_corrmap_lumi_mode",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "21699b2ef0c219b3c9a786815db5c7ecc6bb0e333ba2b8a37a75939177bcc988": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "tpcCorrmapLumiMode = args.tpc_corrmap_lumi_mode\n\nif tpcDistortionType == 0:  # disable distortion corrections\n    tpc_corr_options_mc = ' --corrmap-lumi-mode 0 '\n    tpcLocalCFreco['TPCCorrMap.lumiMean'] = '-1'\nelif tpcDistortionType == 1:  # disable scaling\n    tpc_corr_options_mc = ' --corrmap-lumi-mode ' + str(tpcCorrmapLumiMode) + ' '\n    tpcLocalCFreco['TPCCorrMap.lumiInst'] = str(CTPSCALER)\n    tpcLocalCFreco['TPCCorrMap.lumiMean'] = str(CTPSCALER)\nelif tpcDistortionType == 2:  # full scaling with CTP values\n    if COLTYPE == 'PbPb':\n        tpcLocalCFreco['TPCCorrMap.lumiInstFactor'] = str(lumiInstFactor)\n    tpc_corr_options_mc = ' --corrmap-lumi-mode ' + str(tpcCorrmapLumiMode) + ' '\n    tpcLocalCFreco['TPCCorrMap.lumiInst'] = str(CTPSCALER)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "d8c6c582c341a67133fbf6f9ec852f95811093a0065db39be7fbd8998482727d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configure the TPC correction scaling settings for reconstruction; these settings are derived from the anchoring setup.\n# Key points from Ruben:\n# - lumi-type == 0 indicates that no corrections are scaled with any luminescence measure, rather than no corrections at all.\n# - The \"no corrections\" mode is set by the TPCCorrMap.lumiMean configurable being negative, in which case all other correction options are disregarded.\n# - However, if the MC simulation included distortions, then the reconstruction should use --lumy-type 1 (i.e., scaling with CTP luminescence) even if the corresponding anchor run reconstruction used --lumy-type 2 (i.e., scaling according to the non-existent TPC IDC).",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "2c873428d7df6562ab41fa931a3c43b8fcb25ceb63d1c5ecdc7da272365a9542": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    anchor_lumi_type = dpl_option_from_config(anchorConfig, 'o2-tpcits-match-workflow', '--lumi-type', section = 'full', default_value = '')\n   if anchor_lumi_type != '':\n      anchor_lumi_type = '--lumi-type ' + anchor_lumi_type\n   anchor_corrmaplumi_mode = dpl_option_from_config(anchorConfig, 'o2-tpcits-match-workflow', '--corrmap-lumi-mode', section = 'full', default_value = '')\n   if anchor_corrmaplumi_mode != '':\n      anchor_corrmaplumi_mode = '--corrmap-lumi-mode ' + anchor_corrmaplumi_mode\n   \n   tpc_corr_scaling_options = anchor_lumi_type + ' ' + anchor_corrmaplumi_mode\n   \n   # why not simplify it to:\n   # tpc_corr_scaling_options = '--lumi-type 1' if tpcDistortionType != 0 else ''",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "51e3f5fe80331ddcbc691e51655e7ad1194106f4062f275062899fa2a573d1c6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- TPC reconstruction task\nTPCRECOtask = createTask(name='tpcreco_' + str(tf), needs=tpcreconeeds, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], relative_cpu=3/8, mem='16000')\nTPCRECOtask['cmd'] = task_finalizer([\n  '${O2_ROOT}/bin/o2-tpc-reco-workflow',\n  getDPL_global_options(bigshm=True),\n  '--input-type clusters',\n  '--output-type tracks,send-clusters-per-sector',\n  putConfigValues([\"GPU_global\",\n                   \"TPCGasParam\", \n                   \"TPCCorrMap\", \n                   \"GPU_rec_tpc\", \n                   \"trackTuneParams\"], \n                   {\"GPU_proc.ompThreads\":NWORKERS_TF} | tpcLocalCFreco),\n  ('',' --disable-mc')[args.no_mc_labels],\n  tpc_corr_scaling_options, \n  tpc_corr_options_mc,\n  tpcreco_mctimegain])\nworkflow['stages'].append(TPCRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4918a007af5fdcf91000b00bbe3e7fa4fd4153794aaa1ec73bbb8e61c8757669": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- ITS reconstruction task \nITSMemEstimate = 12000 if havePbPb else 2000 # PbPb requires significantly more memory (in worst case)\nITSRECOtask = createTask(name='itsreco_'+str(tf), needs=[getDigiTaskName(\"ITS\")],\n                         tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], cpu='1', mem=str(ITSMemEstimate))  \nITSRECOtask['cmd'] = task_finalizer([\n  \"${O2_ROOT}/bin/o2-its-reco-workflow\",\n  getDPL_global_options(bigshm=havePbPb),\n  '--trackerCA',\n  '--tracking-mode async',\n  putConfigValues([\"ITSVertexerParam\", \n                   \"ITSAlpideParam\",\n                   \"ITSClustererParam\", \n                   \"ITSCATrackerParam\"], \n                  {\"NameConf.mDirMatLUT\" : \"..\"}),\n  ('',' --disable-mc')[args.no_mc_labels]\n])\nworkflow['stages'].append(ITSRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "5ca302107e1aba69fa5456d5f0bfab5d5dd7bba2f2395fd08e28b8fee308fcfb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- FT0 reconstruction task \nFT0RECOtask = createTask(name='ft0reco_'+str(tf), needs=[getDigiTaskName(\"FT0\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1000')\nFT0RECOtask[\"cmd\"] = task_finalizer([\n     '${O2_ROOT}/bin/o2-ft0-reco-workflow',\n     getDPL_global_options(ccdbbackend=False), # note: when calibrations (or CCDB objects) are reenabled, we need to set ccdbbackend=True\n     '--disable-time-offset-calib', # as the effect is not simulated in MC\n     '--disable-slewing-calib', # and the effect is also not simulated in MC\n     putConfigValues()\n   ])\nworkflow['stages'].append(FT0RECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "f11830723a8a1daea7b8b5038a0433846c2a2acf77d88457ea47074888d70023": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- ITS-TPC track matching task \n   ITSTPCMATCHtask=createTask(name='itstpcMatch_'+str(tf), needs=[TPCRECOtask['name'], ITSRECOtask['name'], FT0RECOtask['name']], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='8000', relative_cpu=3/8)\n   ITSTPCMATCHtask[\"cmd\"] = task_finalizer([\n     '${O2_ROOT}/bin/o2-tpcits-match-workflow',\n     getDPL_global_options(bigshm=True),\n     ' --tpc-track-reader tpctracks.root',\n     '--tpc-native-cluster-reader \\\"--infile tpc-native-clusters.root\\\"',\n     '--use-ft0',\n     putConfigValues(['MFTClustererParam', \n                      'ITSCATrackerParam', \n                      'tpcitsMatch', \n                      'TPCGasParam', \n                      'TPCCorrMap', \n                      'ITSClustererParam', \n                      'GPU_rec_tpc', \n                      'trackTuneParams', \n                      'ft0tag'], \n                      {\"NameConf.mDirMatLUT\" : \"..\"} | tpcLocalCFreco),\n     tpc_corr_scaling_options,",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "04e44cf0660b732ef91929f0b6f22b92d29be36ec1de01d4166875daee8bd0fc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[\n    tpc_corr_scaling_options,\n    tpc_corr_options_mc\n]\nworkflow['stages'].append(ITSTPCMATCHtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "818253084894cce6664652d1f2e2b81c77f7d1fca1f9566eb7290441b864dc0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- ITS-TPC track matching task\nTRDTRACKINGtask = createTask(name='trdreco_'+str(tf), dependencies=[TRDDigitask['name'], ITSTPCMATCHtask['name'], TPCRECOtask['name'], ITSRECOtask['name']], tf=tf, cwd=timeframeworkdir, labels=[\"RECO\"], cpu='1', mem='2000')\nTRDTRACKINGtask['cmd'] = task_finalizer(['${O2_ROOT}/bin/o2-trd-tracklet-transformer',\n                                         getDPL_global_options(), \n                                         putConfigValues(),\n                                         ('',' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(TRDTRACKINGtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "bbc30b40994eedf65b67da61026fd566b466b480cd5814b27c33610d579f2f16": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- TRD global tracking \n# FIXME This is currently a workaround to avoid a race condition with trdcalibratedtracklets.root\nTRDTRACKINGtask2 = createTask(name='trdreco2_'+str(tf), needs=[TRDTRACKINGtask['name']], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], cpu='1', mem='2000')\ntrd_track_sources = dpl_option_from_config(anchorConfig, 'o2-trd-global-tracking', 'track-sources', default_value='TPC,ITS-TPC')\nTRDTRACKINGtask2['cmd'] = task_finalizer([\n      '${O2_ROOT}/bin/o2-trd-global-tracking',\n      getDPL_global_options(bigshm=True), \n      ('',' --disable-mc')[args.no_mc_labels],\n      putConfigValues(['ITSClustererParam',\n                       'ITSCATrackerParam',\n                       'trackTuneParams',\n                       'GPU_rec_tpc',\n                       'TPCGasParam',\n                       'TPCCorrMap'], {\"NameConf.mDirMatLUT\" : \"..\"} | tpcLocalCFreco),\n      '--track-sources ' + trd_track_sources,\n      tpc_corr_scaling_options,\n])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "eef472592f23a68f091ebb49a36428915cd2820560310cc29b1d450192b61b0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "['--track-sources ' + trd_track_sources,\n  tpc_corr_scaling_options, \n  tpc_corr_options_mc])\nworkflow['stages'].append(TRDTRACKINGtask2)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "508624c5a062fbabf27eb0db5c67a466f20e0e9f6dff00d27226fe52f4b46d22": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- TOF reconstruction task\nTOFRECOtask = createTask(name='tofmatch_'+str(tf), needs=[ITSTPCMATCHtask['name'], getDigiTaskName(\"TOF\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nTOFRECOtask[\"cmd\"] = task_finalizer([\n    '${O2_ROOT}/bin/o2-tof-reco-workflow',\n    getDPL_global_options(),\n    '--use-ccdb',\n    putConfigValues(),\n    ('',' --disable-mc')[args.no_mc_labels]\n])\nworkflow['stages'].append(TOFRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "3b3e1ca8737a35b0353ab367cc3a0a7921c0d56e0f0068fdda5dfbbc45e73ff0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- TOF-TPC(-ITS) global track matcher workflow\ntoftpcmatchneeds = [TOFRECOtask['name'], TPCRECOtask['name'], ITSTPCMATCHtask['name'], TRDTRACKINGtask2['name']]\ntoftracksrcdefault = dpl_option_from_config(anchorConfig, 'o2-tof-matcher-workflow', 'track-sources', default_value='TPC,ITS-TPC,TPC-TRD,ITS-TPC-TRD')\nTOFTPCMATCHERtask = createTask(name='toftpcmatch_'+str(tf), needs=toftpcmatchneeds, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1000')\ntofmatcher_cmd_parts = [\n  '${O2_ROOT}/bin/o2-tof-matcher-workflow',\n  getDPL_global_options(),\n  putConfigValues(['ITSClustererParam',\n                   'TPCGasParam',\n                   'TPCCorrMap',\n                   'ITSCATrackerParam',\n                   'MFTClustererParam',\n                   'GPU_rec_tpc',\n                   'trackTuneParams'], tpcLocalCFreco),\n  ' --track-sources ' + toftracksrcdefault,\n  (' --combine-devices','')[args.no_combine_dpl_devices],",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "32126a5d9cb17d986978517e8bec36ba676102f653aa7f99ac3a874e878aac12": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "(' --combine-devices','')[args.no_combine_dpl_devices],\ntpc_corr_scaling_options,\ntpc_corr_options_mc\n]\nTOFTPCMATCHERtask['cmd'] = task_finalizer(tofmatcher_cmd_parts)\nworkflow['stages'].append(TOFTPCMATCHERtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4aaa4e5b2e74202a99e5a36368c5ceae67fb7cf5e48bad8308de4a468a5d29c9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# MFT reco: requiring access to kinematics (when assessment is enabled)\nmftreconeeds = [getDigiTaskName(\"MFT\")]\nif usebkgcache:\n    mftreconeeds += [ BKG_KINEDOWNLOADER_TASK['name'] ]\n\n#<--------- MFT reco workflow\nMFTRECOtask = createTask(name='mftreco_'+str(tf), needs=mftreconeeds, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nMFTRECOtask['cmd'] = ('','ln -nfs ../bkg_Kine.root . ;')[doembedding]\nMFTRECOtask['cmd'] += task_finalizer([\n   '${O2_ROOT}/bin/o2-mft-reco-workflow', \n   getDPL_global_options(), \n   putConfigValues(['MFTTracking', \n                    'MFTAlpideParam', \n                    'ITSClustererParam',\n                    'MFTClustererParam']),\n   ('','--disable-mc')[args.no_mc_labels],\n   ('','--run-assessment')[args.mft_assessment_full]])\nworkflow['stages'].append(MFTRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "0cfe70e1a92b5661fb468a5e5c1c9b4a0b8b1d1499c0792450e657d3393cee62": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# MCH reco: requiring access to kinematics ... thus some additional logic is needed here\nmchreconeeds = [getDigiTaskName(\"MCH\")]\nif usebkgcache:\n   mchreconeeds += [ BKG_KINEDOWNLOADER_TASK['name'] ]\n\n#<--------- MCH reco workflow\nMCHRECOtask = createTask(name='mchreco_'+str(tf), needs=mchreconeeds, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nMCHRECOtask['cmd'] = ('','ln -nfs ../bkg_Kine.root . ;')[doembedding]\nMCHRECOtask['cmd'] += task_finalizer(\n   ['${O2_ROOT}/bin/o2-mch-reco-workflow', \n    getDPL_global_options(), \n    putConfigValues(), \n    ('',' --disable-mc')[args.no_mc_labels],\n    '--enable-clusters-root-output'])\nworkflow['stages'].append(MCHRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "246458f77d89edfcca06e59e1fc2b9e21105beb446cded0b549dd8719cd6e3ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- MID reconstruction workflow\nMIDRECOtask = createTask(name='midreco_'+str(tf), needs=[getDigiTaskName(\"MID\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nMIDRECOtask['cmd'] = task_finalizer(\n   ['${O2_ROOT}/bin/o2-mid-digits-reader-workflow',\n    ('',' --disable-mc')[args.no_mc_labels]])\nMIDRECOtask['cmd'] += ' | '\nMIDRECOtask['cmd'] += task_finalizer(['${O2_ROOT}/bin/o2-mid-reco-workflow', \n                                      getDPL_global_options(), \n                                      putConfigValues(),('',' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(MIDRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "dab4831288d631bedfa103069ef3ca391fdba69e8951ee6a63331dfb6ab3e2c0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- FDD reconstruction workflow\nFDDRECOtask = createTask(name='fddreco_'+str(tf), needs=[getDigiTaskName(\"FDD\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nFDDRECOtask['cmd'] = task_finalizer(['${O2_ROOT}/bin/o2-fdd-reco-workflow', \n                                     getDPL_global_options(ccdbbackend=False), \n                                     putConfigValues(),\n                                     ('',' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(FDDRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "3e146b491de66b494583a1ec09a00756191b8dafca5fb46236b7b19f480ddf2d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- FV0 reconstruction workflow\nFV0RECOtask = createTask(name='fv0reco_'+str(tf), requires=[getDigiTaskName(\"FV0\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nFV0RECOtask['cmd'] = task_finalizer(['${O2_ROOT}/bin/o2-fv0-reco-workflow', \n                                     getDPL_global_options(), \n                                     putConfigValues(),\n                                     ('',' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(FV0RECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "6ec3bf413c478da3844e9cb39435e2f7971833dc38082f2c0aafa09b2dfeda0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# calorimeters\n#<--------- EMC reco workflow\nEMCRECOtask = createTask(name='emcalreco_'+str(tf), needs=[getDigiTaskName(\"EMC\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\n# initial step\nEMCRECOtask['cmd'] = task_finalizer([\n   '${O2_ROOT}/bin/o2-emcal-reco-workflow', \n   putConfigValues(),\n   '--input-type digits',\n   '--output-type cells', \n   '--infile emcaldigits.root',\n   '--disable-root-output', \n   '--subspecificationOut 1',\n   ('',' --disable-mc')[args.no_mc_labels]])\n# intermediate step\nEMCRECOtask['cmd'] += ' | ' \nEMCRECOtask['cmd'] += task_finalizer([\n   '${O2_ROOT}/bin/o2-emcal-cell-recalibrator-workflow', \n   putConfigValues(),\n   '--input-subspec 1', \n   '--output-subspec 0',\n   '--no-timecalib', \n   '--no-gaincalib',\n   (' --isMC','')[args.no_mc_labels]])\n# final step\nEMCRECOtask['cmd'] += ' | ' \nEMCRECOtask['cmd'] += task_finalizer([",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "8a70637eeb76799137fbccab4d68cc438dca62324b05c465dba91a5f24d8c981": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# third part\nEMCRECOtask['cmd'] += ' | '\nEMCRECOtask['cmd'] += task_finalizer([\n   '${O2_ROOT}/bin/o2-emcal-cell-writer-workflow',\n   getDPL_global_options(),\n   '--subspec 0', \n   ('', ' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(EMCRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "0da5d93babcb0f89b872f0974f6d85838bd0cf4bee4101ac50b852ec6f32ecd1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- PHS reconstruction workflow\nPHSRECOtask = createTask(name='phsreco_'+str(tf), needs=[getDigiTaskName(\"PHS\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nPHSRECOtask['cmd'] = task_finalizer([\n   '${O2_ROOT}/bin/o2-phos-reco-workflow', \n   getDPL_global_options(), \n   putConfigValues(), \n   ('',' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(PHSRECOtask)\n\n#<--------- CPV reconstruction workflow\nCPVRECOtask = createTask(name='cpvreco_'+str(tf), needs=[getDigiTaskName(\"CPV\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nCPVRECOtask['cmd'] = task_finalizer(\n   ['${O2_ROOT}/bin/o2-cpv-reco-workflow', \n    getDPL_global_options(), \n    putConfigValues(), \n    ('',' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(CPVRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c01de7352aafe96f2c2fd6c31bd65048d104b3ae70f37cffe969aca35ba9d1e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- ZDC reconstruction workflow\nZDCRECOtask = createTask(name='zdcreco_'+str(tf), needs=[getDigiTaskName(\"ZDC\")], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\", \"ZDC\"])\nZDCRECOtask['cmd'] = task_finalizer(\n   ['${O2_ROOT}/bin/o2-zdc-digits-reco', \n    getDPL_global_options(), \n    putConfigValues(), \n    ('',' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(ZDCRECOtask)\n\n## forward matching\n#<--------- MCH-MID forward matching\nMCHMIDMATCHtask = createTask(name='mchmidMatch_'+str(tf), needs=[MCHRECOtask['name'], MIDRECOtask['name']], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nMCHMIDMATCHtask['cmd'] = task_finalizer(\n   ['${O2_ROOT}/bin/o2-muon-tracks-matcher-workflow', \n    getDPL_global_options(ccdbbackend=False),\n    putConfigValues(),\n    ('',' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(MCHMIDMATCHtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "0ca84b13c3005311725f6cb868786bcfcd7de061d2963d7bfb7afe77472e23dd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- MFT-MCH forward matching\nMFTMCHMATCHtask = createTask(name='mftmchMatch_'+str(tf), needs=[MCHMIDMATCHtask['name'], MFTRECOtask['name']], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\nMFTMCHMATCHtask['cmd'] = task_finalizer(\n    ['${O2_ROOT}/bin/o2-globalfwd-matcher-workflow',\n     putConfigValues(['ITSAlpideConfig',\n                      'MFTAlpideConfig',\n                      'FwdMatching'], {\"FwdMatching.useMIDMatch\": \"true\"}),\n     ('', ' --disable-mc')[args.no_mc_labels]])\n\nif args.fwdmatching_assessment_full == True:\n    MFTMCHMATCHtask['cmd'] += ' | '\n    MFTMCHMATCHtask['cmd'] += task_finalizer(\n        ['${O2_ROOT}/bin/o2-globalfwd-assessment-workflow',\n         getDPL_global_options(),\n         ('', ' --disable-mc')[args.no_mc_labels]])\nworkflow['stages'].append(MFTMCHMATCHtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "69dc33c218ca596aec3b84203963e572a4fce3423300a2c8708cbe7b4efb5fa7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if args.fwdmatching_save_trainingdata == True:\n  MFTMCHMATCHTraintask = createTask(name='mftmchMatchTrain_'+str(tf), needs=[MCHMIDMATCHtask['name'], MFTRECOtask['name']], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1500')\n  MFTMCHMATCHTraintask['cmd'] = '${O2_ROOT}/bin/o2-globalfwd-matcher-workflow ' + putConfigValues(['ITSAlpideConfig','MFTAlpideConfig'],{\"FwdMatching.useMIDMatch\":\"true\"})\n  MFTMCHMATCHTraintask['cmd'] += getDPL_global_options()\n  workflow['stages'].append(MFTMCHMATCHTraintask)\n\n  # HMP tasks\n  #<--------- HMP forward matching\n  HMPRECOtask = createTask(name='hmpreco_'+str(tf), needs=[getDigiTaskName('HMP')], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1000')\n  HMPRECOtask['cmd'] = task_finalizer(\n    ['${O2_ROOT}/bin/o2-hmpid-digits-to-clusters-workflow', \n     getDPL_global_options(ccdbbackend=False), \n     putConfigValues()])\n  workflow['stages'].append(HMPRECOtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "f1bc12f15fd5664728776e2b38d2a4cf976ea496902d634b8f685dd5406cd8ce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<--------- HMP forward matching\nhmpmatchneeds = [HMPRECOtask['name'], ITSTPCMATCHtask['name'], TOFTPCMATCHERtask['name'], TRDTRACKINGtask2['name']]\nhmp_match_sources = dpl_option_from_config(anchorConfig, 'o2-hmpid-matcher-workflow', 'track-sources', default_value='ITS-TPC,ITS-TPC-TRD,TPC-TRD')\nHMPMATCHtask = createTask(name='hmpmatch_'+str(tf), needs=hmpmatchneeds, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='1000')\nHMPMATCHtask['cmd'] = task_finalizer(\n   ['${O2_ROOT}/bin/o2-hmpid-matcher-workflow',\n    '--track-sources ' + hmp_match_sources,\n     getDPL_global_options(), \n     putConfigValues()\n   ])\nworkflow['stages'].append(HMPMATCHtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "127535c2c583e3f7169c29995c70fe4f1f0996a1430e541ffd444876cb6dd93e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<---------- primary vertex finding\npvfinder_sources = dpl_option_from_config(anchorConfig,\n                                         'o2-primary-vertexing-workflow',\n                                         'vertexing-sources',\n                                         default_value='ITS-TPC,TPC-TRD,ITS-TPC-TRD,TPC-TOF,ITS-TPC-TOF,TPC-TRD-TOF,ITS-TPC-TRD-TOF,MFT-MCH,MCH-MID,ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,FDD,HMP,FV0,TRD,MCH,CTP')\npvfinder_matching_sources = dpl_option_from_config(anchorConfig,\n                                                   'o2-primary-vertexing-workflow',\n                                                   'vertex-track-matching-sources',\n                                                   default_value='ITS-TPC,TPC-TRD,ITS-TPC-TRD,TPC-TOF,ITS-TPC-TOF,TPC-TRD-TOF,ITS-TPC-TRD-TOF,MFT-MCH,MCH-MID,ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,FDD,HMP,FV0,TRD,MCH,CTP')\npvfinderneeds = [TRDTRACKINGtask2['name'],",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "3ccf3b241e0546124e57f476b460df9965d8c14bbb0f7565fc3850969a85cc4f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "pvfinderneeds = [TRDTRACKINGtask2['name'], \n                 FT0RECOtask['name'], \n                 FV0RECOtask['name'], \n                 EMCRECOtask['name'], \n                 PHSRECOtask['name'], \n                 CPVRECOtask['name'], \n                 FDDRECOtask['name'], \n                 ZDCRECOtask['name'], \n                 HMPMATCHtask['name'], \n                 HMPMATCHtask['name'], \n                 ITSTPCMATCHtask['name'], \n                 TOFTPCMATCHERtask['name'], \n                 MFTMCHMATCHtask['name'], \n                 MCHMIDMATCHtask['name']]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "61521a111895d0dfd7141e47e8bcc637937bd0aa46bbc049dab4f09e935bfa2c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    PVFINDERtask = createTask(name='pvfinder_'+str(tf), needs=pvfinderneeds, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], cpu=NWORKERS_TF, mem='4000')\n    PVFINDERtask['cmd'] = task_finalizer(\n        [ '${O2_ROOT}/bin/o2-primary-vertexing-workflow', \n          getDPL_global_options(),\n          putConfigValues(['ITSAlpideParam',\n                           'MFTAlpideParam', \n                           'pvertexer', \n                           'TPCGasParam', \n                           'TPCCorrMap', \n                           'ft0tag'], \n                          {\"NameConf.mDirMatLUT\" : \"..\"}),\n          '--vertexing-sources ' + pvfinder_sources,\n          '--vertex-track-matching-sources ' + pvfinder_matching_sources,\n          (' --combine-source-devices','')[args.no_combine_dpl_devices],\n          ('',' --disable-mc')[args.no_mc_labels]\n        ])\n    workflow['stages'].append(PVFINDERtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "f861cdbc463dcf5ad8f7bf3df706f61ff4448ea2c7f92ab1a19de99dd565f2f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<------------- secondary vertexer\nsvfinder_threads = ' --threads 1 '\nsvfinder_cpu = 1\nif COLTYPE == \"PbPb\" or (doembedding and COLTYPEBKG == \"PbPb\"):\n    svfinder_threads = ' --threads 8 '\n    svfinder_cpu = 8\n\nsvfinder_sources = dpl_option_from_config(anchorConfig,\n                                          'o2-primary-vertexing-workflow',\n                                          'vertex-track-matching-sources',\n                                          default_value='ITS-TPC,TPC-TRD,ITS-TPC-TRD,TPC-TOF,ITS-TPC-TOF,TPC-TRD-TOF,ITS-TPC-TRD-TOF,MFT-MCH,MCH-MID,ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,ZDC,FDD,HMP,FV0,TRD,MCH,CTP')\nSVFINDERtask = createTask(name='svfinder_'+str(tf), needs=[PVFINDERtask['name'], FT0FV0EMCCTPDIGItask['name']], tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], cpu=svfinder_cpu, mem='5000')\nSVFINDERtask['cmd'] = task_finalizer(\n[ '${O2_ROOT}/bin/o2-secondary-vertexing-workflow', \n  getDPL_global_options(bigshm=True),\n  svfinder_threads,",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "a4d453d55789e03cabc1f7ac1ce5e3b76a487eedc4872d06ca2728cffd4d6a0f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "getDPL_global_options(bigshm=True),\n    svfinder_threads,\n    putConfigValues(['svertexer', 'TPCCorrMap'], {\"NameConf.mDirMatLUT\" : \"..\"} | tpcLocalCFreco),\n    tpc_corr_scaling_options,\n    tpc_corr_options_mc,\n    '--vertexing-sources ' + svfinder_sources,\n    ('--combine-source-devices','')[args.no_combine_dpl_devices],\n    ('',' --disable-strangeness-tracker')[args.no_strangeness_tracking],\n    ('',' --disable-mc')[args.no_mc_labels and not args.no_strangeness_tracking] # strangeness tracking may require MC labels\n   ])\n   workflow['stages'].append(SVFINDERtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "5c1064ddc8b31e8eab98ec14652194881a6637cb6c04f441433832bd494ea34c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<------------- AOD producer\n# TODO This section requires additional refinement; sources and dependencies should be dynamically constructed.\naod_info_sources_default = 'ITS-TPC,TPC-TRD,ITS-TPC-TRD,TPC-TOF,ITS-TPC-TOF,TPC-TRD-TOF,ITS-TPC-TRD-TOF,MFT-MCH,MCH-MID,ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,ZDC,FDD,HMP,FV0,TRD,MCH,CTP'\naodinfosources = dpl_option_from_config(anchorConfig, 'o2-aod-producer-workflow', 'info-sources', default_value=aod_info_sources_default)\naodneeds = [PVFINDERtask['name'], SVFINDERtask['name']]\n\nif usebkgcache:\n  aodneeds += [ BKG_KINEDOWNLOADER_TASK['name'] ]\n\naod_df_id = '{0:03}'.format(tf)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "928dbab54dcf4039755f596b64bb211736d31b82e1190acf77bd8536e421e836": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "aod_df_id = '{0:03}'.format(tf)\n\nimport os\naod_creator = os.getenv(\"JALIEN_USER\")\nif aod_creator is None:\n   # we use JAliEn to find out the user and capture the output into a variable through redirect_stdout\n   import io\n   from contextlib import redirect_stdout\n   f = io.StringIO()\n   with redirect_stdout(f):\n      if JAlien(['whoami']) == 0:\n         aod_creator = f.getvalue().strip()\n         print (f\"Determined GRID username {aod_creator}\")\n\n   # this option may not be available everywhere\n   created_by_option = option_if_available('o2-aod-producer-workflow', '--created-by', envfile=async_envfile)\n   if created_by_option != '':\n      created_by_option += ' ' + aod_creator",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "85a52405e892be4bb4dccc7bad8cb77fdb158c0fcef8ff7c27b19229531688f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "AODtask = createTask(name='aod_'+str(tf), needs=aodneeds, tf=tf, cwd=timeframeworkdir, lab=[\"AOD\"], mem='4000', cpu='1')\nAODtask['cmd'] = ('','ln -nfs ../bkg_Kine.root . ;')[doembedding]\nAODtask['cmd'] += '[ -f AO2D.root ] && rm AO2D.root; '\nAODtask['cmd'] += task_finalizer([\n   \"${O2_ROOT}/bin/o2-aod-producer-workflow\",\n   \"--reco-mctracks-only 1\",\n   \"--aod-writer-keep dangling\",\n   \"--aod-writer-resfile AO2D\",\n   '--aod-writer-resmode \"UPDATE\"',\n   f\"--run-number {args.run}\",\n   getDPL_global_options(bigshm=True),\n   f\"--info-sources {aodinfosources}\",\n   f\"--lpmp-prod-tag {args.productionTag}\",\n   \"--anchor-pass ${ALIEN_JDL_LPMANCHORPASSNAME:-unknown}\",\n   \"--anchor-prod ${ALIEN_JDL_LPMANCHORPRODUCTION:-unknown}\",\n   created_by_option,\n   \"--combine-source-devices\" if not args.no_combine_dpl_devices else \"\",\n   \"--disable-mc\" if args.no_mc_labels else \"\",\n\n])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "55b2a67e6be9a378ee8ae0f479260ee2af1405e5a6edfc1581fb5aea5dd2d022": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"--\n    \"--disable-mc\" if args.no_mc_labels else \"\",\n    \"--enable-truncation 0\" if environ.get(\"O2DPG_AOD_NOTRUNCATE\") or environ.get(\"ALIEN_JDL_O2DPG_AOD_NOTRUNCATE\") else \"\",\n    \"--disable-strangeness-tracker\" if args.no_strangeness_tracking else \"\",\n    f\"--aod-timeframe-id ${{ALIEN_PROC_ID}}{aod_df_id}\" if not args.run_anchored else \"\",\n]\n# For future consideration: AODtask['disable_alternative_reco_software'] = True # do not apply reco software here (we prefer the latest aod converter)\nworkflow['stages'].append(AODtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "22a920bc26eb81818469be7e50eb49994822ad1e811681e20991ffea4b9d9b47": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if includeTPCResiduals:\n  print(\"Adding TPC residuals extraction and aggregation\")\n\n  #<------------- TPC residuals extraction\n  scdcalib_vertex_sources = dpl_option_from_config(anchorConfig,\n                                                   'o2-tpc-scdcalib-interpolation-workflow',\n                                                   'vtx-sources',\n                                                   default_value='ITS-TPC,TPC-TRD,ITS-TPC-TRD,TPC-TOF,ITS-TPC-TOF,TPC-TRD-TOF,ITS-TPC-TRD-TOF,MFT-MCH,MCH-MID,ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,FDD,HMP,FV0,TRD,MCH,CTP')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "a34a8b5b69af64c65234c95e8dbe6670eb566f02b5d0cdc42a602cc0cfc7fc84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "scdcalib_track_sources = dpl_option_from_config(anchorConfig,\n                                                'o2-tpc-scdcalib-interpolation-workflow',\n                                                'tracking-sources',\n                                                default_value='ITS-TPC,TPC-TRD,ITS-TPC-TRD,TPC-TOF,ITS-TPC-TOF,TPC-TRD-TOF,ITS-TPC-TRD-TOF,MFT-MCH,MCH-MID,ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,FDD,HMP,FV0,TRD,MCH,CTP')\n\nscdcalib_track_extraction = dpl_option_from_config(anchorConfig,\n                                                   'o2-tpc-scdcalib-interpolation-workflow',\n                                                   'tracking-sources-map-extraction',\n                                                   default_value='ITS-TPC')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "148e56b0b0580d8109c59cd0828d9a9d12d9b6bbe10e7b270b162a4dbc0e0b9b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "SCDCALIBtask = createTask(name='scdcalib_'+str(tf), needs=[PVFINDERtask['name']], tf=tf, cwd=timeframeworkdir, lab=[\"CALIB\"], mem='4000')\n      SCDCALIBtask['cmd'] = task_finalizer(\n         [ '${O2_ROOT}/bin/o2-tpc-scdcalib-interpolation-workflow',\n           getDPL_global_options(bigshm=True),\n           putConfigValues(['scdcalib']),\n           '--vtx-sources ' + scdcalib_vertex_sources,\n           '--tracking-sources ' + scdcalib_track_sources,\n           '--tracking-sources-map-extraction ' + scdcalib_track_extraction,\n           '--sec-per-slot 1 ',\n           '--send-track-data'\n        ])\n      workflow['stages'].append(SCDCALIBtask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "200be05b7aff9cc421d14e912177b8ca8181cf98597aee36843b7ec5c57fbb4f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<------------- TPC Residuals Aggregator\n  scdaggreg_secperslot = dpl_option_from_config(anchorConfig,\n                                                'o2-calibration-residual-aggregator',\n                                                'sec-per-slot',\n                                                default_value='600')\n  scdaggreg_outputtype = dpl_option_from_config(anchorConfig,\n                                                'o2-calibration-residual-aggregator',\n                                                'output-type',\n                                                default_value='trackParams,unbinnedResid')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "5a4270c8223bce57e64bab5b384531868b4438de04467fb8693afcb8b4ebb2f8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    SCDAGGREGtask = createTask(name='scdaggreg_'+str(tf), needs=[SCDCALIBtask['name']], tf=tf, cwd=timeframeworkdir, lab=[\"CALIB\"], mem='1500')\n      SCDAGGREGtask['cmd'] = task_finalizer(\n         [ '${O2_ROOT}/bin/o2-calibration-residual-aggregator',\n           getDPL_global_options(bigshm=True),\n           '--sec-per-slot ' + scdaggreg_secperslot,\n           '--enable-ctp ',\n           '--enable-track-input',\n           '--output-dir ./',\n           '--output-type ' +  scdaggreg_outputtype,\n           '--meta-output-dir /dev/null'\n         ])\n      workflow['stages'].append(SCDAGGREGtask)\n\n   # conditional\n   #\n   # QC tasks follow\n   #\n\n   if includeFullQC or includeLocalQC:\n\n     def addQCPerTF(taskName, needs, readerCommand, configFilePath, objectsFile=''):\n       task = createTask(name=taskName + '_local' + str(tf), needs=needs, tf=tf, cwd=timeframeworkdir, lab=[\"QC\"], cpu=1, mem='2000')\n       objectsFile = objectsFile if len(objectsFile) > 0 else taskName + '.root'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "64774b9bffe2de6a6b708dae71ad6bd2122cbde6fe49d50e7ec00dd767f713d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def strip_json_prefix(path):\n    return re.sub(r'^json://', '', path)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "a8368760b52b970733b0686360b1fddfdc78a3db899615b1acf53967e103a7b8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "configFilePathOnDisk = remove_json_prefix(configFilePath)\n   # we verify if the configFilePath is present in the current software. If not, we exit gracefully\n   task['cmd'] = ' if [ -f ' + configFilePathOnDisk + ' ]; then { '\n    # The actual QC command\n    # the --local-batch argument ensures that QC Tasks store their results in a file and merge with any existing objects\n   task['cmd'] += f'{readerCommand} | o2-qc --config {configFilePath}' + \\\n                 f' --local-batch ../{qcdir}/{objectsFile}' + \\\n                 f' --override-values \"qc.config.database.host={args.qcdbHost};qc.config.Activity.number={args.run};qc.config.Activity.type=PHYSICS;qc.config.Activity.periodName={args.productionTag};qc.config.Activity.beamType={args.col};qc.config.Activity.start={args.timestamp};qc.config.conditionDB.url={args.conditionDB}\"' + \\\n                 ' ' + getDPL_global_options(ccdbbackend=False)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "c4933999dadc52c26a7e82cb3cdb98aad830530c2b555ec5dcceac3b8dcbca64": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "' ' + getDPL_global_options(ccdbbackend=False)\n       task['cmd'] += ' ;} else { echo \"Task ' + taskName + ' not performed as the config file was not found\"; } fi'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "85148fbd2d5b36d95241c2187582df3d788ba72dc7c60f0c178ac98c2aa58274": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Ensures that this task is not executed for multiple TimeFrames simultaneously, preventing attempts to modify the same file.\n   task['semaphore'] = objectsFile\n   workflow['stages'].append(task)\n\n### MFT",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "7d0b976ebaa2a7615f49276544ce6abd3339573a1a8a1207ce7d14d67440093e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# to be activated once MFT Digits should be processed with five different setups\nfor flp in range(5):\n  addQCPerTF(taskName='mftDigitsQC' + str(flp),\n             needs=[getDigiTaskName(\"MFT\")],\n             readerCommand='o2-qc-mft-digits-root-file-reader --mft-digit-infile=mftdigits.root',\n             configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mft-digits-' + str(flp) + '.json',\n             objectsFile='mftDigitsQC.root')\naddQCPerTF(taskName='mftClustersQC',\n           needs=[MFTRECOtask['name']],\n           readerCommand='o2-global-track-cluster-reader --track-types none --cluster-types MFT',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mft-clusters.json')\naddQCPerTF(taskName='mftTracksQC',\n           needs=[MFTRECOtask['name']],\n           readerCommand='o2-global-track-cluster-reader --track-types MFT --cluster-types MFT',",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "be6cdfcd543e368d14e415a50e1f2da50c83eb2d253c1c50a4f5c2bb2f320248": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mft-tracks.json')\naddQCPerTF(taskName='mftMCTracksQC',\n           needs=[MFTRECOtask['name']],\n           readerCommand='o2-global-track-cluster-reader --track-types MFT --cluster-types MFT',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mft-tracks-mc.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "e88901aa8609a09dc98ded3c57b9337d2125a21fa84092359db2e5e64b5570b9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### TPC\naddQCPerTF(taskName='tpcStandardQC',\n           needs=[TPCRECOtask['name']],\n           readerCommand='o2-tpc-file-reader --tpc-track-reader \"--infile tpctracks.root\" --tpc-native-cluster-reader \"--infile tpc-native-clusters.root\" --input-type clusters,tracks',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/tpc-qc-standard-direct.json')\n\n### TRD\naddQCPerTF(taskName='trdDigitsQC',\n           needs=[TRDDigitask['name']],\n           readerCommand='o2-trd-trap-sim',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/trd-standalone-task.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "aafec5b440435207866e06b9cc24f21c20543f00296d293cee1be655ea91ba46": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    addQCPerTF(taskName='trdTrackingQC',\n                needs=[TRDTRACKINGtask2['name']],\n                readerCommand='o2-global-track-cluster-reader --track-types \"ITS-TPC-TRD,TPC-TRD\" --cluster-types none',\n                configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/trd-tracking-task.json')\n\n     ### TOF\n     addQCPerTF(taskName='tofDigitsQC',\n                needs=[getDigiTaskName(\"TOF\")],\n                readerCommand='${O2_ROOT}/bin/o2-tof-reco-workflow --delay-1st-tf 3 --input-type digits --output-type none',\n                configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/tofdigits.json',\n                objectsFile='tofDigitsQC.root')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "bf06cc73f9550210b1f35bd33f12616949268eb36b1bf353b43359765619168d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# depending on whether TRD and FT0 are available\nif isActive('FT0') and isActive('TRD'):\n    addQCPerTF(taskName='tofft0PIDQC',\n               needs=[TOFTPCMATCHERtask['name'], FT0RECOtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"ITS-TPC-TOF,TPC-TOF,TPC,ITS-TPC-TRD,ITS-TPC-TRD-TOF,TPC-TRD,TPC-TRD-TOF\" --cluster-types FT0',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/pidft0tof.json')\nelif isActive('FT0'):\n    addQCPerTF(taskName='tofft0PIDQC',\n               needs=[TOFTPCMATCHERtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"ITS-TPC-TOF,TPC-TOF,TPC\" --cluster-types FT0',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/pidft0tofNoTRD.json')\nelif isActive('TRD'):\n    addQCPerTF(taskName='tofPIDQC',\n               needs=[TOFTPCMATCHERtask['name']])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "df040c5c5b14198f4434e599bbb91f1f372a3a542c3f06164894d31f571159d5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    addQCPerTF(taskName='tofPIDQC',\n               needs=[TOFTPCMATCHERtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"ITS-TPC-TOF,TPC-TOF,TPC,ITS-TPC-TRD,ITS-TPC-TRD-TOF,TPC-TRD,TPC-TRD-TOF\" --cluster-types none',\n              configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/pidtof.json')\n     else:\n       addQCPerTF(taskName='tofPIDQC',\n               needs=[TOFTPCMATCHERtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"ITS-TPC-TOF,TPC-TOF,TPC\" --cluster-types none',\n              configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/pidtofNoTRD.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "9d41359fa5289d16cf5796541ca4304bba7e8b5fb63e74f223829c516f69c70c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### EMCAL\nif EMC_is_active:\n    addQCPerTF(taskName='emcRecoQC',\n               needs=[EMCRECOtask['name']],\n               readerCommand='o2-emcal-cell-reader-workflow --infile emccells.root',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/emc-reco-tasks.json')\n    if CTP_is_active:\n        addQCPerTF(taskName='emcBCQC',\n                   needs=[EMCRECOtask['name'], getDigiTaskName(\"CTP\")],\n                   readerCommand='o2-emcal-cell-reader-workflow --infile emccells.root | o2-ctp-digit-reader --inputfile ctpdigits.root --disable-mc',\n                   configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/emc-bc-task.json')\n### FT0\naddQCPerTF(taskName='RecPointsQC',\n           needs=[FT0RECOtask['name']],\n           readerCommand='o2-ft0-recpoints-reader-workflow --infile o2reco_ft0.root',",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4302abfd9bb70c66116106265d5e1e446945daaa108ce2dff1ec345313be4e26": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "readerCommand='o2-ft0-recpoints-reader-workflow --infile o2reco_ft0.root',\n                configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/ft0-reconstruction-config.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "94ef74edb3aa2877136859c4916479225cdaf63f901b734608be719f2312a7ac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### FV0\naddQCPerTF(taskName='FV0DigitsQC',\n           needs=[getDigiTaskName(\"FV0\")],\n           readerCommand='o2-fv0-digit-reader-workflow --fv0-digit-infile fv0digits.root',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/fv0-digits.json')\n\n### FDD\naddQCPerTF(taskName='FDDRecPointsQC',\n           needs=[FDDRECOtask['name']],\n           readerCommand='o2-fdd-recpoints-reader-workflow --fdd-recpoints-infile o2reco_fdd.root',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/fdd-recpoints.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "76406ca387bea3b25553b26a6c9c199cbac290f15ea68cd26dfa4aa3be9d4b85": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### GLO + RECO\naddQCPerTF(taskName='vertexQC',\n           needs=[PVFINDERtask['name']],\n           readerCommand='o2-primary-vertex-reader-workflow',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/vertexing-qc-direct-mc.json')\naddQCPerTF(taskName='ITSTPCmatchQC',\n           needs=[ITSTPCMATCHtask['name']],\n           readerCommand='o2-global-track-cluster-reader --track-types \"ITS,TPC,ITS-TPC\"',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/ITSTPCmatchedTracks_direct_MC.json')\nif isActive('TOF'):\n    addQCPerTF(taskName='TOFMatchQC',\n               needs=[TOFTPCMATCHERtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"ITS-TPC-TOF,TPC-TOF,TPC\" --cluster-types none',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/tofMatchedTracks_ITSTPCTOF_TPCTOF_direct_MC.json')\nif isActive('TOF') and isActive('TRD'):",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "55dddd986532283414e8bbdc8ad5aac06367bb6b5e6dd44c7ed14e65801e3764": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the TOF and TRD are active:\n    add a quality control per trigger frame with the task name 'TOFMatchWithTRDQC',\n    requiring [TOFTPCMATCHERtask['name']],\n    using the command 'o2-global-track-cluster-reader --track-types \"ITS-TPC-TOF,TPC-TOF,TPC,ITS-TPC-TRD,ITS-TPC-TRD-TOF,TPC-TRD,TPC-TRD-TOF\" --cluster-types none',\n    and referencing the configuration file at 'json://${O2DPG_ROOT}/MC/config/QC/json/tofMatchedTracks_AllTypes_direct_MC.json'.\n\n    ### ITS\n    add a quality control per trigger frame with the task name 'ITSTrackSimTask',\n    requiring [ITSRECOtask['name']],\n    using the command 'o2-global-track-cluster-reader --track-types \"ITS\" --cluster-types \"ITS\"',\n    and referencing the configuration file at 'json://${O2DPG_ROOT}/MC/config/QC/json/its-mc-tracks-qc.json'.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "17436a1176f0f921087c438d4e9f52660a8e116dcff1cfa5845f9f16cb5bf487": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    addQCPerTF(taskName='ITSTracksClusters',\n               needs=[ITSRECOtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"ITS\" --cluster-types \"ITS\"',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/its-clusters-tracks-qc.json')\n\n     ### CPV\n     if CPV_isActive():\n        addQCPerTF(taskName='CPVDigitsQC',\n                   needs=[getDigiTaskName(\"CPV\")],\n                   readerCommand='o2-cpv-digit-reader-workflow',\n                   configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/cpv-digits-task.json')\n        addQCPerTF(taskName='CPVClustersQC',\n                   needs=[CPVRECOtask['name']],\n                   readerCommand='o2-cpv-cluster-reader-workflow',\n                   configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/cpv-clusters-task.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "723da6ee89398ff3fb3c7546c6c1deb8a9e45be54c74939c9cb4c104bcf3e334": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### PHS\nif the PHS is active:\n    include quality control per trigger frame with the task name 'PHSCellsClustersQC',\n    which depends on the task named [PHSRECOtask['name']],\n    using the command 'o2-phos-reco-workflow --input-type cells --output-type clusters --disable-mc --disable-root-output' for the reader,\n    and configure it with the file 'json://${O2DPG_ROOT}/MC/config/QC/json/phs-cells-clusters-task.json'.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "148113207fe1ea0fb20bf5790306fa6ad13350b2236fa6c7c1396a0bbe23a4bd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### MID\nif MID is active:\n    addQCPerTF(taskName='MIDTaskQC',\n               needs=[MIDRECOtask['name']],\n               readerCommand='o2-mid-digits-reader-workflow | o2-mid-tracks-reader-workflow',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mid-task.json')\n    \n### MCH\nif MCH is active:\n    addQCPerTF(taskName='MCHDigitsTaskQC',\n               needs=[MCHRECOtask['name']],\n               readerCommand='o2-mch-digits-reader-workflow',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mch-digits-task.json')\n    addQCPerTF(taskName='MCHErrorsTaskQC',\n               needs=[MCHRECOtask['name']],\n               readerCommand='o2-mch-errors-reader-workflow',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mch-errors-task.json')\n    addQCPerTF(taskName='MCHRecoTaskQC',\n               needs=[MCHRECOtask['name']])",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "88931e9efca6332bd1ced1652a318ffb82dd5557c3f436b5c8bd355a490ddf58": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "addQCPerTF(taskName='MCHRecoTaskQC',\n           needs=[MCHRECOtask['name']],\n           readerCommand='o2-mch-reco-workflow --disable-root-output',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mch-reco-task.json')\naddQCPerTF(taskName='MCHTracksTaskQC',\n           needs=[MCHRECOtask['name']],\n           readerCommand='o2-global-track-cluster-reader --track-types MCH --cluster-types MCH',\n           configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mch-tracks-task.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "f3813adc767fe9c1fafabe27455cea6004ac1bc894d912fc6377cf5db2ffb342": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### MCH + MID\nif both 'MCH' and 'MID' are active:\n    addQCPerTF(taskName='MCHMIDTracksTaskQC',\n               needs=[MCHMIDMATCHtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"MCH,MID,MCH-MID\" --cluster-types \"MCH,MID\"',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mchmid-tracks-task.json')\n  \n### MCH && MID && MFT || MCH && MFT\nif 'MCH', 'MID', and 'MFT' are all active:\n    addQCPerTF(taskName='MUONTracksMFTTaskQC',\n               needs=[MFTMCHMATCHtask['name'], MCHMIDMATCHtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"MFT,MCH,MID,MCH-MID,MFT-MCH,MFT-MCH-MID\" --cluster-types \"MCH,MID,MFT\"',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mftmchmid-tracks-task.json')\nelif 'MCH' and 'MFT' are active:\n    addQCPerTF(taskName='MCHMFTTaskQC',",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4f2663918011a24087e77691f7f58d8f8805540d4b554f409766189c2ca3eafc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "elif 'MCH' is active and 'MFT' is active :\n    addQCPerTF(taskName='MCHMFTTaskQC',\n               needs=[MFTMCHMATCHtask['name']],\n               readerCommand='o2-global-track-cluster-reader --track-types \"MCH,MFT,MFT-MCH\" --cluster-types \"MCH,MFT\"',\n               configFilePath='json://${O2DPG_ROOT}/MC/config/QC/json/mftmch-tracks-task.json')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "9a24b5afb151529f82224d3a3a9adbef23ff46466f41539ac80bdee3bf501f39": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<------------------ TPC - time-series objects\n# initial implementation sourced from comments in https://its.cern.ch/jira/browse/O2-4612\n# TODO: this must be made configurable based on which detectors are actually present\ntpctsneeds = [ TPCRECOtask['name'],\n               ITSTPCMATCHtask['name'],\n               TOFTPCMATCHERtask['name'],\n               PVFINDERtask['name']\n             ]\nTPCTStask = createTask(name='tpctimeseries_'+str(tf), needs=tpctsneeds, tf=tf, cwd=timeframeworkdir, lab=[\"RECO\"], mem='2000', cpu='1')\nTPCTStask['cmd'] = 'o2-global-track-cluster-reader --disable-mc --cluster-types \"FT0,TOF,TPC\" --track-types \"ITS,TPC,ITS-TPC,ITS-TPC-TOF,ITS-TPC-TRD-TOF\"'\nTPCTStask['cmd'] += ' --primary-vertices '\nTPCTStask['cmd'] += ' | o2-tpc-time-series-workflow --enable-unbinned-root-output --sample-unbinned-tsallis --sampling-factor 0.01 '\nTPCTStask['cmd'] += putConfigValues() + ' ' + getDPL_global_options(bigshm=True)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "a12a095a66684ca4aed71495795e47c9843bd3c077f0bfd2e6b56a868f23536e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    TPCTStask['cmd'] += putConfigValues() + ' ' + getDPL_global_options(bigshm=True)\n    workflow['stages'].append(TPCTStask)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "751c29634d4da783337925de75a42d36a0e5b6834a56ba12341dfdaae9eeb1a1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# CLEANUP\n# --------\n# In the GRID environment, it is crucial to perform cleanup promptly due to limited disc space, which could constrain the number of timeframes. We provide a timeframe cleanup function that removes digits, clusters, and other unnecessary files as soon as possible.\n# TODO: Implement cleanup based on labels or task names\n   if args.early_tf_cleanup == True:\n     TFcleanup = createTask(name='tfcleanup_'+str(tf), needs= [ AODtask['name'] ], tf=tf, cwd=timeframeworkdir, lab=[\"CLEANUP\"], mem='0', cpu='1')\n     TFcleanup['cmd'] = 'rm *digi*.root;'\n     TFcleanup['cmd'] += 'rm *cluster*.root'\n     workflow['stages'].append(TFcleanup)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "06ce966c594a62c00175cf8f454063f377e53b530c713f5137ddd082eaad986c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not args.make_evtpool:\n   # AOD merging as one final step\n   aodmergerneeds = ['aod_' + str(tf) for tf in range(1, NTIMEFRAMES + 1)]\n   AOD_merge_task = createTask(name='aodmerge', needs=aodmergerneeds, lab=[\"AOD\"], mem='2000', cpu='1')\n   AOD_merge_task['cmd'] = 'set -e ; [ -f aodmerge_input.txt ] && rm aodmerge_input.txt; '\n   AOD_merge_task['cmd'] += 'for i in `seq 1 ' + str(NTIMEFRAMES) + '`; do echo \"tf${i}/AO2D.root\" >> aodmerge_input.txt; done; '\n   AOD_merge_task['cmd'] += 'o2-aod-merger --input aodmerge_input.txt --output AO2D.root'\n   # generate MonaLisa event statistics file\n   AOD_merge_task['cmd'] += ' ; ${O2DPG_ROOT}/MC/bin/o2dpg_determine_eventstat.py'\n   AOD_merge_task['alternative_alienv_package'] = \"None\" # latest software required for this step\n   workflow['stages'].append(AOD_merge_task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "cba79f419d4b10c42ee8d9ff7eaf4cc72ebbf894e96c81b7a3869eafa7353484": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "job_merging = False\nif includeFullQC:\n   workflow['stages'].extend(include_all_QC_finalization(ntimeframes=NTIMEFRAMES, standalone=False, run=args.run, productionTag=args.productionTag, conditionDB=args.conditionDB, qcdbHost=args.qcdbHost, beamType=args.col))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "fae3ff734d25baf60801ae1f9a21fd8ebd8e6e726c4218cb425ccb5a5fe97978": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if includeAnalysis:\n  # incorporate analyses and possibly the final QC upload tasks\n  add_analysis_tasks(workflow[\"stages\"], needs=[AOD_merge_task[\"name\"]], is_mc=True, collision_system=COLTYPE)\n  if QUALITYCONTROL_ROOT:\n     add_analysis_qc_upload_tasks(workflow[\"stages\"], args.productionTag, args.run, \"passMC\")\nelse:\n   wfneeds=['sgngen_' + str(tf) for tf in range(1, NTIMEFRAMES + 1)]\n   tfpool=['tf' + str(tf) + '/genevents_Kine.root' for tf in range(1, NTIMEFRAMES + 1)]\n   POOL_merge_task = createTask(name='poolmerge', needs=wfneeds, lab=[\"POOL\"], mem='2000', cpu='1')\n   POOL_merge_task['cmd'] = '${O2DPG_ROOT}/UTILS/root_merger.py -o evtpool.root -i ' + ','.join(tfpool)\n   # also generate the stat file with the event count",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "21cfaf10cdfb58a062e7856e02e0e5412a441771d8b08e92ca81d106289e1b6e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# also generate the stat file with the event count\nPOOL_merge_task['cmd'] += '; RC=$?; root -l -q -b -e \"auto f=TFile::Open(\\\\\\\"evtpool.root\\\\\\\"); auto t=(TTree*)f->Get(\\\\\\\"o2sim\\\\\\\"); int n=t->GetEntries(); std::ofstream((\\\\\\\"0_0_0_\\\\\\\"+std::to_string(n)+\\\\\\\".stat\\\\\\\").c_str()) << \\\\\\\"# MonaLisa stat file for event pools\\\\\\\";\" ; [[ ${RC} == 0 ]]'\nworkflow['stages'].append(POOL_merge_task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "ac1aa12ae5cb0b01f3d67942f941446b88d6cb7e7e623308fae17cb28dcfa5df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# if TPC residuals extraction is required, we must combine per-timeframe trees\nif includeTPCResiduals:\n   tpcResidMergingNeeds = ['scdaggreg_' + str(tf) for tf in range(1, NTIMEFRAMES + 1)]\n   TPCResid_merge_task = createTask(name='tpcresidmerge', needs = tpcResidMergingNeeds, lab=[\"CALIB\"], mem='2000', cpu='1')\n   TPCResid_merge_task['cmd'] = ' set -e ; [ -f tpcresidmerge_input.txt ] && rm tpcresidmerge_input.txt; '\n   TPCResid_merge_task['cmd'] += ' for i in `seq 1 ' + str(NTIMEFRAMES) + '`; do find tf${i} -name \"o2tpc_residuals_*.root\" >> tpcresidmerge_input.txt; done; '\n   TPCResid_merge_task['cmd'] += '${O2DPG_ROOT}/UTILS/root_merger.py -o o2tpc_residuals.root -i $(grep -v \\\"^$\\\" tpcresidmerge_input.txt | paste -sd, -)'\n   workflow['stages'].append(TPCResid_merge_task)\n\n\n# adapt for alternative (RECO) software setups\nadjust_RECO_environment(workflow, args.alternative_reco_software)\n\ndump_workflow(workflow['stages'], args.o, meta=vars(args))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "4dd18883f7fae2da7d7c0b893e2048557108b5bf9988675a60e1e0efc5910145": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    dump_workflow(workflow['stages'], output_file=args.o, meta=vars(args))\n\n# save a configuration to allow reproduction of this workflow\ntask_finalizer.dump_collected_config(config_file=\"final_config.json\")\n\nexit(0)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/o2dpg_sim_workflow.py"
        }
    ],
    "f95b6180926b928710f88353f3f632131d9a2c9aec45cd0152d8a654fa8a46b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "import json\nimport os\nimport requests\nimport subprocess\n\nimport dataclasses # to define the MCProdInfo data layout and convert it to a dictionary\nfrom dataclasses import dataclass, field, asdict, fields\nfrom typing import Optional\nimport hashlib\n\n@dataclass(frozen=True)\nclass MCProdInfo:\n    \"\"\"\n    structure for MonteCarlo production information\n    \"\"\"\n    LPMProductionTag: str\n    Col: int\n    IntRate: float   # indicative of an interaction rate, which may vary during the run\n    RunNumber: int\n    OrbitsPerTF: int\n    # max_events_per_tf: Optional[int] = -1\n    Comment: Optional[str] = None\n    Hash: Optional[str] = field(default=None)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/mcprodinfo_ccdb_upload.py"
        }
    ],
    "af15d4a68d555019d94953cbd39d4d42b540711d83c77e4e0f7d2bef0da4971d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def __post_init__(self):\n    if self.Hash is None:\n        # Only hash meaningful fields\n        data_to_hash = {\n            k: v for k, v in asdict(self).items()\n            if k != 'Hash'\n        }\n        hash_str = hashlib.sha256(\n            json.dumps(data_to_hash, sort_keys=True).encode()\n        ).hexdigest()\n        object.__setattr__(self, 'Hash', hash_str)\n\n\nimport re",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/mcprodinfo_ccdb_upload.py"
        }
    ],
    "6e22c7cc529b1c88ded6f690a5d379f4b9ffe9c7e9d855f33e36ac0a48e7a773": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def extract_metadata_blocks_from_CCDB(text: str):\n    blocks = []\n    # Split the text on 'Metadata:\\n' and process each block\n    sections = text.split('Metadata:\\n')\n    for section in sections[1:]:  # skip the initial section before any Metadata:\n        metadata = {}\n        for line in section.splitlines():\n            if not line.strip():  # stop processing at the first blank line\n                break\n            match = re.match(r'\\s*(\\w+)\\s*=\\s*(.+)', line)\n            if match:\n                key, val = match.groups()\n                # Convert the value types\n                if val == \"None\":\n                    val = None\n                elif val.isdigit() or (val.startswith('-') and val[1:].isdigit()):\n                    val = int(val)\n                else:\n                    try:\n                        val = float(val)\n                    except ValueError:\n                        val = val.strip()\n                metadata[key] = val\n        if metadata:\n            blocks.append(metadata)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/mcprodinfo_ccdb_upload.py"
        }
    ],
    "aad7a125921a2a95db53ec17d520231138946af14e78b6092c49216c587dbd71": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    metadata[key] = val\n    if metadata:\n        blocks.append(metadata)\n    return blocks",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/mcprodinfo_ccdb_upload.py"
        }
    ],
    "1cc7ff2f096f6512c01234d1e50c74d330588a5cbda53b28f66c9ed37682ae5f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    def query_mcprodinfo(base_url, user, run_number, lpm_prod_tag, cert_dir=\"/tmp\"):\n    \"\"\"\n    Fetches MCProdInfo from CCDB. Returns an object or None.\n    \"\"\"\n    # Verify the existence of tokenfiles\n    key_path = os.environ.get(\"JALIEN_TOKEN_KEY\")\n    cert_path = os.environ.get(\"JALIEN_TOKEN_CERT\")\n    if key_path is None and cert_path is None:\n       uid = os.getuid()\n       cert_path = os.path.join(cert_dir, f\"tokencert_{uid}.pem\")\n       key_path = os.path.join(cert_dir, f\"tokenkey_{uid}.pem\")\n\n    # Construct the full URL\n    user_path = 'Users/' + user[0] + '/' + user\n    start = run_number\n    stop = run_number + 1 \n    url = f\"{base_url}/browse/{user_path}/MCProdInfo/{lpm_prod_tag}/{start}/{stop}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/mcprodinfo_ccdb_upload.py"
        }
    ],
    "90d1c2deb77bc3bf58e0c27c0594f736c3bcfa772a94f3d8c5f2f8e14dd0f079": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    response = requests.get(url, cert=(cert_path, key_path), verify=False)\n    if response.status_code != 404:\n        meta = extract_metadata_blocks_from_CCDB(response.content.decode('utf-8'))\n        if len(meta) > 0:\n          def filter_known_fields(cls, data: dict) -> dict:\n            valid_keys = {f.name for f in fields(cls)}\n            return {k: v for k, v in data.items() if k in valid_keys}\n        \n          clean_meta = filter_known_fields(MCProdInfo, meta[0])\n          return MCProdInfo(**clean_meta)\n       \n    return None\n\n\ndef upload_mcprodinfo_meta(base_url, user, run_number, lpm_prod_tag, keys, cert_dir=\"/tmp\"):\n    \"\"\"\n    Uploads an empty .dat file using client certificates.\n    \"\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/mcprodinfo_ccdb_upload.py"
        }
    ],
    "5bf1b076e36ccdcd8f318888219506038a84e17781676753fb795beb320f6062": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PARAMETERS:\n- base_url (str): The base HTTPS URL, e.g., \"https://URL\"\n- user (str): The uploader, which determines the location \"Users/f/foo_bar/MCProdInfo/...\"\n- keys (dict): A dictionary containing meta information to upload, such as {\"key1\": \"var1\", \"key2\": \"var2\"}\n- cert_dir (str): The directory where the .pem files are stored (default: /tmp)\n\nRETURNS:\n- A response object from the POST request\n\"\"\"\n# Create an empty file\nempty_file = \"empty.dat\"\nwith open(empty_file, \"w\") as f:\n    f.write(\"0\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/mcprodinfo_ccdb_upload.py"
        }
    ],
    "579c131b1f7e6305736ee7717f0d2e700e050eae0477b4b5f7a6f0319178c5e3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Create unique certificate and key file paths based on user ID\nkey_path = os.environ.get(\"JALIEN_TOKEN_KEY\")\ncert_path = os.environ.get(\"JALIEN_TOKEN_CERT\")\nif key_path is None and cert_path is None:\n    uid = os.getuid()\n    cert_path = os.path.join(cert_dir, f\"tokencert_{uid}.pem\")\n    key_path = os.path.join(cert_dir, f\"tokenkey_{uid}.pem\")\n\n# Construct full URL\nquery = \"/\".join([f\"{k}={v}\" for k, v in keys.items()])\nuser_path = 'Users/' + user[0] + '/' + user\nstart = run_number\nstop = run_number + 1 \nurl = f\"{base_url}/{user_path}/MCProdInfo/{lpm_prod_tag}/{start}/{stop}/{query}\"\n\nprint(f\"Complete URL: {url}\")\n\n# Set up request\nwith open(empty_file, 'rb') as f:\n    files = {'blob': f}\n    response = requests.post(url, files=files, cert=(cert_path, key_path), verify=False)\n\n# Optional: delete temporary file\nos.remove(empty_file)\n\nreturn response",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/prodinfo/mcprodinfo_ccdb_upload.py"
        }
    ],
    "bf8b731c2b6aff7dd2d88512e345c70a5175197d73cef515efd65234955a0d81": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n### @author: Roberto Preghenella\n### @email: preghenella@bo.infn.it\n\nimport argparse\n\n\ndef derive_process(process_in, beam_type_a, beam_type_b):\n    \"\"\"\n    Derive the process from the beam types if not specified.\n    \"\"\"\n    if process_in != \"none\":\n        return process_in\n    if beam_type_a == 2212 and beam_type_b == 2212:\n        return \"inel\"\n    if beam_type_a == 1000822080 and beam_type_b == 1000822080:\n        return \"heavy_ion\"\n    return \"none\"\n\n\nparser = argparse.ArgumentParser(description='Generate Pythia8 configuration',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\nparser.add_argument('--seed', type=int, default=None,\n                   help='The random seed')\n\nparser.add_argument('--idA', type=int, default='2212',\n                   help='PDG code for the projectile beam A')\n\nparser.add_argument('--idB', type=int, default='2212',\n                   help='PDG code for the target beam B')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "8d52a588ed4d513c650d8a499f41e1c2641e9b1c48e7035a8bce2a379c023787": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--eA', type=float, default='6499.',\n                    help='Energy of beam A')\n\nparser.add_argument('--eB', type=float, default='6499.',\n                    help='Energy of beam B')\n\nparser.add_argument('--eCM', type=float, default='-1',\n                    help='Centre-of-mass energy (use beam energy with caution)')\n\nparser.add_argument('--process', default='inel', choices=['none', 'inel', 'ccbar', 'bbbar', 'heavy_q', 'jets', 'dirgamma', 'cdiff','heavy_ion'],\n                    help='Select the process to be enabled')\n\nparser.add_argument('--ptHatMin', type=float,\n                    help='Minimum invariant pT')\n\nparser.add_argument('--ptHatMax', type=float,\n                    help='Maximum invariant pT')\n\nparser.add_argument('--weightPower', type=float,\n                    help='Power for the weight in the hard spectrum')\n\nparser.add_argument('--output', default='pythia8.cfg',\n                    help='File to write the configuration')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "21fed8648716a89e8c8dbafb1070f7e99e1cba58b70084db4de822b6ab391543": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    parser.add_argument('--include', action='append', default=None,\n                        help='Add files to the top of the configuration')\n\n    parser.add_argument('--append', action='append', default=None,\n                        help='Add files to the bottom of the configuration')\n\n    parser.add_argument('--command', action='append', default=None,\n                        help='Add user-defined commands at the end of the configuration')\n\n    args = parser.parse_args()\n\n    # derive the process\n    args.process = derive_process(args.process, args.idA, args.idB)\n\n    ### open output file\n    fout = open(args.output, 'w')\n\n    ### included files\n    if args.include is not None :\n        for i in args.include :\n            fout.write('### --> included from %s \\n' % (i))\n            fin = open(i, 'r')\n            data = fin.read()\n            fin.close()\n            fout.write('\\n')\n            fout.write(data)\n            fout.write('\\n')\n            fout.write('### <-- included from %s \\n' % (i))\n        fout.write('\\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "0b5ea28090f5d872b830fd6e1f44c4ee66fca1ccadd7fc345b0b8df8d266df18": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fout.write('### --> generated by mkpy8cfg.py \\n')\nfout.write('\\n')\n\n### random\nif args.seed is not None:\n    fout.write('### random \\n')\n    fout.write('Random:setSeed = on \\n')\n    fout.write('Random:seed = %d \\n' % (args.seed))\n    fout.write('\\n')\n\n### beams\nfout.write('### beams \\n')\nfout.write('Beams:idA = %d \\n' % (args.idA))\nfout.write('Beams:idB = %d \\n' % (args.idB))\nif args.eCM > 0:\n    fout.write('Beams:eCM = %f \\n' % (args.eCM))\nelif args.eA > 0 and args.eB > 0:\n    if args.eA != args.eB:\n        fout.write('Beams:frameType = 2 \\n')\n    fout.write('Beams:eA = %f \\n' % (args.eA))\n    fout.write('Beams:eB = %f \\n' % (args.eB))\nelse:\n    print('mkpy8cfg.py: Error, CM or Beam Energy not set!!!')\n    exit(1)\nfout.write('\\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "e464a255b762754911195d0a4544cf2b2695c128fc0a6b6359de551d20e4b6a8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### processes\nfout.write('### processes \\n')\nif args.process == 'inel':\n    fout.write('SoftQCD:inelastic = on \\n')\nelse:\n    if args.process != 'inel' and args.process != 'heavy_ion':\n        fout.write('SoftQCD:inelastic = off \\n')  ### we switch this off because it might be on by default, but only for pp or pPb,\n        # in PbPb let's not force it in case it is needed in Angantyr\nif args.process == 'ccbar' or args.process == 'heavy_q':\n    fout.write('HardQCD:hardccbar = on \\n')\nif args.process == 'bbbar' or args.process == 'heavy_q':\n    fout.write('HardQCD:hardbbbar = on \\n')\nif args.process == 'jets':\n    fout.write('HardQCD:all = on \\n')\nif args.process == 'dirgamma':\n    fout.write('PromptPhoton:all = on \\n')\nif args.process == 'cdiff':\n    fout.write('SoftQCD:inelastic = on \\n')\n    # enable non-zero cross section for CEP\n    fout.write('SigmaTotal:zeroAXB = off \\n')\n    # enable diffraction for pp\n    if args.idA == 2212 and args.idB == 2212:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "f2e475fa8b71b6283ff8310f6720937a15ee53829abd12a9fdd709881a6968c7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# enable diffraction for pp collisions\nif args.idA == 2212 and args.idB == 2212:\n    fout.write('SoftQCD:nonDiffractive = on \\n')\n    fout.write('SoftQCD:singleDiffractive = on \\n')\n    fout.write('SoftQCD:doubleDiffractive = on \\n')\nfout.write('\\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "43f465fd896f075ff3e286cdf0d66c49d32804a8cf09cc7ebd31df0b9c5a3314": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### settings for heavy ions (valid for Pb-Pb 5520 only)\nif args.process == 'heavy_ion' and (args.idA == 1000822080 and args.idB == 1000822080 and args.eCM == 5520.):\n    fout.write('### settings for heavy ions (valid for Pb-Pb 5520 only) \\n')\n    fout.write('HeavyIon:SigFitNGen = 0 \\n')\n    fout.write('HeavyIon:SigFitDefPar = 13.88,1.84,0.22,0.0,0.0,0.0,0.0,0.0 \\n')\n    fout.write('HeavyIon:bWidth = 14.48 \\n')\nfout.write('\\n')\n\n### particle decays\nfout.write('### particle decays \\n')\nfout.write('ParticleDecays:limitTau0 = on \\n') ### we will need to set some parameters for these settings\nfout.write('ParticleDecays:tau0Max = 10. \\n')\nfout.write('\\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "18139abfed4f991b3e036faf8f146a22fce206bc0aa9ea360f3d7f4766a8b626": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### phase space constraints\nfout.write('### phase space constraints \\n')\nif args.ptHatMin is not None :\n    fout.write('PhaseSpace:pTHatMin = %f \\n' % (args.ptHatMin))\nif args.ptHatMax is not None :\n    fout.write('PhaseSpace:pTHatMax = %f \\n' % (args.ptHatMax))\nif args.weightPower is not None :\n    fout.write('PhaseSpace:bias2Selection = on \\n')\n    fout.write('PhaseSpace:bias2SelectionPow = %f \\n' % (args.weightPower))\n\nfout.write('\\n')\n\nfout.write('### <-- generated by mkpy8cfg.py \\n')\nfout.write('\\n')\n\n### incorporated files\nif args.append is not None :\n    for i in args.append :\n        fout.write('### --> included from %s \\n' % (i))\n        with open(i, 'r') as fin :\n            data = fin.read()\n        fout.write('\\n')\n        fout.write(data)\n        fout.write('\\n')\n        fout.write('### <-- included from %s \\n' % (i))\n    fout.write('\\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "afd446ead9bfbabeb7a2cf3d6fb78d155a44f0ef6c6d0f7da065262e70dc3092": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### user commands\nif args.command is not None :\n    fout.write('### --> user commands \\n')\n    fout.write('\\n')\n    for item in args.command :\n        fout.write(item)\n        fout.write('\\n')\n        fout.write('\\n')\n    fout.write('### <-- user commands \\n')\n\n### close output file\nfout.close()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/common/pythia8/utils/mkpy8cfg.py"
        }
    ],
    "d87e6c500698b8dbfc1dd553b9936741f09e19138cceff127f11fac750195b40": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n### @author: Michal Broz\n### @email: michal.broz@cern.ch\n\nimport argparse\n\nparser = argparse.ArgumentParser(description='Generate Starlight configuration',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\nparser.add_argument('--collType', default='PbPb', choices=['PbPb', 'pPb', 'Pbp', 'pp', 'OO', 'pO', 'Op', 'NeNe'],\n                   help='Collision system')\n\nparser.add_argument('--eCM', type=float, default=5360,\n                    help='Centre-of-mass energy')\n\nparser.add_argument('--rapidity', default='cent', choices=['cent_rap', 'muon_rap', 'cent_eta', 'muon_eta'],\n                    help='Rapidity range to select')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "d96d78c635cd8b54d73035b8d4d8afa30d0604ad1aada068d7b31d56159fed11": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--process', default=None, choices=['kTwoGammaToMuLow', 'kTwoGammaToElLow', 'kTwoGammaToMuMedium', 'kTwoGammaToElMedium', 'kTwoGammaToMuHigh', 'kTwoGammaToElHigh', 'kTwoGammaToRhoRho', 'kTwoGammaToF2', 'kCohRhoToPi', 'kCohRhoToElEl', 'kCohRhoToMuMu', 'kCohRhoToPiWithCont', 'kCohRhoToPiFlat', 'kCohPhiToKa', 'kDirectPhiToKaKa', 'kCohPhiToEl', 'kCohOmegaTo2Pi', 'kCohOmegaTo3Pi', 'kCohOmegaToPiPiPi', 'kCohRhoPrimeTo4Pi', 'kCohJpsiToMu', 'kCohJpsiToEl', 'kCohJpsiToElRad', 'kCohJpsiToProton', 'kCohJpsiToLLbar', 'kCohJpsi4Prong', 'kCohJpsi6Prong', 'kCohJpsiToMuPi', 'kCohJpsiToElPi', 'kCohPsi2sToMu', 'kCohPsi2sToEl', 'kCohPsi2sToElPi', 'kCohUpsilonToMu', 'kCohUpsilonToEl', 'kIncohRhoToPi', 'kIncohRhoToElEl', 'kIncohRhoToMuMu', 'kIncohRhoToPiWithCont', 'kIncohRhoToPiFlat', 'kIncohPhiToKa', 'kIncohOmegaTo2Pi', 'kIncohOmegaTo3Pi', 'kIncohOmegaToPiPiPi', 'kIncohRhoPrimeTo4Pi', 'kIncohJpsiToMu', 'kIncohJpsiToEl', 'kIncohJpsiToElRad', 'kIncohJpsiToProton', 'kIncohJpsiToLLbar', 'kIncohPsi2sToMu', 'kIncohPsi2sToElRad', 'kIncohPsi2sToElPi'] )",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "15db0b5c0a17e723fca508aef9ce49eb691de6228fd8b908d8824e2f09bb9671": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "['kIncohJpsiToElRad', 'kIncohJpsiToProton', 'kIncohJpsiToLLbar', 'kIncohPsi2sToMu', 'kIncohPsi2sToEl', 'kIncohPsi2sToMuPi', 'kIncohPsi2sToElPi', 'kIncohUpsilonToMu', 'kIncohUpsilonToEl', 'kDpmjetSingleA', 'kDpmjetSingleA_Dzero', 'kDpmjetSingleA_Dcharged', 'kDpmjetSingleA_Dstar', 'kDpmjetSingleA_Phi', 'kDpmjetSingleA_Kstar', 'kDpmjetSingleC', 'kDpmjetSingleC_Dzero', 'kDpmjetSingleC_Dcharged', 'kDpmjetSingleC_Dstar', 'kDpmjetSingleC_Phi', 'kDpmjetSingleC_Kstar', 'kTauLowToEl3Pi', 'kTauLowToPo3Pi', 'kTauMediumToEl3Pi', 'kTauMediumToPo3Pi', 'kTauHighToEl3Pi', 'kTauHighToPo3Pi', 'kTauLowToElMu', 'kTauLowToElPiPi0', 'kTauLowToPoPiPi0'],",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "02acd27db1556931becd4449f7bb641b228faac774b637e4acabeabe14dd7486": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "help='Procedure to enable the switch')\n                    \nparser.add_argument('--output', default='GenStarlight.ini',\n                    help='Location for saving the configuration')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "29b454cb1a9e8a305b2318a7574d24c786e64f62629e6602a0522977e38bbe78": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    parser.add_argument('--extraPars', default='',\n                    help='Additional parameters for SL configuration')\n\nparser.add_argument('--dpmjetConf', default='',\n                    help='DPMJET configuration file')\n\nparser.add_argument('--nOOn', action='store_true',\n                    help=\"Enable neutron production with nOOn\")\n\n\nargs = parser.parse_args()\n\nif args.nOOn:\n    args.extraPars = 'BREAKUP_MODE = 4'\n\nif 'PbPb' in args.collType:\n    pZ = 82\n    pA = 208\n    tZ = 82\n    tA = 208\nif 'pPb' in args.collType:\n    pZ = 1\n    pA = 1\n    tZ = 82\n    tA = 208\nif 'Pbp' in args.collType:\n    pZ = 82\n    pA = 208\n    tZ = 1\n    tA = 1\nif 'pp' in args.collType:\n    pZ = 1\n    pA = 1\n    tZ = 1\n    tA = 1\nif 'OO' in args.collType:\n    pZ = 8\n    pA = 16\n    tZ = 8\n    tA = 16    \nif 'pO' in args.collType:\n    pZ = 1\n    pA = 1\n    tZ = 8\n    tA = 16 \nif 'Op' in args.collType:\n    pZ = 8\n    pA = 16\n    tZ = 1\n    tA = 1 \nif 'NeNe' in args.collType:\n    pZ = 10\n    pA = 20\n    tZ = 10\n    tA = 20",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "3f330d7b6a15cb1791a4520f2655b86af21154834f884787d62fa5140937ff20": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### initiate writing to output file\nfout = open(args.output, 'w')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "906b80d37d4420a8315902ac1bd736ea431cbff5b457270cc74ebf2e3c559840": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Generator\nfout.write('[GeneratorExternal] \\n')\nif args.nOOn:\n    fout.write('fileName = ${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGUD/external/generator/Generator_nOOn.C \\n')\n    fout.write('funcName = Generator_nOOn(\"%s\", %f, %d, %d, %d, %d, \"%s\")  \\n' % (args.process,args.eCM ,pZ,pA,tZ,tA,args.extraPars))\nelse:\n    if  'Psi2sToMuPi' in args.process or 'Psi2sToElPi' in args.process or 'OmegaTo3Pi' in args.process or 'JpsiToElRad' in args.process or 'Jpsi4Prong' in args.process or 'Jpsi6Prong' in args.process or 'kTau' in args.process or 'Dpmjet' in args.process:\n        fout.write('fileName = ${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGUD/external/generator/GeneratorStarlightToEvtGen.C \\n')\n        fout.write('funcName = GeneratorStarlightToEvtGen(\"%s\", %f, %d, %d, %d, %d, \"%s\", \"%s\")  \\n' % (args.process.split('_')[0],args.eCM ,pZ,pA,tZ,tA,args.extraPars,args.dpmjetConf))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "7f66e53cc719b5205dc98d1ceaea7950b54fb7c9e961da205839e4a2b00ab730": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ELSE:\n    fout.write('fileName = ${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGUD/external/generator/GeneratorStarlight.C \\n')\n    fout.write('funcName = GeneratorStarlight(\"%s\", %f, %d, %d, %d, %d, \"%s\", \"%s\")  \\n' % (args.process.split('_')[0],args.eCM ,pZ,pA,tZ,tA,args.extraPars,args.dpmjetConf))\n    \n###Trigger\nif 'kDpmjet' not in args.process:\n    fout.write('[TriggerExternal] \\n')\n    fout.write('fileName = ${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGUD/trigger/selectParticlesInAcceptance.C \\n')\n    if args.process == 'kTwoGamma' or args.process == 'kTau':\n        if args.rapidity == 'cent_eta':\n            fout.write('funcName = selectDirectPartInAcc(-0.9,0.9) \\n')\n        if args.rapidity == 'muon_eta':\n            fout.write('funcName = selectDirectPartInAcc(-4.0,-2.5) \\n')\n    else:\n        if args.rapidity == 'cent_rap':\n            fout.write('funcName = selectMotherPartInAcc(-0.9,0.9) \\n')\n        if args.rapidity == 'muon_rap':",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "8e03b5045d2806ae072b3947ce5bf9517725ffb01b66e6cc71346a5390bd795a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if args.rapidity == 'muon_rap':\n    fout.write('funcName = selectMotherPartInAcc(-4.0,-2.5) \\n')\nif args.rapidity == 'cent_eta':\n    fout.write('funcName = selectDaughterPartInAcc(-0.9,0.9) \\n')\nif args.rapidity == 'muon_eta':\n    fout.write('funcName = selectDaughterPartInAcc(-4.0,-2.5) \\n')\nelif '_' in args.process:\n    fout.write('[TriggerExternal] \\n')\n    fout.write('fileName = ${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGUD/trigger/triggerDpmjetParticle.C \\n')\n    if 'Dzero' in args.process:\n        fout.write('funcName = triggerDzero(-0.9,0.9) \\n')\n    if 'Dcharged' in args.process:\n        fout.write('funcName = triggerDcharged(-0.9,0.9) \\n')\n    if 'Dstar' in args.process:\n        fout.write('funcName = triggerDstar(-0.9,0.9) \\n')\n    if 'Phi' in args.process:\n        fout.write('funcName = triggerPhi(-0.9,0.9) \\n')\n    if 'Kstar' in args.process:\n        fout.write('funcName = triggerKstar(-0.9,0.9) \\n')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "7f9618d391bd3282ac883de539a1ef7ff152db6232d8cffb50715805b42c9e5e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Finalize output file\nfout.close()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeStarlightConfig.py"
        }
    ],
    "e97898ab8e56af2a9bbc9603f32900b0fba46299bd66cdc20b3e5d9b45ef3437": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n### Author: Paul Buehler\n### Email: paul.buhler@cern.ch\n\nimport argparse\nimport os\nimport subprocess",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeGraniittiConfig.py"
        }
    ],
    "dcb250aeee5b610a43e204c66c5a3ce8902292fabeb970b41be058db2ea68a1c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "def createJson(args):\n  templateFile = os.getenv(\"O2DPG_ROOT\")+\"/MC/config/PWGUD/templates/ALICE_Graniitti.temp\"\n  jsonFile = \"ALICE_Graniitti.json\"\n  processes = {\n    \"kCon_pipi\" : {\n      \"OUTPUT\" : \"ALICE_Con_pipi\",\n      \"ENERGY\" : 13600,\n      \"PROCESS\" : \"PP[RES+CON]<C> -> pi+ pi-\",\n      \"RES\" : \"\"\n    },\n    \"kConRes_pipi\" : {\n      \"OUTPUT\" : \"ALICE_Con_pipi\",\n      \"ENERGY\" : 13600,\n      \"PROCESS\" : \"PP[RES+CON]<C> -> pi+ pi-\",\n      \"RES\" : '[\"f0_500\", \"rho_770\", \"f0_980\", \"phi_1020\", \"f2_1270\", \"f0_1500\", \"f2_1525\", \"f0_1710\", \"f2_2150\"]'\n    },\n    \"kCon_KK\" : {\n      \"OUTPUT\" : \"ALICE_Con_pipi\",\n      \"ENERGY\" : 13600,\n      \"PROCESS\" : \"PP[RES+CON]<C> -> pi+ pi-\",\n      \"RES\" : \"\"\n    },\n    \"kConRes_KK\" : {\n      \"OUTPUT\" : \"ALICE_Con_pipi\",\n      \"ENERGY\" : 13600,\n      \"PROCESS\" : \"PP[RES+CON]<C> -> pi+ pi-\",\n      \"RES\" : '[\"f0_500\", \"rho_770\", \"f0_980\", \"phi_1020\", \"f2_1270\", \"f0_1500\", \"f2_1525\", \"f0_1710\", \"f2_2150\"]'\n    }\n  }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeGraniittiConfig.py"
        }
    ],
    "1483738b17ca86eeff1c4bee0837cd13def776cf3d8326877d03b9c656a2183b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Is the specified process defined?\nif args.process not in processes.keys():\n    print(\"FATAL ERROR:\")\n    print(\"  The process \", args.process, \"is not defined!\")\n    exit()\nprocdefs = processes[args.process]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeGraniittiConfig.py"
        }
    ],
    "1f0d9fe30de1d6179bf41b39b7b62ed955dd3a932fec15a4a868dbfd9bf9916b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# copy templateFile to jsonFile\n  cmd = \"cp \"+templateFile+\" \"+jsonFile\n  if subprocess.call(cmd, shell=True) > 0:\n    print(\"FATAL ERROR: \")\n    print(\"  \", templateFile)\n    print(\"  cannot be copied to\")\n    print(\"  \", jsonFile)\n    exit()\n  \n  # update jsonFile\n  stat = 0\n  # OUTPUT\n  nl = '    \"OUTPUT\"     : \"' + procdefs[\"OUTPUT\"] + '\",'\n  cmd = \"sed -i '/\\\"OUTPUT\\\"/c\\\\\" + nl + \"' \" + jsonFile\n  stat = stat + subprocess.call(cmd, shell=True)\n  # NEVENTS\n  nl = '    \"NEVENTS\"    : ' + args.nEvents + ','\n  cmd = \"sed -i '/\\\"NEVENTS\\\"/c\\\\\" + nl + \"' \" + jsonFile\n  stat = stat + subprocess.call(cmd, shell=True)\n  # ENERGY\n  beamEne = str(int(args.eCM)/2)\n  nl = '    \"ENERGY\"  : [' + beamEne + ', ' + beamEne + '],'\n  cmd = \"sed -i '/\\\"ENERGY\\\"/c\\\\\" + nl + \"' \" + jsonFile\n  stat = stat + subprocess.call(cmd, shell=True)\n  # PROCESS\n  nl = '    \"PROCESS\" : \"' + procdefs[\"PROCESS\"] + '\",'\n  cmd = \"sed -i '/\\\"PROCESS\\\"/c\\\\\" + nl + \"' \" + jsonFile",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeGraniittiConfig.py"
        }
    ],
    "22628fa5cf73d9fe9f51ae9c0cd2d8ca00f0cfe387289aa9ac7acef8f3498f23": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    cmd = \"sed -i '/\\\"PROCESS\\\"/c\\\\\" + nl + \"' \" + jsonFile\n  stat = stat + subprocess.call(cmd, shell=True)\n  # RES\n  if procdefs[\"RES\"] == \"\":\n    nl = '    \"RES\"     : [],'\n  else:\n    nl = '    \"RES\"     : ' + procdefs[\"RES\"] + ','\n  cmd = \"sed -i '/\\\"RES\\\"/c\\\\\" + nl + \"' \" + jsonFile\n  stat = stat + subprocess.call(cmd, shell=True)\n  \n  return jsonFile\n  \n# main\nparser = argparse.ArgumentParser(description='Create Graniitti configuration',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeGraniittiConfig.py"
        }
    ],
    "d4dcb32e569796ac5787403e40a64726663fc249fe1f56a7cb0d48b29327af51": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--process', default=None, choices=['kCon_pipi', 'kConRes_pipi', 'kCon_KK', 'kConRes_KK'],\n                    help='The process to activate')\n\nparser.add_argument('--nEvents', default='100',\n                    help='The number of events to generate per TF')\n\nparser.add_argument('--eCM', type=float, default='13600',\n                    help='The centre-of-mass energy')\n\nparser.add_argument('--rapidity', default='cent', choices=['cent_eta', 'muon_eta'],\n                    help='The rapidity to select')\n\nparser.add_argument('--output', default='GenGraniitti.ini',\n                    help='The output file for the configuration')\n\nargs = parser.parse_args()\n\n### prepare the json configuration file for graniitti\njsonFile = createJson(args)\n\n### open the output file\nfout = open(args.output, 'w')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeGraniittiConfig.py"
        }
    ],
    "228c11c48267009cc965f62e74be959dfb5ad20c4731f560a6a7317a83887e40": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Open output file\nfout = open(args.output, 'w')\n\n### Generator\nfout.write('[GeneratorExternal] \\n')\nfout.write('fileName = ${O2DPG_ROOT}/MC/config/PWGUD/external/generator/GeneratorGraniitti.C \\n')\nfout.write('funcName = GeneratorGraniitti(\"%s\")  \\n' % (\"../\"+jsonFile))\n    \n### Trigger\nfout.write('[TriggerExternal] \\n')\nfout.write('fileName = ${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGUD/trigger/selectParticlesInAcceptance.C \\n')\nif args.rapidity == 'cent_rap':\n    fout.write('funcName = selectMotherPartInAcc(-0.9,0.9) \\n')\nif args.rapidity == 'muon_rap':\n    fout.write('funcName = selectMotherPartInAcc(-4.0,-2.5) \\n')\nif args.rapidity == 'cent_eta':\n    fout.write('funcName = selectDaughterPartInAcc(-0.95,0.95) \\n')\nif args.rapidity == 'muon_eta':\n    fout.write('funcName = selectDaughterPartInAcc(-4.05,-2.45) \\n')\n\n### Close output file\nfout.close()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeGraniittiConfig.py"
        }
    ],
    "88b709fec3543be2a4841d00d7db95ce08f444f3972ee6ea7504c91283f3409d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n### @author: Paul Buehler\n### @email: paul.buhler@cern.ch\n\nimport argparse\n\nparser = argparse.ArgumentParser(description='Generate Upcgen configuration',\n                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\nparser.add_argument('--collType',default='PbPb', choices=['PbPb', 'OO'],\n                   help='Collision system')\n\nparser.add_argument('--eCM', type=float, default='5360',\n                    help='Center-of-mass energy')\n\nparser.add_argument('--rapidity', default='cent', choices=['cent_eta', 'muon_eta'],\n                    help='Rapidity range to select')\n\nparser.add_argument('--process',default=None, choices=['kDiElectron', 'kDiMuon', 'kDiTau', 'kLightByLight', 'kAxionLike'],\n                    help='Specific process to enable')\n                    \nparser.add_argument('--output', default='GenUpcgen.ini',\n                    help='Output file for the configuration')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeUpcgenConfig.py"
        }
    ],
    "b6d73045a1c34382792dbf35647c4aa471e21ac27d8d909e30727cc4a090b376": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    args = parser.parse_args()\n\nif 'PbPb' in args.collType:\n    pZ = 82\n    pA = 208\n\nif 'OO' in args.collType:\n    pZ = 8\n    pA = 16\n\n### open the output file\nfout = open(args.output, 'w')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeUpcgenConfig.py"
        }
    ],
    "dd84b320b9b1ea7eda72200ca0bcf211ea7e5f944fde79737bd65028c2170431": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Open output file\nfout = open(args.output, 'w')\n\n### Generator\nfout.write('[GeneratorExternal] \\n')\nfout.write('fileName = ${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGUD/external/generator/GeneratorUpcgen.C \\n')\nfout.write('funcName = GeneratorUpcgen(\"%s\", \"%s\", %f, %d, %d)  \\n' % (args.process, \"../.\", args.eCM, pZ, pA))\n\n### Trigger\nfout.write('[TriggerExternal] \\n')\nfout.write('fileName = ${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGUD/trigger/selectParticlesInAcceptance.C \\n')\nif args.rapidity == 'cent_rap':\n    fout.write('funcName = selectMotherPartInAcc(-0.9,0.9) \\n')\nif args.rapidity == 'muon_rap':\n    fout.write('funcName = selectMotherPartInAcc(-4.0,-2.5) \\n')\nif args.rapidity == 'cent_eta':\n    fout.write('funcName = selectDaughterPartInAcc(-0.95,0.95) \\n')\nif args.rapidity == 'muon_eta':\n    fout.write('funcName = selectDaughterPartInAcc(-4.05,-2.45) \\n')\n\n### Close output file\nfout.close()",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/PWGUD/ini/makeUpcgenConfig.py"
        }
    ],
    "92f0cffe294ccb1589cae94725ec2d1137ccd9b4b26ccc8cc993bfeda3d0cb6b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n# This script is written in Python and aims to analyze a \"fanotify\" file access report,\n# enriched with task details from an O2DPG MC workflow.\n# It generates:\n# - a JSON report\n# - optionally, a graphviz visualization illustrating file and task dependencies\n\nimport argparse\nimport re\nimport json\n\ntry:\n    from graphviz import Digraph\n    havegraphviz=True\nexcept ImportError:\n    havegraphviz=False\n\nparser = argparse.ArgumentParser(description='Generate O2DPG MC file dependency reports')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "90a5122ae080047c11c5abc11c6ed043597f490331a36daa5a861f2fe6dadd8f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PARAPHRASED DOCUMENT:\n    parser = argparse.ArgumentParser(description='Generate O2DPG MC file dependency reports')\n\n# specify the run number or use a default if not specified\nparser.add_argument('--actionFile', type=str, help=\"O2DPG pipeline runner action file\")\nparser.add_argument('--monitorFile', type=str, help=\"monitoring file from the fanotify tool. See O2DPG/UTILS/FileIOGraph for more details.\")\nparser.add_argument('--basedir', type=str, help=\"O2DPG workflow directory\")\nparser.add_argument('--file-filters', nargs='+', default=[r'.*'], help=\"Regular expressions to select files (default: all files = '.*')\")\nparser.add_argument('--graphviz', type=str, help=\"Create a graphviz plot\")\nparser.add_argument('-o','--output', type=str, help=\"Output JSON report\")\n\nargs = parser.parse_args()\n\n# determine the necessary actions\n# (a) - parse the action file to map O2DPG task names to PIDs\n# -----> populates pid_to_O2DPGtask and O2DPGtask_to_pid",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "cf02f4399defa1cc956bdc4c360819c1aae54a599970e1fde65dee447f4cabe4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Define the pattern using regular expressions\npid_to_O2DPGtask = {}\nO2DPGtask_to_pid = {}\n\npattern = re.compile(r'.*INFO Task (\\d+).*:(\\w+) finished with status 0')\n# Open the action file and process each line\nwith open(args.actionFile, 'r') as file:\n    for line in file:\n        # Try to match the pattern in each line\n        match = pattern.match(line)\n        \n        # If a match is found, extract the information\n        if match:\n            task_number = match.group(1)\n            task_name = match.group(2)\n            \n            pid_to_O2DPGtask[task_number] = task_name\n            O2DPGtask_to_pid[task_name] = task_number\n\n\n# (b) - parse the monitor file to map files to processes and operations\n# ---> fills the following structures:\ntask_reads = { tname : set() for tname in O2DPGtask_to_pid }\ntask_writes = { tname : set() for tname in O2DPGtask_to_pid }\nfile_written_task = {}\nfile_consumed_task = {}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "afafbf7aa029fd5daaac43ee491dd8c7fc6add4ed32861797cec1ddd1426bfdd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    pattern = re.compile(args.basedir + r'([^,]+),((?:read|write)),(.*)')\n# ignoring certain file names\nfile_exclude_filter = re.compile(r'(.*)\\.log(.*)|(ccdb/log)|(.*)dpl-config\\.json')\n\n# create user-defined file filters\nfile_filter_re = [ re.compile(l) for l in args.file_filters ]\n\nwith open(args.monitorFile, 'r') as file:\n    for line in file:\n        # attempt to match the pattern in each line\n        match = pattern.match(line)\n        if match:\n            file_name = match.group(1)\n            mode = match.group(2)\n            pids = match.group(3).split(\";\")\n\n            # apply file name exclusion filter\n            if file_exclude_filter.match(file_name):\n                continue\n\n            # check if file matches any user-defined filter\n            file_matches = False\n            for r in file_filter_re:\n                if r.match(file_name):\n                    file_matches = True\n                    break",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "1845c8ecda1686f105120d564bf6aa82c988c12189586e0d933d8fcd00c90a6f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if not file_matches:\n    continue\n\nif file_consumed_task.get(file_name) is None:\n    file_consumed_task[file_name] = set()\nif file_written_task.get(file_name) is None:\n    file_written_task[file_name] = set()\n    \nfor p in pids:\n    if p in pid_to_O2DPGtask:\n        task = pid_to_O2DPGtask[p]\n        if mode == 'read':\n            task_reads[task].add(file_name)\n            file_consumed_task[file_name].add(task)\n\n        if mode == 'write':\n            task_writes[task].add(file_name)\n            file_written_task[file_name].add(task)\n\n\n# generates the graph for files and tasks\ndef draw_graph(graphviz_filename):\n    if not havegraphviz:\n        print('graphviz not installed, cannot draw workflow')\n        return",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "1e2b01883d173d7682b489803257119788c4cac48543dddd675754b1adbb9e51": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    dot = Digraph(comment='O2DPG file - task network')\n    \n    ccdbfilter = re.compile('ccdb(.*)/snapshot.root')\n\n    nametoindex={}\n    index=0\n\n    allfiles = set(file_written_task.keys()) | set(file_consumed_task.keys())\n    normalfiles = [s for s in allfiles if not ccdbfilter.match(s)]\n    ccdbfiles = [(s, ccdbfilter.match(s).group(1)) for s in allfiles if ccdbfilter.match(s)]\n\n    with dot.subgraph(name='CCDB') as ccdbpartition:\n        ccdbpartition.attr(color='blue')\n        for f in ccdbfiles:\n            nametoindex[f[0]] = index\n            ccdbpartition.node(str(index), f[1], color='blue')\n            index = index + 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "729d88cb5e627d120961230544ff0d6ab554f6a632cb7b362fbebdee45c844b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WITH dot.subgraph(name='normal') AS normalpartition:\n    normalpartition.attr(color='black')\n    FOR f IN normalfiles:\n        nametoindex[f] = index\n        normalpartition.node(str(index), f, color='red')\n        index += 1\n    FOR t IN O2DPGtask_to_pid:\n        nametoindex[t] = index\n        normalpartition.node(str(index), t, shape='box', color='green', style='filled')\n        index += 1\n\n    # edges (connections between files and tasks)\n    FOR node IN file_consumed_task:\n        # node is a file (source)\n        sourceindex = nametoindex[node]\n        FOR task IN file_consumed_task[node]:\n            toindex = nametoindex[task]\n            dot.edge(str(sourceindex), str(toindex))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "d0413067296d197cd41335e57cb8a39a46fe832381dd755d61f7dc9e5529914e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# edges (arrows between files and tasks)\nfor node in file_written_task:\n    # node is a file (target)\n    toindex = nametoindex[node]\n    for task in file_written_task[node]:\n        sourceindex = nametoindex[task]\n        dot.edge(str(sourceindex), str(toindex))\n\ndot.render(graphviz_filename, format='pdf')\ndot.render(graphviz_filename, format='gv')\n\ndef generate_json_report(json_file_name):\n  # create a JSON report of file dependencies\n  all_filenames = set(file_written_task.keys()) | set(file_consumed_task.keys())\n  file_written_task_tr = [\n   {\n     \"file\" : k,\n     \"written_by\" : list(file_written_task.get(k, [])),\n     \"read_by\" : list(file_consumed_task.get(k, []))\n   }\n   for k in all_filenames\n  ]\n  \n  tasks_output = [\n   {\n     \"task\" : t,\n     \"writes\" : list(task_writes.get(t,[])),\n     \"reads\" : list(task_reads.get(t,[]))\n   }\n   for t in O2DPGtask_to_pid\n  ]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "1a86424936f1828a9de0f78b18345579a4dea47c3d9d327a26e5bc8fb33aa0f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Save the dictionary to a JSON file\nwith open(json_file_name, 'w') as json_file:\n    json.dump({ \"file_report\" : file_written_task_tr, \"task_report\" : tasks_output }, json_file, indent=2)\n\nif args.graphviz:\n  generate_graph(args.graphviz)\n\nif args.output:\n  create_json_report(args.output)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/FileIOGraph/analyse_FileIO.py"
        }
    ],
    "ce1c28599ad62e7ce1b53adbe138aa32d07fadb7326d23d00bea0a5c6c6ee8da": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env python3\n\n#\n# This script generates the QC finalization workflow.\n# When executed as the main program, it outputs the workflow to the designated file, with tasks lacking dependencies.\n# Example usage:\n#   ${O2DPG_ROOT}/DATA/production/o2dpg_qc_postproc_workflow.py -o qc_workflow.json\n\n\n# The script can also be imported.\n# In this scenario, one can utilize include_all_QC_finalization to incorporate QC finalization within another workflow script.\n\nimport sys\nimport importlib.util\nimport argparse\nfrom os import environ, mkdir\nfrom os.path import join, dirname, isdir\n\n# Ensure O2DPG, O2, and QC are properly loaded\nO2DPG_ROOT=environ.get('O2DPG_ROOT')\nO2_ROOT=environ.get('O2_ROOT')\nQUALITYCONTROL_ROOT=environ.get('QUALITYCONTROL_ROOT')\n\nif O2DPG_ROOT is None: \n  print('Error: O2DPG needs to be loaded')\n  sys.exit(1)\n\nif O2_ROOT is None: \n  print('Error: O2 needs to be loaded')\n  sys.exit(1)\n\nif QUALITYCONTROL_ROOT is None:\n  print('Error: QUALITYCONTROL_ROOT needs to be loaded')\n  sys.exit(1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/o2dpg_qc_postproc_workflow.py"
        }
    ],
    "215a35857395a6d0d3dd36787fad33b2351f9bde45ed100ed00ea790f394d4e1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# dynamically load necessary utilities\nmodule_name = \"o2dpg_workflow_utils\"\nspec = importlib.util.spec_from_file_location(module_name, join(O2DPG_ROOT, \"MC\", \"bin\", \"o2dpg_workflow_utils.py\"))\no2dpg_workflow_utils = importlib.util.module_from_spec(spec)\nsys.modules[module_name] = o2dpg_workflow_utils\nspec.loader.exec_module(o2dpg_workflow_utils)\nfrom o2dpg_workflow_utils import createTask, dump_workflow\n\ndef getDPL_global_options(bigshm=False, noIPC=None):\n   common = \"-b --run --driver-client-backend ws:// \"\n   if noIPC:\n      return common + \" --no-IPC \"\n   if bigshm:\n      return common + \" --shm-segment-size ${SHMSIZE:-50000000000} \"\n   else:\n      return common\n\nqcdir = \"QC\"\ndef QC_postprocessing_workflow(runNumber, periodName, passName, qcdbUrl):\n\n  stages = []",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/o2dpg_qc_postproc_workflow.py"
        }
    ],
    "3a57fb8ecf4779a2822140b5416bb08f745568b9ed15cdc5d071d15fc7498d78": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Incorporates a postprocessing quality control workflow\n  # taskName       - the name of the QC workflow\n  # qcConfigPath   - the path to the QC configuration file\n  # needs          - a list of tasks that must be completed prior to this one (e.g., another workflow might need to finish before this one starts)\n  # runSpecific    - if set to true, a specific run number is included in the QC config, meaning the post-processing should focus only on objects from this run\n  # periodSpecific - if set to true, a specific period name is included in the config, so the post-processing should cover objects only from this period\n  # passSpecific   - if set to true, a specific pass name is included in the config, ensuring the post-processing covers objects only from this pass\n  def add_QC_postprocessing(taskName, qcConfigPath, needs, runSpecific, periodSpecific, passSpecific):\n    task = createTask(name=taskName, needs=needs, cwd=qcdir, lab=[\"QC\"], cpu=1, mem='2000')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/o2dpg_qc_postproc_workflow.py"
        }
    ],
    "c3b5a02201351f6b893a11d473367ca0c258dd8931fbcc8f5f0b8be599bb8e93": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    task = createTask(name=taskName, needs=needs, cwd=qcdir, lab=[\"QC\"], cpu=1, mem='2000')\n    overrideValues = '--override-values \"'\n    overrideValues += f'qc.config.database.host={qcdbUrl};'\n    overrideValues += f'qc.config.Activity.type=PHYSICS;'\n    overrideValues += f'qc.config.Activity.number={runNumber};' if runSpecific else 'qc.config.Activity.number=0;'\n    overrideValues += f'qc.config.Activity.periodName={periodName};' if periodSpecific else 'qc.config.Activity.periodName=;'\n    overrideValues += f'qc.config.Activity.passName={passName};' if passSpecific else 'qc.config.Activity.passName=;'\n    overrideValues += '\"'\n    task['cmd'] = f'o2-qc --config {qcConfigPath} ' + overrideValues + ' ' + getDPL_global_options()\n    stages.append(task)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/o2dpg_qc_postproc_workflow.py"
        }
    ],
    "196ed8f298acbb457c3cb42c55a45cc6a3a2ce00abb88b8112ab09a158a1f614": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## The list of QC Post-processing workflows, add the new ones below\n  add_QC_postprocessing('example', 'json://${O2DPG_ROOT}/DATA/production/qc-postproc-async/example.json', needs=[], run_specific=False, period_specific=True, pass_specific=True)\n  add_QC_postprocessing('EMC', 'json://${O2DPG_ROOT}/DATA/production/qc-postproc-async/emc.json', needs=[], run_specific=False, period_specific=True, pass_specific=True)\n  add_QC_postprocessing('MCH', 'json://${O2DPG_ROOT}/DATA/production/qc-postproc-async/mch.json', needs=[], run_specific=True, period_specific=True, pass_specific=True)\n  add_QC_postprocessing('ZDC', 'json://${O2DPG_ROOT}/DATA/production/qc-postproc-async/zdc.json', needs=[], run_specific=True, period_specific=True, pass_specific=True)\n\n  return stages\n\n\ndef main() -> int:\n  \n  parser = argparse.ArgumentParser(description='Generate the ALICE data QC postprocessing workflow')",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/o2dpg_qc_postproc_workflow.py"
        }
    ],
    "97c8ec27df074baa8219d59b2802ebfe3ad41fd74e5e85e2323f81a48e096011": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "parser.add_argument('--noIPC',help='disable shared memory in DPL')\nparser.add_argument('-o',help='output workflow file', default='workflow.json')\nparser.add_argument('--run',help=\"Run number (0 for any run)\", default=0)\nparser.add_argument('--periodName',help=\"Period name\", default='')\nparser.add_argument('--passName',help=\"Pass name\", default='')\nparser.add_argument('--qcdbUrl',help=\"Quality Control Database URL\", default='ccdb-test.cern.ch:8080')\n\nargs = parser.parse_args()\nprint(args)\n\nif not isdir(qcdir):\n    mkdir(qcdir)\n\nworkflow = {}\nworkflow['stages'] = QC_postprocessing_workflow(runNumber=args.run, periodName=args.periodName, passName=args.passName, qcdbUrl=args.qcdbUrl)\n\ndump_workflow(workflow[\"stages\"], args.o)\n\nreturn 0\n\n\nif __name__ == '__main__':\n  sys.exit(main())",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/o2dpg_qc_postproc_workflow.py"
        }
    ],
    "77a454ac1ccc6a90c08ceb95aa748bc316464a6332ebf1b48c501c2d9ada33a8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Define the test parent directory to be created in the current directory\nTEST_PARENT_DIR_PWG=\"o2dpg_tests/workflows_pwgs\"\nTEST_PARENT_DIR_BIN=\"o2dpg_tests/workflows_analysisqc\"\nTEST_PARENT_DIR_ANCHORED=\"o2dpg_tests/anchored\"\n\n# Unified names for log files\nLOG_FILE_WF=\"o2dpg-test-wf.log\"\nLOG_FILE_ANCHORED=\"o2dpg-test-anchored.log\"\nLOG_FILE_ANALYSISQC=\"o2dpg-test_analysisqc.log\"\n\n\nget_git_repo_directory()\n{\n    local directory_to_check=${1:-$(pwd)}\n    directory_to_check=$(realpath \"${directory_to_check}\")\n    directory_to_check=${directory_to_check%%/.git}\n    local repository_path=\n    (\n        cd \"${directory_to_check}\"\n        repository_path=$(git rev-parse --git-dir 2> /dev/null)\n        [[ \"${repository_path}\" != \"\" ]] && { repository_path=$(realpath \"${repository_path}\") ; repository_path=${repository_path%%/.git} ; }\n    )\n    echo ${repository_path}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "75a85c55085ef4271ca6783193b83cf6cec97b2bab904a46ae96833260e73480": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "test_single_wf()\n{\n    local wf_script=${1}\n    local execute=${2}\n    make_wf_creation_script ${wf_script} ${wf_script_local}\n    local has_wf_script_local=${?}\n    echo -n \"Test ${TEST_COUNTER}: ${wfs}\"\n    if [[ \"${has_wf_script_local}\" != \"0\" ]]; then\n        echo -n \" (No WF creation in script)\"\n        echo_red \" -> FAILED\"\n        return 1\n    fi\n    # Check for any \"exit\" command apart from the typical one\n    # [ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This needs O2DPG loaded\" && exit 1\n    # This is not ideal but could help avoid running into checks the WF script performs before launching the WF creation\n    if [[ \"$(grep exit ${wf_script_local} | grep -v \"This needs\")\" != \"\" ]]; then\n        echo -n \" (Found \\\"exit\\\" in script, not testing automatically)\"\n        echo_yellow \" -> WARNING\"\n        return 0\n    fi\n    # Execute a single test\n    echo \"Test ${wf_line} from ${wfs}\" > ${LOG_FILE_WF}\n    bash ${wf_script_local} >> ${LOG_FILE_WF} 2>&1\n    local ret_this=${?}\n    local ret_this_qc=0\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "d352dd3d639fc7b0c571b70b6f08fbdca807d4883b3412e67c6010c3f31df80e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "bash ${wf_script_local} >> ${LOG_FILE_WF} 2>&1\nlocal ret_this=${?}\nlocal ret_this_qc=0\nlocal ret_this_analysis=0\nif [[ \"${ret_this}\" != \"0\" ]] ; then\n    echo_red \" -> FAILED\"\n    echo \"[FATAL]: O2DPG_TEST Workflow creation failed\" >> ${LOG_FILE_WF}\nelif [[ \"${execute}\" != \"\" ]] ; then\n    local memlimit=${O2DPG_TEST_WORKFLOW_MEMLIMIT:+--mem-limit ${O2DPG_TEST_WORKFLOW_MEMLIMIT}}\n    ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --cpu-limit 8 -tt aod ${memlimit} >> ${LOG_FILE_WF} 2>&1\n    ret_this=${?}\n    # use -k|--keep-going option to continue running even after the first failure, allowing to see if there are more issues\n    [[ \"${ret_this}\" == \"0\" ]] && { ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --cpu-limit 8 --target-labels QC ${memlimit} -k >> ${LOG_FILE_WF} 2>&1 ; ret_this_qc=${?} ; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "6a9d17cb630a2387d57f6f6ee7e998a891a3d39ee705f5b670236afb855544d4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ \"${ret_this}\" == \"0\" ]] && { ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --cpu-limit 8 --target-labels Analysis ${memlimit} -k >> ${LOG_FILE_WF} 2>&1 ; ret_this_analysis=${?} ; }\nret_this=$((ret_this + ret_this_qc + ret_this_analysis))\n[[ \"${ret_this}\" != \"0\" ]] && echo \"[FATAL]: O2DPG_TEST Workflow execution failed\" >> ${LOG_FILE_WF} || echo_green \" -> PASSED\"\nelse\n    echo_green \" -> PASSED\"\nfi\nreturn ${ret_this}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "b820e61661a84ce78c01b5d88eb1a23f2092ab74f295b6f40f6eadde45b78ab1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "run_workflow_creation()\n{\n    local wf_scripts=\n    local execute=\n    while [ \"$1\" != \"\" ] ; do\n        case $1 in\n            --execute ) execute=1\n                        shift\n                        ;;\n            * )         wf_scripts+=\"${1} \"\n                        shift\n                        ;;\n        esac\n    done\n\n    local RET=0\n    local wf_script_local=\"wf.sh\"\n\n    for wfs in ${wf_scripts} ; do\n        local wf_line=$(get_workflow_creation_from_script ${wfs})\n        [[ \"${wf_line}\" == \"\" ]] && continue\n\n        ((TEST_COUNTER++))\n        local test_dir=${TEST_COUNTER}_$(basename ${wfs})_dir\n        rm -rf ${test_dir} 2> /dev/null\n        mkdir ${test_dir}\n        pushd ${test_dir} > /dev/null\n            test_single_wf ${wfs} ${execute}\n            local ret_this=${?}\n            [[ \"${ret_this}\" != \"0\" ]] && RET=${ret_this}\n        popd > /dev/null\n    done\n\n    return ${RET}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "9326451d50e96b0fdd0b8b687ec15f6d30dfaf69c4de439868466dd2b04440df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "test_analysisqc_cli()\n{\n    ((TEST_COUNTER++))\n    local test_dir=\"${TEST_COUNTER}_analysisqc_cli\"\n    rm -rf ${test_dir} 2> /dev/null\n    mkdir ${test_dir}\n    pushd ${test_dir} > /dev/null\n        echo \"### Testing AnalysisQC creation for MC ###\" > ${LOG_FILE_ANALYSISQC}\n        echo -n \"Test ${TEST_COUNTER}: Running AnalysisQC CLI\"\n        ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py -f AO2D.root --is-mc -o workflow_test_mc.json >> ${LOG_FILE_ANALYSISQC} 2>&1\n        local ret=${?}\n        [[ \"${ret}\" != \"0\" ]] && echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE_ANALYSISQC}\n        echo \"### Testing AnalysisQC creation for data ###\" >> ${LOG_FILE_ANALYSISQC}\n        ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py -f AO2D.root -o workflow_test_data.json >> ${LOG_FILE_ANALYSISQC} 2>&1\n        local ret_data=${?}\n        [[ \"${ret_data}\" != \"0\" ]] && { echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE_ANALYSISQC} ; ret=${ret_data} ; }\n\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "b3822277e780fd06efc5d71c976ff50bf39baccb75dfadfdc373a8dcee325108": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    popd > /dev/null\n    [[ \"${ret}\" != \"0\" ]] && echo_red \" -> FAILED\" || echo_green \" -> PASSED\"\n    return ${ret}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "a37d105fc5738faf2df6aaba606641ce84c5708f5de5855d00855102bb52ca47": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    test_anchored()\n    {\n        local to_run=\"${1:-${O2DPG_ROOT}/MC/run/ANCHOR/tests/test_anchor_2023_apass2_pp.sh}\"\n        local RET=0\n        for anchored_script in ${to_run} ; do\n            if [[ ! -f ${anchored_script} ]] ; then\n                echo \"The desired test script ${anchored_script} does not exist. Skip.\" \n                continue\n            fi\n            ((TEST_COUNTER++))\n            local test_dir=${TEST_COUNTER}_$(basename ${anchored_script})_dir\n            rm -rf ${test_dir} 2> /dev/null\n            mkdir ${test_dir}\n            pushd ${test_dir} > /dev/null\n                echo -n \"Test ${TEST_COUNTER}: ${anchored_script}\"\n                ${anchored_script} >> ${LOG_FILE_ANCHORED} 2>&1\n                local ret_this=${?}\n                if [[ \"${ret_this}\" != \"0\" ]] ; then\n                    echo_red \" -> FAILED\"\n                    RET=${ret_this}\n                else\n                    echo_green \" -> PASSED\"\n                fi\n            popd > /dev/null\n        done\n        return ${RET}\n    }\n\n    print_usage()\n    {",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "e5de2910fa1ee8bb64d42db5f61c766665855a1f683d850ca4e0e78a548fa567": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo\n    echo \"usage: run_workflow_tests.sh\"\n    echo\n    echo \"  ENVIRONMENT VARIABLES TO DETERMINE WHAT TO COMPARE:\"\n    echo\n    echo \"  O2DPG_TEST_REPO_DIR : Specify the source repository you want to test.\"\n    echo \"  O2DPG_TEST_HASH_BASE : The base hash for comparison (optional)\"\n    echo \"  O2DPG_TEST_HASH_HEAD : The head hash for comparison (optional)\"\n    echo\n    echo \"  If O2DPG_TEST_HASH_BASE is not defined, it will be checked for ALIBUILD_BASE_HASH.\"\n    echo \"  If ALIBUILD_BASE_HASH is not found, it will be set to HEAD~1, or HEAD if there are unstaged changes.\"\n    echo\n    echo \"  If O2DPG_TEST_HASH_HEAD is not defined, it will be checked for ALIBUILD_HEAD_HASH.\"\n    echo \"  If ALIBUILD_HEAD_HASH is not found, it will be set to HEAD, or left blank if there are unstaged changes.\"\n    echo\n    echo \"  SPECIFIC ENVIRONMENT VARIABLES FOR THIS TEST:\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "b5cf9eabee104f5a1e8789b1d2d12707139beb8c54439781bd908280b69fbc48": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo\necho \"  SPECIFIC ENVIRONMENT VARIABLES FOR THIS TEST:\"\necho \"  O2DPG_TEST_WORKFLOW_MEMLIMIT : The memory limit to be provided to the workflow runner when a workflow is executed (optional)\"\necho\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "b01847491a5b84fe46ae03770d8a1186f8bebcba8f081fd78bba7b1cac99a946": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    #############\n# Main Part #\n#############\nwhile [ \"$1\" != \"\" ] ; do\n    case $1 in\n        --help|-h )          print_usage\n                             exit 1\n                             ;;\n        * )                  echo \"Unknown argument ${1}\"\n                             exit 1\n                             ;;\n    esac\ndone\n\n# Determine the repository directory\nREPO_DIR=${O2DPG_TEST_REPO_DIR:-$(get_git_repo_directory)}\nif [[ ! -d ${REPO_DIR}/.git ]] ; then\n    echo \"ERROR: Directory \\\"${REPO_DIR}\\\" is not a git repository.\"\n    exit 1\nfi\n\nif [[ -z ${O2DPG_ROOT+x} ]] ; then\n    echo \"ERROR: O2DPG is not loaded, indicating that other packages are likely missing in this environment.\"\n    exit 1\nfi\n\n# Source the utilities\nsource ${REPO_DIR}/test/common/utils/utils.sh\n\n\necho \"##############################\"\necho \"# Execute O2DPG workflow tests#\"\necho \"##############################\"\n\n# Perform the initial actions in the source directory, where the complete git repository is available\npushd ${REPO_DIR} > /dev/null",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "0eb665cae58be88073795e0e53fd431802b903ae91d361bd5d1ae3e20f03f465": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# flag to indicate if any changes occurred in the simulation workflow binary directory\nchanged_sim_bin=$(git_get_changed_files | grep -E \"MC/bin\")\n# check for changes related to AnalysisQC\nchanged_analysis_qc=$(git_get_changed_files | grep -E \"MC/analysis_testing|MC/config/analysis_testing/json|MC/config/QC/json\")\n# verify if any changes are related to anchoring\nchanged_anchored=$(git_get_changed_files | grep -E \"MC/bin|MC/run/ANCHOR/anchorMC.sh|MC/run/ANCHOR/tests|MC/bin|UTILS/parse-async-WorkflowConfig.py|DATA/production/configurations/asyncReco/setenv_extra.sh|DATA/production/configurations/asyncReco/async_pass.sh|DATA/common/setenv.sh|DATA/production/workflow-multiplicities.sh\")\n# initialize variable for workflow scripts changes\nchanged_workflows=\n# define workflows to be executed\nexecute_workflows=\necho \"==> Test outline\"\nif [[ \"${changed_sim_bin}\" != \"\" ]] ; then\n    # if changes exist in the central binaries, test the creation of all workflows against these changes",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "51a750aba4d2f4146b88fa3570f5f4b71a39f61d49134ab59188672914794eac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# In this scenario, a central component has been altered, so it's necessary to test all simulation workflows against it.\necho \"  - All simulation workflows derived from run scripts (MC/run/**/*.sh) will be tested for creation.\"\nfor p in $(find MC/run -name \"*.sh\") ; do\n    changed_workflows+=\"$(realpath ${p}) \"\ndone\n# If central Python scripts have been modified, mark the anchored MC test to be executed.\necho \"    - Detection of changes in MC/bin, mark anchored MC test for execution.\"\nchanged_anchored=\"1\"\nelse\n    # Otherwise, only consider the changed shell scripts.\n    changed_workflows=\n    changed_files=$(git_get_changed_files)\n    for cf in ${changed_files} ; do\n        [[ \"${cf}\" != *\"MC/run\"*\".sh\" ]] && continue\n        changed_workflows+=\"${cf} \"\n    done\n    [[ \"${changed_workflows}\" != \"\" ]] && echo \"  - Simulation workflows from changed run scripts (subset of MC/run/**/*.sh) will be tested.\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "53834e753cab35140287a64081d227c7270c880b74813770a852f363c49936c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"${changed_analysis_qc}\" != \"\" || \"${changed_sim_bin}\" ]] ; then\n    for p in $(find \"MC/bin/tests\" -name \"*.sh\") ; do\n        execute_workflows+=\"$(realpath ${p}) \"\n    done\n    echo \"  - Verify AnalysisQC CLI operation using simulation.\"\nfi\n\n[[ \"${changed_anchored}\" != \"\" ]] && echo \"  - Test anchored simulation.\"\n\n# gather all components, then return to the previous directory\npopd > /dev/null\nREPO_DIR=$(realpath ${REPO_DIR})\n\n# perform the following procedure:\n# utilize the source directory since O2DPG's installation is essentially a copy of the entire repository.\n# This approach is particularly suitable for local testing and functions similarly in the CI environment. Alternatively, we could execute\n#         [[ -z {ALIBUILD_HEAD_HASH+x} ]] && export O2DPG_ROOT=${REPO_DIR}\n# but let's maintain consistency for both local and CI testing\nexport O2DPG_ROOT=${REPO_DIR}\n\n\n##############################\n# PWG workflow shell scripts #\n##############################\n# overall return code for PWGs\nret_global_pwg=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "f64c3679b6a154d81c5c2e9fb1c6649f2e73db4232b8a6474ee0d0c085bfec9a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Verify the changes\nif [[ \"${changed_workflows}\" != \"\" ]] ; then\n    # set up a local testing directory for PWG tests\n    rm -rf ${TEST_PARENT_DIR_PWG} 2>/dev/null\n    mkdir -p ${TEST_PARENT_DIR_PWG} 2>/dev/null\n    pushd ${TEST_PARENT_DIR_PWG} > /dev/null\n\n    echo\n    echo \"==> START BLOCK: Validate PWG-related workflow generation <==\"\n    run_workflow_creation ${changed_workflows}\n    ret_global_pwg=${?}\n    [[ \"${ret_global_pwg}\" != \"0\" ]] && { echo \"WARNING for workflow generation, some might not have been created.\" ;  print_error_logs ./ ; }\n    echo \"==> END BLOCK: Validate PWG-related workflow generation <==\"\n\n    # restore the original directory\n    popd > /dev/null\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "ba1ea7682a5017202babd7c80f450122e17cf376e3d7217e929b16b71ca5a0e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# return to the previous directory\npopd > /dev/null\nfi\n\n\n####################################\n# sim workflow bin with AnalysisQC #\n####################################\n# prepare our local test directory for bin tests\n# global return code for PWGs\nret_analysis_qc=0\nif [[ \"${changed_analysis_qc}\" != \"\" ]] ; then\n    rm -rf ${TEST_PARENT_DIR_BIN} 2>/dev/null\n    mkdir -p ${TEST_PARENT_DIR_BIN} 2>/dev/null\n    pushd ${TEST_PARENT_DIR_BIN} > /dev/null\n\n    echo\n    echo \"==> START BLOCK: Executing workflow with AnalysisQC <==\"\n    # test command line interface\n    test_analysisqc_cli\n    ret_analysis_qc=${?}\n    # Run all the bin test WF creations\n    if [[ \"${ret_analysis_qc}\" -eq 0 ]]; then\n        run_workflow_creation ${execute_workflows} --execute\n        ret_analysis_qc=${?}\n    fi\n    if [[ \"${ret_analysis_qc}\" -ne 0 ]]; then\n        echo \"ERROR for workflows execution and AnalysisQC.\"\n        print_error_logs ./ ;\n    fi\n    echo \"==> END BLOCK: Executing workflow with AnalysisQC <==\"\n\n    # return to the previous directory\n    popd > /dev/null",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "9ca6357baf569eac0a65ce9f1aa87d7af106724f62aa6e18f05f341c93f04b43": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# navigate back to the previous directory\npopd > /dev/null\nfi\n\n\n###############\n# ANCHORED MC #\n###############\n# overall return code for PWGs\nret_global_anchored=0\nif [[ \"${changed_anchored}\" != \"\" ]] ; then\n    # create the local test directory for PWG tests\n    rm -rf ${TEST_PARENT_DIR_ANCHORED} 2>/dev/null\n    mkdir -p ${TEST_PARENT_DIR_ANCHORED} 2>/dev/null\n    pushd ${TEST_PARENT_DIR_ANCHORED} > /dev/null\n\n    echo\n    echo \"==> START BLOCK: Execute anchored simulation\"\n    # perform an anchored test\n    test_anchored\n    ret_global_anchored=${?}\n    [[ \"${ret_global_anchored}\" != \"0\" ]] && { echo \"ERROR during anchored simulation.\" ;  print_error_logs ./ ; }\n    echo \"==> END BLOCK: Execute anchored simulation\"\n\n    # return to the previous directory\n    popd > /dev/null\nfi\n\nRET=$(( ret_analysis_qc + ret_global_anchored ))\n\necho\n[[ \"${RET}\" != \"0\" ]] && echo_red \"Errors detected, please review!\" || echo_green \"All workflow tests completed successfully\"\n\nexit ${RET}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_workflow_tests.sh"
        }
    ],
    "9c19621b4d4fce58eefa30d1c5188393769a3b0e744f2bcd4aeaeb04c48d2fb5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n######################################\n# Entry point for O2DPG tests related #\n######################################\n\nCHECK_GENERATORS=\"Pythia8 External\"\n\n# The parent directory for test files within the current directory\nTEST_PARENT_DIR=\"o2dpg_tests/generators\"\n\n# Unified names for log files from simulation and test macros\nLOG_FILE_SIM=\"o2dpg-test-sim.log\"\nLOG_FILE_KINE=\"o2dpg-test-kine.log\"\nLOG_FILE_GENERIC_KINE=\"o2dpg-test-generic-kine.log\"\n\n# Gather any macro files that are indirectly used in INI files, but could be included in other macros\nMACRO_FILES_POTENTIALLY_INCLUDED=\"\"\n\n# Global variable to gather all INI files to be tested\nINI_FILES=\"\"\n\n# Collect test macros that lack corresponding INI files\nTEST_WITHOUT_INI=\"\"\n\n# A global counter for tests\nTEST_COUNTER=1\n\n# Option to keep only logs or delete everything else (default is to delete)\nKEEP_ONLY_LOGS=1\n\n# Prepare colored output\nSRED=\"\\033[0;31m\"\nSGREEN=\"\\033[0;32m\"\nSEND=\"\\033[0m\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "321ea3e6646234e0cf8ced17c9a8303f2670654e9702fc29af4b88743ecd8069": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set up some colored output\nSRED=\"\\033[0;31m\"\nSGREEN=\"\\033[0;32m\"\nSEND=\"\\033[0m\"\n\n\necho_green()\n{\n    echo -e \"${SGREEN}${*}${SEND}\"\n}\n\n\necho_red()\n{\n    echo -e \"${SRED}${*}${SEND}\"\n}\n\n\n# Avoid sourcing the script to prevent any unforeseen issues when exit is used\nSCRIPT_NAME=\"$(basename \"$(test -L \"$0\" && readlink \"$0\" || echo \"$0\")\")\"\nif [ \"${SCRIPT_NAME}\" != \"$(basename ${BASH_SOURCE[0]})\" ] ; then\n    echo_red \"This script cannot be sourced\" >&2\n    return 1\nfi\n\n\n##################################\n# Core and utility functionality #\n##################################",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "9a1878375b6ee5aac456e3a985365442bf74610faf05359ab4aadfc9dfca1788": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "get_test_script_path_for_ini()\n{\n    local ini_path=${1}\n    local test_script=$(basename ${ini_path})\n    local path_to_test_script=$(dirname ${ini_path})/tests/${test_script%.ini}.C\n    if [[ ! -f ${path_to_test_script} ]] ; then\n        # Verify if test redirection is applied within the ini_path file using the #---> syntax\n        local redirection=$(grep \"#--->\" ${ini_path})\n        if [[ \"${redirection}\" != \"\" ]] ; then\n            test_script=$(echo ${redirection} | awk '{print $2}')\n            path_to_test_script=$(dirname ${ini_path})/tests/${test_script}.C\n        fi\n    fi\n    echo ${path_to_test_script}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "3139dd5b0089750e569f6b3a1be99075cd297c5a2d4fdce43683e21ee1c33ed7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "exec_test()\n{\n    # perform a single test for a specified ini file and generator\n    # we assume we are currently in the intended test directory\n    local ini_path=${1}\n    local generator=${2} # currently either \"Pythia8\" or \"External\", and the generator's settings are assumed to be in this ini file\n    local generator_lower=$(echo \"${generator}\" | tr '[:upper:]' '[:lower:]')\n    # TODO Possibly, an external generator derived from GeneratorPythia8 could be run, which might utilize settings from TriggerPythia8\n    local trigger=${3:+-t ${generator_lower}}\n    local RET=0\n    # the expected invocation format for our test script\n    local test_script=$(get_test_script_path_for_ini ${ini_path})\n    # initialize the log file headers\n    echo \"### Testing ${ini_path} with generator ${generator} ###\" > ${LOG_FILE_KINE}\n    echo \"### Testing ${ini_path} with generator ${generator} ###\" > ${LOG_FILE_GENERIC_KINE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "e03da40697afc0f7a987b503bcf6b65ab305887783b13ae02c4535fbffd955c8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"### Testing ${ini_path} with generator ${generator} ###\" > ${LOG_FILE_GENERIC_KINE}\n    echo \"### Testing ${ini_path} with generator ${generator} ###\" > ${LOG_FILE_SIM}\n    # execute the simulation, stop if it fails\n    o2-sim -g ${generator_lower} ${trigger} --noGeant -n 100 -j 4 --configFile ${ini_path} --configKeyValues \"GeneratorPythia8.includePartonEvent=true\" >> ${LOG_FILE_SIM} 2>&1\n    RET=${?}\n    [[ \"${RET}\" != \"0\" ]] && { remove_artifacts ; return ${RET} ; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "4a1d2df9aa289f7c80aeaa8778daf1eea8e38edf23614a2280b4348c2cb4c633": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# proceed with the standard test on the kinematics\nroot -l -b -q ${O2DPG_ROOT}/test/common/kine_tests/test_generic_kine.C >> ${LOG_FILE_GENERIC_KINE} 2>&1\nRET=${?}\n\n# execute the known test script\ncp ${test_script} ${generator}.C\nroot -l -b -q ${generator}.C >> ${LOG_FILE_KINE} 2>&1\nlocal ret_test=${?}\nif [[ \"${RET}\" != \"0\" ]]; then RET=${ret_test}; fi\nrm ${generator}.C\n\nremove_artifacts\nreturn ${RET}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "8cabe397bab632603b6b0be902e68ddfe6f34c78c5e2697e09a2b71d9381c6df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "check_generators()\n{\n    # verify all generators listed in the INI file\n    local ini_path=${1}\n    local generators_to_check=\"\"\n    # overall return status for this verification\n    local ret_this=0\n    # ensure there is a test script\n    local test_script=$(get_test_script_path_for_ini ${ini_path})\n    local tested_any=\n    [[ ! -f ${test_script} ]] && { echo_red \"[FATAL]: O2DPG_TEST Script ${test_script} not specified for ini file ${ini_path}\" | tee -a ${LOG_FILE_KINE} ; return 1 ; }\n    for g in ${CHECK_GENERATORS} ; do\n        # proceed only if the generator is referenced in the INI file\n        if [[ \"$(grep ${g} ${ini_path})\" != \"\" ]] ; then\n            local look_for=$(grep \" ${g}.*\\(\\)\" ${test_script})\n            local has_trigger=\"$(grep Trigger${g} ${ini_path})\"\n            [[ -z \"${look_for}\" ]] && continue\n            echo -n \"Test ${TEST_COUNTER}: ${ini_path} with generator ${g}\"\n            tested_any=1\n            # set up the test directory\n\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "f512c49a1e40e343bb48224db1c4ff8ac88c3775f877e95088782c615e563769": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    tested_any=1\n            # set up the test directory\n            local test_dir=${TEST_COUNTER}_$(basename ${ini})_${g}_dir\n            rm -rf ${test_dir} 2> /dev/null\n            mkdir ${test_dir}\n            pushd ${test_dir} > /dev/null\n                # run a single test\n                exec_test ${ini_path} ${g} ${has_trigger}\n                RET=${?}\n            popd > /dev/null\n            if [[ \"${RET}\" != \"0\" ]] ; then\n                echo_red \" -> FAILED\"\n                ret_this=${RET}\n            else\n                echo_green \" -> PASSED\"\n            fi\n            ((TEST_COUNTER++))\n        fi\n    done\n    [[ -z \"${tested_any}\" ]] && { echo_red \"No test scenario was identified for any generator. At least one generator must be present for testing.\" ; ret_this=1 ; }\n    return ${ret_this}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "9ac48e6f58c94a4f886624410829524ac39a0c20ae9803b5ad68688a45df7983": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "add_ini_files_from_macros()\n{\n    # given a list of macros, gather all INI files that include at least one of them\n    local macro_files=$@\n    for mf in ${macro_files} ; do\n        # Remove any part of the path before MC/config/, to get the macro's relative path\n        if [[ \"${mf}\" == *\"MC/config\"* ]] ; then\n            mf=${mf#*MC/config/}\n            mf=\"MC/config/${mf}\"\n        fi\n        local other_ini_files=$(grep -r -l ${mf} | grep \".ini$\")\n        # if this macro is not found in any INI file, it might be included by another macro which is then included in an INI file\n        [[ -z \"${other_ini_files}\" ]] && { MACRO_FILES_POTENTIALLY_INCLUDED+=\"${mf} \" ; continue ; }\n        for oif in ${other_ini_files} ; do\n            # add to the INI files collection if not already included\n            [[ \"${INI_FILES}\" ==  *\"${oif}\"* ]] && continue\n            INI_FILES+=\" ${oif} \"\n        done\n    done\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "c9cef52d9467171e0638bcd4e1766f5944425bdad231834dffbe367e017f5a2f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "get_root_includes()\n{\n    # verify if R__ADD_INCLUDE_PATH is utilized within the including macro and then check the included file against this path\n    local including_file=${1}\n    local included_file=${2}\n    full_includes=\"\"\n    while read -r line ; do\n        # remove all unnecessary parts, as R__ADD_INCLUDE_PATH typically points to something like $O2DPG/<what/we/are/interested/in> and we need only the file name\n        included_file_this_dir=${line#*/}\n        # remove the closing parenthesis to clean up the path\n        included_file_this_dir=${included_file_this_dir%%\")\"}\n        # build the full file path\n        included_file_this_dir=${included_file_this_dir}/${included_file}\n        # ensure the file exists and hasn't already been added to the list\n        [[ -f ${included_file_this_dir} && \"${full_includes}\" != *\"${included_file_this_dir}\"* ]] && full_includes+=\"${included_file_this_dir} \"\n    done <<< \"$(grep R__ADD_INCLUDE_PATH ${including_file})\"\n    echo ${full_includes}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "f154f0ff724c322ecdfd42e6b22bc91916b60fe8274c77fe70ac3e4a9c5072a6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "find_including_macros()\n{\n    # determine the macros that include other macros that have been modified, thereby enabling us to check\n    # if these including macros are present in certain INI files\n    local repo_dir_head=${REPO_DIR}\n    local changed_files=$(git_get_changed_files)\n    local potentially_included=${MACRO_FILES_POTENTIALLY_INCLUDED}\n    # we reset it here but could refill it to perform a full recursive check\n    MACRO_FILES_POTENTIALLY_INCLUDED=\"\"\n    # collection of including macros based on w\n    local including_macros=\"\"\n    for pi in ${potentially_included} ; do\n        local base=$(basename ${pi})\n        # examine all files that include this one\n        while read -r including ; do\n            # terminate the loop if no match is found\n            [[ -z \"${including}\" ]] && break\n            # some renaming steps\n            local including_file=${including%:*}\n            local included_file=${including##*:}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "75e853b877705ef3362b3b4b27f4418fefeb3c8539140a06f2bb91fd44708c4d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    local including_file=${including%:*}\n    local included_file=${including##*:}\n    # extract only the blank file path that is included\n    included_file=${included_file##* }\n    included_file=${included_file##\\\"}\n    included_file=${included_file%%\\\"}\n    # verify if the included file is relative to this directory\n    local included_file_this_dir=$(dirname ${including_file})/${included_file}\n    included_file_this_dir=$(realpath $included_file_this_dir)\n    included_file_this_dir=${included_file_this_dir##${repo_dir_head}/}\n    if [[ -f ${included_file_this_dir} && \"${changed_files}\" == *\"${included_file_this_dir}\"* ]]; then\n        [[ \"${including_macros}\" == *\"${including_file}\"* ]] && continue\n        including_macros+=\"${including_file} \"\n        continue\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "ab8ee6978afcaea2e301ac659ddeb3c6f9ad6da1e6d0b538fa0564d8e571c9af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    including_macros+=\"${including_file} \"\n                continue\n            fi\n            # verify if R__ADD_INCLUDE_PATH is utilized in the including macro and validate the included files against that\n            for root_included in $(get_root_includes ${including_file} ${included_file}) ; do\n                if [[ \"${changed_files}\" == *\"${root_included}\"* ]] ; then\n                    [[ \"${including_macros}\" == *\"${including_file}\"* ]] && continue\n                    including_macros+=\"${including_file} \"\n                    continue\n                fi\n            done\n        done <<< \"$(grep -r include.*${base})\"\n    done\n    echo ${including_macros}\n}\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "d9fe5e48ae173b99a5713460ca6d1bb3055a138b0cd83627ce4353d87fce1c6e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    add_ini_files_from_tests()\n    {\n        # Gather INI files that have been modified in the tests\n        local test_changed=$@\n        for tc in ${test_changed} ; do\n            local ini_dir=$(dirname ${tc})\n            ini_dir=${ini_dir%%/tests}\n            local keep_test_name=${tc}\n            tc=$(basename ${tc})\n            tc=${tc%.C}.ini\n            tc=${ini_dir}/${tc}\n            [[ \"${INI_FILES}\" == *\"${tc}\"* ]] && continue\n            # this INI file does not exist, it is a test without an INI file --> to be improved for detection\n            [[ ! -f ${tc} ]] && { TEST_WITHOUT_INI+=\"${keep_test_name} \" ; continue ; }\n            INI_FILES+=\" ${tc} \"\n        done\n    }\n\n\n    collect_ini_files()\n    {\n        # Gather all INI files that have been modified\n        local changed_files=$(git_get_changed_files)\n        for ini in ${changed_files} ; do\n            [[ \"${ini}\" != *\"MC/config\"*\".ini\" ]] && continue\n            [[ \"${INI_FILES}\" == *\"${ini}\"* ]] && continue || INI_FILES+=\" ${ini} \"\n        done\n    }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "6410e81fe0cfb9e43893e53746848caf9d035a6071a0caad0f30ff5e783519ac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# this depends on INI_FILES and MACRO_FILES_POTENTIALLY_INCLUDED\n# gather all INI files that might contain modified macros\nlocal macros=\nfor m in ${changed_files} ; do\n    [[ \"${m}\" != *\"MC/config\"*\".C\" ]] && continue\n    macros+=\" ${m} \"\ndone\n\nadd_ini_files_from_macros ${macros}\n\n# this relies on MACRO_FILES_POTENTIALLY_INCLUDED\n# gather all INI files that might have macros which in turn include modified macros\n# for now, only consider one level of inclusion, in principle, we could do this recursively\nadd_ini_files_from_macros $(find_including_macros)\n\n# also, if tests have changed, we should run them\nlocal macros=\nfor m in ${changed_files} ; do\n    [[ \"${m}\" != *\"MC/\"*\"ini/tests\"*\".C\" ]] && continue\n    macros+=\" ${m} \"\ndone\nadd_ini_files_from_tests ${macros}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "04c0c657a96b2ac177f9a39bb18317b7e2d8f3295a6b3385701faaf2f2cdb1e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "get_git_repo_directory()\n{\n    local repo=\n    if [[ -d .git ]] ; then\n        pwd\n    else\n        repo=$(git rev-parse --git-dir 2> /dev/null)\n    fi\n    [[ \"${repo}\" != \"\" ]] && repo=${repo%%/.git}\n    echo ${repo}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "390ef69c45436e805d072c82bd764b2329655d09bd93c777ea737efaea718e1b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print_usage()\n{\n    echo\n    echo \"usage: run_generator_tests.sh [--fail-immediately] [--keep-artifacts]\"\n    echo\n    echo \"  FLAGS:\"\n    echo\n    echo \"  --fail-immediately : halt immediately upon the first test failure\"\n    echo \"  --keep-artifacts : retain simulation and tests artifacts; by default, only logs are preserved post each test\"\n    echo\n    echo \"  ENVIRONMENT VARIABLES:\"\n    echo\n    echo \"  O2DPG_TEST_REPO_DIR : Specify the source repository to test.\"\n    echo \"  O2DPG_TEST_HASH_BASE : The base hash for comparison (optional)\"\n    echo \"  O2DPG_TEST_HASH_HEAD : The head hash for comparison (optional)\"\n    echo\n    echo \"  If O2DPG_TEST_HASH_BASE is not defined, ALIBUILD_BASE_HASH will be checked.\"\n    echo \"  If ALIBUILD_BASE_HASH is also undefined, it defaults to HEAD~1. However, if there are uncommitted changes, it defaults to HEAD.\"\n    echo\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "82ff6f0e85a0c1786771772f62ef635d4323e89a7cd6175ea555143762a4a93c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"  If not specified, it will default to HEAD.\"\n    echo\n    echo \"  If O2DPG_TEST_HASH_HEAD is unset, ALIBUILD_HEAD_HASH will be checked.\"\n    echo \"  If that is also unset, it will default to HEAD, but will remain empty if there are unstaged changes.\"\n    echo\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "2bbce68aa3a21b537a714bcf0bdac06536da122283fa4a0dc08061bb288634b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "####################\n# Gather cmd args #\n####################\n\n# determine if the script should terminate upon the first test failure\nfail_immediately=\n[[ \"${1}\" == \"--fail_immediately\" ]] && fail_immediately=1\n\nwhile [ \"$1\" != \"\" ] ; do\n    case $1 in\n        --fail_immediately ) shift\n                             fail_immediately=1\n                             ;;\n        --keep-artifacts )   shift\n                             KEEP_ONLY_LOGS=0\n                             ;;\n        --help|-h )          print_usage\n                             exit 1\n                             ;;\n        * )                  echo \"Unrecognized argument ${1}\"\n                             exit 1\n                             ;;\n    esac\ndone\n\necho\necho \"################################\"\necho \"# Execute O2DPG simulation test #\"\necho \"################################\"\necho",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "24f5d068e491b392a86f33ce4655f748c46174a72b37d7050fcdddbafa668380": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\nREPO_DIR=${O2DPG_TEST_REPO_DIR:-$(get_git_repo_directory)}\nif [[ ! -d ${REPO_DIR}/.git ]] ; then\n    echo \"ERROR: The directory \\\"${REPO_DIR}\\\" is not a git repository.\"\n    exit 1\nfi\n\nif [[ -z ${O2DPG_ROOT+x} ]] ; then\n    echo \"ERROR: O2DPG is not loaded, indicating that other required packages might be missing.\"\n    exit 1\nfi\n\n# source the utilities\nsource ${REPO_DIR}/test/common/utils/utils.sh\n\n# Perform initial steps in the source directory where a complete git repository is available\npushd ${REPO_DIR} > /dev/null\n\n# Add the ini files that have been modified to ensure we have the necessary information for missing tests and other details.\ncollect_ini_files\n\nif [[ -z \"${INI_FILES}\" ]] ; then\n    echo\n    echo \"No items to test were found.\"\n    echo\n    exit 0\nfi\n\nif [[ -n \"${TEST_WITHOUT_INI}\" ]] ; then\n    echo_red \"Warning: Some test macros do not match any INI file:\"\n    for twi in ${TEST_WITHOUT_INI} ; do\n        echo \"  - ${twi}\"\n    done\n    exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "3f7d09313af6102dbf4c9866117f7ddb041949b17a7f67fe694c17071a38d438": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The document states:\nFollowing INI files will be tested:\nini_files_full_paths=\nfor ini in ${INI_FILES} ; do\n    echo \"  - ${ini}\"\n    # convert to full path so that we can find it from anywhere\n    ini_files_full_paths+=\"$(realpath ${ini}) \"\ndone\n\n# return to the previous directory\npopd > /dev/null\n\n# now, we perform the trick:\n# we utilize the source directory since O2DPG's installation is essentially a copy of the entire repository.\n# this is especially useful for local testing and also works in the CI environment. Instead of\n#         [[ -z {ALIBUILD_HEAD_HASH+x} ]] && export O2DPG_ROOT=${REPO_DIR}\n# we will maintain consistency and set\nexport O2DPG_ROOT=${REPO_DIR}\nexport O2DPG_MC_CONFIG_ROOT=${O2DPG_ROOT}\n\n# prepare our local test directory\nrm -rf ${TEST_PARENT_DIR} 2>/dev/null\nmkdir -p ${TEST_PARENT_DIR} 2>/dev/null\npushd ${TEST_PARENT_DIR} > /dev/null\n\n# define a global return code to be returned at the end\nret_global=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "ed0f8c8e3630b1ecaf3d5a21881ac392fb9605b86f5950e655fbee8874a6ac86": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# global return code to be returned at the end\nret_global=0\n\n# examine each INI file\nfor ini in ${ini_files_full_paths} ; do\n\n    # apply some matching if requested\n    check_this=\"1\"\n    echo \"Examining ${ini}\"\n    if [[ \"${O2DPG_CHECK_FILTER}\" ]]; then\n      echo \"Using filter ${O2DPG_CHECK_FILTER} for the check\"\n      if [[ \"${ini}\" == *\"${O2DPG_CHECK_FILTER}\"* ]]; then\n        check_this=\"1\"\n      else\n        check_this=\"0\"\n      fi\n    fi\n\n    if [[ \"${check_this}\" == \"0\" ]]; then\n      continue\n    fi\n\n    check_generators ${ini}\n    RET=${?}\n    if [[ \"${RET}\" != \"0\" ]] ; then\n        ret_global=${RET}\n        [[ \"${fail_immediately}\" == \"1\" ]] && break\n    fi\ndone\n# return to the previous directory\npopd > /dev/null\n\n# display log files of failed tests\nif [[ \"${ret_global}\" != \"0\" ]] ; then\n    print_error_logs ${TEST_PARENT_DIR}\n    exit ${ret_global}\nfi\n\necho\necho_green \"All generator tests passed successfully\"\necho\n\nexit 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_generator_tests.sh"
        }
    ],
    "be877dd94cfde22596d041f115599c769ee6dbcfc2c37a834d35593e69e3027e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# The test parent directory to be created in the current directory\nTEST_PARENT_DIR=\"o2dpg_tests/relval\"\n\n# unified names for log files\nLOG_FILE=\"o2dpg-test-relval.log\"\n\n# Prepare some colored output\nSRED=\"\\033[0;31m\"\nSGREEN=\"\\033[0;32m\"\nSEND=\"\\033[0m\"\n\n\necho_green()\n{\n    echo -e \"${SGREEN}${*}${SEND}\"\n}\n\n\necho_red()\n{\n    echo -e \"${SRED}${*}${SEND}\"\n}\n\n\nget_git_repo_path()\n{\n    local repo=\n    if [[ -d .git ]] ; then\n        pwd\n    else\n        repo=$(git rev-parse --git-dir 2> /dev/null)\n    fi\n    [[ \"${repo}\" != \"\" ]] && repo=${repo%%/.git}\n    echo ${repo}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_relval_tests.sh"
        }
    ],
    "b1631cefe8f329242639400b91923433695f43d97390cf762274c8c3f009702e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "test_relval()\n{\n    # create 3 files for processing\n    local filename1=\"file1.root\"\n    local filename2=\"file2.root\"\n    local filename3=\"file3.root\"\n    root -l -b -q ${O2DPG_ROOT}/test/RelVal/createTestFile.C\\(\\\"${filename1}\\\"\\) >> ${LOG_FILE} 2>&1\n    root -l -b -q ${O2DPG_ROOT}/test/RelVal/createTestFile.C\\(\\\"${filename2}\\\"\\) >> ${LOG_FILE} 2>&1\n    root -l -b -q ${O2DPG_ROOT}/test/RelVal/createTestFile.C\\(\\\"${filename3}\\\"\\) >> ${LOG_FILE} 2>&1\n    echo \"### Testing RelVal ###\" > ${LOG_FILE}\n    # perform validation\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py rel-val -i ${filename1} -j ${filename2} -o rel_val_${filename1}_${filename2}_dir >> ${LOG_FILE} 2>&1\n    local ret=$?\n    [[ ${ret} != \"0\" ]] && { echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE} ; return ${ret} ; }\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py rel-val -i ${filename1} -j ${filename3} -o rel_val_${filename1}_${filename3}_dir >> ${LOG_FILE} 2>&1\n    ret=$?\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_relval_tests.sh"
        }
    ],
    "c2ca73c847d2375f2c6137b869b2e895167ca030d70fd1babb8c05155af179cc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ret=$?\n    [[ ${ret} -ne 0 ]] && { echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE} ; return ${ret} ; }\n    # inspect\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py inspect --path rel_val_${filename1}_${filename2}_dir >> ${LOG_FILE} 2>&1\n    ret=$?\n    [[ ${ret} -ne 0 ]] && { echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE} ; return ${ret} ; }\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py inspect --path rel_val_${filename1}_${filename3}_dir >> ${LOG_FILE} 2>&1\n    ret=$?\n    [[ ${ret} -ne 0 ]] && { echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE} ; return ${ret} ; }\n    # compare\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py compare -i rel_val_${filename1}_${filename2}_dir -j rel_val_${filename1}_${filename3}_dir -o compare >> ${LOG_FILE} 2>&1\n    ret=$?\n    [[ ${ret} -ne 0 ]] && { echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE} ; return ${ret} ; }\n    # influx",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_relval_tests.sh"
        }
    ],
    "53dead22dd484960c1837c089fcc1bfbad110b26ecaf5a8fb99a39a24155a7aa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# influx\n${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py influx --path rel_val_${filename1}_${filename2}_dir >> ${LOG_FILE} 2>&1\nret=$?\n[[ ${ret} != 0 ]] && { echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE} ; return ${ret} ; }\n# view\n${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py print --object-names --interpretations GOOD --path rel_val_${filename1}_${filename2}_dir >> ${LOG_FILE} 2>&1\nret=$?\n[[ ${ret} != 0 ]] && { echo \"[FATAL]: O2DPG_TEST failed\" >> ${LOG_FILE} ; return ${ret} ; }\nreturn ${ret}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_relval_tests.sh"
        }
    ],
    "67e0419a137c4abd97aeb58d31c823c60f0a52f6fd79cb927601194def904292": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print_usage()\n{\n    echo\n    echo \"usage: run_workflow_tests.sh\"\n    echo\n    echo \"  ENVIRONMENT VARIABLES:\"\n    echo\n    echo \"  O2DPG_TEST_REPO_DIR : Specify the source repository to test.\"\n    echo \"  O2DPG_TEST_HASH_BASE : The base hash for comparison (optional)\"\n    echo \"  O2DPG_TEST_HASH_HEAD : The head hash for comparison (optional)\"\n    echo\n    echo \"  If O2DPG_TEST_HASH_BASE is not defined, it will default to ALIBUILD_BASE_HASH.\"\n    echo \"  If ALIBUILD_BASE_HASH is also not set, it will default to HEAD~1, but if there are uncommitted changes, it will default to HEAD.\"\n    echo\n    echo \"  If O2DPG_TEST_HASH_HEAD is not defined, it will default to ALIBUILD_HEAD_HASH.\"\n    echo \"  If ALIBUILD_HEAD_HASH is also not set, it will default to HEAD, or remain empty if there are uncommitted changes.\"\n    echo\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_relval_tests.sh"
        }
    ],
    "1b03d51b5b0df8fbda66e326bebfa05ce19563750a7caacefd3758f219640bee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "while [ \"$1\" != \"\" ]; do\n    case $1 in\n        --help|-h )          print_usage\n                             exit 1\n                             ;;\n        * )                  echo \"Unknown argument ${1}\"\n                             exit 1\n                             ;;\n    esac\ndone\n\necho\necho \"############################\"\necho \"# Run O2DPG RelVal testing #\"\necho \"############################\"\necho\n\nREPO_DIR=${O2DPG_TEST_REPO_DIR:-$(get_git_repo_directory)}\nif [[ ! -d ${REPO_DIR}/.git ]]; then\n    echo_red \"Directory \\\"${REPO_DIR}\\\" is not a git repository.\"\n    exit 1\nfi\n\nif [[ -z ${O2DPG_ROOT+x} ]]; then\n    echo_red \"O2DPG is not loaded, suggesting that other necessary packages might be missing in this environment.\"\n    exit 1\nfi\n\n# source the utilities\nsource ${REPO_DIR}/test/common/utils/utils.sh\n\n# perform initial steps in the source directory where the complete git repository resides\npushd ${REPO_DIR} > /dev/null",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_relval_tests.sh"
        }
    ],
    "f52d1c98549190a49a261145dc48340491cde9e6cc6f7596f425a957cc1b9ba7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# flag if any RelVal files changed\nneed_testing=$(git_get_changed_files | grep \"RelVal/\")\n\n# return to the previous directory\npopd > /dev/null\nREPO_DIR=$(realpath ${REPO_DIR})\n\n# Now, let's do the following:\n# We utilize the source directory since O2DPG's installation is essentially a copy of the entire repository.\n# This is particularly useful for local testing but also works similarly in the CI environment. We could have done\n#         [[ -z {ALIBUILD_HEAD_HASH+x} ]] && export O2DPG_ROOT=${REPO_DIR}\n# but let's maintain consistency for both local and CI.\nexport O2DPG_ROOT=${REPO_DIR}\n\n\n###############\n# Let's proceed #\n###############\nret_global=0\n# prepare a local test directory for PWG tests\nrm -rf ${TEST_PARENT_DIR} 2>/dev/null\nmkdir -p ${TEST_PARENT_DIR} 2>/dev/null\npushd ${TEST_PARENT_DIR} > /dev/null\n\n# Test the changed files\nif [[ \"${need_testing}\" != \"\" ]] ; then\n    test_relval\n    ret_global=${?}\nelse\n    echo \"No files to test\"\n    exit 0\nfi\n\n# return to the original directory\npopd > /dev/null",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_relval_tests.sh"
        }
    ],
    "24e8ddf462033b34437caaeff99e70e4fd808eaff93a68ba5b0fc7dcaef0c222": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Return to the previous directory\npopd > /dev/null\n\n# If a central test fails, the exit code will not be 0\nif [[ \"${ret_global}\" != \"0\" ]] ; then\n    echo\n    echo \"####################\"\n    echo \"# ERROR for RelVal #\"\n    echo \"####################\"\n    echo\n    print_error_logs ${TEST_PARENT_DIR}\n    exit ${ret_global}\nfi\n\necho\necho_green \"RelVal tests completed successfully\"\necho\n\nexit 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_relval_tests.sh"
        }
    ],
    "5915547cc355405528f2629b126774591f89fc5a8d5714e2bb6696ca7adc4023": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# currently outdated\nexit 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/run_analysisqc_tests.sh"
        }
    ],
    "e15c585904c4b64c649ffc7199d44c83043133301f7ef3963d3ef5d3c8007cb4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Path to the JSON file\nJSON_FILE=$1\ntf=$2\n\n# retrieve event offset\nJQ_COMMAND=\"jq '.[] | select(.HepMCEventOffset) | .HepMCEventOffset' ${JSON_FILE}\"\noffset=`eval ${JQ_COMMAND}`\nif [ ! $offset ]\nthen\n  offset=0\nfi\n\n# count generated events\nJQ_COMMAND=\"jq '[.[] | select(.tf < ${tf}) | .HepMCEventCount] | add' ${JSON_FILE}\"\nevents=`eval ${JQ_COMMAND}`\nif [ ! $events ]\nthen\n  events=0\nfi\n\n# total number of events to skip\necho $((offset + events))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/ReadHepMCEventSkip.sh"
        }
    ],
    "b6ae00233d356491cfebe8eaf24d01ac77ed24055f7b1e97992aa10475a6a3e0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Path to the JSON file\nJSON_FILE=${1:-HepMC_EventSkip_ALT.json}\nEVENTS=$2\n\n# insert event count offset\necho \"[]\" > ${JSON_FILE} # initialize the JSON file\nJQ_COMMAND=\"jq '. + [{\"HepMCEventOffset\": ${EVENTS}}]' ${JSON_FILE} > tmp_123.json; mv tmp_123.json ${JSON_FILE}\"\neval ${JQ_COMMAND}\n\necho ${EVENTS}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/InitHepMCEventSkip.sh"
        }
    ],
    "c091ab4b7f956be75d574cde312f059d65a6b510ed2186ef4b89a371bf7260b4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\ndplname=$1\nwhile true; do\n  proc=$(ps aux | grep \"id ${dplname}\" | grep -v \"grep\" | awk '{print $2}')\n  if [ -n \"${proc}\" ]; then\n    echo \"FOUND ${proc} ... attaching gdb\"\n    gdb --pid ${proc}\n    exit 0\n  fi\n  sleep 0.01\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/dpl-attach-gdb.sh"
        }
    ],
    "99948f18e61d9a3642a7a63915a2df33ee629befed609555b934faae09d0af05": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Path to the JSON file\nJSON_FILE=${1:-HepMC_EventSkip_ALT.json}\ntf=$2\n\n# Value to set or add\nEVENTS=$(grep \"DISTRIBUTING\" ../tf${tf}/sgngen_*.log | tail -n 1 | awk '//{print $5}')\n\nif [ ! -f $JSON_FILE ]; then\n  echo \"[]\" > ${JSON_FILE} # initialize json file if it doesn't exist\nfi\n# insert event count ... if a count for this tf does not already exist\nJQ_COMMAND=\"jq 'if any(.[]; .tf == ${tf}) then . else . + [{\\\"tf\\\": ${tf}, \"HepMCEventCount\": ${EVENTS}}] end' ${JSON_FILE} > tmp_123.json; mv tmp_123.json ${JSON_FILE}\"\neval ${JQ_COMMAND}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/UpdateHepMCEventSkip.sh"
        }
    ],
    "c68a989439d848c8c12d7a53f107d828a370b91886843e48ec944703566e6dc2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# A script to locate corrupted AO2Ds using the checkCorruptedAO2Ds.C macro\n\nPRODUCTION=LHC24f3c\nRUN=* # use * for all runs\nNJOBS=20\nPRODUCTIONCYCLE=0\n\nOUTPUTFILE=corrupted_files_$PRODUCTION.txt\nif [ -e \"$OUTPUTFILE\" ]; then\n  rm $OUTPUTFILE\nfi\n\n# locate all files in alien\nif [ \"$RUN\" == \"*\" ]; then\n  alien_find alien:///alice/sim/2024/${PRODUCTION}/${PRODUCTIONCYCLE}/5*/AOD/*/AO2D.root > files_to_check.txt\nelse\n  alien_find alien:///alice/sim/2024/${PRODUCTION}/${PRODUCTIONCYCLE}/${RUN}/AOD/*/AO2D.root > files_to_check.txt\nfi\nmapfile -t FILESTOCHECK < files_to_check.txt\n\n# process AO2Ds\nprocess_file() {\n  IFS='/' read -a num <<< \"$1\"\n  INPUT=$1\n  echo '.x checkCorruptedAO2Ds.C(\"'${INPUT}'\", true)' | root -l -b > log_${num[6]}_${num[8]}\n  echo '.q'\n}\nexport -f process_file\n\nparallel -j $NJOBS process_file ::: \"${FILESTOCHECK[@]}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/findCorruptedAO2Ds.sh"
        }
    ],
    "1df64785e41416868870d18e7cf37e20833f7c5f28b7c74d6558ade6abe238c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PARAPHRASED DOCUMENT:\n    parallel -j $NJOBS process_file ::: \"${FILESTOCHECK[@]}\"\n\n# generate list of corrupted files\ntouch $OUTPUTFILE\nERRORSTR=\"Found corrupted file!\"\nREPAIRSTR=\"Found file in need of repair!\"\nfor FILE in \"${FILESTOCHECK[@]}\"; do\n  IFS='/' read -a num <<< \"$FILE\"\n  if grep -q \"$ERRORSTR\" log_${num[6]}_${num[8]}; then\n    echo $FILE \" is corrupted!\" >> $OUTPUTFILE\n  elif grep -q \"$REPAIRSTR\" log_${num[6]}_${num[8]}; then\n    echo $FILE \" is broken!\" >> $OUTPUTFILE\n  fi\ndone\n\nrm files_to_check.txt\nrm log_*",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/findCorruptedAO2Ds.sh"
        }
    ],
    "6e37b5e6a4e77d774df1d9a101f016c347eeabc11e32d6935f608be788e7f696": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Given a commit `cp_commit` on branch `source_branch` and\n# another branch `target_branch`, this script identifies the list\n# of all commits necessary to successfully cherry-pick `cp_commit`\n# onto the `target_branch`.\n\ncp_commit=$1        # The commit to be cherry-picked\nsource_branch=$2    # Branch containing `cp_commit` (e.g., master)\ntarget_branch=$3    # Branch to cherry-pick onto (e.g., foo)\n\n# Ensure all required arguments are provided\nif [ -z \"$cp_commit\" ] || [ -z \"$source_branch\" ] || [ -z \"$target_branch\" ]; then\n    echo \"Usage: $0 <commit-hash-A> <source-branch> <target-branch>\"\n    exit 1\nfi\n\n# Function to determine if two git commits modify at least one common file\nmodifies_common_files() {\n    if [ \"$#\" -ne 2 ]; then\n        echo \"Usage: check_common_files <commit1> <commit2>\"\n        return 1\n    fi\n\n    local commit1=\"$1\"\n    local commit2=\"$2\"\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/get_cherrypick_commit_list.sh"
        }
    ],
    "cb21a3f1df8380d38bb38c1b56c156048c57036a0c6596a894b10a3cdcc5ef45": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    local commit1=\"$1\"\n    local commit2=\"$2\"\n\n    # Obtain the list of modified files for each commit\n    local files_commit1\n    files_commit1=$(git diff --name-only \"${commit1}^\" \"${commit1}\")\n    \n    local files_commit2\n    files_commit2=$(git diff --name-only \"${commit2}^\" \"${commit2}\")\n\n    # Identify common files\n    local common_files\n    common_files=$(echo -e \"${files_commit1}\\n${files_commit2}\" | sort | uniq -d)\n\n    # Present the result\n    if [ -n \"$common_files\" ]; then\n\treturn 1\n    fi\n    return 0\n}\n\n# function to verify if two commits can be interchanged. This can help in deciding if a commit\n# must precede another commit strictly.\ncan_swap_commits() {\n    local commitA=\"$1\"\n    shift\n    local commitB=(\"$@\")   # this is the list of commits that should be swapped with commitA\n\n    reverseCommitList=()\n\n    # Iterate through the original array in reverse order\n    for ((i=${#commitB[@]}-1; i>=0; i--)); do\n      reverseCommitList+=(\"${commitB[i]}\")\n    done",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/get_cherrypick_commit_list.sh"
        }
    ],
    "de43f842eaa0233243d85a368e91bd6a15e0be2b8f47e2fafc207752a8ab455e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Create a temporary branch for testing\nlocal temp_branch=\"temp_swap_test_branch\"\n\n# Record the current state\nGIT_CUR=$(git branch --show-current)\n# Create a new temporary branch from the current HEAD\ngit checkout ${commitA}^ -b \"$temp_branch\" &> /dev/null\n\nRC=1\nfor commit in \"${reverseCommitList[@]}\"; do\n  # Cherry-pick commit B onto a branch without commitA\n  if git cherry-pick \"$commit\" &> /dev/null; then\n    # RC=1  # Commits can be swapped\n    RC_local=1\n  else\n    RC=0  # Cannot swap due to conflict when cherry-picking B\n    git cherry-pick --abort\n  fi\ndone\n\n# Cleanup: Reset to the original branch and delete the temp branch\ngit checkout ${GIT_CUR} &> /dev/null\ngit branch -D \"$temp_branch\" &>/dev/null\nreturn ${RC}\n\n# Step 1: Determine the branch break-off point\nBRANCHPOINT=$(git merge-base \"$source_branch\" \"$target_branch\")",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/get_cherrypick_commit_list.sh"
        }
    ],
    "f80ec63519831421b4fd930d1cad14978776c14f3180da71722345eb7df96daf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    COMMITLIST=()\n# Utilize a while loop to gather the initial set of commits to consider\nwhile IFS= read -r line; do\n    COMMITLIST+=(\"$line\")\ndone < <(git log ${cp_commit}^...${BRANCHPOINT} --pretty=format:\"%H\")\n\n# Filter out commits that do not modify the same files\nFILTERED_COMMITS1=()\nfor commit_hash in \"${COMMITLIST[@]}\"; do\n    modifies_common_files ${commit_hash} ${cp_commit}\n    RC=$?\n    if [ ${RC} -eq 1 ]; then\n\tFILTERED_COMMITS1+=(${commit_hash})\n    fi\ndone\n\n# Subsequently, filter out commits irrelevant to ${cp_commit}\nCP_COMMIT_LIST=(${cp_commit}) # The list of cherry-pick commits to retain or construct",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/get_cherrypick_commit_list.sh"
        }
    ],
    "60cdf57b8cac428314d06ea6fd4f00bbf63a253bb2ead5d509dd0bc35a5a8b6a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for each commit_hash in \"${FILTERED_COMMITS1[@]}\"; do\n    if [ \"${commit_hash}\" != \"${cp_commit}\" ]; then\n      can_swap_commits \"${commit_hash}\" \"${CP_COMMIT_LIST[@]}\"\n      if [ $? -eq 0 ]; then\n        # echo \"COMMIT ${commit_hash} is necessary\"\n        # in this case we need to add it to the list of relevant commits\n        # and also trace its dependencies in turn\n        CP_COMMIT_LIST+=(${commit_hash})\n      fi\n    fi\ndone\n\n# reverse the final list to ensure the correct cherry-pick sequence\n\nCP_COMMITS_REVERSED=()\nfor ((i=${#CP_COMMIT_LIST[@]}-1; i>=0; i--)); do\n  CP_COMMITS_REVERSED+=(\"${CP_COMMIT_LIST[i]}\")\ndone\n\n# Display the commits\necho \"To cherry-pick ${cp_commit} onto branch ${target_branch}, we need to apply:\"\nfor ((i=0;i<${#CP_COMMITS_REVERSED[@]}; i++)); do\n  echo \"${i}: ${CP_COMMITS_REVERSED[i]}\"\ndone\n\nexit 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/get_cherrypick_commit_list.sh"
        }
    ],
    "a6f74e6e5c6db01691d6d21f7f7c56356a36f34e1dded967c69e0aa86c01a97b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# A script for retrieving error files from each failing subjob of an AliEn GRID masterjob.\nMY_JOBID=$1\n\nif [ -z \"${MY_JOBID}\" ]; then\n  echo \"Please supply a master job id as the first argument.\"\n  exit 1\nfi\n\n# Collecting all subjob ids\nSUBJOBIDS=($(alien.py ps --trace ${MY_JOBID} | awk '/Subjob submitted/' | sed 's/.*submitted: //' | tr '\\n' ' '))\n\n# Identifying the failed subjob ids\nFAILEDSUBJOBIDS=($(alien.py ps -a -m ${MY_JOBID} -f ERROR_ALL | awk '/EE/{print $2}' | tr '\\n' ' '))\n\nCurrDir=${PWD}\nOutputDir=/tmp/AlienLogs_${MY_JOBID}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/fetch_output_onfailure.sh"
        }
    ],
    "181ecea939b1e06fd22f923bd7385855e2d32febc751b9a83bef6e5c1fab6b0e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CurrDir=${PWD}\nOutputDir=/tmp/AlienLogs_${MY_JOBID}\n\njob_number=${#FAILEDSUBJOBIDS[@]}\necho \"Found ${job_number} failed job ids\"\necho \"Registering output for retrieval\"\nRecycleBase=\"\"\n# Initial loop to register output\nfor ((i = 0; i < job_number; i++)); do\n  jobid=${FAILEDSUBJOBIDS[i]}\n  if [ ! \"${RecycleBase}\" ]; then\n    RecycleOutputDir=$(alien.py ps --trace ${jobid} | awk '/Going to uploadOutputFiles/' | sed 's/.*outputDir=//' | sed 's/)//')\n    RecycleBase=${RecycleOutputDir%-${jobid}} # Removes the ${jobid} and yields the recycle base path\n  fi\n  $(alien.py registerOutput ${jobid}) 2> /dev/null\ndone\n\n# Brief pause to ensure \"registerOutput\" updates propagate\nsleep 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/fetch_output_onfailure.sh"
        }
    ],
    "e8fb5f44ab8f57b3d7136d65ba9e0554229925fd1fecb880c4045e74f6fcd682": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# pause for a moment to ensure \"registerOutput\" is propagated\nsleep 1\n\necho \"Retrieving outputs\"\n# second iteration to transfer files\nfor ((i = 0; i < job_number; i++)); do\n  jobid=${FAILEDSUBJOBIDS[i]}\n  RecycleOutputDir=\"${RecycleBase}-${jobid}\"\n  alien.py cp ${RecycleOutputDir}/'*archive*' file:${OutputDir}/${jobid}\n  [ -f ${OutputDir}/${jobid}/log_archive.zip ] && unzip -q -o ${OutputDir}/${jobid}/log_archive.zip -d ${OutputDir}/${jobid}\ndone\n\necho \" ... Initiating automatic log file extraction ... \"\n\n# We identify the O2DPG task that failed (as mentioned in stdout) and proceed to automatically extract the pertinent logs\n# Note that errors might arise outside of O2DPG tasks or in preprocessing stages and may not be evident in the logs\ncd ${OutputDir}\n# execute the extraction script\n${O2DPG_ROOT}/GRID/utils/extractErroredLogFiles.sh\necho \"Logs have been extracted to ${OutputDir}\"\ncd ${CurrDir}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/fetch_output_onfailure.sh"
        }
    ],
    "0942f60820445781b08be1ad3005a2295aa0f579dd2a5b8217b45d94e6e3f637": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# We identify the O2DPG tasks that encountered errors (listed in stdout) and automatically retrieve the corresponding logs.\n# Be cautious as errors might not be confined to O2DPG tasks and could occur during preprocessing or be unrecorded in logs.\n\nmytar () {\n  tar \"$@\"\n}\nif [[ $(uname) == \"Darwin\" ]]; then\n    echo \"Executing on macOS. This requires gnu-tar\"\n    $(which gtar)\n    mytar () {\n      gtar \"$@\"\n    }\nfi\n\nerrored_tasks=\"\"\nfind ./ -name \"stdout*\" -exec grep -H \"failed.*retry\" {} ';' | sed 's/ failed.*//' | tr \":\" \" \" | while IFS= read -r line; do\n  stdoutpath=$(echo \"$line\" | awk '{print $1}')  # Extracting the first column\n  logfile=$(echo \"$line\" | awk '{print $2}')  # Extracting the second column",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/extractErroredLogFiles.sh"
        }
    ],
    "c071f602edd803478824310b54797fd5430d2ae6e16fbc532625acb033fb7f5c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  dir=$(dirname ${stdoutpath})\n  cd ${dir}\n  # determine a timeframe number (if applicable)\n  # Extracting the timeframe 'tf'\n  tf=${logfile#*_} # Removes everything before the first underscore\n  tf=${tf%.log} # Removes the \".log\" extension\n  echo \"Extracted timeframe ${tf}\"\n  \n  # extract the general log archive\n  unzip -n log_archive.zip\n  # extract specific task log from debug archive\n  mytar -xvzf debug_log_archive.tgz --wildcards \"*${logfile}.log\"\n  if [[ ${logfile} == *\"qedsim\"* || ${logfile} == *\"sgnsim\"* || ${logfile} == *\"bkgsim\"* ]]; then\n    # the simulation also requires additional files to be inspected\n    mytar -xvzf debug_log_archive.tgz --wildcards \"*${tf}*serverlog*\"\n    mytar -xvzf debug_log_archive.tgz --wildcards \"*${tf}*workerlog*\"\n    mytar -xvzf debug_log_archive.tgz --wildcards \"*${tf}*mergerlog*\"\n  fi\n  cd $OLDPWD\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/extractErroredLogFiles.sh"
        }
    ],
    "427d98899d916f780384bafaf48c2b99b21dc34f9b8edbf7cc066df5b90da7de": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# script designed to identify failure indications in a file and report the first encountered error\n\nfiletocheck=$1\nif [ -z \"${filetocheck}\" ]; then\n  echo \"Please provide a file to search\"\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/extractFailureMessage.sh"
        }
    ],
    "89da3409f916c74357ceee34f345f816a40800dfd691fa315de1dd5e9869d1c0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# List of typical failure indicators (add more if necessary)\npattern=\"-e \\\"\\<[Ee]xception\\\"                         \\\n         -e \\\"segmentation violation\\\"                 \\\n         -e \\\"error while initializing workflow\\\"       \\\n         -e \\\"bus error\\\"                              \\\n         -e \\\"Assertion.*failed\\\"                      \\\n         -e \\\"Fatal in\\\"                               \\\n         -e \\\"libc++abi.*terminating\\\"                 \\\n         -e \\\"There was a crash.\\\"                     \\\n         -e \\\"arrow.*Check failed\\\"                    \\\n         -e \\\"terminate called after\\\"                 \\\n         -e \\\"terminate called without an active\\\"     \\\n         -e \\\"\\]\\[FATAL\\]\\\"                            \\\n         -e \\\"\\*\\*\\* Program crashed\\\"                 \\\n         -e \\\"\\*\\*\\* Fatal Exception\\\"                 \\\n         -e \\\"was killed abnormally\\\"                  \\\n         -e \\\"line.*Killed\\\"                           \\\\\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/extractFailureMessage.sh"
        }
    ],
    "49874330d89a6cffa185401823839b1004ea5da674eedbf3f4a4ee8318c66ac4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Matching for \"line.*Killed\"                     \\\n         - Matching for \"\\*\\*\\* Error in\\\"\" # <--- Indicating LIBC fatal error messages",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/extractFailureMessage.sh"
        }
    ],
    "2afb0ac4c0947ae2aab7817b48f191d7c6d35d30ec503e170d4b3a13ff7826a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CMD=\"grep -m 1 -B2 -A10 ${pattern} $filetocheck\"\nT=$(eval \"${CMD}\")\nif [ \"$?\" -eq 0 ]; then\n  echo \"\"\n  echo \"==============================ERROR in ${filetocheck} ==============================\"\n  echo \"\"\n  echo \"${T}\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/extractFailureMessage.sh"
        }
    ],
    "e0335b933f207bec12fdb6e5d4718010d7ad5357e0e4e8e86326ec2e39addcc2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Executes a job within a container, similar to how it would run on the GRID.\n# Imitates the actions of the AliEn job handler.\n\nSCRIPT=$1\n[ $SCRIPT == \"\" ] && echo \"Please provide a script to run\" && exit 1\necho \"Attempting to run script ${SCRIPT} in a containerized environment\"\n\n# Determine the hardware architecture (ARM or X86)\nARCH=$(uname -i)\nif [ \"$ARCH\" == \"aarch64\" ] || [ \"$ARCH\" == \"x86_64\" ]; then\n    echo \"Detected hardware architecture : $ARCH\"\nelse\n    echo \"Invalid architecture ${ARCH} detected. Exiting\"\n    exit 1\nfi\nif [ \"$ARCH\" == \"aarch64\" ]; then\n  ISAARCH64=\"1\"\nfi\n# Use the default singularity container (unless overridden)\nAPPTAINER_CONTAINER=${APPTAINER_CONTAINER:-/cvmfs/alice.cern.ch/containers/fs/singularity/default${ISAARCH64+\"-aarch64\"}}\n\n# Create a working directory if not already specified\nif [ ! \"${WORK_DIR}\" ]; then\n  WORK_DIR=$(mktemp -d /tmp/alien-job-XXXXXX)\nfi\necho \"This job will be executed in $WORK_DIR\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/runGRIDContainerized.sh"
        }
    ],
    "8986eb87b511029fbfadc24776ddc32f0e1bc44062b61b9e1b3a2c701662fbf8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ ! -d \"${WORK_DIR}\" ]; then\n    echo \"The working directory ${WORK_DIR} does not exist; please create it before running\"\n    exit 1\nfi\n\n# copy the script to the WORK_DIR\ncp ${SCRIPT} ${WORK_DIR}/job.sh\n\n# export certificates belonging to the current user (these should be created beforehand)\nALIEN_CERTFILE=$(find /tmp -type f -name 'tokencert*pem' -user `whoami` 2> /dev/null)\nALIEN_KEYFILE=$(find /tmp -type f -name 'tokenkey*pem' -user `whoami` 2> /dev/null)\n\n[ \"${ALIEN_CERTFILE}\" == \"\" ] && echo \"No certificate file found; initialize a token with alien-init-token or similar\" && exit 1\n[ \"${ALIEN_KEYFILE}\" == \"\" ] && echo \"No key file found; initialize a token with alien-init-token or similar\" && exit 1\n\ncp ${ALIEN_CERTFILE} ${WORK_DIR}/usercert.pem\ncp ${ALIEN_KEYFILE} ${WORK_DIR}/userkey.pem\n\necho \"JALIEN_TOKEN_CERT=/workdir/usercert.pem\" > ${WORK_DIR}/envfile\necho \"JALIEN_TOKEN_KEY=/workdir/userkey.pem\" >> ${WORK_DIR}/envfile",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/runGRIDContainerized.sh"
        }
    ],
    "c30d4f07575e8bcb5a22860e513cd824f81c956e774b6c7f02599ca8a64d1b71": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# launch job = script within the container in the workdir\n/cvmfs/alice.cern.ch/containers/bin/apptainer/current${ISAARCH64+\"-aarch64\"}/bin/apptainer exec -C -B /cvmfs:/cvmfs,${WORK_DIR}:/workdir  \\\n                                                                    --pwd /workdir --env-file ${WORK_DIR}/envfile ${APPTAINER_CONTAINER} /workdir/job.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/runGRIDContainerized.sh"
        }
    ],
    "e247d6c1f5b410a5d70ce482902020c9cb5aaa84df434cc8691895d7bf9f1d1d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\nALIEN_PID=$1\n\nif [ ${JALIEN_TOKEN_CERT} ]; then\n  TOKENCERT=${JALIEN_TOKEN_CERT}\n  TOKENKEY=${JALIEN_TOKEN_KEY}\nelse\n  if [ -f ${TMPDIR:-/tmp}/tokencert_`id -u`.pem ]; then\n    TOKENCERT=${TMPDIR:-/tmp}/tokencert_`id -u`.pem\n  fi\n  if [ -f ${TMPDIR:-/tmp}/tokenkey_`id -u`.pem ]; then\n    TOKENKEY=${TMPDIR:-/tmp}/tokenkey_`id -u`.pem\n  fi\nfi\n\nif [ ! ${TOKENCERT} ]; then\n  echo \"A tokencert and tokenkey file are needed in the temporary folder\"\n  exit 1\nfi\n\nSCRIPT=reproducer_script_${ALIEN_PID}.sh\n# fetch the script from MonaLisa via Costin using curl\ncurl 'https://alimonitor.cern.ch/users/jobenv.jsp?pid='${ALIEN_PID} \\\n  -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36' \\\n  --insecure --cert ${TOKENCERT} --key ${TOKENKEY} -o ${SCRIPT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/getReproducerScript.sh"
        }
    ],
    "1318f00ec696c5d36158afa72218959eefbc9b6ab3ffa6bc7a4255f28a016fa9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Define the Apptainer injection block to ensure\n# that the job script runs inside an Apptainer (Singularity) container\nINJECTION='\nexport ALIEN_PID=#ALIEN_PID#\n# Verify if the script is being executed within an Apptainer or Singularity container\nif [ -z \"$APPTAINER_NAME\" ] && [ -z \"$SINGULARITY_NAME\" ]; then\n  # Relaunch the script within the container\n\n  export WORKDIR=/tmp/foo-${ALIEN_PID}\n  if [ ! -d ${WORKDIR} ]; then\n    mkdir ${WORKDIR}\n  fi\n\n  # - copy the certificate token to /tmp/ within the container\n  mkdir ${WORKDIR}/tmp\n  cp /tmp/token*pem ${WORKDIR}/tmp\n\n  # - copy the job script to the work directory\n  cp $0 ${WORKDIR}\n\n  # determine the architecture (ARM or X86)\n  ARCH=$(uname -i)\n  if [ \"$ARCH\" == \"aarch64\" ] || [ \"$ARCH\" == \"x86_64\" ]; then\n    echo \"Detected hardware architecture : $ARCH\"\n  else\n    echo \"Invalid architecture ${ARCH} detected. Exiting\"\n    exit 1\n  fi\n  if [ \"$ARCH\" == \"aarch64\" ]; then\n    ISAARCH64=\"1\"\n  fi'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/getReproducerScript.sh"
        }
    ],
    "b36d285881ebd3734d1721eb4b51ead1a4f24eefa0dc190a04c163b7e64eae37": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CONTAINER=\"/cvmfs/alice.cern.ch/containers/fs/apptainer/compat_el9-${ARCH}\"\n  APPTAINER_EXEC=\"/cvmfs/alice.cern.ch/containers/bin/apptainer/${ARCH}/current/bin/apptainer\"\n\n  # we can analyze the local JDL to determine the package and configure it for the container\n  ${APPTAINER_EXEC} exec -C -B /cvmfs:/cvmfs,${WORKDIR}:/workdir,${WORKDIR}/tmp:/tmp --pwd /workdir -C ${CONTAINER} \"$0\"\n  exit $?\nfi\n'\n\n# Insert the block after the first line (shebang)\nawk -v block=\"$INJECTION\" 'NR==1 {print; print block; next} 1' \"$SCRIPT\" > tmpfile && mv tmpfile \"$SCRIPT\"\n\n# Remove sandboxing structure\nsed -i \"/echo \\\"Create a fresh sandbox at every job attempt: alien-job-$ALIEN_PID\\\"/d\" \"$SCRIPT\"\nsed -i \"/rm -rf alien-job-$ALIEN_PID/d\" \"$SCRIPT\"\nsed -i \"/mkdir -p alien-job-$ALIEN_PID\\/tmp/d\" \"$SCRIPT\"\nsed -i \"/cd alien-job-$ALIEN_PID/d\" \"$SCRIPT\"\n\n# Replace the PID\nsed -i \"s/#ALIEN_PID#/${ALIEN_PID}/g\" \"$SCRIPT\"\n\nchmod +x \"${SCRIPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/getReproducerScript.sh"
        }
    ],
    "f1b9362a954120e7f0a191fc1b98fa39c96b21d504a344cfe732793858d5c185": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# A supporting script designed to simplify the submission of existing scripts as ALIEN GRID jobs (using the following format):\n#\n# grid-submit --script my_script.sh --jobname jobname\n#\n# This script manages all the necessary interactions with the GRID automatically. Users do not need to create JDL files or manually upload them to the GRID.\n#\n# Additionally, the script can simulate local execution of the job. To do so, simply use:\n#\n# grid-submit --script my_script.sh --jobname jobname --local\n#\n# Currently, it only supports a basic JDL configuration. Further enhancements could include:\n#\n# -) allowing JDL customization through command line arguments or JDL tags within the script\n#\n# author: Sandro Wenzel\n\n# set -o pipefail\n\nfunction per() { printf \"\\033[31m$1\\033[m\\n\" >&2; }\nfunction pok() { printf \"\\033[32m$1\\033[m\\n\" >&2; }\nfunction banner() { echo ; echo ==================== $1 ==================== ; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "284589a6affebeaa99b7465cca189e0dd12a5715576d1676c9adc296d677b3d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    function Usage() { echo \"$0 --script scriptname | -c WORKDIR_RELATIVE_TO_TOP [ --jobname JOBNAME ] [ --topworkdir WORKDIR (ON TOP OF HOME) ] \"; }\n\nnotify_mattermost() {\n  set +x\n  if [ \"$MATTERMOSTHOOK\" ]; then\n    text=$1\n    command=\"curl -X POST -H 'Content-type: application/json' --data '{\\\"text\\\":\\\"\"${text}\"\\\"}' \"${MATTERMOSTHOOK}\" &> /dev/null\"\n    eval \"${command}\"\n  fi\n}\n\nstart_hook() {\n  notify_mattermost \"${ALIEN_PROC_ID}: Initiating stage $2\"\n}\n\nupload_logs() {\n  # FOR NOW, WE ZIP ALL LOG FILES\n  zip logs_PROCID${ALIEN_PROC_ID:-0}_failure.zip *.log* *mergerlog* *serverlog* *workerlog* alien_log_${ALIEN_PROC_ID:-0}_failure.txt\n  [ \"${ALIEN_JOB_OUTPUTDIR}\" ] && upload_to_Alien logs_PROCID${ALIEN_PROC_ID:-0}_failure.zip  ${ALIEN_JOB_OUTPUTDIR}/\n}\nexport -f upload_logs\nfailure_hook() {\n  notify_mattermost \"${ALIEN_PROC_ID}: **Failure** in stage $2\"\n  cp alien_log_${ALIEN_PROC_ID:-0}.txt logtmp_${ALIEN_PROC_ID:-0}_failure.txt\n\n  # FOR NOW, WE ZIP ALL LOG FILES\n  upload_logs\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "5d633b3e03443000e24eddf8f983cb68e1ad175a5cc3239e85362c1b439fa143": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# FOR THE TIME BEING, ALL LOG FILES ARE ZIPPED\n  uploadlogs\n}\n\nexport -f starthook\nexport -f failhook\nexport JOBUTILS_JOB_STARTHOOK=\"starthook\"\nexport JOBUTILS_JOB_FAILUREHOOK=\"failhook\"\n\n# this function transfers a local file to an alien path and includes error checks\nupload_to_Alien() {\n  set -x\n  SOURCEFILE=$1  # should be a local file --> verify\n  DEST=$2  # should be a target path\n  notify_mattermost \"BEGINNING TRANSFER TO ALIEN: alien.py cp -f file:$SOURCEFILE ${DEST}\"\n  alien.py cp -f file:$SOURCEFILE ${DEST}\n  RC=$?\n  [ \"${RC}\" != \"0\" ] && notify_mattermost \"TRANSFER OF FILE ${SOURCEFILE} TO ${DEST} RESULTED IN RC: ${RC}\"\n  # perform a check\n  alien.py ls ${DEST}/${SOURCEFILE}\n  RC=$?\n  [ \"${RC}\" != \"0\" ] && notify_mattermost \"LISTING OF FILE ${DEST}/${SOURCEFILE} YIELDED RC: ${RC}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "88329691c00db47ad2452de5c073d706b8923e826fe64ee55b6278f25b7b74dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    alien.py xrdstat ${DEST}/${SOURCEFILE} | awk 'BEGIN{count=0}/root:/{if($3==\"OK\"){count=count+1}} END {if(count>=2) {exit 0}else{ exit 1}}'\n  RC=$?\n  notify_mattermost \"FINISHED UPLOADING TO ALIEN: alien.py cp -f file:$SOURCEFILE ${DEST} ${RC}\"\n  set +x\n  return ${RC}\n}\nexport -f upload_to_Alien\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "96383b3689e7a6b6ccbeb8a395b9c1df1ade1d4141d3311a0e0bfcdc917e000b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This hook is registered and periodically runs within the taskwrapper control loop (assuming each stage of GRID workflows is managed by taskwrapper). We utilize it to remotely control GRID jobs. For example, one could instruct a GRID job to upload its current log files to ALIEN for prompt inspection, which can be helpful during debugging.\n\ncontrol_hook() {\n  # We interact with a remote webserver to query control commands for this GRID process. The webserver should return a single command word.\n  command=$(curl ${CONTROLSERVER}/?procid=${ALIEN_PROC_ID} 2> /dev/null)\n  if [ \"$command\" = \"uploadlogs\" ]; then\n    notify_mattermost \"Control command **uploadlogs** for ${ALIEN_PROC_ID}\"\n    uploadlogs & # -> run in the background to return immediately\n  elif [ \"$command\" = \"kill\" ]; then\n    echo \"killing job\"\n    taskwrapper_cleanup $PID SIGKILL\n    exit 1\n  fi\n}\nexport -f control_hook",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "d75ce39d62bf4c108f59b281c8f62fbe6c66deeda1bd75605900c728009a4bd1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "taskwrapper_cleanup $PID SIGKILL\nexit 1\nfi\n}\nexport -f control_hook\nexport JOBUTILS_JOB_PERIODICCONTROLHOOK=\"control_hook\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "0f240b62be2583e585a399e4f01f08a05b310605bac4d88388a106a2e6f471da": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# A hook that can be attached at the end of \"taskwrapper\" tasks.\n# This hook carries out a few actions:\n# a) sends task metrics to a Mattermost channel\n# b) assesses whether we are nearing the TTL and acts accordingly, such as:\n#     - performing a checkpoint\n#     - uploading files to ALIEN\n#     - halting the workflow to avoid a hard external timeout\ncheckpoint_hook_ttlbased() {\n  RC=$3 # return code of the stage\n  timepassedsincestart=$SECONDS\n  walltime=`cat $2_time`\n  text1=\"${ALIEN_PROC_ID} checkpoint check for $2; ${SECONDS} passed since job start out of ${JOBTTL}\"\n  notify_mattermost \"${text1}\"\n  cpumodel=`grep -m 1 \"model name\" /proc/cpuinfo | sed 's/.*://' | tr ' ' '_'`\n\n  # analyze CPU utilization\n  corecount=$(grep \"processor\" /proc/cpuinfo | wc -l)\n  path=$PWD\n  cpuusage=$(analyse_CPU.py $PWD/$2_cpuusage ${corecount} 2>/dev/null)\n\n  # analyze memory utilization\n  maxmem=$(grep \"PROCESS MAX MEM\" ${path}/$2 | awk '//{print $5}')\n  avgmem=$(grep \"PROCESS AVG MEM\" ${path}/$2 | awk '//{print $5}')\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "a597f429e9d8a957f2cb4b426ca81235c3b0e032a02913eecb0d575764d8c17c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    metrictext=\"#pdpmetric:${JOBLABEL},procid:${ALIEN_PROC_ID},CPU:${cpumodel},stage:$2,RC:${RC:-1},walltime:${walltime},${cpuusage},MAXMEM:${maxmem},AVGMEM:${avgmem}\"\n  notify_mattermost \"${metrictext}\"\n\n  # perform calculation using AWK\n  CHECKPOINT=$(awk -v S=\"${SECONDS}\" -v T=\"${JOBTTL}\" '//{} END{if(S/T>0.8){print \"OK\"}}' /dev/null);\n  if [ \"$CHECKPOINT\" = \"OK\" ]; then\n    echo \"**** TTL NEAR - CHECKPOINTING *****\"\n    # upload\n    text=\"CHECKPOINTING NOW\"\n    # notify\n    notify_mattermost \"${text}\"\n\n    # delete unnecessary files (pipes, sockets, etc)\n    find ./ -size 0 -delete\n\n    # create tarball (no compression to be quick and ROOT files are already compact)\n    tar --exclude \"output\" -cf checkpoint.tar *\n\n    text=\"TAR ARCHIVE CREATED WITH STATUS $?, SIZE: $(ls -al checkpoint.tar)\"\n    notify_mattermost \"${text}\"\n\n    \n    # This part is experimental: It aims to restart a new job immediately, resuming work from the generated checkpoint\n    #",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "72700f1d818a381e3dc3b507ea5f254dff4b8c7cbca61ce396682c5832f1c053": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# upload tarball\n#  [ \"${ALIEN_JOB_OUTPUTDIR}\" ] && upload_to_Alien checkpoint.tar ${ALIEN_JOB_OUTPUTDIR}/\n\n# resubmit\n# if [ \"$?\" = \"0\" ]; then\n#   notify_mattermost \"RESUBMITTING\"\n#    [ \"${ALIEN_JOB_OUTPUTDIR}\" ] && ${ALIEN_DRIVER_SCRIPT} -c `basename ${ALIEN_JOB_OUTPUTDIR}` --jobname CONTINUE_ID${ALIEN_PROC_ID} --topworkdir foo --o2tag ${O2_PACKAGE_LATEST} --asuser aliperf --ttl ${JOBTTL}\n# fi\n\n# exit current workflow\nexit 0\n  fi\n}\nexport -f checkpoint_hook_ttlbased\nexport -f notify_mattermost\nexport JOBUTILS_JOB_ENDHOOK=checkpoint_hook_ttlbased",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "19bdf0743770779cf69d401b7cdf38196711fc4aaf53284b8cf25cfb73ab6879": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "sanitize_tokens_with_quotes() {\n  string=$1\n  result=\"\"\n  # Use comma (,) as the delimiter for tokenizing the string\n  IFS=',' read -ra tokens <<< \"$string\"\n  for token in \"${tokens[@]}\"; do\n    [[ -n $result ]] && result=${result}\",\"\n    # Check if the token is enclosed in double quotes\n    if [[ $token =~ ^\\\".*\\\"$ ]]; then\n      result=$result$token\n    else\n      result=$result\"\\\"${token}\\\"\"\n    fi\n  done\n  echo ${result}\n}\n\n# Determine if this script is running on a GRID environment\n# This requires the presence of the JALIEN_TOKEN_CERT environment variable\nONGRID=0\n[ -n \"${JALIEN_TOKEN_CERT}\" ] && ONGRID=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "c33008a9cfb22e3ec9fbcf37184cd83820da7e7bc4289e13ef5f3af3f5c131e4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    JOBTTL=82000\nCPUCORES=8\nPRODSPLIT=${PRODSPLIT:-1}\n# this indicates that we are continuing an existing job, which means we do not create a new work directory\nwhile [ $# -gt 0 ] ; do\n    case $1 in\n\t      -c) CONTINUE_WORKDIR=$2;  shift 2 ;;   # this should point to the work directory of the job to continue (excluding HOME and ALIEN_TOPWORKDIR)\n        --local) LOCAL_MODE=\"ON\"; shift 1 ;;   # if we want to emulate local execution in the work directory without GRID interaction\n        --script) SCRIPT=$2; shift 2 ;;  # the job script to submit\n        --jobname) JOBNAME=$2; shift 2 ;; # the name of the job, which determines the directory name on the GRID\n        --topworkdir) ALIEN_TOPWORKDIR=$2; shift 2 ;; # the top work directory relative to the GRID home\n        --ttl) JOBTTL=$2; shift 2 ;; # allows specifying the time-to-live for the job\n        --partition) GRIDPARTITION=$2; shift 2 ;; # allows specifying a GRID partition for the job\n        --cores) CPUCORES=$2; shift 2 ;; # allows specifying the number of CPU cores (ensure compatibility with the partition)\n    esac\nesac",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "0a51318b140eabb27152c854d5a86064433107791d367d02b7d00b741133a42e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "--dry) DRYRUN=\"ON\"; shift 1 ;; # perform a dry run without interacting with the GRID (only generate local jdl file)\n        --o2tag) O2TAG=$2; shift 2 ;; #\n        --packagespec) PACKAGESPEC=$2; shift 2 ;; # specify the alisw and cvmfs package list (separated by command - example: '\"VO_ALICE@FLUKA_VMC::4-1.1-vmc3-1\",\"VO_ALICE@O2::daily-20230628-0200-1\"')\n        --asuser) ASUSER=$2; shift 2 ;; #\n        --label) JOBLABEL=$2; shift 2 ;; # a label to identify the production (e.g., as a production identifier)\n        --mattermost) MATTERMOSTHOOK=$2; shift 2 ;; # if provided, job status and metrics will be sent to this hook via Mattermost\n        --controlserver) CONTROLSERVER=$2; shift 2 ;; # allows specifying a SERVER ADDRESS/IP to act as a controller for GRID jobs\n        --prodsplit) PRODSPLIT=$2; shift 2 ;; # set the JDL production split level (useful for easily replicating workflows)\n        --singularity) SINGULARITY=ON; shift 1 ;; # run all operations within a singularity container",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "e672e13fca23965d7eeba4c80a5d530cc7271c47778109af5a083378b737aaee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "--singularity) SINGULARITY=ON; shift 1 ;; # execute all commands within a singularity environment\n--wait) WAITFORALIEN=ON; shift 1 ;; # wait for alien jobs to complete\n--wait-any) WAITFORALIENANY=ON; WAITFORALIEN=ON; shift 1 ;; # wait for any successfully completed alien jobs to return\n--outputspec) OUTPUTSPEC=$2; shift 2 ;; # specify a comma-separated list of JDL file specifications to be included in the JDL Output field (e.g., '\"*.log@disk=1\",\"*.root@disk=2\"')\n-h) Usage ; exit ;;\n--help) Usage ; exit ;;\n--fetch-output) FETCHOUTPUT=ON; shift 1 ;; # option to fetch all job outputs locally to simulate local execution; only effective if blocking until all jobs exit\n*) break ;;\nesac\ndone\nexport JOBTTL\nexport JOBLABEL\nexport MATTERMOSTHOOK\nexport CONTROLSERVER",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "ef09b75133f69b2336216ef172528849debd743c9b0ea6e417758c8dd70a8d21": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ $PRODSPLIT -gt 100 ]] && echo \"The production split should currently be less than 100.\" && exit 1\n\n# Verify the presence of jq (required for fetching output files)\n[[ \"$FETCHOUTPUT\" ]] && { which jq &> /dev/null || { echo \"jq command not found. Please ensure it is loaded or installed.\" && exit 1; }; }\n\n# Ensure the script is a valid file, otherwise terminate\n[[ \"${SCRIPT}\" ]] && [[ ! -f \"${SCRIPT}\" ]] && echo \"The script file ${SCRIPT} does not exist. Aborting.\" && exit 1\n\n# Analyze the options:\n# The script should either use --script or -c\n[ \"${SCRIPT}\" ] && [ \"$CONTINUE_WORKDIR\" ] && echo \"Running with a script and continue mode simultaneously is not allowed.\" && exit 1\nif [ \"${ONGRID}\" = 0 ]; then\n  [[ ! ( \"${SCRIPT}\" || \"$CONTINUE_WORKDIR\" ) ]] && echo \"Either a script or continue mode is needed.\" && exit 1\nfi\n\n# General job configuration\nMY_USER=${ALIEN_USER:-`whoami`}\n\nalien.py whois -a ${MY_USER}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "4d79aa01147fcc2e1e3b43fe726ec0aec488e2f663d9c264d5d07b63fae446fc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# General job configuration\nMY_USER=${ALIEN_USER:-`whoami`}\n\nalien.py whois -a ${MY_USER}\n\nif [[ ! $MY_USER ]]; then\n  per \"Issues fetching the current AliEn user. Have you executed alien-token-init?\"\n  exit 1\nfi\n\n[ \"${ASUSER}\" ] && MY_USER=${ASUSER}\n\nMY_HOMEDIR=\"/alice/cern.ch/user/${MY_USER:0:1}/${MY_USER}\"\nMY_JOBPREFIX=\"$MY_HOMEDIR/${ALIEN_TOPWORKDIR:-selfjobs}\"\nMY_JOBSCRIPT=\"$(cd \"$(dirname \"${SCRIPT}\")\" && pwd -P)/$(basename \"${SCRIPT}\")\" # the job script with full path\nMY_JOBNAME=${JOBNAME:-$(basename ${MY_JOBSCRIPT})}\nMY_JOBNAMEDATE=\"${MY_JOBNAME}-$(date -u +%Y%m%d-%H%M%S)\"\nMY_JOBWORKDIR=\"${MY_JOBPREFIX}/${MY_JOBNAMEDATE}\"  # ISO-8601 UTC\n[ \"${CONTINUE_WORKDIR}\" ] && MY_JOBWORKDIR=\"${MY_JOBPREFIX}/${CONTINUE_WORKDIR}\"\nMY_BINDIR=\"$MY_JOBWORKDIR\"\n\npok \"The job's working directory will be $MY_JOBWORKDIR\"\npok \"Specify the job name by running $0 <scriptname> <jobname>\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "9b45f494abfa47e3ea71d7963e90a8c73dcf3675f6a0c241fd3144b0c2543216": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# Create a local work directory\n#\nif [[ \"${ONGRID}\" == \"0\" ]]; then\n  GRID_SUBMIT_WORKDIR=${GRID_SUBMIT_WORKDIR:-${TMPDIR:-/tmp}/alien_work/$(basename \"$MY_JOBWORKDIR\")}\n  echo \"THE WORK DIRECTORY FOR THIS JOB IS ${GRID_SUBMIT_WORKDIR}\"\n  [ ! -d \"${GRID_SUBMIT_WORKDIR}\" ] && mkdir -p ${GRID_SUBMIT_WORKDIR}\n  [ ! \"${CONTINUE_WORKDIR}\" ] && cp \"${MY_JOBSCRIPT}\" \"${GRID_SUBMIT_WORKDIR}/alien_jobscript.sh\"\nfi\n\n#\n# Submitting logic (we need to submit the job when a script is provided as input and we are not in local mode)\n#\n[[ ( ! \"${LOCAL_MODE}\" ) && ( \"${SCRIPT}\" || \"${CONTINUE_WORKDIR}\" ) ]] && IS_ALIEN_JOB_SUBMITTER=ON",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "a5dd22fb0c8db567a842c3a108eead9a78004dd4ca67a43e3bd0d09459348d99": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"${IS_ALIEN_JOB_SUBMITTER}\" ]]; then\n  #  --> verify if alien is installed?\n  which alien.py &> /dev/null\n  # check exit status\n  if [[ ! \"$?\" == \"0\"  ]]; then\n    XJALIEN_LATEST=`find /cvmfs/alice.cern.ch/el7-x86_64/Modules/modulefiles/xjalienfs -type f -printf \"%f\\n\" | tail -n1`\n    banner \"Loading xjalienfs package $XJALIEN_LATEST as it is not loaded\"\n    eval \"$(/cvmfs/alice.cern.ch/bin/alienv printenv xjalienfs::\"$XJALIEN_LATEST\")\"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "e80ba88a8c6d507bc8116809cea9a79e2dc28e578f024c831edd0322203f51c9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# read preamble from job file if command line is not provided\n  # -) OutputSpec\n  if [ -z ${OUTPUTSPEC} ]; then\n    OUTPUTSPEC=$(grep \"^#JDL_OUTPUT=\" ${SCRIPT} | sed 's/#JDL_OUTPUT=//')\n    echo \"Found OutputSpec to be ${OUTPUTSPEC}\"\n    if [ -z ${OUTPUTSPEC} ]; then\n      echo \"No file output requested. Please add JDL_OUTPUT preamble to your script\"\n      echo \"Example: #JDL_OUTPUT=*.dat@disk=1,result/*.root@disk=2\"\n      exit 1\n    else\n      # check if this is a list and if all parts are properly quoted\n      OUTPUTSPEC=$(sanitize_tokens_with_quotes ${OUTPUTSPEC})\n    fi\n  fi\n  # -) ErrorOutputSpec\n  if [ -z ${ERROROUTPUTSPEC} ]; then\n    ERROROUTPUTSPEC=$(grep \"^#JDL_ERROROUTPUT=\" ${SCRIPT} | sed 's/#JDL_ERROROUTPUT=//')\n    echo \"Found ErrorOutputSpec to be ${ERROROUTPUTSPEC}\"\n    if [ -n ${ERROROUTPUTSPEC} ]; then\n      # check if this is a list and if all parts are properly quoted\n      ERROROUTPUTSPEC=$(sanitize_tokens_with_quotes ${ERROROUTPUTSPEC})\n    fi\n  fi\n  # -) Special singularity / Apptainer image",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "10c4eb6ece584923e79ba6efe49e28d486cf54fc509cc84cb75601007b4e253c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "fi\n  # -) Special singularity / Apptainer image\n  [[ ! ${IMAGESPEC} ]] && IMAGESPEC=$(grep \"^#JDL_IMAGE=\" ${SCRIPT} | sed 's/#JDL_IMAGE=//')\n  echo \"Identified Container Image as ${IMAGESPEC}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "076f41392413a4fa75526b81c1802a6259bf15ea46bea421c71e1fa6d140a7e1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  REQUIRESPEC=$(grep \"^#JDL_REQUIRE=\" ${SCRIPT} | sed 's/#JDL_REQUIRE=//')\n  if [ ! \"${REQUIRESPEC}\" ]; then\n    echo \"No Requirement setting detected; Setting to default\"\n    REQUIRESPEC=\"{member(other.GridPartitions,\"${GRIDPARTITION:-multicore_8}\")};\"\n    echo \"Requirement is ${REQUIRESPEC}\"\n  fi\n\n  echo \"Requirements JDL entry is ${REQUIRESPEC}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "74f834e9dd95a97d1fe880b972166ac4a738c1bda91f61cbc40d818c96f539be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Requirements JDL entry is ${REQUIRESPEC}\"\n\n  # -) PackageSpec\n  if [ -z ${PACKAGESPEC} ]; then\n    PACKAGESPEC=$(grep \"^#JDL_PACKAGE=\" ${SCRIPT} | sed 's/#JDL_PACKAGE=//')\n    echo \"Found PackagesSpec to be ${PACKAGESPEC}\"\n    ## sanitize package spec\n    ## \"no package\" defaults to O2sim\n    if [ -z ${PACKAGESPEC} ]; then\n      PACKAGESPEC=\"O2sim\"\n      O2SIM_LATEST=`find /cvmfs/alice.cern.ch/el7-x86_64/Modules/modulefiles/O2sim -type f -printf \"%f\\n\" | tail -n1`\n      if [ -z ${O2SIM_LATEST} ]; then\n        echo \"Cannot lookup latest version of implicit package O2sim from CVFMS\"\n        exit 1\n      else\n        PACKAGESPEC=\"${PACKAGESPEC}::${O2SIM_LATEST}\"\n        echo \"Autosetting Package to ${PACKAGESPEC}\"\n      fi\n    fi\n  fi\n  ## *) add VO_ALICE@ in case not present\n  if [ ! ${PACKAGESPEC} == VO_ALICE@* ]; then\n    PACKAGESPEC=\"VO_ALICE@\"${PACKAGESPEC}\n  fi\n  ## *) apply quotes\n  PACKAGESPEC=$(sanitize_tokens_with_quotes ${PACKAGESPEC})",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "66794796cc2eedcd10bc36d296684d79708b357751c0a8f42152fa4c9e9f961e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Establish a temporary working directory for file assembly, and proceed from there (or run locally)\n  cd \"$(dirname \"$0\")\"\n  THIS_SCRIPT=\"$PWD/$(basename \"$0\")\"\n\n  cd \"${GRID_SUBMIT_WORKDIR}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "fc0d8090a2f040f23c196719e36fafd213b1421563ef3c31b1f391dddd11fb05": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  # ---- Create JDL File ----------------\n  # TODO: Make this configurable or read from a preamble section in the jobfile\n  cat > \"${MY_JOBNAMEDATE}.jdl\" <<EOF\nExecutable = \"${MY_BINDIR}/${MY_JOBNAMEDATE}.sh\";\nArguments = \"${CONTINUE_WORKDIR:+\"-c ${CONTINUE_WORKDIR}\"} --local ${O2TAG:+--o2tag ${O2TAG}} --ttl ${JOBTTL} --label ${JOBLABEL:-label} --prodsplit ${PRODSPLIT} ${MATTERMOSTHOOK:+--mattermost ${MATTERMOSTHOOK}} ${CONTROLSERVER:+--controlserver ${CONTROLSERVER}}\";\nInputFile = \"LF:${MY_JOBWORKDIR}/alien_jobscript.sh\";\n${PRODSPLIT:+Split = ${QUOT}production:1-${PRODSPLIT}${QUOT};}\nOutputDir = \"${MY_JOBWORKDIR}/${PRODSPLIT:+#alien_counter_03i#}\";\nRequirements = member(other.GridPartitions,\"${GRIDPARTITION:-multicore_8}\");\nCPUCores = \"${CPUCORES}\";\nMemorySize = \"60GB\";\nTTL=${JOBTTL};\nEOF\n  echo \"Output = {\"${OUTPUTSPEC:-\\\"logs*.zip@disk=1\\\",\\\"AO2D.root@disk=1\\\"}\"};\" >> \"${MY_JOBNAMEDATE}.jdl\"  # add output spec",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "f34dd9dfa9bb9edf1685c63a43d27aa4c409b4bcbf6aa563d9a607ae49b6117b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Packages = {\"${PACKAGESPEC}\"};\" >> \"${MY_JOBNAMEDATE}.jdl\"   # include package specification\n  [ $ERROROUTPUTSPEC ] && echo \"OutputErrorE = {\"${ERROROUTPUTSPEC}\"};\" >> \"${MY_JOBNAMEDATE}.jdl\"   # specify error output files\n  [ $IMAGESPEC ] && echo \"DebugTag = {\\\"${IMAGESPEC}\\\"};\" >> \"${MY_JOBNAMEDATE}.jdl\"   # use a specific singularity image for the job\n  # echo \"Requirements = {\"${REQUIREMENTSSPEC}\"} >> \"${MY_JOBNAMEDATE}.jdl\"\n  [ \"$REQUIRESPEC\" ] && echo \"Requirements = ${REQUIRESPEC}\" >> \"${MY_JOBNAMEDATE}.jdl\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "d717565848265cb32f399b4db3ecc2200826431cbe37fa1d44538a6d58588c02": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# \"output_arch.zip:output/*@disk=2\",\n# \"checkpoint*.tar@disk=2\"\n\n  pok \"The local working directory is $PWD\"\n  if [ ! \"${DRYRUN}\" ]; then\n    command_file=\"alien_commands.txt\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "746899b9483b010a63dd5fc47b2956d0daa580adc1626a5f647bce1f8da12cbb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "pok \"Preparing job \\\"$MY_JOBNAMEDATE\\\"\"\n(\n  # combine all GRID interactions into one script / transaction\n  [ -f \"${command_file}\" ] && rm ${command_file}\n  echo \"user ${MY_USER}\" >> ${command_file}\n  echo \"whoami\" >> ${command_file}\n  [ ! \"${CONTINUE_WORKDIR}\" ] && echo \"rmdir ${MY_JOBWORKDIR}\" >> ${command_file}    # remove existing job directory\n  # echo \"mkdir ${MY_BINDIR}\" >> ${command_file}                      # create bindir\n  echo \"mkdir ${MY_JOBPREFIX}\" >> ${command_file}                   # create job output prefix\n  [ ! \"${CONTINUE_WORKDIR}\" ] && echo \"mkdir ${MY_JOBWORKDIR}\" >> ${command_file}\n  [ ! \"${CONTINUE_WORKDIR}\" ] && echo \"mkdir ${MY_JOBWORKDIR}/output\" >> ${command_file}\n  echo \"rm ${MY_BINDIR}/${MY_JOBNAMEDATE}.sh\" >> ${command_file}    # remove current job script\n  echo \"cp file:${PWD}/${MY_JOBNAMEDATE}.jdl alien://${MY_JOBWORKDIR}/${MY_JOBNAMEDATE}.jdl@DISK=1\" >> ${command_file}  # copy the jdl\n\n)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "c6744aa48b740550618eb1c670b12665887eb9c61c059af5ac325e0e08ffed5e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"Copy the current job script to AliEn using: cp file:${THIS_SCRIPT} alien://${MY_BINDIR}/${MY_JOBNAMEDATE}.sh@DISK=1\" >> ${command_file}  # copy the current job script to AliEn\n      [ ! \"${CONTINUE_WORKDIR}\" ] && echo \"Copy the job script file to AliEn using: cp file:${MY_JOBSCRIPT} alien://${MY_JOBWORKDIR}/alien_jobscript.sh\" >> ${command_file}\n    ) > alienlog.txt 2>&1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "32c6f2a2cb64a278af664178dac6d236e9bb4e7c300daf3bbfa39006a0c30ffb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "pok \"Submitting job \\\"${MY_JOBNAMEDATE}\\\" from $PWD\"\n(\n  echo \"submit ${MY_JOBWORKDIR}/${MY_JOBNAMEDATE}.jdl\" >> ${command_file}\n\n  # we now execute a single command to alien:\n  alien.py < ${command_file}\n) >> alienlog.txt 2>&1\n\nMY_JOBID=$( (grep 'Your new job ID is' alienlog.txt | grep -oE '[0-9]+' || true) | sort -n | tail -n1)\nif [[ $MY_JOBID ]]; then\n  pok \"Job submission successful, monitor progress at https://alimonitor.cern.ch/agent/jobs/details.jsp?pid=$MY_JOBID\"\nelse\n  per \"Job submission failed, error details below\"\n  cat alienlog.txt\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "bb0a6ad414bc02cba529ef5ca869dc8e11fc266ec87674c602d201a60b20f5f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# wait here until all ALIEN jobs have completed\n  spin[3]=\"-\"\n  spin[2]=\"/\"\n  spin[1]=\"|\"\n  spin[0]=\"\\\\\"\n  JOBSTATUS=\"I\"\n  if [ \"${WAITFORALIEN}\" ]; then\n    echo -n \"Waiting for jobs to complete ... Last status : ${spin[0]} ${JOBSTATUS}\"\n  fi\n  counter=0\n  while [ \"${WAITFORALIEN}\" ]; do\n    sleep 0.5\n    echo -ne \"\\b\\b\\b${spin[$((counter%4))]} ${JOBSTATUS}\"\n    let counter=counter+1\n    if [ ! \"${counter}\" == \"100\" ]; then\n      # ensures the spinner is visible but checks for new job status every 50 seconds\n      continue\n    fi\n    let counter=0 # reset counter",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "06240870f382acfb0e134404fcd3c4c55ad6701551dde8cdad9691080b04d8bf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# this is the global job status (a D indicates the production is complete)\nJOBSTATUS=$(alien.py ps -j ${MY_JOBID} | awk '//{print $3}') # this is the global job status\n# we can also query individual job splits\nif [ -n \"${WAITFORALIENANY}\" ]; then\n  DETAILED_STATUS_JSON=$(ALIENPY_JSON=true alien.py ps -a -m \"${MY_JOBID}\")\n  # verify if any job is already marked as DONE\n  if jq -e '.results | any(.status == \"DONE\")' <<<\"${DETAILED_STATUS_JSON}\" >/dev/null; then\n    JOBSTATUS=\"D\"\n    echo \"At least one job has completed successfully\"\n  else\n    # check if there are still jobs running or waiting; if not, also mark as done\n    # this might occur if all jobs are in a zombie state (in which case we also finish)\n    if ! jq -e '.results | any(.status == \"WAITING\" or .status == \"RUNNING\" or .status == \"SAVING\" or .status == \"INSERTING\")' \\\n        <<<\"${DETAILED_STATUS_JSON}\" >/dev/null; then\n      JOBSTATUS=\"D\"  # some job finished successfully",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "42d747fab75e1bba78cb7882ddd0514198d37c9869f78efc6540bab031e3a352": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "JOBSTATUS=\"D\"  # some job completed successfully\n              echo \"No further good job\"\n        fi\n      fi\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "1658bca6ca234d82d18fb77eebf8811b2aa4dcd62ddb29e670a0fc355482425d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ \"${JOBSTATUS}\" == \"D\" ]; then\n  echo \"${WAITFORALIEN:+At least one }job(s) completed\"\n  WAITFORALIEN=\"\"  # ensures exiting the outer while loop",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "842a2a7467ca67482577fb9d33e5c21dcef362c4731c32279a2e2abed8ef07c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ \"${FETCHOUTPUT}\" ]; then\n    SUBJOBIDS=()\n    SUBJOBSTATUSES=()\n    echo \"Retrieving subjob information\"\n    while [ \"${#SUBJOBIDS[@]}\" -eq \"0\" ]; do\n        QUERYRESULT=$(ALIENPY_JSON=true alien.py ps -a -m ${MY_JOBID})\n        SUBJOBIDS=($(echo ${QUERYRESULT} | jq -r '.results[].id' | tr '\\n' ' '))\n        SUBJOBSTATUSES=($(echo ${QUERYRESULT} | jq -r '.results[].status' | tr '\\n' ' '))\n        # echo \"LENGTH SUBJOBS ${#SUBJOBIDS[@]}\"\n        sleep 1\n    done\n    # TODO: implement parallel copying\n    echo \"Retrieving results for ${PRODSPLIT} sub-jobs\"\n    for splitcounter in $(seq 1 ${PRODSPLIT}); do\n        let jobindex=splitcounter-1\n        THIS_STATUS=${SUBJOBSTATUSES[jobindex]}\n        THIS_JOB=${SUBJOBIDS[jobindex]}\n        echo \"Processing job ${THIS_JOB}\"\n        if [ \"${THIS_STATUS}\" == \"DONE\" ]; then\n            SPLITOUTDIR=$(printf \"%03d\" ${splitcounter})\n    done",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "3dc195ea54a58fc85831cd3cbff22d1f2f4f222d150def8454991a74657710e4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "SPLITOUTDIR=$(printf \"%03d\" ${splitcounter})\nif [ ! -f ${SPLITOUTDIR} ]; then\n  mkdir ${SPLITOUTDIR}\n  echo \"Fetching result files for subjob ${splitcounter} into ${PWD}\"\n  CPCMD=\"alien.py cp ${MY_JOBWORKDIR}/${SPLITOUTDIR}/* file:./${SPLITOUTDIR}\"\n  eval \"${CPCMD}\" 2> /dev/null\nelse\n  echo \"Not fetching files for subjob ${splitcounter} since job code is ${THIS_STATUS}\"\nfi\ndone\nfi\nfi\ndone\n# get the job data products locally if requested",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "85a84f339facf8dd5546288235642caa8656982751c9f7c92dceedfcfd18f97a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "exit 0\nfi  # <---- end if ALIEN_JOB_SUBMITTER\n\n####################################################################################################\n# This section runs on the worker node or locally\n####################################################################################################\nif [[ ${SINGULARITY} ]]; then\n  # if Singularity is required, we rerun this script inside a container\n  # this is similar to the GRID mode, so we set JALIEN_TOKEN_CERT\n  set -x\n  cp $0 ${GRID_SUBMIT_WORKDIR}\n\n  # determine the hardware architecture (ARM or X86)\n  ARCH=$(uname -i)\n  if [ \"$ARCH\" == \"aarch64\" ] || [ \"$ARCH\" == \"x86_64\" ]; then\n    echo \"Detected hardware architecture : $ARCH\"\n  else\n    echo \"Invalid architecture ${ARCH} detected. Exiting\"\n    exit 1\n  fi\n  if [ \"$ARCH\" == \"aarch64\" ]; then\n    ISAARCH64=\"1\"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "b2a60ddb0e4c17eb0ffab85294497b510302cae51df304077081347c4b29abbe": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CONTAINER=\"/cvmfs/alice.cern.ch/containers/fs/apptainer/compat_el9-${ARCH}\"\n  APPTAINER_EXEC=\"/cvmfs/alice.cern.ch/containers/bin/apptainer/${ARCH}/current/bin/apptainer\"\n\n  # we can actually analyze the local JDL to determine the package and configure it for the container\n  ${APPTAINER_EXEC} exec -C -B /cvmfs:/cvmfs,${GRID_SUBMIT_WORKDIR}:/workdir --pwd /workdir -C ${CONTAINER} /workdir/grid_submit.sh \\\n  ${CONTINUE_WORKDIR:+\"-c ${CONTINUE_WORKDIR}\"} --local ${O2TAG:+--o2tag ${O2TAG}} --ttl ${JOBTTL} --label ${JOBLABEL:-label} ${MATTERMOSTHOOK:+--mattermost ${MATTERMOSTHOOK}} ${CONTROLSERVER:+--controlserver ${CONTROLSERVER}}\n  set +x\n  exit $?\nfi\n\nif [[ \"${ONGRID}\" == 0 ]]; then\n  banner \"Executing job in directory ${GRID_SUBMIT_WORKDIR}\"\n  cd \"${GRID_SUBMIT_WORKDIR}\" 2> /dev/null\nfi\n\nexec &> >(tee -a alien_log_${ALIEN_PROC_ID:-0}.txt)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "54c1d5d7d3d0f44648795a34a289c2e149255d3cbf5681802354a40a9731937a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "exec &> >(tee -a alien_log_${ALIEN_PROC_ID:-0}.txt)\n\n# ----------- START JOB PREAMBLE  ----------------------------- \ncheck_env | grep \"SINGULARITY\" &> /dev/null\nif [ \"$?\" = \"0\" ]; then\n  echo \"Detected execution within a Singularity container\"\nfi\n\ndisplay_banner \"Environment\"\nprint_env\n\ndisplay_banner \"Limits\"\nshow_ulimit -a\n\ndisplay_banner \"Operating System\"\ncat /etc/os-release || true\ncat /etc/redhat-release || true",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "937ea72d2d191ce4da98274f7a5e897882908287249207b6e6c0e48f8271dbc9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "BANNER \"DETECTING OPERATING SYSTEM\"\ncat /etc/os-release || true\ncat /etc/redhat-release || true\n\n# loading the requested package list (this should now be handled by JDL)\n#if [ -z \"$O2_ROOT\" ]; then\n#  O2_PACKAGE_LATEST=`find /cvmfs/alice.cern.ch/el7-x86_64/Modules/modulefiles/O2 -name \"*nightl*\" -type f -printf \"%f\\n\" | tail -n1`\n#  banner \"LOADING O2 PACKAGE $O2_PACKAGE_LATEST\"\n#  [ \"${O2TAG}\" ] && O2_PACKAGE_LATEST=${O2TAG}\n#  #eval \"$(/cvmfs/alice.cern.ch/bin/alienv printenv O2::\"$O2_PACKAGE_LATEST\")\"\n#fi\n#if [ -z \"$O2DPG_ROOT\" ]; then\n#  O2DPG_LATEST=`find /cvmfs/alice.cern.ch/el7-x86_64/Modules/modulefiles/O2DPG -type f -printf \"%f\\n\" | tail -n1`\n#  banner \"LOADING O2DPG PACKAGE $O2DPG_LATEST\"\n#  #eval \"$(/cvmfs/alice.cern.ch/bin/alienv printenv O2DPG::\"$O2DPG_LATEST\")\"\n#fi\n\nBANNER \"EXECUTING WORKFLOW\"\n\n# gathering some general information\necho \"CONTINUE_WORKDIR ${CONTINUE_WORKDIR}\"\n\ncat /proc/cpuinfo > alien_cpuinfo.log \ncat /proc/meminfo > alien_meminfo.log",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "084b31d875e6578b0ac6104f800769bcf0272da35b0d5df764931c3050dbf616": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    cat /proc/cpuinfo > alien_cpuinfo.log \ncat /proc/meminfo > alien_meminfo.log\n\n# ----------- PREPARE SOME ALIEN ENV -- useful for the job -----------\n\nif [ \"${ONGRID}\" = \"1\" ]; then\n  notify_mattermost \"STARTING GRID ${ALIEN_PROC_ID} CHECK $(which alien.py)\"\n  alien.py ps --jdl ${ALIEN_PROC_ID} > this_jdl.jdl\n  ALIEN_JOB_OUTPUTDIR=$(grep \"OutputDir\" this_jdl.jdl | awk '{print $3}' | sed 's/\"//g' | sed 's/;//')\n  ALIEN_DRIVER_SCRIPT=$0\n\n  # determine subjob id from the structure of the outputfolder\n  # can use basename tool since this is like a path\n  SUBJOBID=$(echo $(basename \"${ALIEN_JOB_OUTPUTDIR}\") | sed 's/^0*//')  # Remove leading zeros if present\n\n  # expose some information about prodsplit and subjob id to the jobs\n  # so that they can adjust/contextualise the payload\n  export ALIEN_O2DPG_GRIDSUBMIT_PRODSPLIT=${PRODSPLIT}\n  export ALIEN_O2DPG_GRIDSUBMIT_SUBJOBID=${SUBJOBID}\n\n  #notify_mattermost \"ALIEN JOB OUTDIR IS ${ALIEN_JOB_OUTPUTDIR}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "3d2acb37a50d1018ac4543d5e7e628b2370c8b6b0730679142855b9923327094": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#notify_mattermost \"ALIEN JOB OUTDIR IS ${ALIEN_JOB_OUTPUTDIR}\" \n\nexport ALIEN_JOB_OUTPUTDIR\nexport ALIEN_DRIVER_SCRIPT\nexport O2_PACKAGE_LATEST\n\n# ----------- RETRIEVE PREVIOUS CHECKPOINT IF CONTINUING THE JOB ----\nif [ \"${CONTINUE_WORKDIR}\" ]; then\n  alien.py cp alien://${ALIEN_JOB_OUTPUTDIR}/checkpoint.tar file:/.\n  if [ -f checkpoint.tar ]; then\n    tar -xf checkpoint.tar\n    rm checkpoint.tar\n  else\n    notify_mattermost \"Could not download checkpoint; Quitting\"\n    exit 0\n  fi\nfi\n\n# export JOBUTILS_MONITORCPU=ON\n# export JOBUTILS_WRAPPER_SLEEP=5\n# export JOBUTILS_JOB_KILLINACTIVE=180 # kill inactive jobs after 3 minutes --> will be the task of pipeline runner? (or make it optional)\n# export JOBUTILS_MONITORMEM=ON \n\n# ----------- RUN THE ACTUAL JOB  ------------------------------------ \n# make the job script executable and run it\nchmod +x ./alien_jobscript.sh\n./alien_jobscript.sh\n# capture the return code\nRC=$?",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "9c756fa28311505ddf8d7ac585011a2569779802b6843591baed0d7174150f9e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# To ensure we capture the logs (temporarily disabled due to occasional hanging during copying)\n#cp alien_log_${ALIEN_PROC_ID:-0}.txt logtmp_${ALIEN_PROC_ID:-0}.txt\n#[ \"${ALIEN_JOB_OUTPUTDIR}\" ] && upload_to_Alien logtmp_${ALIEN_PROC_ID:-0}.txt ${ALIEN_JOB_OUTPUTDIR}/\n\necho \"Job completed ... exiting with ${RC}\"\n\n# Necessary to exit for the ALIEN JOB HANDLER!\nexit ${RC}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/grid_submit.sh"
        }
    ],
    "f9946605b8e575a09054113ab737ca01c6f6c8d0a5b4ea3d5acbb451724eb56b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# A script designed to fetch the latest masterjob based on an AliEn jobtype\n\nMY_JOBTYPE=$1\nif [ -z \"${MY_JOBTYPE}\" ]; then\n  echo \"Please provide a job type as the first argument\"\n  exit 1\nfi\n\n# Utilize curl to retrieve the job table for the specified jobtype\nURL=\"https://alimonitor.cern.ch/prod/jobs.jsp?t=${MY_JOBTYPE}&res_path=csv\"\necho \"Querying ${URL}\"\nlatestjob=$(curl --cert ~/.globus/usercert.pem --key ~/.globus/userkey.pem -k -s --no-keepalive -H \"Connection: close\" ${URL} 2> /dev/null | grep -v \"Run\" | head -n 1)\n\n# The output format is as follows:\n# PID;Run number;Packages;Output directory;Total jobs;Done jobs;Running jobs;Waiting jobs;Error jobs;Other jobs;Wall time;Saving time;Output size\n# Split the string using \";\"\nIFS=';' read -r -a tokens <<< \"$latestjob\"\nmasterid=${tokens[0]}\nif [ -z \"${masterid}\" ]; then\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/querymasterjob.sh"
        }
    ],
    "661fd1b57147ebd0ea9ee0ccbefd771b10305a65770efc4df62214479cc31813": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "MASTERID=$masterid\nTOTALJOBS=$tokens[4]\nDONEJOBS=$tokens[5]\nRUNNINGJOBS=$tokens[6]\nERROREDJOBS=$tokens[8]\necho \"MasterID $masterid\"\necho \"TotalJobs $TOTALJOBS\"\necho \"DoneJobs $DONEJOBS\"\necho \"RunningJobs $DONEJOBS\"\necho \"ErroredJobs $ERROREDJOBS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/GRID/utils/querymasterjob.sh"
        }
    ],
    "a9659b4fbedd1c7d6b3c15409236fab46f070f710dba1bcb45f2737f6f0ef75a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nif [[ -z ${O2DPG_ROOT+x} ]] ; then\n    echo \"O2DPG is not loaded, indicating potential absence of other necessary packages in this environment.\"\n    exit 1\nfi\n\nDATE=$(date '+%Y-%m-%d_%H-%M')\nOUTPUT=rel_val_${DATE}\nLOGFILE=${OUTPUT}/\"rel_val.log\"\n\nfunction wait_for_jobs()\n{\n    local n_parallel=${1:-5}\n    local sleep_time=${2:-2}\n    while true\n    do\n        n_packing=$(jobs | grep \"include-patterns\" | grep \"Running\" | wc -l )\n        if (( $n_packing >= ${n_parallel} ))\n        then\n            sleep $sleep_time\n        else\n            break\n        fi\n    done\n}\n\nrel_val_qc()\n{\n    local file1=${1}\n    local file2=${2}\n    local label1=${3}\n    local label2=${4}\n    local output=${OUTPUT}/QC\n    local output_all=${output}/all\n    local output_all_bad=${output_all}_BAD\n    local output_det=\"${output}/det\"\n    rm -r ${output} 2>/dev/null",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/run/run_data_rel_val.sh"
        }
    ],
    "878610d410c21474e2943a9395b0e52caf167bee1f2e8402a3096dfd6e32f46b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Full RelVal to ${output_all}\" | tee -a ${LOGFILE}\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py rel-val -i ${file1} -j ${file2} -o ${output_all} --labels ${label1} ${label2} 2>&1 | tee -a ${LOGFILE}\n    echo \"Process ${output_all} to identify BAD elements and save to ${output_all_bad}\" | tee -a ${LOGFILE}\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py inspect --path ${output_all} --output ${output_all_bad} --interpretations BAD >> ${LOGFILE} 2>&1\n    echo \"Perform RelVal for each detector...\" | tee -a ${LOGFILE}\n    for det in CPV EMC FDD FT0 FV0 GLO ITS MCH MFT MID PHS TOF TPC TRD ZDC ; do\n        echo \"Specifically for ${det}, output to ${output_det}_${det}, using 'int_${det}_' as the include pattern; this might need adjustment based on the internal file structure of the QC ROOT file\" | tee -a ${LOGFILE}\n        ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py inspect --path ${output_all} --output ${output_det}_${det} --include-patterns \"int_${det}_\" >> ${LOGFILE} 2>&1 &",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/run/run_data_rel_val.sh"
        }
    ],
    "f539aaa12fb78b9850adf9ceaa522e9217114b8614db5ff20413467c1776ff0d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "wait_for_jobs 3\ndone\nwait_for_jobs 1\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/run/run_data_rel_val.sh"
        }
    ],
    "5512d45a41942e5ba7b9ae36ee7b5a71ccaf04e0a7b010ad2ecaa28c2f471e71": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    rel_val_aod()\n{\n    local file1=${1}\n    local file2=${2}\n    local label1=${3}\n    local label2=${4}\n    local output=${OUTPUT}/AOD\n    local output_all=${output}/all\n    local output_all_bad=${output_all}_BAD\n    rm -r ${output} 2>/dev/null\n\n    echo \"Performing Full RelVal to ${output_all}\" | tee -a ${LOGFILE}\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py rel-val -i ${file1} -j ${file2} -o ${output_all} --labels ${label1} ${label2} 2>&1 | tee -a ${LOGFILE}\n    echo \"Extracting BAD entries from ${output_all} and saving them to ${output_all_bad}\" | tee -a ${LOGFILE}\n    ${O2DPG_ROOT}/RelVal/o2dpg_release_validation.py inspect --path ${output_all} --output ${output_all_bad} --interpretations BAD 2>&1 | tee -a ${LOGFILE}\n}\n\nprint_help()\n{\n    echo \"Usage:\"\n    echo \"run_data_rel_val.sh [--qc <QCfile1> <QCfile2>] [--aod <AODfile1> <AODfile2>] [--labels <label1> <label2>]\"\n}\n\n# Files and labels\nAOD1=\nAOD2=\nQC1=\nQC2=\nLABEL1=\"label1\"\nLABEL2=\"label2\"\n\nwhile [[ $# -gt 0 ]]; do\n    key=\"$1\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/run/run_data_rel_val.sh"
        }
    ],
    "7104a31bc974791be36a0e5405c71aefec9770b3b98df70dbee3357c9b94e985": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    while [[ $# -gt 0 ]]; do\n    key=\"$1\"\n\n    case $key in\n        --qc)\n            shift\n            QC1=${1}\n            shift\n            QC2=${1}\n            shift\n            ;;\n        --aod)\n            shift\n            AOD1=${1}\n            shift\n            AOD2=${1}\n            shift\n            ;;\n        --labels)\n            shift\n            LABEL1=${1}\n            shift\n            LABEL2=${1}\n            shift\n            ;;\n        --help|-h)\n            print_help\n            exit 0\n            ;;\n        *)\n            echo \"ERROR: Unknown argument ${1}\"\n            print_help\n            exit 1\n            ;;\n    esac\ndone\n\nQC_RET=0\nAOD_RET=0\n\nmkdir ${OUTPUT} 2>/dev/null\necho \"Execute the validation and save results in ${OUTPUT}\" | tee -a ${LOGFILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/run/run_data_rel_val.sh"
        }
    ],
    "e588b2ec5ac13918ec1f04ea9c5a44c742f54446ecccc893b4809e9f42cbb6d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mkdir ${OUTPUT} 2>/dev/null\necho \"Starting RelVal and output to ${OUTPUT}\" | tee -a ${LOGFILE}\n\nif [[ \"${QC1}\" != \"\" && \"${QC2}\" != \"\" ]]; then\n    rel_val_qc ${QC1} ${QC2} ${LABEL1} ${LABEL2}\n    QC_RET=${?}\nelse\n    echo \"No QC RelVal\" | tee -a ${LOGFILE}\nfi\n\nif [[ \"${AOD1}\" != \"\" && \"${AOD2}\" != \"\" ]]; then\n    rel_val_aod ${AOD1} ${AOD2} ${LABEL1} ${LABEL2}\n    AOD_RET=${?}\nelse\n    echo \"No AOD RelVal\" | tee -a ${LOGFILE}\nfi\n\nRET=$((QC_RET + AOD_RET))\necho \"Exiting with ${RET}\" | tee -a ${LOGFILE}\nexit ${RET}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/RelVal/run/run_data_rel_val.sh"
        }
    ],
    "db7d908e755c619b62bfe5b2ec1395b4d72f7e2962a9053982e4466d570ed7d3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# This script carries out an analysis task (specified as the first argument)\n# within a directory (produced) that contains a merged AO2D.root file and individual timeframe AODs in separate tf1...n folders.\n# The analysis is conducted on both the merged AOD and the original individual timeframes.\n# The tasks are executed using the graph pipeline mechanism.\n\n# Optionally, one can integrate the analysis graph workflows into the simulation workflow\n# (by utilizing the \"needs\" variable and performing a \"merge\" operation with the original workflow).\n\n# These tasks can be specified externally, such as Efficiency, EventTrackQA, MCHistograms, Validation, PIDTOF, PIDTPC, and WeakDecayTutorial.\n\n# Determine the number of timeframes\nNTF=$(find ./ -name \"tf*\" -type d | wc | awk '//{print $1}')\n#\n\n# Execute the analysis on individual AODs\n# $O2DPG_ROOT/MC/bin/o2_dpg_workflow_runner.py -f workflow_ana.json -tt ${testanalysis}_.*$ --rerun-from ${testanalysis}_.*$\n# RC1=$?\n# echo \"EXIT 1: $RC1\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/analysis_test.sh"
        }
    ],
    "36e3a93b232654b46034760bf2f64312fddeba3ab8c9c02b9d641a9de76dfc12": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    include_disabled=\ntestanalysis=\naod=\nadd_common_args=\n\nif [[ \"${#}\" == \"1\" ]]; then\n    # maintain backward compatibility\n    aod=$(find . -maxdepth 1 -type f -name \"AO2D.root\")\n    testanalysis=${1}\nelse\n    while [[ $# -gt 0 ]]; do\n        key=\"$1\"\n\n        case $key in\n            --include-disabled)\n                include_disabled=1\n                shift\n                ;;\n            --aod)\n                aod=${2}\n                shift\n                shift\n                ;;\n            --analysis)\n                testanalysis=${2}\n                shift\n                shift\n                ;;\n            *)\n                echo \"ERROR: Unknown argument ${1}\"\n                exit 1\n                ;;\n        esac\n    done\nfi\n\n# essential checks\n[[ \"${testanalysis}\" == \"\" ]] && { echo \"ERROR: No analysis specified to be run\" ; exit 1 ; }\n[[ \"${aod}\" == \"\" ]] && { echo \"ERROR: No AOD found to be analysed\" ; exit 1 ; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/analysis_test.sh"
        }
    ],
    "9572cf7feceb37f40cafa89da1f011157f778ee3168d6122d896b161becdf456": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verify if enabled\nenabled=$($O2DPG_ROOT/MC/analysis_testing/o2dpg_analysis_test_config.py check -t ${testanalysis} --status)\n[[ \"${enabled}\" == \"UNKNOWN\" ]] && { echo \"ERROR: Analysis ${testanalysis} is not recognized\" ; exit 1 ; }\n[[ \"${enabled}\" == \"DISABLED\" && \"${include_disabled}\" == \"\" ]] && { echo \"WARNING: Analysis ${testanalysis} is turned off\" ; exit 0 ; }\n\nmkdir Analysis 2>/dev/null\ninclude_disabled=${include_disabled:+--include-disabled}\nworkflow_path=\"Analysis/workflow_analysis_test_${testanalysis}.json\"\nrm ${workflow_path} 2>/dev/null\n$O2DPG_ROOT/MC/analysis_testing/o2dpg_analysis_test_workflow.py --is-mc --split-analyses -f ${aod} -o ${workflow_path} --only-analyses ${testanalysis} ${include_disabled}\n[[ ! -f \"${workflow_path}\" ]] && { echo \"Could not create workflow for analysis ${testanalysis}\" ; exit 1 ; }\n$O2DPG_ROOT/MC/bin/o2_dpg_workflow_runner.py -f ${workflow_path} -tt Analysis_${testanalysis}$ --rerun-from Analysis_${testanalysis}$",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/analysis_test.sh"
        }
    ],
    "90d0c0320b1a63f54205787d57e441c81d8bd4d77a329c13431dbe68c12c3061": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "RC=$?\necho \"EXIT status: $RC\"\nexit ${RC}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/analysis_testing/analysis_test.sh"
        }
    ],
    "8142519249bacbb5be578b52051a99225b0b247f42b39f0d89f1446eb02d6491": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD for a simple pp min bias production under test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\nif [ -z \"${O2DPG_ROOT}\" ]; then echo \"Error: This needs O2DPG loaded\" && exit 1; fi\nif [ -z \"${O2_ROOT}\" ]; then echo \"Error: This needs O2 loaded\" && exit 1; fi\n\n# ----------- CONFIGURE --------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-PbPb}\nENERGY=${ENERGY:-5360}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLF_Strangeness_PbPb5360_injection.ini\"}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_StrangenessInjected_PbPb.sh"
        }
    ],
    "6ada4b4b8ec701a5ed0496ab97cff374b0660a3a33a66c57252c8007a7da542a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"NWORKERS = $NWORKERS\"\n\n# construct the simulation workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external \\\n        -j ${NWORKERS} \\\n        -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} \\\n        -confKey \"Diamond.width[2]=6.\" \\\n        ${SEED} \\\n        -e ${SIMENGINE} \\\n        -ini $CFGINIFILE\n\n# execute the workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_StrangenessInjected_PbPb.sh"
        }
    ],
    "b1cbd3a105dbc4c9f9a515b953a134866ce924ef9ed3b423ca0987b8d3c2d183": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Introduce Omega signal into the background using a pythia8 box gun generator\n\n# ensure that O2DPG and O2 are properly loaded\n\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nCPU_LIMIT=${CPU_LIMIT:-8}\nTARGETTASK=${TARGETTASK:-aod}\n\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\n\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_OmegaInjected.sh"
        }
    ],
    "766c0f391d23f373af5424301155f41cbb812d8585933a32e01cc2cfa9e896e0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -e ${SIMENGINE} ${SEED} -eCM 13600 -col pp -colBkg pp -gen external -genBkg pythia8 -procBkg inel -j ${NWORKERS} -ns ${NSIGEVENTS} -nb ${NBKGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -mod \"--skipModules ZDC\" \\\n        --embedding -ini $O2DPG_ROOT/MC/config/PWGLF/ini/GeneratorLFOmegaEmb.ini \n\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ${TARGETTASK} --cpu-limit ${CPU_LIMIT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_OmegaInjected.sh"
        }
    ],
    "8818c586b3f60367fc332c1ab413f492a274c4c94ce9c3810a9c234487f843a3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD production in a simple pp minimum bias scenario,\n# aimed at test beam conditions.\n\n# Ensure that O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------- CONFIGURE --------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-900}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFDeTrHe.ini\"}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_DeTrHeInjected.sh"
        }
    ],
    "021d169a880acb9990b0a824c41dce873c20f4d82b7cf0973db0bfd99ff33f29": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"NWORKERS = $NWORKERS\"\n\n# set up the simulation workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external \\\n        -j ${NWORKERS} \\\n        -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} \\\n        -confKey \"Diamond.width[2]=6.\" \\\n        ${SEED} \\\n        -procBkg inel -colBkg $SYSTEM --embedding -nb ${NBKGEVENTS} -genBkg pythia8 \\\n        -e ${SIMENGINE} \\\n        -ini $CFGINIFILE\n\n# execute the workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_DeTrHeInjected.sh"
        }
    ],
    "435c8d5e7a3d091e8d34ae9aa5d8cc70e1441a281e8797023a757b19ceef7f11": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# \n# An example workflow for MC->RECO->AOD in a simple pp minimum bias production, aimed at test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant3}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-PbPb}\nENERGY=${ENERGY:-5520}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HypertritonInjected.sh"
        }
    ],
    "6cc232e0d0b8123f50adb5602d27914caa5c53fabd72155c82b4071476251fa8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# construct workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.1;Diamond.width[1]=0.1;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFHypertriton${SYSTEM}.ini\n\n# execute workflow\n# permit higher timeframe concurrency with --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HypertritonInjected.sh"
        }
    ],
    "a68fbd46915851dc2b30fa6778b6f07062060c95dd605adbbb22724a28414543": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD production of a simple pp minimum bias event,\n# optimized for test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\n[ -z \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ -z \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# -------------- BEGIN ACTUAL JOB  ------------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ -n ${SPLITID} ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_Coalescence_pp.sh"
        }
    ],
    "36f57796cfa9a2020d060ea9d48acd404a48b93dafaba653cc9a7b4bf4b720d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.005;Diamond.width[1]=0.005;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGLF/ini/GeneratorLF_Coalescence.ini\n\n# run workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_Coalescence_pp.sh"
        }
    ],
    "c7bc8d359b0be1953f13cc05b42adf46c43b136fc5e5853553f36d56dfa14027": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n  \n# generate workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.005;Diamond.width[1]=0.005;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGLF/ini/GeneratorLF_highpt_strangeness.ini",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_GeneratorLF_highpt_strangeness.sh"
        }
    ],
    "8f6500363cfe8e0be14ddbd7f983435e9ae755732b80afafeb3cc729ef57f368": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_GeneratorLF_highpt_strangeness.sh"
        }
    ],
    "36f8061be410644eceaf955b1e92d4ed153bf33302aea431d083ee3bf5b7211f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# \n# An example workflow for MC->RECO->AOD in a simple pp min bias production, aimed at test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HyperInjectedGap.sh"
        }
    ],
    "05cac0bf15659e31567770d567ce1fca40d7baafe9844cd5473fa5966a62aecd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.1;Diamond.width[1]=0.1;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFHyper${SYSTEM}Gap.ini\n\n# run workflow\n# permit higher parallelism for timeframe processing using --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HyperInjectedGap.sh"
        }
    ],
    "245949fbc5c5d031416d1a99123cb92257e9daf6c9d874e4b3c650080eda9d1f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# A standard procedure for MC->RECO->AOD in a basic pp min bias scenario, designed for test beam settings.\n# The script requires at least one argument, which is the name of the CFGINIFILE to be utilized.\n# Example usage: ./run_DeTrHeInjected.sh ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFDeTrHe_pp.ini",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/runLFInjector.sh"
        }
    ],
    "3b24354228887391e35b0245cb898c2cd501c0b99233fca0dbd1c47bd4511fd2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The following variables can be externally configured:\n# - NWORKERS: the number of workers to employ (default is 8)\n# - MODULES: the modules to run (default is \"--skipModules ZDC\")\n# - SIMENGINE: the simulation engine to use (default is TGeant4)\n# - NSIGEVENTS: the number of signal events (default is 1)\n# - NBKGEVENTS: the number of background events (default is 1)\n# - NTIMEFRAMES: the number of time frames (default is 1)\n# - INTRATE: the interaction rate (default is 50000)\n# - SYSTEM: the collision system (default is pp)\n# - ENERGY: the collision energy (default is 900)\n# - CFGINIFILE: the path to the ini file (example: ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFDeTrHe_pp.ini)\n# - SPLITID: the split ID (default is \"\")\n# - O2_SIM_WORKFLOW: the path to the workflow script (default is ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py)\n# - O2_SIM_WORKFLOW_RUNNER: the path to the workflow runner script (default is ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/runLFInjector.sh"
        }
    ],
    "99698c4eb69d497b180367df85429c242c48a272eeb5f13d787baae0f25483e7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# If we lack at least one argument, we display the usage\n# and terminate the script\nif [ $# -lt 1 ]; then\n    echo \"Usage: $0 <CFGINIFILE>\"\n    exit 1\nfi\necho \"CFGINIFILE = $1\"\n\n# ----------- LOAD O2DPG --------------------------------------\n# Ensure that O2DPG and O2 are properly loaded\nif [ -z \"${O2DPG_ROOT}\" ]; then\n    echo \"Error: O2DPG must be loaded\"\n    exit 1\nfi\nif [ -z \"${O2_ROOT}\" ]; then\n    echo \"Error: O2 must be loaded\"\n    exit 1\nfi\n\n# ----------- CONFIGURE ---------------------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -------------------------------\nNWORKERS=${NWORKERS:-8}\nMODULES=${MODULES:---skipModules ZDC}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-900}\nCFGINIFILE=$1\nif [ ! -z \"${SPLITID}\" ]; then\n    SEED=\"-seed ${SPLITID}\"\nelse\n    SEED=\"\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/runLFInjector.sh"
        }
    ],
    "d80b5fbee874d04d67c15b057a18e1d5f25590ae4f44bffe76ca50a31073641c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "=document=\n    echo \"NWORKERS = $NWORKERS\"\necho \"MODULES = $MODULES\"\necho \"SIMENGINE = $SIMENGINE\"\necho \"NSIGEVENTS = $NSIGEVENTS\"\necho \"NBKGEVENTS = $NBKGEVENTS\"\necho \"NTIMEFRAMES = $NTIMEFRAMES\"\necho \"INTRATE = $INTRATE\"\necho \"SYSTEM = $SYSTEM\"\necho \"ENERGY = $ENERGY\"\necho \"CFGINIFILE = $CFGINIFILE\"\n\n# construct the simulation workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"${MODULES}\" \\\n        -ini ${CFGINIFILE}\n\n# execute the workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/runLFInjector.sh"
        }
    ],
    "4bdc4a6db5a2faac37a3c2c453da4460964a30ee09e04e88adb8f314b7b80838": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow from MC to RECO to AOD for a basic pp minimum bias\n# production, aimed at test beam conditions.\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1\n\n# ----------- CONFIGURE --------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-10}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-900}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFStrangenessTriggered_900gev.ini\"}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_StrangenessTriggered_pp900gev.sh"
        }
    ],
    "2182c2e39822af27c2d1c88fbb3eb7573457f769f6cfeb93fb3f2c52d1e40c7d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"NWORKERS = $NWORKERS\"\n\n# generate simulation workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external \\\n        -j ${NWORKERS} \\\n        -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} \\\n        -confKey \"Diamond.width[2]=6.\" \\\n        ${SEED} \\\n        -e ${SIMENGINE} \\\n        -ini $CFGINIFILE\n\n# execute workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_StrangenessTriggered_pp900gev.sh"
        }
    ],
    "1810a239eb3f0b774ea48ac0c2fd54f946caae95a946f82c8f2c4a9f0177f3a1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\n# create the workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.005;Diamond.width[1]=0.005;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGLF/ini/GeneratorLF_antid_and_highpt.ini",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_GeneratorLF_antid_and_highpt.sh"
        }
    ],
    "56d3ae29b8f4ba731cf108195ec5ece9fb661b0db43c6d9770a5d9b2c7dd1392": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute the Workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_GeneratorLF_antid_and_highpt.sh"
        }
    ],
    "861788aef33b93cba3321e7f5391894b2f65bb96417912d90b626327ba8effde": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD processing for a simple pp minimum bias\n# production, optimized for test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1\n\n\n# ------------------- START OF THE ACTUAL JOB -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant3}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_NucleiFwdInjectedGap.sh"
        }
    ],
    "cd72675213c24077ebcf127a5fe22bc373f93f27f68af8363f923bea35df2601": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.1;Diamond.width[1]=0.1;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFNucleiFwd${SYSTEM}Gap.ini\n\n# execute workflow\n# permit higher parallelism for timeframes using --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_NucleiFwdInjectedGap.sh"
        }
    ],
    "9d7f7c2e631dbd37757d75eb674f9beea71beb9a3bf13424c5ab9c4c10d4a122": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Example workflow for MC->RECO->AOD production for simple pp min bias events,\n# optimized for test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------------- CONFIGURATION ------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------------- START OF ACTUAL JOB ----------------------\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-PbPb}\nENERGY=${ENERGY:-5360}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLF_SyntheFlowXi.ini\"}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_SyntheticFlowXi_PbPb.sh"
        }
    ],
    "8864f66120756be8ff7a97d8bc1fa9eccd06148a85e8c3515639faeeffc01b77": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"NWORKERS = $NWORKERS\"\n\n# construct simulation workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external \\\n        -j ${NWORKERS} \\\n        -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} \\\n        -confKey \"Diamond.width[2]=6.\" \\\n        ${SEED} \\\n        -e ${SIMENGINE} \\\n        -ini $CFGINIFILE\n\n# execute workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_SyntheticFlowXi_PbPb.sh"
        }
    ],
    "80045b3531c4ea261b08efbfa933b94cd62e7d05a7d0f7c3bcc9a264d3d10fa8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow from Monte Carlo (MC) to RECONSTRUCTION (RECO) to AOD for a basic pp minimum bias\n# production, tailored for test beam conditions.\n\n# Ensure that O2DPG and O2 are properly loaded.\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------- CONFIGURE --------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-PbPb}\nENERGY=${ENERGY:-5360}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLF_SyntheFlow.ini\"}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_SyntheticFlow_PbPb.sh"
        }
    ],
    "eceb6ab41222e1bd30f21336b0a67d30eb612ba9a3b13300c3b7445830dad968": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"NWORKERS = $NWORKERS\"\n\n# initialize the simulation workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external \\\n        -j ${NWORKERS} \\\n        -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} \\\n        -confKey \"Diamond.width[2]=6.\" \\\n        ${SEED} \\\n        -e ${SIMENGINE} \\\n        -ini $CFGINIFILE\n\n# execute the workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_SyntheticFlow_PbPb.sh"
        }
    ],
    "e87d87c550e73bb8f7cd4e44f9521798a9f73d36532fc12cd55c99e57ee0d249": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample workflow from MC to RECO to AOD for a basic pp minimum bias\n# production, intended for test beam scenarios.\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n# ----------- CONFIGURE --------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFStrangeness.ini\"}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_StrangenessInjected.sh"
        }
    ],
    "c48a42132e7a6648ec33992706cd087a0d9ffcf6cc9567a3e7db3fbd8cb9811f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"NWORKERS = $NWORKERS\"\n\n# create simulation workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external \\\n        -j ${NWORKERS} \\\n        -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} \\\n        -confKey \"Diamond.width[2]=6.\" \\\n        ${SEED} \\\n        -procBkg \"inel\" -colBkg $SYSTEM --embedding -nb ${NBKGEVENTS} -genBkg pythia8 \\\n        -e ${SIMENGINE} \\\n        -ini $CFGINIFILE\n\n# run simulation workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_StrangenessInjected.sh"
        }
    ],
    "cd869dfaa91fa7c4c4f90d1ac2d315b1716bb2f7326b74b18f128ddd1bd1a157": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD production for a simple pp min bias event, aimed at test beam conditions.\n\n# Ensure O2DPG and O2 are loaded.\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1\n\n# ----------- CONFIGURE --------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-2}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-PbPb}\nENERGY=${ENERGY:-5360}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFDeTrHe.ini\"}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_DeTrHeInjected_PbPb.sh"
        }
    ],
    "eeffa426e41c5985d46ba65f3f29541798fa621bf4f4c6954ddf07fe0b3386ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"NWORKERS = $NWORKERS\"\n\n# construct the simulation workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external \\\n        -j ${NWORKERS} \\\n        -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} \\\n        -confKey \"Diamond.width[2]=6.\" \\\n        ${SEED} \\\n        -procBkg \"heavy_ion\" -colBkg $SYSTEM --embedding -nb ${NBKGEVENTS} -genBkg pythia8 \\\n        -e ${SIMENGINE} \\\n        -ini $CFGINIFILE\n\n# execute the workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_DeTrHeInjected_PbPb.sh"
        }
    ],
    "6dfd503c64685512b2b9aeb4da1f568174c64d425f607966a969f6035c272dae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow from MC to RECO to AOD for a simple pp min bias\n# production, designed for test beam conditions.\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------- CONFIGURE --------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-10}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFStrangenessTriggered.ini\"}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_StrangenessTriggered.sh"
        }
    ],
    "3908f0aa3c88d27f280eff9c9055d725bd042a7a93da7910461a749920146477": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"NWORKERS = $NWORKERS\"\n\n# create simulation workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external \\\n        -j ${NWORKERS} \\\n        -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} \\\n        -confKey \"Diamond.width[2]=6.\" \\\n        ${SEED} \\\n        -e ${SIMENGINE} \\\n        -ini $CFGINIFILE\n\n# execute workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_StrangenessTriggered.sh"
        }
    ],
    "0e2b2efeaa166f0ce30d041cf3f22b305a1e66bb6cb5da7a8e68057707d63de4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1\n\n# ----------- CONFIGURE --------------------------\nexport IGNORE_VALIDITYCHECK_OF_CCDB_LOCALCACHE=1\n#export ALICEO2_CCDB_LOCALCACHE=.ccdb\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-50000}\nSYSTEM=${SYSTEM:-PbPb}\nENERGY=${ENERGY:-5360}\nCFGINIFILE=${CFGINIFILE:-\"${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFHyperNucleiPbPbGapWithFlow.ini\"}\n\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"-seed 0\"\n\necho \"NWORKERS = $NWORKERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HyperNucleiInjectedGapWithFlow.sh"
        }
    ],
    "ddfdbe648f21a0394e7297e4887dbbdb568239433c92cde9138d951f3c28ab30": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"-seed 0\"\n\necho \"NWORKERS = $NWORKERS\"\n\n# generate workflow\nO2_SIM_WORKFLOW=${O2_SIM_WORKFLOW:-\"${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py\"}\n$O2_SIM_WORKFLOW -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.1;Diamond.width[1]=0.1;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -ini $CFGINIFILE\n\n# execute workflow\nO2_SIM_WORKFLOW_RUNNER=${O2_SIM_WORKFLOW_RUNNER:-\"${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py\"}\n$O2_SIM_WORKFLOW_RUNNER -f workflow.json -tt aod --cpu-limit $NWORKERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HyperNucleiInjectedGapWithFlow.sh"
        }
    ],
    "733859995ed8379f83c09b6c10fd3a2579a079a3fa4901b8d3bf0ef198f255d5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\n# create the simulation workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.005;Diamond.width[1]=0.005;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGLF/ini/GeneratorLF_HighPt.ini",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_GeneratorLF_highpt.sh"
        }
    ],
    "8e8e19c55a014430fb3349660f463adb145727d57fb6dd764bdb87b7e8617477": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute simulation workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_GeneratorLF_highpt.sh"
        }
    ],
    "eea1d7473b1fbed6ec98eaca0fd198f7b429d772f51805fd51356203474ab056": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD generation of a simple pp minimum bias\n# event set, optimized for test beam conditions.\n\n# Ensure O2DPG and O2 are properly loaded.\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HyperNucleiInjectedGap.sh"
        }
    ],
    "812a4e3444755934a950daa98515076fd553dd236c8d05e585970f0b67d616e3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.1;Diamond.width[1]=0.1;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFHyperNuclei${SYSTEM}Gap.ini\n\n# run workflow\n# enable higher timeframe parallelism by setting --cpu-limit to 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HyperNucleiInjectedGap.sh"
        }
    ],
    "3357bf9f66192d1ffaf284b5e9651d2f7028b928200adc3e0a99c1dd2f7ec092": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD processing of simple pp minimum bias events,\n# designed for test beam conditions.\n\n# Ensure that O2DPG and O2 are properly loaded.\nif [ -z \"${O2DPG_ROOT}\" ]; then echo \"Error: O2DPG needs to be loaded\"; exit 1; fi\nif [ -z \"${O2_ROOT}\" ]; then echo \"Error: O2 needs to be loaded\"; exit 1; fi\n\n\n# ----------- START OF ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant3}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ -n \"${SPLITID}\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_XSectionVariation.sh"
        }
    ],
    "a7cb3a3aa689fb8db1f57760217e8b44ff0ef6e3908ec8136d580aac11836c3d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# generate workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.1;Diamond.width[1]=0.1;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFHyperNuclei${SYSTEM}Gap.ini\n\n# execute workflow\n# permit higher timeframe parallelism using --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_XSectionVariation.sh"
        }
    ],
    "7e388b6d38e3c0f9ecf00d858ca199d5bdf1b9c3332fe95262ea019ece791f47": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# This is an example workflow for MC->RECO->AOD processing of a simple pp minimum bias event,\n# aimed at simulating test beam conditions.\n\n# Ensure that O2DPG and O2 are properly loaded.\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant3}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HypertritonInjectedGap.sh"
        }
    ],
    "0ddfaa3a4da2aef971a941889f06e82fb606fe0abe1da25632ce7bf059fd37bc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# generate workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${ENERGY} -col ${SYSTEM} -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate ${INTRATE} -confKey \"Diamond.width[0]=0.1;Diamond.width[1]=0.1;Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini ${O2DPG_ROOT}/MC/config/PWGLF/ini/GeneratorLFHypertriton${SYSTEM}Gap.ini\n\n# execute workflow\n# enable higher timeframe parallelism by specifying --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGLF/run_HypertritonInjectedGap.sh"
        }
    ],
    "a6ae17645b2c0e43f106c0200d4a46846b7bc7231e268326abe78062048c7d3d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# ALICE HEPscore benchmark workflow\n# A toy (few events) workflow involving MC->RECO->AOD steps that embed signal-background with PbPb + pp signals.\n# Background events are reused across different timeframes.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/HEPscore/hep-score.sh"
        }
    ],
    "d76e5d9c909f4c055397a84e677df429640b0e5cd6a31d9c8da19819326f9b36": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ----------- START ACTUAL JOB  -----------------------------\nNSIGEVENTS=${NSIGEVENTS:-5}\nNBKGEVENTS=${NBKGEVENTS:-5}\nNTIMEFRAMES=${NTIMEFRAMES:-2}\nSIMENGINE=TGeant4 \nNWORKERS=${NWORKERS:-4}\nCPULIMIT=${CPULIMIT:-4}\nMODULES=\"--skipModules ZDC\"\nPYPROCESS=ccbar \n#\n# create the workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 5020 -col pp -gen pythia8 -proc ${PYPROCESS} \\\n                                           -colBkg PbPb -genBkg pythia8 -procBkg \"heavy_ion\" \\\n                                           -tf ${NTIMEFRAMES} -nb ${NBKGEVENTS}              \\\n                                           -ns ${NSIGEVENTS} -e ${SIMENGINE}                 \\\n                                           -j ${NWORKERS} --embedding -interactionRate 50000 \\\n                                           -run 310000 -seed 1\n\n# the timestamp is selected to match a genuine data-taking run",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/HEPscore/hep-score.sh"
        }
    ],
    "a7a11dc22227c62bc3cf1c28fc649b0c01774456b1356630ff1c05d19a784750": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# timestamp set to match a real data taking session\n\n# activate (or specify) CCDB cache\nif [ -d ${HEPSCORE_CCDB_ROOT}/.ccdb ]; then\n  # benchmark executed with publicly available CCDB\n  echo \"Configuring CCDB cache to ${HEPSCORE_CCDB_ROOT}/.ccdb\"\n  export ALICEO2_CCDB_LOCALCACHE=${HEPSCORE_CCDB_ROOT}/.ccdb\n  # copy binary files (cluster dictionaries)\n  cp ${HEPSCORE_CCDB_ROOT}/data/*.bin .\n  cp ${HEPSCORE_CCDB_ROOT}/data/*.root .\nelse\n  # benchmark in production mode: fetch objects from the server and cache them locally.\n  export ALICEO2_CCDB_LOCALCACHE=${PWD}/.ccdb\nfi\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --cpu-limit ${CPULIMIT} -tt aod",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/HEPscore/hep-score.sh"
        }
    ],
    "5ed28ce4f72ce902c0dac54d2caf235e71e68851b813c8857727a8a35ea1b0b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Introduce a signal from OmegaC (decaying to Xi pi) into a background using a pythia8 box gun generator\n\n# ensure O2DPG and O2 are properly loaded\n\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- BEGIN ACTUAL JOB -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nTARGETTASK=${TARGETTASK:-aod}\nCPU_LIMIT=${CPU_LIMIT:-8}\n\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\n\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_OmegaCToXiPiInjected.sh"
        }
    ],
    "e215a524f7131cd4e8a3ee8cc320fb9d42a5c4cf7454dca2944e26c75df14f78": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -e ${SIMENGINE} ${SEED} -eCM 13600 -col pp -colBkg pp -gen external -genBkg pythia8 -procBkg inel -j ${NWORKERS} -ns ${NSIGEVENTS} -nb ${NBKGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -mod \"--skipModules ZDC\" \\\n        --embedding -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFOmegaCToXiPiEmb.ini \n\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ${TARGETTASK} --cpu-limit ${CPU_LIMIT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_OmegaCToXiPiInjected.sh"
        }
    ],
    "9f64d20fd42412cb495297825ab3b5b524e5e80e7bc5f2fba9a5513de9bdc2d3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD processing of a simple pp minimum bias\n# production, intended for test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This needs O2DPG loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This needs O2 loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n# create workflow\n\n#ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_ccbar.ini \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_ccbar_gaptrigger.sh"
        }
    ],
    "40c088cbb5280b2d007594e29fcc421a07eeea768ea2b827665297a4d2720033": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run workflow\n# enable higher parallelism for the timeframe with --cpu-limit set to 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_ccbar_gaptrigger.sh"
        }
    ],
    "f3dbf00de90a73ebc0876aa075d08722d67f4f0ec944143d2e60fb4198bbfc3d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample workflow for MC->RECO->AOD processing of a simple pp minimum bias\n# event production, aimed at simulating test beam conditions.\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG is not loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 is not loaded\" && exit 1\n\n\n# ----------- BEGIN ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n# create the workflow\n\n#ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.;\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_bbbar.ini \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_bbbar_gaptrigger.sh"
        }
    ],
    "eb19e8f3a24300a6f53b0d82753c99c3feb184b8d3e24a6470d2630875653cab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run workflow\n# permit higher parallelism for timeframes with --cpu-limit set to 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_bbbar_gaptrigger.sh"
        }
    ],
    "16dfc6981def1af7018aaec8b3797b2c7dace843cb136216d0b6d36ba92fbf38": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Integrate OmegaC signal into the background using a pythia8 box gun generator\n\n# Ensure that O2DPG and O2 are properly loaded\n\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\n# ----------- START OF THE ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nTARGETTASK=${TARGETTASK:-aod}\nCPU_LIMIT=${CPU_LIMIT:-8}\n\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\n\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_OmegaCInjected.sh"
        }
    ],
    "ff2ef33d8343caa542a6ce9a3371fb1f6cd21f305ca11d9f75175b6db38d623f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -e ${SIMENGINE} ${SEED} -eCM 13600 -col pp -colBkg pp -gen external -genBkg pythia8 -procBkg inel -j ${NWORKERS} -ns ${NSIGEVENTS} -nb ${NBKGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -mod \"--skipModules ZDC\" \\\n        --embedding -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFOmegaCEmb.ini \n\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ${TARGETTASK} --cpu-limit ${CPU_LIMIT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_OmegaCInjected.sh"
        }
    ],
    "f890c293352ff3686f4da2caba43b2bec953d1ffea25da6aad8439e987df04fd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD production targeting simple pp min bias conditions, suitable for test beam scenarios.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This needs O2DPG loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This needs O2 loaded\" && exit 1\n\n\n# ------------------- START OF ACTUAL JOB -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nCPU_LIMIT=${CPU_LIMIT:-32}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n# create workflow\n\n# ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_XiCToXiPi.ini \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_xictoxipi_gaptrigger.sh"
        }
    ],
    "f268ade23e790b9b933329dc69561d186f6f64c4f94ead9e249e2804afd05a80": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# initiate workflow execution\n# enable higher parallelism for CPU with --cpu-limit set to 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit ${CPU_LIMIT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_xictoxipi_gaptrigger.sh"
        }
    ],
    "9216b63a1e9cdbc14f776f61d68cb05c6d234a303d3e034f20be8cb23914609a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD processing for a simple pp min bias production, aimed at test beam conditions.\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nCPU_LIMIT=${CPU_LIMIT:-32}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-30}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n# create the workflow\n\n#ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_Xi_Omega_C.ini \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_xi_omega_c_gaptrigger.sh"
        }
    ],
    "4e8c927c348cd364b6bd6818210c7f7b39d1ee67323e58ceeeceeed099ad2ad9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run workflow\n# permit higher parallelism for the timeframe with --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit ${CPU_LIMIT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_xi_omega_c_gaptrigger.sh"
        }
    ],
    "70b3e38b0a75105dcf59f2d8b7b4667634ef925f1cb6dacaca046da5a81f1c0e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport ALIEN_JDL_LPMANCHORPASSNAME=\"apass4\"\nexport ALIEN_JDL_MCANCHOR=\"apass4\"\nexport ALIEN_JDL_COLLISIONSYSTEM=\"pp\"\nexport ALIEN_JDL_LPMPASSNAME=\"apass4\"\nexport ALIEN_JDL_LPMRUNNUMBER=\"539071\"\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=\"MC\"\nexport ALIEN_JDL_LPMINTERACTIONTYPE=\"pp\"\nexport ALIEN_JDL_LPMPRODUCTIONTAG=\"LHC24_2023zg_apass4_MC_test\"\nexport ALIEN_JDL_LPMANCHORRUN=\"539071\"\nexport ALIEN_JDL_LPMANCHORPRODUCTION=\"LHC23zg\"\nexport ALIEN_JDL_LPMANCHORYEAR=\"2023\"\n\n# added export\nexport NTIMEFRAMES=8\nexport NSIGEVENTS=100\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\nexport ALIEN_PROC_ID=2963436952\n\n# disable quality control\nexport DISABLE_QC=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_anchor_ini_from_cvmfs_example.sh"
        }
    ],
    "779b9ba1975ba5ba5e036164fba7a689aba17729b2ee4c653bc63ecdc90f3d58": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# disable the quality control\nexport DISABLE_QC=1\n\n# adjust the ini file to include an external generator and/or configuration from a specific tag that differs from the anchor tag\nORIGINALINI=${O2DPG_ROOT}/MC/config/PWGHF/ini/GeneratorHF_D2H_bbbar_Bforced_gap5_Mode2.ini # the initial .ini file to modify\nMODIFIEDINI=GeneratorHF_D2H_bbbar_Bforced_gap5_Mode2_fromCVMFS.ini # the output name for the modified .ini file\n\nCFGTOREPLACE=\"\\${O2DPG_ROOT}/MC/config/PWGHF/pythia8/generator/pythia8_beautyhadronic_with_decays_Mode2.cfg\" # the original configuration file to be changed\nCFGFROMCVMFS=\"/cvmfs/alice.cern.ch/el9-x86_64/Packages/O2DPG/daily-20240912-0200-1/MC/config/PWGHF/pythia8/generator/pythia8_beautyhadronic_with_decays_Mode2.cfg\" # the new configuration file to use",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_anchor_ini_from_cvmfs_example.sh"
        }
    ],
    "48d267fd0d762d86c62f54642b1e20e0e8dc3b333bf22ca4456a00efa5f9fb4b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    GENTOREPLACE=\"\\${O2DPG_ROOT}/MC/config/PWGHF/external/generator/generator_pythia8_gaptriggered_hf.C\" # original external generator file to be updated\nGENFROMCVMFS=\"/cvmfs/alice.cern.ch/el9-x86_64/Packages/O2DPG/daily-20240912-0200-1/MC/config/PWGHF/external/generator/generator_pythia8_gaptriggered_hf.C\" # new external generator file to use\n\nif [ ! -f $MODIFIEDINI ]; then\n    sed -e \"s|$CFGTOREPLACE|$CFGFROMCVMFS|g\" -e \"s|$GENTOREPLACE|$GENFROMCVMFS|g\" $ORIGINALINI > $MODIFIEDINI\nfi\nMODIFIEDINI_ABSPATH=$(readlink -f $MODIFIEDINI)\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $MODIFIEDINI_ABSPATH\"\n\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_anchor_ini_from_cvmfs_example.sh"
        }
    ],
    "374ff5be384075f3156b2d4e869c6e969caeecb602644c74a06ce81759af1ff2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Introduce an OmegaC (decaying to Xi pi) signal into the background using a Pythia8 box gun generator.\n\n# Ensure O2DPG and O2 are properly loaded.\n\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- BEGIN ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nTARGETTASK=${TARGETTASK:-aod}\nCPU_LIMIT=${CPU_LIMIT:-8}\n\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\n\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nSYSTEM=${SYSTEM:-pp}\nENERGY=${ENERGY:-13600}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_XiCToXiPiInjected.sh"
        }
    ],
    "e08a41e88566f1410c9b2c373abfbb26ddc472e9487173fb8123b74dff140cae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -e ${SIMENGINE} ${SEED} -eCM 13600 -col pp -colBkg pp -gen external -genBkg pythia8 -procBkg inel -j ${NWORKERS} -ns ${NSIGEVENTS} -nb ${NBKGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -mod \"--skipModules ZDC\" \\\n        --embedding -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFXiCToXiPiEmb.ini \n\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ${TARGETTASK} --cpu-limit ${CPU_LIMIT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_XiCToXiPiInjected.sh"
        }
    ],
    "5bdb0ed48cbf34774444c04a80b4fb845ecc45c1ccc9762ca5e509a819175a7d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample workflow for MC->RECO->AOD processing for a simple pp minimum bias \n# production, aimed at test beam conditions.\n\n# ensure O2DPG and O2 are properly loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  ----------------------------- \n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNBKGEVENTS=${NBKGEVENTS:-1}\n\n# create the workflow\n# with a low interaction rate, the number of signals per tf is minimal (approximately 11ms timeframe)\n\n#Lc trigger\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -col pp -gen pythia8 -proc \"ccbar\" -tf 1 -ns 100 -e ${SIMENGINE} -j ${NWORKERS} -interactionRate 10000 -trigger \"particle\" -confKey \"Diamond.width[2]=6.;TriggerParticle.pdg=4122;TriggerParticle.ptMin=0.5;TriggerParticle.yMin=-0.5;TriggerParticle.yMax=0.5\" -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHF_decay.ini",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_testbeam_LcTrigger.sh"
        }
    ],
    "1a724a594fcfda4649d0cf79b51efe41471259d83200d3e509fc9f126852f6a3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# initiate the workflow\n# permit enhanced parallelism for the timeframe with --cpu-limit set to 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32\nMCRC=$?  # <--- we'll report this exit code back\n\n# transfer the current directory to ALIEN\n#copy_ALIEN \"*AO2D*\"\n\n# execute some analysis tests\n#DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n#. ${DIR}/analysis_testing.sh\n\n\nreturn ${MCRC} 2>/dev/null || exit ${MCRC}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_testbeam_LcTrigger.sh"
        }
    ],
    "6619b8cfdd3c4744655e6d2fe383accce49e34c5ada9541e5262efcdd8581168": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample workflow for MC->RECO->AOD production for simple pp min bias events, aimed at test beam conditions.\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n# create workflow\n\n#ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.;\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_Bforced.ini \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_Bforced_gaptrigger.sh"
        }
    ],
    "41f18b936b658ae1338c7c9fe1affab53c0b9f047ba612f604648bf8b434353a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run workflow\n# permit higher parallelism for timeframes using --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_Bforced_gaptrigger.sh"
        }
    ],
    "7842eac2cd686af61efd311375542a50b9c0816785eaf1120f08f94996b5c636": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD processing aimed at studying embedding speedups.\n# Background events are reused across different timeframes.\n#\n\n# Ensure O2DPG and O2 are loaded\nif [ -z \"${O2DPG_ROOT}\" ]; then echo \"Error: This requires O2DPG to be loaded\"; exit 1; fi\nif [ -z \"${O2_ROOT}\" ]; then echo \"Error: This requires O2 to be loaded\"; exit 1; fi\n\n\n# ----------- START ACTUAL JOB  ----------------------------- \n\nNSIGEVENTS=${NSIGEVENTS:-20}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nNBKGEVENTS=${NBKGEVENTS:-20}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nPYPROCESS=${PYPROCESS:-ccbar} #ccbar, bbar, ...",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/analysis_benchmark.sh"
        }
    ],
    "50bcff09327054c1d07d26c6c6ea2c1af76b385076ed7c0450510bd6f18af12a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create simulation workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 5020 -col pp -gen pythia8 -proc ${PYPROCESS} -tf ${NTIMEFRAMES} -nb ${NBKGEVENTS} \\\n                                                        -ns ${NSIGEVENTS} -e ${SIMENGINE} -interactionRate 500000   \\\n                                                        -j ${NWORKERS} -genBkg pythia8 --embedding\n\n# Simulating a user extending this workflow with an analysis task\n${O2DPG_ROOT}/MC/bin/o2dpg-workflow-tools.py create workflow_ana --add-task mchist\nneeds=\"aodmerge\"\n\n# Notes:\n#   1. The output AOD name is determined by the simulation workflow\n#   2. The base name of the AOD merge task is aodmerge\n${O2DPG_ROOT}/MC/bin/o2dpg-workflow-tools.py modify workflow_ana mchist --cmd \"o2-analysistutorial-mc-histograms --aod-file AO2D.root\" \\\n                                                                        --needs $needs --mem 2000 --cpu 1 --labels ANALYSIS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/analysis_benchmark.sh"
        }
    ],
    "472836637d19a35d287d6ce71ee5620209cc9fc77b48bda1ac932b2ad5e5b723": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/bin/o2dpg-workflow-tools.py combine workflow workflow_ana -o workflow_combined\n\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow_combined.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/analysis_benchmark.sh"
        }
    ],
    "7f51dce949a3d252015598d282fc41650f953bbb4a973aec92a117b610d85578": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample workflow for MC->RECO->AOD production for simple pp min bias events, aimed at test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG is not loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 is not loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  ----------------------------- \n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\n#NBKGEVENTS=${NBKGEVENTS:-1}\n\n# CCbar trigger configuration\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -col pp -gen pythia8 -proc \"inel\" -tf 25 \\\n\t                                            -ns 22 -e ${SIMENGINE}                  \\\n\t\t\t\t\t\t    -j ${NWORKERS} -interactionRate 10000 \\\n\t\t\t\t\t\t    -confKey \"Diamond.width[2]=6.\"        \\\n\t\t\t\t\t\t    -trigger \"external\" -ini \"$O2DPG_ROOT/MC/config/PWGHF/ini/trigger_hf.ini\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_PWGHF_testbeam_ccbar_trigger.sh"
        }
    ],
    "4427a5a388783e05d77d48a863a19cbd841539dc2c9fd59455d94ee0340a583f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# start the workflow\n# enable higher parallelism for the timeframe with --cpu-limit set to 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_PWGHF_testbeam_ccbar_trigger.sh"
        }
    ],
    "0f2737ec79336c6873bb175c5bafd06dbd668231df7167390b33fc65699df3d9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC to RECO to AOD production for a simple pp min bias scenario,\n# aimed at test beam conditions.\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nCPU_LIMIT=${CPU_LIMIT:-32}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n# Create the workflow\n\n#ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_OmegaCToXiPi.ini \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_omegactoxipi_gaptrigger.sh"
        }
    ],
    "40f84a72cd984ac7baf4455db19661e1a1286809117d15893125b79c14279d5b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# initiate workflow process\n# permit higher parallelism for timeframes with --cpu-limit set to 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit ${CPU_LIMIT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_omegactoxipi_gaptrigger.sh"
        }
    ],
    "e0b1e88eea14af585766edad116aca7e38a218a81d592c4d160e010144459cbd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample workflow for MC->RECO->AOD production aimed at simple pp min bias events,\n# tailored for test beam conditions.\n\n# ensure O2DPG and O2 are properly loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTSPERSIGNALEVENT=${NBKGEVENTSPERSIGNALEVENT:-5}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\nNBKGEVENTS=$(($NSIGEVENTS * $NBKGEVENTSPERSIGNALEVENT))\n# establish the workflow",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_ccbar_userhook_replaceBkg.sh"
        }
    ],
    "c2a807fbd086029e69ca0abef7d50c2a74848722f3fb71452d5bd8730b993631": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -e ${SIMENGINE} ${SEED} -eCM 13600 -col pp -colBkg pp -gen pythia8 -genBkg pythia8 -procBkg \"\" -j ${NWORKERS} -ns ${NSIGEVENTS} -nb ${NBKGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -mod \"--skipModules ZDC\" \\\n        --embedding --embeddPattern r0:e${NBKGEVENTSPERSIGNALEVENT} -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_ccbar.ini -iniBkg $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_bkg.ini \\\n\n# execute workflow\n# permit higher timeframe parallelism using --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_HFtriggers_ccbar_userhook_replaceBkg.sh"
        }
    ],
    "68ced5df4aa900fe3319d7665562a1afa8e8258e5a8a9c1e9234d7134291dc82": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# add distortion maps\n# https://alice.its.cern.ch/jira/browse/O2-3346?focusedCommentId=300982&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-300982\n#\n# export O2DPG_ENABLE_TPC_DISTORTIONS=ON\n# SCFile=$PWD/distortions_5kG_lowIR.root # file needs to be downloaded\n# export O2DPG_TPC_DIGIT_EXTRA=\" --distortionType 2 --readSpaceCharge ${SCFile} \"\n\n#\n# procedure setting up and executing an anchored MC \n#\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n# ------ CREATE AN MC CONFIG STARTING FROM RECO SCRIPT --------\n# - this section should be avoided on the GRID, where we should instead\n#   reference an existing configuration (O2DPG repository or local storage or elsewhere)\nexport ALIEN_JDL_LPMANCHORYEAR=${ALIEN_JDL_LPMANCHORYEAR:-2022}\nRUNNUMBER=${ALIEN_JDL_LPMRUNNUMBER:-517616}\n#INTERACTIONRATE=${INTERACTIONRATE:-2000}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "63544061ee33832b7fabbbfb8986283ebff02c33f2a78886fe1ba5f4d9d52fd8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# obtain the async script (we need to update it)\n# the script's location can be customized using a JDL option\n\nALIEN_JDL_LPMPRODUCTIONTAG_KEEP=$ALIEN_JDL_LPMPRODUCTIONTAG\necho \"Replacing ALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMPRODUCTIONTAG with ALIEN_JDL_LPMANCHORPRODUCTION=$ALIEN_JDL_LPMANCHORPRODUCTION to simulate reco pass...\"\nALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMANCHORPRODUCTION\n\n# ZDC can lead to issues during simulation\n#export ALIEN_JDL_WORKFLOWDETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,EMC,PHS,CPV,HMP,ZDC,CTP\nexport ALIEN_JDL_WORKFLOWDETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,EMC,PHS,CPV,HMP,CTP\n\n### async_pass.sh\nDPGRECO=$O2DPG_ROOT/DATA/production/configurations/asyncReco/async_pass.sh\n\nif [ -f async_pass.sh ]; then\n    chmod +x async_pass.sh\n    DPGRECO=./async_pass.sh\nelse\n    cp -v $DPGRECO .\nfi\n\nif [ ! -f setenv_extra.sh ]; then\n    cp -v ${DPGRECO%/*}/setenv_extra.sh .\nfi\n\necho \"[INFO alien_async_pass.sh] Configuring DPGRECO to ${DPGRECO}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "b5d1f19d223ea3d1b5df259c5b53ff17bea9e274b1f192a8bbf8a619d0e24f9f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"[INFO alien_async_pass.sh] Configuring DPGRECO to ${DPGRECO}\"\n\n# settings specific to MC\nsed -i 's/GPU_global.dEdxUseFullGainMap=1;GPU_global.dEdxDisableResidualGainMap=1/GPU_global.dEdxSplineTopologyCorrFile=splines_for_dedx_V1_MC_iter0_PP.root;GPU_global.dEdxDisableTopologyPol=1;GPU_global.dEdxDisableGainMap=1;GPU_global.dEdxDisableResidualGainMap=1;GPU_global.dEdxDisableResidualGain=1/' setenv_extra.sh\n### ???\n\nchmod +x async_pass.sh\n\n# remove the workflow execution line if there's no input data\n[ ${CTF_TEST_FILE} ] || sed -i '/WORKFLOWMODE=run/d' async_pass.sh\n\n# generate workflow file\nexport IGNORE_EXISTING_SHMFILES=1\ntouch list.list\n\n./async_pass.sh ${CTF_TEST_FILE:-\"\"} 2&> async_pass_log.log\nRECO_RC=$?\n\necho \"RECO completed with ${RECO_RC}\"\nif [ \"${NO_MC}\" ]; then\n  return ${RECO_RC} 2>/dev/null || exit ${RECO_RC} # optionally exit here if MC is not needed (useful for testing)\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "247ce137a0097fd8f4668bddeb7d0d777c125287f76391f04e34781959276abf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMPRODUCTIONTAG_KEEP\necho \"Resetting ALIEN_JDL_LPMPRODUCTIONTAG to $ALIEN_JDL_LPMPRODUCTIONTAG\"\n\n# Proceed to generate the local MC configuration file --> config-config.json\n${O2DPG_ROOT}/UTILS/parse-async-WorkflowConfig.py\n\n# Validate the creation of the configuration\nif [[ `grep \"o2-ctf-reader-workflow-options\" config-json.json 2> /dev/null | wc -l` == \"0\" ]]; then\n  echo \"An issue occurred during the creation of the anchor configuration. Process halted.\"\n  exit 1\nfi\n\n# -- GENERATE THE MC JOB DESCRIPTION WITH ANCHORS FOR THE RUN --\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nSIMENGINE=${ALIEN_JDL_SIMENGINE:-${SIMENGINE}}\nNTIMEFRAMES=${NTIMEFRAMES:-50}\nNSIGEVENTS=${NSIGEVENTS:-22}\n\nSPLITID=${SPLITID:-0}\nPRODSPLIT=${PRODSPLIT:-100}\nCYCLE=${CYCLE:-0}\n# SEED calculation: SPLITID + CYCLE * PRODSPLIT\nSEED=${ALIEN_PROC_ID}\n\n# Construct the workflow\n# THIS NEEDS TO BE PROVIDED EXTERNALLY\n# echo \"$\" | awk -F' -- ' '{print $1, $3}'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "dc5afb1e3a977628cafd431e269562e7d8c27f83a33b752ed01ff04cfef0ddc1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n# THIS NEEDS TO BE PROVIDED EXTERNALLY\n# echo \"$\" | awk -F' -- ' '{print $1, $3}'\n\n# baseargs=\"-col pp -eCM 13600 -tf ${NTIMEFRAMES} --split-id ${SPLITID} --prod-split ${PRODSPLIT} --cycle ${CYCLE} --run-number ${RUNNUMBER}\"\nbaseargs=\"-tf ${NTIMEFRAMES} --split-id ${SPLITID} --prod-split ${PRODSPLIT} --cycle ${CYCLE} --run-number ${RUNNUMBER}\"\n\n# THIS NEEDS TO BE PROVIDED EXTERNALLY\nremainingargs=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHF_D2H_ccbar_and_bbbar_gap5.ini -seed ${SEED} -ns ${NSIGEVENTS} --include-local-qc\"\n\nremainingargs=\"${remainingargs} -e ${SIMENGINE} -j ${NWORKERS}\"\nremainingargs=\"${remainingargs} -productionTag ${ALIEN_JDL_LPMPRODUCTIONTAG:-alibi_anchorTest_tmp}\"\nremainingargs=\"${remainingargs} --anchor-config config-json.json\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "e75e9d98e4ff7b48e4272396c3b30cd9d50a9a768988384dfbbaf5663e245d57": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"baseargs: ${baseargs}\"\necho \"remainingargs: ${remainingargs}\"\n\n# The CCDB query has been modified to omit the underscore.\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow_anchored.py ${baseargs} -- ${remainingargs} &> timestampsampling_${RUNNUMBER}.log\n[ \"$?\" != \"0\" ] && echo \"Issue encountered during anchor timestamp sampling \" && exit 1\n\nTIMESTAMP=`grep \"Determined timestamp to be\" timestampsampling_${RUNNUMBER}.log | awk '//{print $6}'`\necho \"TIMESTAMP IS ${TIMESTAMP}\"\n\n# -- PRELOAD CCDB OBJECTS TO DISK      --\n# (ensure the correct objects at the specified timestamp are fetched\n#  until https://alice.its.cern.ch/jira/browse/O2-2852 is resolved)\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n[ ! -d .ccdb ] && mkdir .ccdb",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "f5dade02a02ae925d9a9be19d604098640f32890267fa405b285787fbb4b517a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CCDBOBJECTS=\"/CTP/Calib/OrbitReset /GLO/Config/GRPMagField/ /GLO/Config/GRPLHCIF /ITS/Calib/DeadMap /ITS/Calib/NoiseMap /ITS/Calib/ClusterDictionary /TPC/Calib/PadGainFull /TPC/Calib/TopologyGain /TPC/Calib/TimeGain /TPC/Calib/PadGainResidual /TPC/Config/FEEPad /TOF/Calib/Diagnostic /TOF/Calib/LHCphase /TOF/Calib/FEELIGHT /TOF/Calib/ChannelCalib /MFT/Calib/DeadMap /MFT/Calib/NoiseMap /MFT/Calib/ClusterDictionary /FT0/Calibration/ChannelTimeOffset /FV0/Calibration/ChannelTimeOffset /GLO/GRP/BunchFilling\"\n\n${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch/ -p ${CCDBOBJECTS} -d .ccdb --timestamp ${TIMESTAMP}\nif [ ! \"$?\" == \"0\" ]; then\n  echo \"Issue encountered during CCDB pre-fetching of ${CCDBOBJECTS}. Exiting.\"\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "6091bc9b32415c825f9f7d240ff4d6e7ca83add8a46f7511762d006288843193": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# -- Generate aligned geometry using ITS and MFT ideal alignments to prevent overlaps in geant\nCCDBOBJECTS_IDEAL_MC=\"ITS/Calib/Align MFT/Calib/Align\"\nTIMESTAMP_IDEAL_MC=1\n${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch/ -p ${CCDBOBJECTS_IDEAL_MC} -d .ccdb --timestamp ${TIMESTAMP_IDEAL_MC}\nif [ ! \"$?\" == \"0\" ]; then\n  echo \"Issue encountered while fetching ${CCDBOBJECTS_IDEAL_MC} from the CCDB. Exiting.\"\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "832ad31394f30d7e6b6a580260df7dcbed85e320909524c0f912454fae70f0bd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ${O2_ROOT}/bin/o2-create-aligned-geometry-workflow --configKeyValues \"HBFUtils.startTime=${TIMESTAMP}\" --condition-remap=file://${ALICEO2_CCDB_LOCALCACHE}=ITS/Calib/Align,MFT/Calib/Align -b \necho \"run with echo in pipe\" | ${O2_ROOT}/bin/o2-create-aligned-geometry-workflow --configKeyValues \"HBFUtils.startTime=${TIMESTAMP}\" --condition-remap=file://${ALICEO2_CCDB_LOCALCACHE}=ITS/Calib/Align,MFT/Calib/Align -b \nmkdir -p $ALICEO2_CCDB_LOCALCACHE/GLO/Config/GeometryAligned\nln -s -f $PWD/o2sim_geometry-aligned.root $ALICEO2_CCDB_LOCALCACHE/GLO/Config/GeometryAligned/snapshot.root\n\n# -- EXECUTE THE MC WORKLOAD TO GENERATE AOD --\n\nexport FAIRMQ_IPC_PREFIX=./\n\necho \"Ready to start the main workflow\"\n\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ${ALIEN_JDL_O2DPGWORKFLOWTARGET:-aod} --cpu-limit ${ALIEN_JDL_CPULIMIT:-8}\nMCRC=$?  # <--- we'll report back this code\n#exit 0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "698ca5eeb736f02ed6ba21fe89efe2b00082b05db7a80d4b20dbecf86e6b2c98": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"${MCRC}\" -eq \"0\" && \"${remainingargs}\" == *\"--include-local-qc\"* ]] ; then\n  # execute QC tasks\n  echo \"Executing QC\"\n  ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels QC --cpu-limit ${ALIEN_JDL_CPULIMIT:-8} -k\n  RC=$?\nfi\n\n#\n# compress all logs into tar files, irrespective of the error code or validation - to ensure QC logs are captured...\n#\nif [[ -n \"$ALIEN_PROC_ID\" ]]; then\n  find ./ \\( -name \"*.log*\" -o -name \"*mergerlog*\" -o -name \"*serverlog*\" -o -name \"*workerlog*\" -o -name \"pythia8.cfg\" \\) | tar -czvf debug_log_archive.tgz -T -\n  find ./ \\( -name \"*.log*\" -o -name \"*mergerlog*\" -o -name \"*serverlog*\" -o -name \"*workerlog*\" -o -name \"*.root\" \\) | tar -czvf debug_full_archive.tgz -T -\nfi\n\nunset FAIRMQ_IPC_PREFIX\n\nreturn ${MCRC} 2>/dev/null || exit ${MCRC}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_anchor2022_D2H_ccbar_and_bbbar_gap5.sh"
        }
    ],
    "3756a6e133c21167bf00842cd28932d59cce61dea96105f7adb849375e66f4e3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD production for a simple pp min bias event, aimed at test beam conditions.\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  ----------------------------- \n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n# create workflow\n\n#ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -col pp -gen pythia8 -proc \"inel\" -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 10000 -confKey \"Diamond.width[2]=6.\" -e TGeant4 -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHF_ccbar.ini \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_testbeam_ccbarfilter.sh"
        }
    ],
    "292fbe425bd9bfada87ad95ac8a8fdd7eafab9fa3e10b8229f079f2a4923b3c4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the workflow\n# permit higher parallelism for the timeframe with --cpu-limit set to 32 \n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/run_pp_testbeam_ccbarfilter.sh"
        }
    ],
    "fb54569fa40a6d18fc79905d9a126ab47cd76d9ebd69e8fb712467677739f907": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Determine embedding gain\n# Currently, reconstruction is not factored in\n# (presumes previous execution of embedding_benchmark.sh)\nBKGSIMTIME=$(awk '//{print $2}' ${PWD}/bkgsim.log_time)\nSGNTIME=$(awk 'BEGIN{c=0} //{c+=$2} END {print c}' sgnsim*.log_time)\nDIGITIME=$(awk 'BEGIN{c=0} //{c+=$2} END {print c}' *digi*.log_time)\n\n# GAIN = (NTIMEFRAMES * BKGSIMTIME + SGNTIME + DIGITIME) / (BKGSIMTIME + SGNTIME + DIGITIME)\nawk -v BT=${BKGSIMTIME} -v ST=${SGNTIME} -v DT=${DIGITIME} -v NTF=${NTIMEFRAMES} 'END {print \"SPEEDUP=\"(NTF*BT + ST + DT)/(BT + ST + DT)}' < /dev/null",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGHF/calc_embedding_speedup.sh"
        }
    ],
    "f1d21db5bdf76768776a869cde16ecc97ca45433cd5398053449599429a7a7b5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Create jet-jet events with bottom quark-antiquark (bb̅) heavy-flavor (HF) injected, using Pythia8 in a pre-defined pt-hard bin and weighted.\n# Run: ./run_jets_HF_bbbar.sh\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\n\nNSIGEVENTS=${NSIGEVENTS:-10}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-13600.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\n# Default settings for weighted production\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_HF_bbbar.sh"
        }
    ],
    "485992feb81a61d83f0e22920e2be2805573a2b540dd8fabedc763b811f3db67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Default settings for weighted productions\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Define the pt-hat bin edges\npthatbin_loweredges=(0 5 7 9 12 16 21 28 36 45 57 70 85 99 115 132 150 169 190 212 235)\npthatbin_higheredges=( 5 7 9 12 16 21 28 36 45 57 70 85 99 115 132 150 169 190 212 235 -1)\n\n# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Open Pt-hat range set\"\nelse\n  PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n  PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_HF_bbbar.sh"
        }
    ],
    "dd7714b54a2ccc95ce7f533ed85f5b230610ee911c0ac576eed5eaafd48cd30d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY} -col pp -gen external -proc \"jets\"           \\\n                                            -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}                       \\\n                                            -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}              \\\n                                            -j ${NWORKERS} -mod \"--skipModules ZDC\"                           \\\n                                            -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" ${SEED}    \\\n                                            -ini $O2DPG_ROOT/MC/config/PWGHF/ini/GeneratorHFTrigger_bbbar.ini \\\n                                            -weightPow ${WEIGHTPOW}\n\n# execute workflow\n# permit higher timeframe parallelism with --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_HF_bbbar.sh"
        }
    ],
    "41609cdc24cb2f5ad67a66200749eac71fb2965da99cc9b96a3d915a6ebd521b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Generate jet-jet events using PYTHIA8 within a specified pt hard bin and weighted.\n# Choose events based on minimum Pt and the acceptance of decay photons.\n# Execute: ./run_decaygammajets.sh\n# Set PTHATBIN to a value from 1 to 6 before running, see\n# $O2DPG_ROOT/MC/config/PWGGAJE/trigger/decay_gamma_jet.C\n\n#set -x\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\n\nNSIGEVENTS=${NSIGEVENTS:-20}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-13000.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n\n# Default settings for weighted production\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Retrieve environmental variables for detector acceptance binning\n# used inside prompt_gamma.C\nexport PTTRIGMIN=${PTTRIGMIN:-3.5}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_decaygammajets.sh"
        }
    ],
    "d9e17fdbcbcf586e1eca3c8555a4a4b8177beaf5daa10cc14844b50dc100d42b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ -z \"$PTTRIGMIN\" ]; then\n    echo \"Detector acceptance option (env. var. CONFIG_DECAYGAMMA_PTMIN) not configured, aborting.\"\n    exit 1\nfi\n\necho \"Decay photon minimum pT option: \" $PTTRIGMIN \"GeV/c\"\n\n# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Using an open Pt-hat range\"\nelse\n   # Define the Pt-hat bin arrays and set threshold for binning\n   if [ $PTTRIGMIN = \"3.5\" ]; then\n       pthatbin_loweredges=(5 7 9 12 16 21)\n       pthatbin_higheredges=(7 9 12 16 21 -1)\n\n       PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n       PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\n   fi\n\n   if [ $PTTRIGMIN = \"7\" ]; then\n       pthatbin_loweredges=(8 10 14 19 26 35 48 66)\n       pthatbin_higheredges=(10 14 19 26 35 48 66 -1)\n\n       PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n       PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\n   fi\n   echo \"Selected Pt hard bin \" $PTHATBIN \": [\" $PTHATMIN \" , \" $PTHATMAX \"]\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_decaygammajets.sh"
        }
    ],
    "a075e41851ffb1183330c7e5084689bbac257aa54ebe22f583838462f3080245": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Recapture environmental variables for detector acceptance binning utilized within prompt_gamma.C\nexport PARTICLE_ACCEPTANCE=${PARTICLE_ACCEPTANCE:-1}\n\nif [ -z \"$PARTICLE_ACCEPTANCE\" ]; then\n    echo \"The detector acceptance option (environmental variable PARTICLE_ACCEPTANCE) has not been set, and the process will terminate.\"\n    exit 1\nfi\n\necho 'The detector acceptance option is set to ' $PARTICLE_ACCEPTANCE\n\n# Define the simulation workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY} -col pp -gen pythia8 -proc \"jets\" \\\n                                            -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}            \\\n                                            -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}   \\\n                                            -j ${NWORKERS} -mod \"--skipModules ZDC\"                \\\n                                            -weightPow ${WEIGHTPOW}                                \\\n                                            -trigger \"external\" -ini \"\\$O2DPG_ROOT/MC/config/PWGGAJE/ini/trigger_decay_gamma.ini\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_decaygammajets.sh"
        }
    ],
    "a7348bf129045226197aa08e7f5b526700e82fa1c1a057d6be4247a652fe8bb3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute the Workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_decaygammajets.sh"
        }
    ],
    "38e40ec26a6e56262a9408dfda2e234bf1ee580430f8915b82839e4de437cb15": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Embed jet-jet events in a predetermined pT hard bin and integrate them into HI events, both using Pythia8.\n# Run the script with: ./run_jets_embedding.sh\n# Ensure to set PTHATBIN to a value between 1 and 21 before execution.\n\n#set -x\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\nNSIGEVENTS=${NSIGEVENTS:-2}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-5020.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n\n# Default settings for weighted productions\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Define the pt hat bin arrays\npthatbin_loweredges=(0 5 7 9 12 16 21 28 36 45 57 70 85 99 115 132 150 169 190 212 235)\npthatbin_higheredges=( 5 7 9 12 16 21 28 36 45 57 70 85 99 115 132 150 169 190 212 235 -1)\n\n# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_embedding.sh"
        }
    ],
    "6da4991599c2ad92deed2165becaedefde7943150c53dcbff44f86b2e2b3dfeb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Open Pt-hat range set\"\nelse\n  PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n  PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_embedding.sh"
        }
    ],
    "03df4ca566890cb3ebf7438c2faad8e192ff2bde87d914e821120402a7c5ec2d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# generate workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY} \\\n                                           -nb ${NBKGEVENTS} --embedding                          \\\n                                           -colBkg PbPb -genBkg pythia8 -procBkg \"heavy_ion\"      \\\n                                           -col    pp   -gen    pythia8 -proc    \"jets\"           \\\n                                           -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}            \\\n                                           -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}   \\\n                                           -j ${NWORKERS} -mod \"--skipModules ZDC\"                \\\n                                           -weightPow ${WEIGHTPOW} -interactionRate 500000\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_embedding.sh"
        }
    ],
    "1b212ccfe236af5cf7cafa49368c06707a33d29450d360a9f86c8741e0920444": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Create jet-jet events with ccbar HF injected, utilizing Pythia8 in a predefined pt hard bin and weighted.\n# Run: ./run_jets_HF_ccbar.sh\n\n# Ensure that O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\n\nNSIGEVENTS=${NSIGEVENTS:-5}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-13600.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_HF_ccbar.sh"
        }
    ],
    "4a3118338362840a91210347b0abf637887a27206c2d424346296ee59087af81": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The settings for the #ccbar filter and bias2SelectionPow, along with PtHat, are defined in the specified ini file\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY} -col pp -gen external -proc \"jets\"                 \\\n                                            -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}                    \\\n                                            -j ${NWORKERS} -mod \"--skipModules ZDC\"                                 \\\n                                            -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" ${SEED}          \\\n                                            -ini $O2DPG_ROOT/MC/config/PWGGAJE/ini/GeneratorHFJETrigger_ccbar.ini\n\n\n# execute the workflow\n# permit higher parallelism for timeframes by using --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_HF_ccbar.sh"
        }
    ],
    "cda786b29cec9f5f8e38e889d71c04db03253455557ed4b459d8e5ed11b56d3b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Embed gamma-jet events generated by PYTHIA8 within a specified pt hard bin and incorporate them into HI events, also produced by PYTHIA8.\n# The event selection can be based on detector acceptance and/or the outgoing parton flavour using PYTHIA8 hooks.\n# To run, execute: ./run_dirgamma_hook.sh\n# For more details on PARTICLE_ACCEPTANCE, refer to\n# $O2DPG_ROOT/MC/config/PWGGAJE/hooks/prompt_gamma_hook.C\n\n#set -x\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] uses a time-based random seed\nNSIGEVENTS=${NSIGEVENTS:-2}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-5200.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n\n# Default settings for weighted production\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Define the pt hat bin arrays\npthatbin_loweredges=(5 11 21 36 57 84)\npthatbin_higheredges=(11 21 36 57 84 -1)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_hook_embedding.sh"
        }
    ],
    "6eb699398472d4d7c49b2473165a47d9db4a820225c0f5e31c389edc14321f54": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Open Pt-hat range set\"\nelse\n  PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n  PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\nfi\n\n# Retrieve environmental variables for detector acceptance binning\n# utilized within prompt_gamma.C\nexport PARTICLE_ACCEPTANCE=${PARTICLE_ACCEPTANCE:-1}\n\nif [ -z \"$PARTICLE_ACCEPTANCE\" ]; then\n    echo \"Detector acceptance option (environmental variable PARTICLE_ACCEPTANCE) not set, abort.\"\n    exit 1\nfi\n\necho 'Detector acceptance option ' $PARTICLE_ACCEPTANCE\n\n# Retrieve environmental variables for outgoing parton flavor\n# utilized within prompt_gamma.C\nexport CONFIG_OUTPARTON_PDG=${CONFIG_OUTPARTON_PDG:-0}\n\necho 'Parton PDG option ' $CONFIG_OUTPARTON_PDG",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_hook_embedding.sh"
        }
    ],
    "cbb785f6661c7e56043f4feefbcf07c6127dadfb5773d96a31ea787b6165cbd4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY}                                      \\\n                                           -nb ${NBKGEVENTS} --embedding                              \\\n                                           -colBkg PbPb -genBkg pythia8 -procBkg \"heavy_ion\"          \\\n                                           -col    pp   -gen    pythia8 -proc    \"dirgamma\"           \\\n                                           -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}                \\\n                                           -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}       \\\n                                           -j ${NWORKERS} -mod \"--skipModules ZDC\"                    \\\n                                           -weightPow ${WEIGHTPOW}                                    \\\n                                           -ini \"\\$O2DPG_ROOT/MC/config/PWGGAJE/ini/hook_prompt_gamma.ini\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_hook_embedding.sh"
        }
    ],
    "04bd1dad5c3068fd5ab21751566eb9a388ffcaa3132e89218e0960e1729555ff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_hook_embedding.sh"
        }
    ],
    "3d564015ab91f7650eb5d7a2c33eae13775f2239abb312e4e5837c99cc2944f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Generate gamma-jet events using PYTHIA8 within a specified pt hard bin and apply weights.\n# The events are selected based on detector acceptance or outgoing parton flavor via PYTHIA8 hooks.\n# To execute, run: ./run_dirgamma_hook.sh\n# For more information on PARTICLE_ACCEPTANCE, refer to\n# $O2DPG_ROOT/MC/config/PWGGAJE/hooks/prompt_gamma_hook.C\n\n#set -x\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\n\nNSIGEVENTS=${NSIGEVENTS:-20}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-13000.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n\n# Default values for weighted production\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Define arrays for pt hat bin edges\npthatbin_loweredges=(5 11 21 36 57 84)\npthatbin_higheredges=(11 21 36 57 84 -1)\n\n# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_hook.sh"
        }
    ],
    "d78b6e1c44c67ad13cafb386cc3182126ebbec7cfa5c09111d32ba1ba2a3d2a1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Open Pt-hat range set\"\nelse\n  PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n  PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\nfi\n\n# Retrieve environmental variables for detector acceptance binning\n# utilized within prompt_gamma.C\nexport PARTICLE_ACCEPTANCE=${PARTICLE_ACCEPTANCE:-1}\n\nif [ -z \"$PARTICLE_ACCEPTANCE\" ]; then\n    echo \"Detector acceptance option (env. var. PARTICLE_ACCEPTANCE) not set, abort.\"\n    exit 1\nfi\n\necho 'Detector acceptance option ' $PARTICLE_ACCEPTANCE\n\n# Retrieve environmental variables for outgoing parton flavour\n# utilized within prompt_gamma.C\nexport CONFIG_OUTPARTON_PDG=${CONFIG_OUTPARTON_PDG:-0}\n\necho 'Parton PDG option ' $CONFIG_OUTPARTON_PDG",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_hook.sh"
        }
    ],
    "23508421b57e377be5546f6e0ca6fa2a090d6622f54c00aca0a931f612da469c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo 'Parton PDG option ' $CONFIG_OUTPARTON_PDG\n\n# generate workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY} -col pp -gen pythia8 -proc \"dirgamma\" \\\n                                            -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}                \\\n                                            -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}       \\\n                                            -j ${NWORKERS} -mod \"--skipModules ZDC\"                    \\\n                                            -weightPow ${WEIGHTPOW}                                    \\\n                                            -ini \"\\$O2DPG_ROOT/MC/config/PWGGAJE/ini/hook_prompt_gamma.ini\"\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_hook.sh"
        }
    ],
    "28f89782ae1c602ccaf3d8b3233bff3c556f65a595c561c5bf78570a427a1375": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Create gamma-jet event samples using PYTHIA8 within specified pt hard bins, with weights applied.\n# Filter events based on detector acceptance or outgoing parton types.\n# Run: ./run_dirgamma.sh\n# Set PTHATBIN to a value between 1 and 6 before execution.\n# Check $O2DPG_ROOT/MC/config/PWGGAJE/trigger/prompt_gamma.C for PARTICLE_ACCEPTANCE details.\n\n#set -x\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\n\nNSIGEVENTS=${NSIGEVENTS:-20}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-13000.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n\n# Default values for weighted production\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Define the pt hat bin boundaries\npthatbin_loweredges=(5 11 21 36 57 84)\npthatbin_higheredges=(11 21 36 57 84 -1)\n\n# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma.sh"
        }
    ],
    "ff9ce6876f07d9a3da7963554fa1957462ca59cc85f2d6d1d24009037ce815f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Recover environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Open Pt-hat range set\"\nelse\n  PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n  PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\nfi\n\n# Retrieve environmental variables for detector acceptance binning\n# utilized within prompt_gamma.C\nexport PARTICLE_ACCEPTANCE=${PARTICLE_ACCEPTANCE:-1}\n\nif [ -z \"$PARTICLE_ACCEPTANCE\" ]; then\n    echo \"Detector acceptance option (env. var. PARTICLE_ACCEPTANCE) not set, abort.\"\n    exit 1\nfi\n\necho \"Detector acceptance option \" $PARTICLE_ACCEPTANCE\n\n# Retrieve environmental variables for outgoing parton flavour\n# used inside prompt_gamma.C\nexport CONFIG_OUTPARTON_PDG=${CONFIG_OUTPARTON_PDG:-0}\n\necho \"Parton PDG option \" $CONFIG_OUTPARTON_PDG",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma.sh"
        }
    ],
    "3040be452ba96325aac8e0e33897484f0320a657d0cb85c91f15a209d8a508c4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo 'Parton PDG option ' $CONFIG_OUTPARTON_PDG\n\n# generate workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY} -col pp -gen pythia8 -proc \"dirgamma\" \\\n                                            -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}                \\\n                                            -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}       \\\n                                            -j ${NWORKERS} -mod \"--skipModules ZDC\"                    \\\n                                            -weightPow ${WEIGHTPOW}                                    \\\n                                            -trigger \"external\" -ini \"\\$O2DPG_ROOT/MC/config/PWGGAJE/ini/trigger_prompt_gamma.ini\"\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma.sh"
        }
    ],
    "e4b3a7609e561ea773cbf26827e37812c235e633242a308a727e27bb9aefbfbc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Create jet-jet collision events using Pythia8 within specified pt hard bins and weighted.\n# Run: ./run_jets.sh\n\n#set -x\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\n\nNSIGEVENTS=${NSIGEVENTS:-20}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-13000.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n\n# Default parameters for weighted events\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Define the pt hat bin edges\npthatbin_loweredges=(0 5 7 9 12 16 21 28 36 45 57 70 85 99 115 132 150 169 190 212 235)\npthatbin_higheredges=( 5 7 9 12 16 21 28 36 45 57 70 85 99 115 132 150 169 190 212 235 -1)\n\n# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets.sh"
        }
    ],
    "c36bf86e5719ded1c75dcae5d2d10b5fc0ab1b2f36842e9f09f61027a286d998": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Recuperate environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Open Pt-hat range set\"\nelse\n  PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n  PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\nfi\n\n# construct workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY} -col pp -gen pythia8 -proc \"jets\" \\\n                                            -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}            \\\n                                            -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}   \\\n                                            -j ${NWORKERS} -mod \"--skipModules ZDC\"                \\\n                                            -weightPow ${WEIGHTPOW} -interactionRate 500000\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets.sh"
        }
    ],
    "a8341dee0581fef30ce89d34cb07cf1a7ec33ad93e9f0ec1f6a9975da1741ba7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Generate jet-jet events using Pythia8 within a specified pt hard bin and weighted.\n# Execute: ./run_jets.sh\n\n#set -x\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\n\nNSIGEVENTS=${NSIGEVENTS:-20}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-13000.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n\n# Default settings for weighted events\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Define the pt hat bin ranges\npthatbin_loweredges=(0 5 7 9 12 16 21 28 36 45 57 70 85 99 115 132 150 169 190 212 235)\npthatbin_higheredges=( 5 7 9 12 16 21 28 36 45 57 70 85 99 115 132 150 169 190 212 235 -1)\n\n# Retrieve environment variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_hook.sh"
        }
    ],
    "cdd9d488f34644b8bf25e0f12a46d92f9cc007f92d4ead6074221b6d00cff8d4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Open Pt-hat range set\"\nelse\n  PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n  PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\nfi\n\n# Retrieve environmental variables for detector acceptance binning\n# accessed inside prompt_gamma.C\nexport PARTICLE_ACCEPTANCE=${PARTICLE_ACCEPTANCE:-0}\n\nif [ -z \"$PARTICLE_ACCEPTANCE\" ]; then\n    echo \"Detector acceptance option (environmental var. PARTICLE_ACCEPTANCE) not set, abort.\"\n    exit 1\nfi\n\necho 'Detector acceptance option ' $PARTICLE_ACCEPTANCE\n\n# Retrieve environmental variables for outgoing parton flavour\n# accessed inside prompt_gamma.C\nexport CONFIG_OUTPARTON_PDG=${CONFIG_OUTPARTON_PDG:-0}\n\necho 'Parton PDG option ' $CONFIG_OUTPARTON_PDG",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_hook.sh"
        }
    ],
    "784dd9b8458aeea93c8931acc8724d45246941681b34ef14b13bfa254a789bf6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ECHO 'Parton PDG option ' $CONFIG_OUTPARTON_PDG\n\n# build workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY} -col pp -gen pythia8 -proc \"jets\"     \\\n                                            -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}                \\\n                                            -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}       \\\n                                            -j ${NWORKERS} -mod \"--skipModules ZDC\"                    \\\n                                            -ini \"\\$O2DPG_ROOT/MC/config/PWGGAJE/ini/hook_jets.ini\"    \\\n                                            -weightPow ${WEIGHTPOW}\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_jets_hook.sh"
        }
    ],
    "130e2fe2e294000c903fead0dbe0414d78886c18a1ebdeb42a1ef865c6530875": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Embed gamma-jet events within a predetermined pT hard bin and weight them into HI events, both generated by Pythia8.\n# Execute: ./run_dirgamma_embedding.sh\n\n#set -x\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nRNDSEED=${RNDSEED:-0}   # [default = 0] time-based random seed\nNSIGEVENTS=${NSIGEVENTS:-2}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-5}\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\" #\"PIPE ITS TPC EMCAL\"\nCONFIG_ENERGY=${CONFIG_ENERGY:-5020.0}\nSIMENGINE=${SIMENGINE:-TGeant4}\nWEIGHTPOW=${WEIGHTPOW:-6.0}\n\n# Default for weighted productions\nPTHATMIN=${PTHATMIN:-5.0}\nPTHATMAX=${PTHATMAX:-300.0}\n\n# Define arrays for the pt hat bin edges\npthatbin_loweredges=(5 11 21 36 57 84)\npthatbin_higheredges=(11 21 36 57 84 -1)\n\n# Retrieve environmental variables for pt binning\n#PTHATBIN=${PTHATBIN:-1}\n\nif [ -z \"$PTHATBIN\" ]; then\n    echo \"Open Pt-hat range set\"\nelse\n  PTHATMIN=${pthatbin_loweredges[$PTHATBIN]}\n  PTHATMAX=${pthatbin_higheredges[$PTHATBIN]}\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_embedding.sh"
        }
    ],
    "a9b6c65e9a37a106b32724973c0b58ffa7fddd3583b9daf2e9dbdc3f67d8ac7f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Retrieve environmental variables for detector acceptance binning\n# utilized within prompt_gamma.C\nexport PARTICLE_ACCEPTANCE=${PARTICLE_ACCEPTANCE:-1}\n\nif [ -z \"$PARTICLE_ACCEPTANCE\" ]; then\n    echo \"Detector acceptance option (environmental variable PARTICLE_ACCEPTANCE) not configured, aborting.\"\n    exit 1\nfi\n\necho \"Detector acceptance option: \" $PARTICLE_ACCEPTANCE\n\n# Retrieve environmental variables for outgoing parton flavour\n# utilized within prompt_gamma.C\nexport CONFIG_OUTPARTON_PDG=${CONFIG_OUTPARTON_PDG:-0}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_embedding.sh"
        }
    ],
    "67d16cd5c537db1ccb05f9f4b1c126ce8b454f96f26c3f597198b67ec0352260": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM ${CONFIG_ENERGY}                                     \\\n                                           -nb ${NBKGEVENTS} --embedding                             \\\n                                           -colBkg PbPb -genBkg pythia8 -procBkg \"heavy_ion\"         \\\n                                           -col    pp   -gen    pythia8 -proc    \"dirgamma\"          \\\n                                           -ptHatMin ${PTHATMIN} -ptHatMax ${PTHATMAX}               \\\n                                           -tf ${NTIMEFRAMES} -ns ${NSIGEVENTS} -e ${SIMENGINE}      \\\n                                           -j ${NWORKERS} -mod \"--skipModules ZDC\"                   \\\n                                           -weightPow ${WEIGHTPOW}                                   \\\n                                           -trigger \"external\" -ini \"\\$O2DPG_ROOT/MC/config/PWGGAJE/ini/trigger_prompt_gamma.ini\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_embedding.sh"
        }
    ],
    "30529c25856d68a8bee99449db0de9d6d02f846653285be026b7bf9dbd3edcd4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGGAJE/run_dirgamma_embedding.sh"
        }
    ],
    "0990eb5862ff05ca2db428228e13661d32299ce074d2b776e0d2a26f747bf093": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-confKey \"GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGDQ/external/generator/GeneratorParamPromptJpsiToElectronEvtGen_pp13TeV.C;GeneratorExternal.funcName=GeneratorParamPromptJpsiToElectronEvtGen_pp13TeV()\"  \\\n       \t-genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} -interactionRate 500000\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptJpsi_midy_pp.sh"
        }
    ],
    "97c9f1c67c85c3df861a77c75a28c9b6acc6fd187537030ce7d26845f1c8fc06": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 5020 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-confKey \"GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGDQ/external/generator/GeneratorCocktailPromptCharmoniaToMuonEvtGen_PbPb5TeV.C;GeneratorExternal.funcName=GeneratorCocktailPromptCharmoniaToMuonEvtGen_PbPb5TeV()\"  \\\n        -genBkg pythia8 -procBkg \"heavy_ion\" -colBkg PbPb --embedding -nb ${NBKGEVENTS} --mft-assessment-full --fwdmatching-assessment-full --fwdmatching-save-trainingdata -interactionRate 500000\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptCharmonia_fwdy_PbPb.sh"
        }
    ],
    "0260ce3e72c4d0cc67088bbee6da97b78add3982a6be43e557b4bcf5864ddba7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are available\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: Requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: Requires O2 to be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-confKey \"GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGDQ/external/generator/GeneratorCocktailPromptCharmoniaToElectronEvtGen_pp13TeV.C;GeneratorExternal.funcName=GeneratorCocktailPromptCharmoniaToElectronEvtGen_pp13TeV()\"  \\\n    -genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} -interactionRate 500000\n\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptCharmonia_midy_pp.sh"
        }
    ],
    "629e6c57b70b4c9386b64754a69212f49b3b403d1e359e347c41e38c0a1b42c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-2}\nNBKGEVENTS=${NBKGEVENTS:-2}\nNWORKERS=${NWORKERS:-4}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 5020 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbar_Psi2S_fwdy.ini -interactionRate 500000  \\\n        -genBkg pythia8 -procBkg \"heavy_ion\" -colBkg PbPb --embedding -nb ${NBKGEVENTS} --mft-assessment-full --fwdmatching-assessment-full\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToPsi_fwdy_PbPb.sh"
        }
    ],
    "710a65767cff949b682f23c4ac989a07b2e17e058a603969f49072e96926d98a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: Requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: Requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8} \nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbar_fwdy.ini -interactionRate 500000 \\\n        -genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} --fwdmatching-4-param --fwdmatching-cut-4-param\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToJpsi_fwdy_pp.sh"
        }
    ],
    "5d3cdcdd8e3dde27ca718972b9d7557d9939d424df36b3d9991fa212e1dbf5ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbar_Psi2S_midy.ini  \\\n\t-genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} -interactionRate 500000\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToPsi_midy_pp.sh"
        }
    ],
    "9e8eaddca746a59e278330a95be8574cb0ec8a716295e08ecaf0da19916ded47": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -interactionRate 500000 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/Generator_InjectedPromptCharmoniaMidy_TriggerGap.ini\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptCharmonia_midy_pp_triggerGap.sh"
        }
    ],
    "c3222792a0fc7740a62ff4d89e6e6fa6dbe118e6e543521b67162e979e21b004": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbarToBplus_midy.ini -interactionRate 500000  \\\n\t-genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS}\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBplusToJpsi_midy_pp.sh"
        }
    ],
    "97218929e3b0915f9e30294b3639054c5038610edce212f41b209866615bd55a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/Generator_InjectedPromptPsi2SFwdy_TriggerGap.ini --mft-assessment-full --fwdmatching-assessment-full -interactionRate 500000 \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptPsi2S_fwdy_pp_assessment_triggerGap.sh"
        }
    ],
    "83af08fe8dc17230f979506c50b3cfc6b77870af9015e2ee40490337138db56a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n# alienv enter O2/latest-dev-o2 O2DPG/latest-master-o2 AEGIS/latest-o2 EVTGEN/latest-o2\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nNBOXMUONS=${NBOXMUONS:-2}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-confKey \"GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGDQ/external/generator/GeneratorBoxFwd.C;GeneratorExternal.funcName=fwdMuBoxGen()\" -interactionRate 500000  \\\n\t-genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} --mft-assessment-full --fwdmatching-assessment-full --fwdmatching-save-trainingdata",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runFwdMuBoxGen_pp.sh"
        }
    ],
    "8d7b4b8bcae4ed7eaa05a2cf637456ad8020f79a3e42fa446bed05e6e6fc4e55": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute Workflow (MFT-related tasks)\nNMUONS=$NBOXMUONS ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt \"(mft.*)\"`owntext`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runFwdMuBoxGen_pp.sh"
        }
    ],
    "3026d18a93544931fee5735d35e84ca585b7d123da023761caba343f08bf564a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------------- SET UP LOCAL CCDB CACHE ----------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"MCH MFT MID ITS\" \\\n     -trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbarToMuonsSemileptonic_fwdy.ini  \\\n    -genBkg pythia8 -procBkg cdiff -colBkg pp --embedding -nb ${NBKGEVENTS} \\\n    -confKeyBkg \"Diamond.width[2]=6\" -interactionRate 2000 --mft-assessment-full --fwdmatching-assessment-full",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToMuons_fwd_pp.sh"
        }
    ],
    "780a3e012c60749028d47a9cf433ac1e245f0b68d929ec1fc663731ec1701b61": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -f workflow.json -tt aod  -jmax 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToMuons_fwd_pp.sh"
        }
    ],
    "6bd99fcc40fe73f69df7669387e4ef7d611218716cc01d976603ff9c510411dd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are properly set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n# ----------- SET UP LOCAL CCDB CACHE --------------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"MCH MFT MID ITS\" \\\n     -trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbarToDDbarToMuons_fwdy.ini  \\\n    -genBkg pythia8 -procBkg cdiff -colBkg pp --embedding -nb ${NBKGEVENTS} \\\n    -confKeyBkg \"Diamond.width[2]=6\" -interactionRate 2000 --mft-assessment-full --fwdmatching-assessment-full",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToMuons_noForce_fwd_pp.sh"
        }
    ],
    "456bf06fb2b981e23091f2deeb282bb767ba11046c5c320bb0e618ae189fdbb9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -f workflow.json -tt aod  -jmax 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToMuons_noForce_fwd_pp.sh"
        }
    ],
    "04f4b36ce462d167ee7856eda08f00c75216b6c6652fa557fda5055dfd9abc08": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbar_PsiAndJpsi_fwdy_triggerGap.ini --mft-assessment-full --fwdmatching-assessment-full -interactionRate 500000 \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToPsiAndJpsi_fwdy_pp_triggerGap.sh"
        }
    ],
    "b17236ee29c34c20dde13a26b526104439ff8b9111672c9600b228a0fa6499a3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8} \nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 5020 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbar_fwdy.ini -interactionRate 500000  \\\n        -genBkg pythia8 -procBkg \"heavy_ion\" -colBkg PbPb --embedding -nb ${NBKGEVENTS} --mft-assessment-full --fwdmatching-assessment-full --fwdmatching-save-trainingdata\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToJpsi_fwdy_PbPb.sh"
        }
    ],
    "5d9ff997c8be239b73fd801d20b598445d86e63f93282abad4eac657e6962547": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are properly loaded\n# alienv enter O2/latest-dev-o2 O2DPG/latest-master-o2 AEGIS/latest-o2 EVTGEN/latest-o2\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG is not loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 is not loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nNBOXMUONS=${NBOXMUONS:-2}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 5020 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 \\\n\t-confKey \"GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGDQ/external/generator/GeneratorBoxFwd.C;GeneratorExternal.funcName=fwdMuBoxGen()\" -interactionRate 500000  \\\n        -genBkg pythia8 -procBkg \"heavy_ion\" -colBkg PbPb --embedding -nb ${NBKGEVENTS} --mft-assessment-full --fwdmatching-assessment-full --fwdmatching-save-trainingdata",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runFwdMuBoxGen_PbPb.sh"
        }
    ],
    "1c83f25c37fc6ab9a17b0a8d4bb6843b811551e51ab5302ec4efacc73591b362": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute Workflow (MFT-related Tasks)\nNMUONS=$NBOXMUONS ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt \"(mft.*)\"`]));",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runFwdMuBoxGen_PbPb.sh"
        }
    ],
    "583625a1011c7aecf7aab3c04df3748242771012657e9fd2f98bc65fb81668e8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are properly loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbar_PsiAndJpsi_midy_triggerGap.ini -interactionRate 500000 \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToPsiAndJpsi_midy_pp_triggerGap.sh"
        }
    ],
    "4f71611bcd4d5b4d1cf26406497f769bc62fdcd80439add2a2dc03895e54b1c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-confKey \"GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGDQ/external/generator/GeneratorCocktailPromptCharmoniaToMuonEvtGen_pp13TeV.C;GeneratorExternal.funcName=GeneratorCocktailPromptCharmoniaToMuonEvtGen_pp13TeV()\"  \\\n        -genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} --mft-assessment-full --fwdmatching-assessment-full -interactionRate 500000\n\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptCharmonia_fwdy_pp_assessment.sh"
        }
    ],
    "2a5abf2a3aa470ce22f021235fd30ae747a4a2f00760a159bee80284ffd62963": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8} \nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbar_Psi2S_fwdy.ini -interactionRate 500000  \\\n    -genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS}\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToPsi_fwdy_pp.sh"
        }
    ],
    "7c0388f3f5f2fef530b4e97e56cc14b300cfcf896f34c56acbc27633ad03d934": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: Requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: Requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nTARGETTASK=${TARGETTASK:+-tt ${TARGETTASK}}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-confKey \"GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGDQ/external/generator/GeneratorParamPromptJpsiToMuonEvtGen_pp13TeV.C;GeneratorExternal.funcName=GeneratorParamPromptJpsiToMuonEvtGen_pp13TeV()\"  \\\n        -genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} --fwdmatching-4-param --fwdmatching-cut-4-param -interactionRate 500000\n\n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json ${TARGETTASK}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptCharmonia_fwdy_pp.sh"
        }
    ],
    "dd311b4eff712173ac7c7082dade2845699f2e58db4b93101e82cd9b6a98766f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/Generator_InjectedPromptCharmoniaFwdy_TriggerGap.ini --mft-assessment-full --fwdmatching-assessment-full -interactionRate 500000 \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptCharmonia_fwdy_pp_assessment_triggerGap.sh"
        }
    ],
    "96ea2e0b7614738eacf60ceb893274792153c1ed9fc472f31b8601407b526838": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are properly loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------- SETUP LOCAL CCDB CACHE --------------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"MCH MFT MID ITS\" \\\n     -trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_ccbarToMuonsSemileptonic_fwdy.ini  \\\n    -genBkg pythia8 -procBkg cdiff -colBkg pp --embedding -nb ${NBKGEVENTS} \\\n    -confKeyBkg \"Diamond.width[2]=6\" -interactionRate 2000 --mft-assessment-full --fwdmatching-assessment-full",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runCharmToMuons_fwd_pp.sh"
        }
    ],
    "f6f1cba87171c50cfd2a573a49fc9ea8c7df55ce5c0b44245f28d2b7b9b6d962": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -f workflow.json -tt aod  -jmax 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runCharmToMuons_fwd_pp.sh"
        }
    ],
    "df23483f1ffce35aa785a5631834fb44355f667819bb429fb19d1a9dd67f08ba": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbarToBplus_midy_triggerGap.ini -interactionRate 500000 \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBplusToJpsi_midy_pp_triggerGap.sh"
        }
    ],
    "fa5798147bcb0bd9f252b4874f3e4a524d2493de983ce520e6952f31e80704d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure that O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/Generator_InjectedPromptJpsiFwdy_TriggerGap.ini --mft-assessment-full --fwdmatching-assessment-full -interactionRate 500000 \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runPromptJpsi_fwdy_pp_assessment_triggerGap.sh"
        }
    ],
    "ebe8d8e73f79031802b55b7f966dc68a20ee55b2cc90f240af9848b5e0df8c22": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: Requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: Requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n\t-trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorHF_bbbar_midy.ini -interactionRate 500000  \\\n\t-genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/runBeautyToJpsi_midy_pp.sh"
        }
    ],
    "d49287395d5319fa30888ad66997be3647ea5b0ec2245b80b12059c80887f44c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample workflow for MC->RECO->AOD processing of a simple pp minimum bias event set, optimized for test beam conditions.\n\n# Ensure O2DPG and O2 are available\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------- BEGIN ACTUAL JOB  -----------------------------\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n# Construct the workflow\n\n# ccbar filter\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -interactionRate 500000 -confKey \"Diamond.width[2]=6.\" -e ${SIMENGINE} ${SEED} -mod \"--skipModules ZDC\" \\\n        -ini $O2DPG_ROOT/MC/config/PWGDQ/ini/GeneratorJPsiHFCorr_ccbar.ini \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/run_pp_JpsiHFcorr_ccbar_gaptrigger.sh"
        }
    ],
    "1bf55ef08562b43e6f2bef7bd1bd180f6e7e7953ebc9fb8bff47b39d068fe188": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run workflow\n# set higher parallelism for CPU with --cpu-limit 32\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGDQ/run_pp_JpsiHFcorr_ccbar_gaptrigger.sh"
        }
    ],
    "d7c69a9c445b56bc8bb3ba77c7276cdbca2b13f69500330c88a97b0a9b69b545": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n\nRNDSEED=${RNDSEED:-0}\nNEVENTS=${NEVENTS:-2}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-2}\nSIMENGINE=${SIMENGINE:-TGeant4}\n\n# ----------- SETUP LOCAL CCDB CACHE --------------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 5020 -col PbPb -gen pythia8 -tf ${NTIMEFRAMES}   \\\n             -ns ${NEVENTS} -e ${SIMENGINE}                   \\\n\t     -trigger \"external\" -ini  ${O2DPG_ROOT}/MC/config/examples/ini/trigger_multiplicity_stableparticles_inFIT.ini \\\n\t     -j ${NWORKERS} -interactionRate 50000     \\\n\t     -run 300000                                \\\n\t     -confKey \"Diamond.width[2]=6\" --include-qc --include-analysis",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/common/run_PbPb_trigger_multiplicity_stableparticles_inFIT.sh"
        }
    ],
    "67aa1fe888c313d822c49b8369e81a08c2399d24b2883998cfd3b25e9a2b65be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export FAIRMQ_IPC_PREFIX=./\n# execute workflow (highly parallel)\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod  -jmax 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/common/run_PbPb_trigger_multiplicity_stableparticles_inFIT.sh"
        }
    ],
    "211d251cc9ee9c0c71584650e324bda2b842071e85b9936604e1f0112520f2bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # Execute:  ${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script ./runUpcgenANCHOR.sh --jobname SLtest --outputspec \"*.log@disk=1\",\"*.root@disk=2\" --packagespec \"VO_ALICE@O2sim::v20240626-1\" --wait --fetch-output --asuser pbuhler --local\n\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass2\nexport ALIEN_JDL_MCANCHOR=apass2\nexport ALIEN_JDL_COLLISIONSYSTEM=PbPb\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMPASSNAME=apass2\nexport ALIEN_JDL_LPMRUNNUMBER=544389\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=PbPb\nexport ALIEN_JDL_LPMPRODUCTIONTAG=MyPass2Test\nexport ALIEN_JDL_LPMANCHORRUN=544389\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC23zzi\nexport ALIEN_JDL_LPMANCHORYEAR=2023\n\nexport NTIMEFRAMES=2\nexport NSIGEVENTS=5\nexport NBKGEVENTS=1\nexport SPLITID=2\nexport PRODSPLIT=100\nexport CYCLE=0\nexport ALIEN_PROC_ID=2963436952\n\n\n#export ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini ${PWD}/GenUpcgen.ini --embedding -nb ${NBKGEVENTS} -colBkg PbPb -genBkg pythia8 -procBkg heavy_ion\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runUpcgenANCHOR.sh"
        }
    ],
    "c022160f9240fb5a455df5ba6b4f9f90a279f70ff01daebe4a7316fdcf6ff91f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/config/PWGUD/ini/makeUpcgenConfig.py --process kDiTau --collType PbPb --eCM 5360 --rapidity cent_eta\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini ${PWD}/GenUpcgen.ini\"\n\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runUpcgenANCHOR.sh"
        }
    ],
    "052554a9108e57f7b4fcda22dd3e1120aff3f80bd96fcdd1ef5633b2d93a9f36": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute:  ${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script ./runGraniittiANCHOR.sh --jobname SLtest --outputspec \"*.log@disk=1\",\"*.root@disk=2\" --packagespec \"VO_ALICE@O2sim::v20240626-1\" --wait --fetch-output --asuser pbuhler --local\n\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass4\nexport ALIEN_JDL_MCANCHOR=apass4\nexport ALIEN_JDL_COLLISIONSYSTEM=pp\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMPASSNAME=apass4\nexport ALIEN_JDL_LPMRUNNUMBER=535084\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=PbPb\nexport ALIEN_JDL_LPMPRODUCTIONTAG=MyPass2Test\nexport ALIEN_JDL_LPMANCHORRUN=535084\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC23f\nexport ALIEN_JDL_LPMANCHORYEAR=2023\n\nexport NTIMEFRAMES=2\nexport NSIGEVENTS=100\nexport NBKGEVENTS=1\nexport SPLITID=20\nexport PRODSPLIT=100\nexport CYCLE=30\nexport ALIEN_PROC_ID=2963436952\n\n# Generate generator configuration file\n${O2DPG_ROOT}/MC/config/PWGUD/ini/makeGraniittiConfig.py --process kConRes_pipi --eCM 13600 --nEvents 300 --rapidity cent_eta",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runGraniittiANCHOR.sh"
        }
    ],
    "341dcd29b2fd5d2eeb7392d117c219c728cbd5bad62fb85cd4b72572d10263b0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# configure simulation settings\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini ${PWD}/GenGraniitti.ini\"\n#export ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini ${PWD}/GenGraniitti.ini --embedding -nb ${NBKGEVENTS} -colBkg PbPb -genBkg pythia8 -procBkg heavy_ion\"\n\n# execute anchored simulations\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runGraniittiANCHOR.sh"
        }
    ],
    "cbcbd3116afed5073f7c16f7e20ee061887e90b8d2aafa3ab69eb06a31d477c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n# include utility functions\n. ${O2_ROOT}/share/scripts/jobutils.sh\n\nECM=${ECM:-13600}\nRNDSEED=${RNDSEED:-0}\nNSIGPTF=${NSIGPTF:-100}\nNBKGPTF=${NBKGPTF:-1000}\nNWORKERS=${NWORKERS:-4}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nBKGINTRATE=${BKGINTRATE:-50000}\n\n# specify the hepmc3 file containing signal events\nFHEPMC=${FHEPMC:-\"diffEvents.hepmc3\"}\nFHEPMC=${PWD}/${FHEPMC}\nif [ ! -f ${FHEPMC} ]; then\n  echo \"Error: Data file ${FHEPMC} is missing\" && exit 1\nfi\n\n# define vertex settings\nDVX=0.01\nDVY=0.01\nDVZ=6.00\n\nMODULES=\"--skipModules ZDC\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runPythiaAndDiffEvents.sh"
        }
    ],
    "e949377e502725316493524e460f2409b4c3a2137b17c53c456969964fdd5a55": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# vertex settings\nDVX=0.01\nDVY=0.01\nDVZ=6.00\n\nMODULES=\"--skipModules ZDC\"\n\n# create workflow\nSIGINTRATE=`echo \"${BKGINTRATE}*${NSIGPTF}/${NBKGPTF}\" | bc`\nNBKG=`echo \"${NBKGPTF}*${NTIMEFRAMES}\" | bc`\nNSIG=`echo \"${NSIGPTF}*${NTIMEFRAMES}\" | bc`\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py \\\n  -col pp \\\n  -eCM ${ECM} \\\n  -j ${NWORKERS} \\\n  -e TGeant4 \\\n  -mod \"${MODULES}\" \\\n  -tf ${NTIMEFRAMES} \\\n  -interactionRate ${BKGINTRATE} \\\n  -gen hepmc \\\n  -genBkg pythia8 \\\n  -procBkg cdiff \\\n  -colBkg pp \\\n  -nb ${NBKG} \\\n  -ns ${NBKGPTF} \\\n  -confKey \"HepMC.fileName=\"${FHEPMC}\";HepMC.version=3;Diamond.width[0]=0.01;Diamond.width[1]=0.01;Diamond.width[2]=6.\" \\\n  -confKeyBkg \"Diamond.width[0]=\"${DVX}\";Diamond.width[1]=\"${DVY}\";Diamond.width[2]=\"${DVZ}\"\"  \\\n  --embedding --embeddPattern ${SIGINTRATE}\",\"${NSIGPTF}\":\"${NSIG}\"\n\n# run workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runPythiaAndDiffEvents.sh"
        }
    ],
    "4646a9e82e495b7a9d04f0efd176a42df90501507fd5ccbe41e8811edfd0603a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute: ${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script ./runSTARlightANCHOR.sh --jobname SLtest --outputspec \"*.log@disk=1\",\"*.root@disk=2\" --packagespec \"VO_ALICE@O2sim::v20240626-1\" --wait --fetch-output --asuser mbroz --local\n\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass2\nexport ALIEN_JDL_MCANCHOR=apass2\nexport ALIEN_JDL_COLLISIONSYSTEM=PbPb\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMPASSNAME=apass2\nexport ALIEN_JDL_LPMRUNNUMBER=544389\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=PbPb\nexport ALIEN_JDL_LPMPRODUCTIONTAG=MyPass2Test\nexport ALIEN_JDL_LPMANCHORRUN=544389\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC23zzi\nexport ALIEN_JDL_LPMANCHORYEAR=2023\n\nexport NTIMEFRAMES=2\nexport NSIGEVENTS=5\nexport NBKGEVENTS=1\nexport SPLITID=2\nexport PRODSPLIT=100\nexport CYCLE=0\nexport ALIEN_PROC_ID=2963436952\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini ${PWD}/GenStarlight.ini --embedding -nb ${NBKGEVENTS} -colBkg PbPb -genBkg pythia8 -procBkg heavy_ion\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runSTARlightANCHOR.sh"
        }
    ],
    "1a98d8856ecbca6e3f165dc0bc8d1e3906c1a772c7db57f06b1c98e94ad8ea99": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/config/PWGUD/ini/makeStarlightConfig.py --process kCohPsi2sToMuPi --collType PbPb --eCM 5360 --rapidity cent_eta\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runSTARlightANCHOR.sh"
        }
    ],
    "b518f2fd61c6d56bc396f8eee028104a1b4ced332b6250c3e9643f9dcd65a379": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n# source utility functions\n. ${O2_ROOT}/share/scripts/jobutils.sh \n\nECM=${ECM:-13600}\nRNDSEED=${RNDSEED:-0}\nNSIGPTF=${NSIGPTF:-100}\nNWORKERS=${NWORKERS:-4}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nSIGINTRATE=${SIGINTRATE:-50000}\n\n# the hepmc3 file containing the signal events\nFHEPMC=${FHEPMC:-\"diffEvents.hepmc3\"}\nFHEPMC=${PWD}/${FHEPMC}\nif [ ! -f ${FHEPMC} ]; then\n  echo \"Error: Required data file ${FHEPMC} is not found\" && exit 1\nfi\n\n# vertex settings\nDVX=0.01\nDVY=0.01\nDVZ=6.00\n\nMODULES=\"--skipModules ZDC\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runDiffEvents.sh"
        }
    ],
    "6ff1439b3959f00d67b77e73885c758b74682b2a26e01e7488acc45e410d854e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# vertex settings\nDVX=0.01\nDVY=0.01\nDVZ=6.00\n\nMODULES=\"--skipModules ZDC\"\n\n# build workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py \\\n  -col pp \\\n  -eCM ${ECM} \\\n  -gen hepmc \\\n  -j ${NWORKERS} \\\n  -ns ${NSIGPTF} \\\n  -tf ${NTIMEFRAMES} \\\n  -e TGeant4 \\\n  -mod \"${MODULES}\" \\\n  -interactionRate ${SIGINTRATE} \\\n  -confKey \"HepMC.fileName=\"${FHEPMC}\";HepMC.version=3;Diamond.width[0]=\"${DVX}\";Diamond.width[1]=\"${DVY}\";Diamond.width[2]=\"${DVZ}\"\"\n  \n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGUD/runDiffEvents.sh"
        }
    ],
    "1d9ceb319a7284fd019e975fd001bbbd7ce8e91a65aa44c35d53aa05a2bb1d2a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are properly loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1\n\n# ------------------- CONFIGURE LOCAL CCDB CACHE -------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNBKGEVENTS=${NBKGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\n\n# generate a random number\nRNDSIG=$(($RANDOM % 100))\necho $RNDSIG\n\nif [[ $RNDSIG -ge 0 && $RNDSIG -lt 20 ]];\nthen\n        CONFIGNAME=\"GeneratorHF_ccbarToDielectrons.ini\"\nelif [[ $RNDSIG -ge 20 && $RNDSIG -lt 40 ]];\nthen\n        CONFIGNAME=\"GeneratorHF_bbbarToDielectrons.ini\"\nelif [[ $RNDSIG -ge 40 && $RNDSIG -lt 100 ]];\nthen\n        CONFIGNAME=\"GeneratorHF_bbbarToDDbarToDielectrons.ini\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runHFToDielectrons_pp.sh"
        }
    ],
    "92328296c36826ae2865bb5f08572251a2c30c3fcb9d1d730f90cd044617b7ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -generator external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -eventGenerator TGeant4 -moduleOptions \"--skipModules ZDC\" \\\n     -trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME  \\\n    -backgroundGenerator pythia8 -backgroundProcessing cdiff -backgroundCollaboration pp --embedding -backgroundEvents ${NBKGEVENTS} \\\n    -backgroundConfKey \"Diamond.width[2]=6\" -interactionRate 500000 \n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -file workflow.json -taskType aod  -jobMax 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runHFToDielectrons_pp.sh"
        }
    ],
    "a45f5cb6f1196b3b57034f709134267d2fa689a5ba8ae241ac8fb9eafeaa13fd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are properly initialized\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------- SET UP LOCAL CCDB CACHE --------------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nGAPRATIO=${GAPRATIO:-3}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\n# generate a random number\nRNDSIG=$(($RANDOM % 100))\necho $RNDSIG\n\nif [[ $RNDSIG -ge 0 && $RNDSIG -lt 20 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_Charm_Gap$GAPRATIO.ini\"\nelif [[ $RNDSIG -ge 20 && $RNDSIG -lt 40 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyForcedDecay_Gap$GAPRATIO.ini\"\nelif [[ $RNDSIG -ge 40 && $RNDSIG -lt 100 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyNoForcedDecay_Gap$GAPRATIO.ini\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runHFGapToDielectrons_pp.sh"
        }
    ],
    "cdec0daac70b6d72087853052bc8349ff72ea8b92044437bcf31596f1e0cd4a2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" ${SEED} -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME -confKeyBkg \"Diamond.width[2]=6\" -interactionRate ${INTRATE} \n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runHFGapToDielectrons_pp.sh"
        }
    ],
    "a05477a31f18fa316cb645e8a21ee31c509aa554d0b138f7e2e7300c997e59be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# Script for configuring HF enhanced dielectron MC simulation linked to LHC22o apass6\n#\n\n# Example configuration for anchoring\n# Referenced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a2\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this is set and used as the seed; if set, it takes priority over SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# For pp interactions and 50 events per time frame, we start with only 4 workers.\nexport NWORKERS=2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap6.sh"
        }
    ],
    "f71363ea045158095a680ea9d6030f04b06de84b3248e8749714b4308c78e693": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we initiate only 4 workers.\nexport NWORKERS=2\n\n# Set the generator through an ini file\n# Utilize 20/40/40 sampling for various generators\n# Generate a random number\nRNDSIG=$(( $RANDOM % 100 ))\n\nif [[ $RNDSIG -ge 0 && $RNDSIG -lt 20 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_Charm_Gap6.ini\"\nelif [[ $RNDSIG -ge 20 && $RNDSIG -lt 40 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyForcedDecay_Gap6.ini\"\nelif [[ $RNDSIG -ge 40 && $RNDSIG -lt 100 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyNoForcedDecay_Gap6.ini\"\nfi\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap6.sh"
        }
    ],
    "f435c357138eba04077ebfa85071362162d64d9db2dad7b57b5a33340641e786": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the central anchor steering script; this involves:\n# * calculating the timestamp\n# * determining the interaction rate\n# * retrieving and preparing configurations (such as which detectors are included in the run)\n# * running the simulation (and quality control)\n# To disable quality control, uncomment the following line:\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap6.sh"
        }
    ],
    "f83f2da434e3653bbcd758090f6bb9050d3f9f0a588f792048fffd77642bf850": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6\n#\n\n# example anchoring\n# sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this variable is set and used as the seed; if set, it takes precedence over SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp interactions and 50 events per time frame, we launch only 4 workers.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np1_gap2.sh"
        }
    ],
    "03a8e8e29e2798a4c3b24d1afeacb9a417b4fbf964dcd4bae5ee05bd5e45e945": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we only launch 4 workers.\nexport NWORKERS=4\n\n# The generator is defined via an ini file, using 20/40/40 sampling for different generators.\n# A random number is generated.\nRNDSIG=$(((RANDOM % 100)))\n\nCONFIGNAME=\"Generator_GapTriggered_LFgamma_np1_gap2.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# Execute the central anchor steering script, which involves:\n# * Deriving the timestamp\n# * Determining the interaction rate\n# * Extracting and preparing configurations (which detectors are included in the run, etc.)\n# * Running the simulation (and quality control).\n# To disable quality control, uncomment the following line:\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np1_gap2.sh"
        }
    ],
    "3681f2992765b4c2d57c47a5d8ebbc619d3237292df671e8903ba0a46b00dff4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script for configuring LF->ee enhanced dielectron MC simulation with LHC22o apass6 as the anchor\n#\n\n# Example of anchor configuration, sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this is used as the seed; if set, it takes precedence over SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# For pp interactions and 50 events per time frame, we start with 4 workers.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap4.sh"
        }
    ],
    "706b8f8ebcae1051966bcef1e60e527e790326b26611f5079031320433e0d070": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, only 4 workers are launched.\nexport NWORKERS=4\n\n# The generator is defined via an ini file.\n# Use 20/40/40 sampling for different generators.\n# Generate a random number.\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFee_random_np1_gap4.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# Execute the central anchor steering script; this process includes:\n# * Deriving the timestamp\n# * Determining the interaction rate\n# * Extracting and preparing configurations (which detectors are included in the run, etc.)\n# * Running the simulation (and quality control)\n# To disable quality control, uncomment the following line:\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap4.sh"
        }
    ],
    "eaf2db86d280daa13af882fc0c023ecd74795b1d2f5f0d5f3e97e511a47f56a6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6\n#\n\n# example anchoring\n# taken from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this is set and used as the seed; if set, it takes priority over SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp interactions and 50 events per time frame, we use only 4 workers.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np3_gap5.sh"
        }
    ],
    "35f7ed59fa23ce5a0f630953b84b52fb9c32ac043594dc158f7f8aa8c9167051": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we start with only 4 workers.\nexport NWORKERS=4\n\n# Specify the generator using an ini file\n# Apply 20/40/40 sampling for various generators\n# Generate a random number\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFgamma_np3_gap5.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# Execute the central anchor steering script; this process involves:\n# - determining the timestamp\n# - calculating the interaction rate\n# - extracting and preparing configurations (which detectors are included in the run, etc.)\n# - running the simulation (and quality control)\n# To disable quality control, uncomment the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np3_gap5.sh"
        }
    ],
    "e23c9edcaaa1ded200a232a86ee25cc8aaf921723017ff3c67b46492e820fbeb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script for configuring the HF enhanced dielectron MC simulation, anchored to LHC22o apass6\n#\n\n# Example configuration for anchoring\n# Referenced from: https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a2\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this is used as a seed; if set, it overrides the SEED value\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# For pp interactions and 50 events per time frame, only 4 workers are launched.\nexport NWORKERS=2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap7.sh"
        }
    ],
    "2d4772ec61d2a4f0d7451a8e3771ba0eb32394ec9ff7f1a440f31a2eb9bfa464": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we start only 4 workers.\nexport NWORKERS=2\n\n# define the generator using an ini file\n# use a 20/40/40 split for different generators\n# generate a random number\nRNDSIG=$(( $RANDOM % 100 ))\n\nif [[ $RNDSIG -ge 0 && $RNDSIG -lt 20 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_Charm_Gap7.ini\"\nelif [[ $RNDSIG -ge 20 && $RNDSIG -lt 40 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyForcedDecay_Gap7.ini\"\nelif [[ $RNDSIG -ge 40 && $RNDSIG -lt 100 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyNoForcedDecay_Gap7.ini\"\nfi\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap7.sh"
        }
    ],
    "59bf51448017ae2625457889ef29e8354b2679476853a6e2f7a50a4f8351bba9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the central anchor steering script; this process involves:\n# * calculating the timestamp\n# * determining the interaction rate\n# * retrieving and preparing configurations (such as which detectors are part of the run)\n# * running the simulation and quality control\n# To bypass quality control, uncomment this line:\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap7.sh"
        }
    ],
    "a9f44c2f9a9c21f2872daa8862b194c949247f176e228a532b821c7aaf2421bf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n#[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n#[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n# ----------------- SET UP LOCAL CCDB CACHE --------------------\n#export ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\n\n\n#NSIGEVENTS=${NSIGEVENTS:-10}\n#NWORKERS=${NWORKERS:-8}\n#NTIMEFRAMES=${NTIMEFRAMES:-1}\n#INTRATE=${INTRATE:-500000}\n\n#CONFIGNAME=\"Generator_GapTriggered_LFmumu_np1_gap5.ini\"\n\n#${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n     #-ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME  \\\n     #-confKeyBkg \"Diamond.width[2]=6\" -interactionRate ${INTRATE} \n\n# execute workflow\n#${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runPythia8GapTriggeredLFmumu_pp.sh"
        }
    ],
    "7cb6e2755f42fbff54d193002b65f3dd40627c6601cffd97694276c3b7fe2094": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ------------------- SET UP LOCAL CCDB CACHE -------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\nNSIGEVENTS=${NSIGEVENTS:-10}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\n\nCONFIGNAME=\"Generator_GapTriggered_LFmumu.ini\"\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n     -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME  \\\n     -confKeyBkg \"Diamond.width[2]=6\" -interactionRate ${INTRATE} \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runPythia8GapTriggeredLFmumu_pp.sh"
        }
    ],
    "e42a7fc6cfd65bec549c52b4caea0139f5e97b5b9d8862d379d6ece76bcc2b4b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6\n#\n\n# example anchoring\n# sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this is set and used as seed; when set, it takes precedence over SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp interactions and 50 events per time frame, only 4 workers are launched.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_np1_gap5.sh"
        }
    ],
    "2bff9398293b105691f9d13c940e706c4a857108dc40ed863a131c60d6551e36": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we launch only 4 workers.\nexport NWORKERS=4\n\n# specify the generator using an ini file\n# apply 20/40/40 sampling for various generators\n# generate a random number\nRNDSIG=$(( $RANDOM % 100 ))\n\nCONFIGNAME=\"Generator_GapTriggered_LFee_all_np1_gap5.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# execute the central anchor steering script; this involves\n# - determining the timestamp\n# - calculating the interaction rate\n# - extracting and preparing configurations (which detectors are included in the run)\n# - running the simulation (and performing quality control)\n# To disable quality control, uncomment the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_np1_gap5.sh"
        }
    ],
    "ac571114114555e82a803da85a8bc73a39b174139d844acbcb9087ea97605fb0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6\n#\n\n# example anchoring\n# sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this variable is set and used as a seed; if set, it overrides SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp interactions and 50 events per time frame, we start with 4 workers.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_np1_gap8.sh"
        }
    ],
    "b84b13d78a7c229733da07878f777ba4af0f11d1e7a26ab5910eef5a148705e9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we launch only 4 workers.\nexport NWORKERS=4\n\n# configure the generator using an ini file\n# employ 20/40/40 sampling for various generators\n# generate a random number\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFee_all_np1_gap8.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# execute the central anchor steering script; this step involves\n# * determining the timestamp\n# * calculating the interaction rate\n# * extracting and preparing configurations (identifying which detectors are part of the run, etc.)\n# * conducting the simulation and quality control\n# To disable quality control, uncomment the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_np1_gap8.sh"
        }
    ],
    "bb312b96cca77a1a39bd3865556a857bacea481256fe851929d2180fb2effe70": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6\n#\n\n# example anchoring\n# sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this is set and used as seed; when set, it overrides SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp interactions and 50 events per time frame, we run with 4 workers.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_np1_gap3.sh"
        }
    ],
    "bb0d23844278cd9aa538f58900da82a707d1f4c0670c7e2ef9cf09ff1eafaa52": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we start with 4 workers.\nexport NWORKERS=4\n\n# Set the generator using an ini file\n# Use 20/40/40 sampling for various generators\n# Generate a random number\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFee_all_np1_gap3.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# Execute the central anchor steering script; this process includes:\n# * Deriving the timestamp\n# * Determining the interaction rate\n# * Extracting and preparing configurations (which detectors are included in the run, etc.)\n# * Running the simulation (and QC)\n# To disable QC, uncomment the line below\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_np1_gap3.sh"
        }
    ],
    "a50c01a7f9c40a650c06f1edd23422d2b9774a02fbbf9c8e7ed09e9a3ab3280f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script for configuring LF->ee enhanced dielectron MC simulation linked to LHC22o apass6\n#\n\n# example configuration\n# derived from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this is set and serves as the seed; if set, it overrides SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp interactions and 50 events per time frame, only 4 workers are launched.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np5_gap5.sh"
        }
    ],
    "03b2150c334d597a188c0b125b041bae53d8d2919ed3f59363d12a6ab866fba6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we start with 4 workers.\nexport NWORKERS=4\n\n# Set the generator through an ini file\n# Apply 20/40/40 sampling for various generators\n# Generate a random number\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFgamma_np5_gap5.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# Execute the central anchor steering script; this process:\n# - Derives the timestamp\n# - Determines the interaction rate\n# - Extracts and prepares configurations (identifying which detectors are included in the run)\n# - Runs the simulation (and performs Quality Control)\n# To disable Quality Control, uncomment the following line:\n# export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np5_gap5.sh"
        }
    ],
    "554b66eb36a7f4edd2fcee69050b9fce03706911bb52db2fefdb946ca035ff99": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script for configuring LF->ee enhanced dielectron MC simulations anchored to LHC22o apass6\n#\n\n# Example anchoring parameters, sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this is utilized as the seed; if set, it overrides the SEED variable\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# For pp interactions and 50 events per time frame, we use only 4 workers.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap2.sh"
        }
    ],
    "600316fd1387506cc4a465ee025ceb62df7c2ad094c1173f81046583ce6fda2e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we start with 4 workers.\nexport NWORKERS=4\n\n# Specify the generator using an ini file\n# Utilize 20/40/40 sampling for various generators\n# Generate a random number\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFee_random_np1_gap2.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# Execute the central anchor steering script; this process includes:\n# - deriving the timestamp\n# - determining the interaction rate\n# - extracting and preparing configurations (identifying which detectors are part of the run)\n# - running the simulation (and performing quality control)\n# To disable quality control, uncomment the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap2.sh"
        }
    ],
    "30168aa5248c40e12955e75baa4625559f1b768b65859278c0bbd82e68fe80c2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script for configuring the simulation of LF->ee enhanced dielectron MC anchored to LHC22o apass6\n#\n\n# Example anchoring details sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this seed is set and used; if set, it overrides the SEED value\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# For pp interactions and 50 events per time frame, only 4 workers are launched.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap6.sh"
        }
    ],
    "fff8ee7004261a4a6f539616eaf31c62ae4e98ae0dc55f14d82ce2f8c9b55b54": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we initiate only 4 workers.\nexport NWORKERS=4\n\n# configure the generator using an ini file\n# apply 20/40/40 sampling for various generators\n# generate a random number\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFee_random_np1_gap6.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# execute the central anchor steering script; this process\n# * determines the timestamp\n# * calculates the interaction rate\n# * extracts and prepares configurations (identifying which detectors are included in the run, etc.)\n# * runs the simulation (and quality control)\n# To disable quality control, uncomment the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_random_np1_gap6.sh"
        }
    ],
    "6d784bbfe91e1d50588b59857e0f5139a3c349735c75925dc18588606372d9cf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ---------- CONFIGURE LOCAL CCDB CACHE -------------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\n\nNSIGEVENTS=${NSIGEVENTS:-10}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nGAP=${GAP:-5} \nNP=${NP:-1} \n\nCONFIGNAME=\"Generator_GapTriggered_LFee_all_np${NP}_gap${GAP}.ini\"\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n     -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME  \\\n     -confKeyBkg \"Diamond.width[2]=6\" -interactionRate ${INTRATE} \n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runPythia8GapTriggeredLFee_pp.sh"
        }
    ],
    "1cd550bc6f7424cabd2cbd088ce2c57453d17895f1ed05c2ca24d1cad6fafb83": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script for configuring the HF enhanced dielectron MC simulation anchored to LHC22o apass6\n#\n\n# Example configuration\n# Adapted from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a2\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this is used as a seed; if set, it overrides the SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# For pp interactions and 50 events per time frame, we launch only 4 worker processes.\nexport NWORKERS=2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap5.sh"
        }
    ],
    "6122e342fdd9b5c44d373fd4d7adb562b61f7c7b580908420b4ed0358ce5ed5a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp interactions and processing 50 events per TF, we initiate only 4 workers.\nexport NWORKERS=2\n\n# Specify the generator using an ini file\n# Employ 20/40/40 sampling for various generators\n# Generate a random number\nRNDSIG=$(($RANDOM % 100))\n\n\nif [[ $RNDSIG -ge 0 && $RNDSIG -lt 30 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_Charm_Gap5.ini\"\nelif [[ $RNDSIG -ge 30 && $RNDSIG -lt 50 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyForcedDecay_Gap5.ini\"\nelif [[ $RNDSIG -ge 50 && $RNDSIG -lt 100 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyNoForcedDecay_Gap5.ini\"\nfi\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap5.sh"
        }
    ],
    "5ad07f2df32bda46a7dd63f0f428ad2ba61c492b62155b31f964daa133bc9cfd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the central anchor steering script; this involves\n# * determining the timestamp\n# * calculating the interaction rate\n# * extracting and preparing configurations (such as which detectors are included in the run)\n# * running the simulation (and quality control)\n# To skip quality control, remove the comment from the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap5.sh"
        }
    ],
    "57868410b36528efb508b7e9daf962bf3b37bd6acdc4ec7fc2d6731ea55741fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script to steer LF->ee enhanced dielectron MC simulation anchored to LHC22o apass6\n#\n\n# Example anchoring configuration\n# sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this is used as the seed; when set, it takes precedence over SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# For pp interactions and 50 events per time frame, we launch 4 workers.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_np1_gap10.sh"
        }
    ],
    "d47e5a6ce49933dc75af85e8cff5fdef9f1ec6934569035a621ce4ab0d9e8921": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we launch only 4 workers.\nexport NWORKERS=4\n\n# configure the generator using an ini file\n# apply 20/40/40 sampling for various generators\n# generate a random number\nRNDSIG=$(((RANDOM % 100)))\n\nCONFIGNAME=\"Generator_GapTriggered_LFee_all_np1_gap10.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# execute the central anchor steering script; this process:\n# * calculates the timestamp\n# * determines the interaction rate\n# * identifies and prepares configurations (which detectors are included in the run)\n# * runs the simulation (and QC checks)\n# To disable QC, uncomment the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFee_pp_np1_gap10.sh"
        }
    ],
    "92ef2ac9fc79a9a89362000bb8ab32ae1ded5fa00dcedd23615fbcb481e0a512": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Steering script for LF->ee enhanced dielectron MC anchored to LHC22o apass6\n#\n\n# example anchoring\n# sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this is set and used as seed; when set, it overrides SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp collisions and 50 events per time frame, only 4 workers are launched.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np1_gap4.sh"
        }
    ],
    "5a9912bf1a81286e8b717c22cef378877e1eed2d7d94519be72433095a981244": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# for pp collisions and 50 events per TF, we start only 4 workers.\nexport NWORKERS=4\n\n# specify the generator using an ini file\n# employ 20/40/40 sampling for various generators\n# generate a random number\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFgamma_np1_gap4.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# execute the central anchor steering script; this process includes:\n# * calculating the timestamp\n# * determining the interaction rate\n# * extracting and preparing configurations (identifying which detectors are included in the run)\n# * running the simulation (and quality control)\n# To deactivate quality control, uncomment the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np1_gap4.sh"
        }
    ],
    "0a8c3893e6ec73e92c34ffdba77de7346afdd985c2d736887cfa8df762198270": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script for configuring the HF enhanced dielectron MC simulation based on LHC22o apass6\n#\n\n# example configuration\n# sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a2\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this is used as the seed; when set, it takes precedence over SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp interactions with 50 events per time frame, we use 2 workers.\nexport NWORKERS=2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap3.sh"
        }
    ],
    "7848ec8c8adb3c9d7e5bfceb6fc349dfa7c19fd79fa774fb7fd26c099e324ff5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions with 50 events per TF, we activate only 4 workers.\nexport NWORKERS=2\n\n# Initialize the generator using an ini file\n# Apply 20/40/40 sampling for various generators\n# Generate a random number\nRNDSIG=$(((RANDOM % 100)))\n\nif [[ $RNDSIG -ge 0 && $RNDSIG -lt 20 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_Charm_Gap3.ini\"\nelif [[ $RNDSIG -ge 20 && $RNDSIG -lt 40 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyForcedDecay_Gap3.ini\"\nelif [[ $RNDSIG -ge 40 && $RNDSIG -lt 100 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyNoForcedDecay_Gap3.ini\"\nfi\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap3.sh"
        }
    ],
    "39490736c2b22835ac7220153b812dd3c12511bd60e4f90a22425a17a1e31cb1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the central anchor steering script; this involves\n# * calculating the timestamp\n# * determining the interaction rate\n# * retrieving and preparing configurations (such as which detectors are included in the run)\n# * executing the simulation (and quality control)\n# To turn off quality control, uncomment the line below\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap3.sh"
        }
    ],
    "679da21e0b051420c2c93027ead4865457ad321ead91f128aae5e8b61d218111": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Steering script for HF enhanced dielectron MC anchored to LHC22o apass6\n#\n\n# example anchoring\n# sourced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a2\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this is set and used as a seed; if set, it overrides SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# for pp interactions and 50 events per time frame, only 4 workers are launched.\nexport NWORKERS=2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap4.sh"
        }
    ],
    "ce875db7774f7d3346e7bfa59e32cbd28df52ccf02bfbf11672ace41e41e0f44": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we initiate only 4 workers.\nexport NWORKERS=2\n\n# Specify the generator through an ini file\n# Utilize 20/40/40 sampling for various generators\n# Generate a random number\nRNDSIG=$(( $RANDOM % 100 ))\n\nif [[ $RNDSIG -ge 0 && $RNDSIG -lt 20 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_Charm_Gap4.ini\"\nelif [[ $RNDSIG -ge 20 && $RNDSIG -lt 40 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyForcedDecay_Gap4.ini\"\nelif [[ $RNDSIG -ge 40 && $RNDSIG -lt 100 ]];\nthen\n        CONFIGNAME=\"GeneratorHFGapTriggered_BeautyNoForcedDecay_Gap4.ini\"\nfi\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap4.sh"
        }
    ],
    "d1c4798e23365b95014eeb8ff38241914b07a227dad32887991f05210579d01d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the central script for steering the anchor simulation; this involves\n# * calculating the timestamp\n# * determining the interaction rate\n# * extracting and preparing configurations (such as which detectors are included in the run)\n# * running the simulation and quality control (QC)\n# To bypass QC, uncomment the following line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredHFGapToDielectrons_pp_Gap4.sh"
        }
    ],
    "53441e6dbac60fe183e0d917d380ef626ab3d3e7030890d7a30a158da51dfcc9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------- SET LOCAL CCDB CACHE --------------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\n\nNSIGEVENTS=${NSIGEVENTS:-10}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\nGAP=${GAP:-5} \nNP=${NP:-1} \n\nCONFIGNAME=\"Generator_GapTriggered_LFgamma_np${NP}_gap${GAP}.ini\"\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n     -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME  \\\n     -confKeyBkg \"Diamond.width[2]=6\" -interactionRate ${INTRATE} \n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runPythia8GapTriggeredLFgamma_pp.sh"
        }
    ],
    "a0850c09745859cc64dbdf530231176e22ead83cf244969a6abdad57527b7165": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# ensure O2DPG and O2 are set up\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG must be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 1\n\n# ----------- SET UP LOCAL CCDB CACHE -------------------------\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n\n\nRNDSEED=${RNDSEED:-0}\nNSIGEVENTS=${NSIGEVENTS:-1}\nNWORKERS=${NWORKERS:-8}\nNTIMEFRAMES=${NTIMEFRAMES:-1}\nINTRATE=${INTRATE:-500000}\n[[ ${SPLITID} != \"\" ]] && SEED=\"-seed ${SPLITID}\" || SEED=\"\"\n\n# generate a random number\nRNDSIG=$RANDOM % 100\necho $RNDSIG\n\nif [[ $RNDSIG -ge 0 && $RNDSIG -lt 20 ]];\nthen\n        CONFIGNAME=\"GeneratorHFFull_ccbarToDielectrons.ini\"\nelif [[ $RNDSIG -ge 20 && $RNDSIG -lt 40 ]];\nthen\n        CONFIGNAME=\"GeneratorHFFull_bbbarToDielectrons.ini\"\nelif [[ $RNDSIG -ge 40 && $RNDSIG -lt 100 ]];\nthen\n        CONFIGNAME=\"GeneratorHFFull_bbbarToDDbarToDielectrons.ini\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runHFFullToDielectrons_pp.sh"
        }
    ],
    "f8c6807cc343244305005fb1e6a1edced181fd81c828ec08d7476d3357826411": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n     ${SEED} \\\n     -trigger \"external\" -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME  \\\n     -confKeyBkg \"Diamond.width[2]=6\" -interactionRate ${INTRATE} \n\n# execute workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --cpu-limit 32",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runHFFullToDielectrons_pp.sh"
        }
    ],
    "c56e681cc3f31ebd80870eae30840e5209629df8afe38e82efd7384029802e70": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# Script to steer LF->ee enhanced dielectron MC using LHC22o apass6 as the anchor\n#\n\n# Example anchoring configuration\n# Referenced from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass6\nexport ALIEN_JDL_MCANCHOR=apass6\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=526641\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24b1b\nexport ALIEN_JDL_LPMANCHORRUN=526641\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o\nexport ALIEN_JDL_LPMANCHORYEAR=2022\nexport ALIEN_JDL_OUTPUT=*.dat@disk=1,*.txt@disk=1,*.root@disk=2\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=20\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this is used as the seed; when set, it overrides the SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=0\n\n# For pp interactions and 50 events per time frame, only 4 workers are launched.\nexport NWORKERS=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np1_gap6.sh"
        }
    ],
    "3d230ce2f4a96fdc19251af63cc09074ee71a3fa9bf29bfa2a3d9697351741be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we only launch 4 workers.\nexport NWORKERS=4\n\n# Define the generator using an ini file.\n# Use 20/40/40 sampling for different generators.\n# Generate a random number.\nRNDSIG=$(($RANDOM % 100))\n\nCONFIGNAME=\"Generator_GapTriggered_LFgamma_np1_gap6.ini\"\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen external -ini $O2DPG_ROOT/MC/config/PWGEM/ini/$CONFIGNAME\"\n\n# Execute the central anchor steering script; this includes:\n# * Deriving the timestamp.\n# * Deriving the interaction rate.\n# * Extracting and preparing configurations (which detectors are included in the run, etc.).\n# * Running the simulation and quality control (QC).\n# To disable QC, uncomment the following line:\n# export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/PWGEM/runAnchoredPythia8GapTriggeredLFgamma_pp_np1_gap6.sh"
        }
    ],
    "f01e8bc04d616f3ee233dc51e962dcbf3b5cd6049d29ad42e3552a513e1ed1f7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# incorporate distortion maps\n# https://alice.its.cern.ch/jira/browse/O2-3346?focusedCommentId=300982&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-300982\n#\n# export O2DPG_ENABLE_TPC_DISTORTIONS=ON\n# SCFile=$PWD/distortions_5kG_lowIR.root # file needs to be downloaded\n# export O2DPG_TPC_DIGIT_EXTRA=\" --distortionType 2 --readSpaceCharge ${SCFile} \"\n\n#\n# process for setting up and running an anchored MC\n#\n\n########################\n# supporting functions #\n########################\n\necho_info()\n{\n  echo \"INFO [anchorMC]: ${*}\"\n}\n\necho_error()\n{\n  echo \"ERROR [anchorMC]: ${*}\"\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "da3cbf77963a8b06345e3d0c6f4b018a43cb963881d31db1f1de42ac64c7ad0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print_help()\n{\n  echo \"Usage: ./anchorMC.sh\"\n  echo\n  echo \"It requires O2 and O2DPG to be loaded from alienv.\"\n  echo\n  echo \"Ensure that the following environment variables are set:\"\n  echo \"ALIEN_JDL_LPMANCHORPASSNAME or ANCHORPASSNAME,\"\n  echo \"ALIEN_JDL_MCANCHOR or MCANCHOR,\"\n  echo \"ALIEN_JDL_LPMPASSNAME or PASSNAME,\"\n  echo \"ALIEN_JDL_LPMRUNNUMBER or RUNNUMBER,\"\n  echo \"ALIEN_JDL_LPMPRODUCTIONTYPE or PRODUCTIONTYPE,\"\n  echo \"ALIEN_JDL_LPMINTERACTIONTYPE or INTERACTIONTYPE,\"\n  echo \"ALIEN_JDL_LPMPRODUCTIONTAG or PRODUCTIONTAG,\"\n  echo \"ALIEN_JDL_LPMANCHORRUN or ANCHORRUN,\"\n  echo \"ALIEN_JDL_LPMANCHORPRODUCTION or ANCHORPRODUCTION,\"\n  echo \"ALIEN_JDL_LPMANCHORYEAR or ANCHORYEAR,\"\n  echo\n  echo \"Additionally, set:\"\n  echo \"NTIMEFRAMES,\"\n  echo \"SPLITID,\"\n  echo \"PRODSPLIT.\"\n  echo\n  echo \"Optional settings include:\"\n  echo \"ALIEN_JDL_CPULIMIT or CPULIMIT, to define the CPU limit of the workflow runner, with a default of 8,\"\n  echo \"NWORKERS, to specify the number of workers for detector transport, with a default of 8,\"\n\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "3eda5b8270c322b4dc8e8db91f9620fd92767ad1b6e1dd870a18f2bb0923a22d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "NWORKERS, define the number of workers for detector transport, with a default of 8;\nALIEN_JDL_SIMENGINE or SIMENGINE, select the transport engine, with a default of TGeant4;\nALIEN_JDL_WORKFLOWDETECTORS, specify the detectors to be included, with a default of ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,EMC,PHS,CPV,HMP,CTP;\nALIEN_JDL_ANCHOR_SIM_OPTIONS, add extra options to the workflow creation, with a default of -gen pythia8;\nALIEN_JDL_ADDTIMESERIESINMC, execute TPC time series. Default is on (1); disable by setting to 0;\nALIEN_JDL_MC_ORBITS_PER_TF=N, enforce a fixed number of orbits per timeframe, instead of relying on CCDB;\nALIEN_JDL_RUN_TIME_SPAN_FILE=FILE, utilize a run-time-span file to exclude periods of poor data-taking;\nALIEN_JDL_INVERT_IRFRAME_SELECTION, reverse the choice made by ALIEN_JDL_RUN_TIME_SPAN_FILE;\nALIEN_JDL_CCDB_CONDITION_NOT_AFTER, set the condition_not_after timestamp for CCDB queries.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "84e2fba53c86e13b73e21ebaca7d8a9dc7ac6a50a3c3f93a39c7f0803c221e97": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"DISABLE_QC, use this to turn off quality control, for example, setting it to 1\"\n    echo \"CYCLE, to specify a cycle number other than 0\"\n    echo \"NSIGEVENTS, to set a maximum number of events within a timeframe (excluding orbit-early) events\"\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "989fd0605aff2e5b7c5412c0dfc378817d2a0efd75d612efc76a35b3e23dadac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Prevent the script from sourcing to avoid unexpected outcomes when exit is used\nSCRIPT_NAME=\"$(basename \"$(test -L \"$0\" && readlink \"$0\" || echo \"$0\")\")\"\nif [ \"${SCRIPT_NAME}\" != \"$(basename ${BASH_SOURCE[0]})\" ] ; then\n    echo_error \"This script cannot be sourced\" >&2\n    return 1\nfi\n\nwhile [ \"$1\" != \"\" ] ; do\n    case $1 in\n        --help|-h ) shift\n                    print_help\n                    exit 0\n                    ;;\n        * ) echo \"Unknown argument ${1}\"\n            exit 1\n            ;;\n    esac\ndone\n\n# ensure that O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo_error \"O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo_error \"O2 needs to be loaded\" && exit 1\n\n# verify that jq is installed\nwhich jq >/dev/null 2>&1\n[ \"${?}\" != \"0\" ] && { echo_error \"jq is not installed. Please install or load via alienv.\" ; exit 1 ; }\n\nalien-token-info >/dev/null 2>&1\n[ \"${?}\" != \"0\" ] && { echo_error \"No GRID token found, necessary for running the script.\" ; exit 1 ; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "e12587af3f28903b6b96a04740cbdea50c2f62cfee75447fb0972d121f17f1fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#################################################################\n# Set all necessary variables to identify an anchored production #\n#################################################################\n\n# Accept both \"ALIEN_JDL_LPM<KEY>\" and \"KEY\" formats\n\nNote: The original text is quite short, and the paraphrasing maintains its essence and length.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "f23aa518feb243df8f40ebd32657b591d793caeb0a5ad45c70f41ebb7908dd9d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# the default values are provided for only four of these\nexport ALIEN_JDL_CPULIMIT=${ALIEN_JDL_CPULIMIT:-${CPULIMIT:-8}}\nexport ALIEN_JDL_SIMENGINE=${ALIEN_JDL_SIMENGINE:-${SIMENGINE:-TGeant4}}\nexport ALIEN_JDL_WORKFLOWDETECTORS=${ALIEN_JDL_WORKFLOWDETECTORS:-ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,EMC,PHS,CPV,HMP,CTP}\n# these can include extra options to be passed to o2dpg_sim_workflow_anchored.py and subsequently to o2dpg_sim_workflow.py\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=${ALIEN_JDL_ANCHOR_SIM_OPTIONS:--gen pythia8}\n# all other values must be defined by the user or externally\nexport ALIEN_JDL_LPMANCHORPASSNAME=${ALIEN_JDL_LPMANCHORPASSNAME:-${ANCHORPASSNAME}}\n# LPMPASSNAME is utilized in O2 and O2DPG scripts, while ALIEN_JDL_LPMANCHORPASSNAME is the parameter set in JDL templates; therefore, use ALIEN_JDL_LPMANCHORPASSNAME and define ALIEN_JDL_LPMPASSNAME accordingly\nexport ALIEN_JDL_LPMPASSNAME=${ALIEN_JDL_LPMANCHORPASSNAME}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "98fccb61358f168273588a5c9e8e2054bd025fad31f926da76bed397809f15e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT ALIEN_JDL_LPMPASSNAME=ALIEN_JDL_LPMANCHORPASSNAME\nEXPORT ALIEN_JDL_LPMRUNNUMBER=ALIEN_JDL_LPMRUNNUMBER \\[${ALIEN_JDL_LPMRUNNUMBER}:-${RUNNUMBER}\\]\nEXPORT ALIEN_JDL_LPMPRODUCTIONTYPE=ALIEN_JDL_LPMPRODUCTIONTYPE \\[${ALIEN_JDL_LPMPRODUCTIONTYPE}:-${PRODUCTIONTYPE}\\]\nEXPORT ALIEN_JDL_LPMINTERACTIONTYPE=ALIEN_JDL_LPMINTERACTIONTYPE \\[${ALIEN_JDL_LPMINTERACTIONTYPE}:-${INTERACTIONTYPE}\\]\nEXPORT ALIEN_JDL_LPMPRODUCTIONTAG=ALIEN_JDL_LPMPRODUCTIONTAG \\[${ALIEN_JDL_LPMPRODUCTIONTAG}:-${PRODUCTIONTAG}\\]\nEXPORT ALIEN_JDL_LPMANCHORRUN=ALIEN_JDL_LPMANCHORRUN \\[${ALIEN_JDL_LPMANCHORRUN}:-${ANCHORRUN}\\]\nEXPORT ALIEN_JDL_LPMANCHORPRODUCTION=ALIEN_JDL_LPMANCHORPRODUCTION \\[${ALIEN_JDL_LPMANCHORPRODUCTION}:-${ANCHORPRODUCTION}\\]\nEXPORT ALIEN_JDL_LPMANCHORYEAR=ALIEN_JDL_LPMANCHORYEAR \\[${ALIEN_JDL_LPMANCHORYEAR}:-${ANCHORYEAR}\\]\n# determine if TPC time series should be run; default is on, can be disabled by setting to 0\nEXPORT ALIEN_JDL_ADDTIMESERIESINMC=ALIEN_JDL_ADDTIMESERIESINMC \\[${ALIEN_JDL_ADDTIMESERIESINMC}:-1\\}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "f94e35dc4db4b5283d79bb891d185ee25f9f738ba925904731cddb861995d186": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# store the production tag temporarily; it will be replaced with an anchor tag later\nALIEN_JDL_LPMPRODUCTIONTAG_KEEP=$ALIEN_JDL_LPMPRODUCTIONTAG\necho_info \"Replacing ALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMPRODUCTIONTAG with ALIEN_JDL_LPMANCHORPRODUCTION=$ALIEN_JDL_LPMANCHORPRODUCTION for simulating the reco pass...\"\nALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMANCHORPRODUCTION\n\nif [[ $ALIEN_JDL_ANCHOR_SIM_OPTIONS == *\"--tpc-distortion-type 2\"* ]]; then\n  export O2DPG_ENABLE_TPC_DISTORTIONS=ON\n  # specify the SCALING SOURCE as CTP for MC if not explicitly defined\n  export ALIEN_JDL_TPCSCALINGSOURCE=${ALIEN_JDL_TPCSCALINGSOURCE:-\"CTP\"}\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "c77e2d66dedaad52d854205bdcb123d75b05af08ed425dd29d06bba855b0d741": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verify required variables are set\n[ -z \"${ALIEN_JDL_LPMANCHORPASSNAME}\" ] && { echo_error \"Configure ALIEN_JDL_LPMANCHORPASSNAME or ANCHORPASSNAME\" ; exit 1 ; }\n[ -z \"${ALIEN_JDL_LPMRUNNUMBER}\" ] && { echo_error \"Configure ALIEN_JDL_LPMRUNNUMBER or RUNNUMBER\" ; exit 1 ; }\n[ -z \"${ALIEN_JDL_LPMPRODUCTIONTYPE}\" ] && { echo_error \"Configure ALIEN_JDL_LPMPRODUCTIONTYPE or PRODUCTIONTYPE\" ; exit 1 ; }\n[ -z \"${ALIEN_JDL_LPMINTERACTIONTYPE}\" ] && { echo_error \"Configure ALIEN_JDL_LPMINTERACTIONTYPE or INTERACTIONTYPE\" ; exit 1 ; }\n[ -z \"${ALIEN_JDL_LPMPRODUCTIONTAG}\" ] && { echo_error \"Configure ALIEN_JDL_LPMPRODUCTIONTAG or PRODUCTIONTAG\" ; exit 1 ; }\n[ -z \"${ALIEN_JDL_LPMANCHORRUN}\" ] && { echo_error \"Configure ALIEN_JDL_LPMANCHORRUN or ANCHORRUN\" ; exit 1 ; }\n[ -z \"${ALIEN_JDL_LPMANCHORPRODUCTION}\" ] && { echo_error \"Configure ALIEN_JDL_LPMANCHORPRODUCTION or ANCHORPRODUCTION\" ; exit 1 ; }\n[ -z \"${ALIEN_JDL_LPMANCHORYEAR}\" ] && { echo_error \"Configure ALIEN_JDL_LPMANCHORYEAR or ANCHORYEAR\" ; exit 1 ; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "80cd5fc794dde0a208359d179932875791ccb113ad8dec7224a6af1af5bcc9df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[ -z \"${NTIMEFRAMES}\" ] && { echo_error \"Set NTIMEFRAMES\" ; exit 1 ; }\n[ -z \"${SPLITID}\" ] && { echo_error \"Set SPLITID\" ; exit 1 ; }\n[ -z \"${PRODSPLIT}\" ] && { echo_error \"Set PRODSPLIT\" ; exit 1 ; }\n\n# The number of signal events can be specified, but it's generally only relevant in specific expert scenarios. By default, the final event count is decided by the timeframe length.\nif [ -z \"${NSIGEVENTS}\" ]; then\n  NSIGEVENTS=10000 # this is just a large number; in the simulation, the event count is the lesser of this number and what can fit into a single timeframe, based on the interaction rate. This number is a reasonable upper limit corresponding to approximately 5696 collisions that fit into 32 LHC orbits at a 2MHz interaction rate.\nfi\n\nif [ -z \"${CYCLE}\" ]; then\n  echo_info \"No CYCLE number provided ... defaulting to 0\"\n  CYCLE=0\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "79215e4e234d47b1c516c904d73d18b2f56cb00fc01f2f2742b0c8c39967d32b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ -z \"${CYCLE}\" ]; then\n  echo_info \"No CYCLE number specified ... setting it to 0\"\n  CYCLE=0\nfi\n\n# this script produces a precise reproduction script for this job\n# which can be used for local debugging and similar purposes.\nif [[ -n \"${ALIEN_PROC_ID}\" && -n \"${JALIEN_WSPORT}\" ]]; then\n  ${O2DPG_ROOT}/GRID/utils/getReproducerScript.sh ${ALIEN_PROC_ID}\nfi\n\n# maintain a genuine default\nNWORKERS=${NWORKERS:-8}\n# set a default seed if it's not provided\nSEED=${ALIEN_PROC_ID:-${SEED:-1}}\n\nONCVMFS=0\n\nif [ \"${ALIEN_JDL_O2DPG_OVERWRITE}\" ]; then\n  echo \"Setting O2DPG_ROOT to the overwritten path ${ALIEN_JDL_O2DPG_OVERWRITE}\"\n  export O2DPG_ROOT=${ALIEN_JDL_O2DPG_OVERWRITE}\nfi\n\nexport > env_base.env\n\nif ! declare -F module > /dev/null; then\n  module() {\n    eval \"$(/usr/bin/modulecmd bash \"$@\")\";\n  }\n  export -f module\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "5739ff024cb8c30f5bc0a6c74492dbbc20dfd0c80ace592edbea6ff47a9a73de": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ \"${BASEDIR}\" == /cvmfs/* ]] && ONCVMFS=1\nif [ ! \"${MODULEPATH}\" ]; then\n  export MODULEPATH=${BASEDIR}/../Modules/modulefiles\n  if [ \"${ONCVMFS}\" == \"1\" ]; then\n    PLATFORM=$(echo \"${BASEDIR}\" | sed -E 's|.*/([^/]+)/Packages|\\1|')\n    export MODULEPATH=${MODULEPATH}:${BASEDIR}/../../etc/toolchain/modulefiles/${PLATFORM}\n  fi\n  echo \"The determined Modulepath is ${MODULEPATH}\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "17540b2478202819e5f4e3539220033540335b524693c5c78b2f0fcdd2a0b761": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#<----- START OF part that should run under a clean alternative software environment if this was given ------\nif [ \"${ALIEN_JDL_O2DPG_ASYNC_RECO_TAG}\" ]; then\n  if [ \"${LOADEDMODULES}\" ]; then\n    export > env_before_stashing.env\n    echo \"Saving initial module environment\"\n    module save initial_modules.list # we save the current modules environment\n    module list --no-pager\n    module purge --no-pager\n    export > env_after_stashing.env\n    echo \"Module environment after purge\"\n    module list --no-pager\n  fi\n  echo_info \"Using tag ${ALIEN_JDL_O2DPG_ASYNC_RECO_TAG} to setup anchored MC\"\n  /cvmfs/alice.cern.ch/bin/alienv printenv \"${ALIEN_JDL_O2DPG_ASYNC_RECO_TAG}\" &> async_environment.env\n  source async_environment.env\n  export > env_async.env\nfi\n\n# default async_pass.sh script\nDPGRECO=$O2DPG_ROOT/DATA/production/configurations/asyncReco/async_pass.sh\n# default destenv_extra.sh script\nDPGSETENV=$O2DPG_ROOT/DATA/production/configurations/asyncReco/setenv_extra.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "1c7416e718184b01b6a890a8986ece9da829d2a276fe33b6182549b2b1163fe9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# It is assumed that an async_pass.sh script is available in the current directory, and if so, it should be used.\nif [[ -f async_pass.sh ]]; then\n    # Make the script executable if it isn't already.\n    chmod +x async_pass.sh\n    DPGRECO=./async_pass.sh\nelse\n    cp -v $DPGRECO .\nfi\n\n# If setenv_extra.sh is not present in this directory, indicating no special version is included with this production, copy the default one.\nif [[ ! -f setenv_extra.sh ]]; then\n    cp ${DPGSETENV} .\n    echo_info \"Using the default setenv_extra.sh from ${DPGSETENV}.\"\nelse\n    echo_info \"setenv_extra.sh is found in the current working directory, using it.\"\nfi\n\nchmod u+x setenv_extra.sh\n\necho_info \"Setting up DPGRECO to ${DPGRECO}\"\n\n# Remove the line that runs the workflow if there is no data input specified.\n[ ${CTF_TEST_FILE} ] || sed -i '/WORKFLOWMODE=run/d' async_pass.sh\n\n# Generate the workflow file that can be parsed.\nexport IGNORE_EXISTING_SHMFILES=1\ntouch list.list",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "fb46014e6bb683b029df60537c7cc39f7c786510460025ecd223fc0c386361c4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the async_pass.sh script and direct its output to a log file for review and data extraction\n./async_pass.sh ${CTF_TEST_FILE:-\"\"} 2>&1 > async_pass_log.log\nRECO_RC=$?\n\necho_info \"async_pass.sh completed with return code ${RECO_RC}\"\n\nif [[ \"${RECO_RC}\" != \"0\" ]]; then\n  exit ${RECO_RC}\nfi\n\n# verify that workflowconfig.log was generated correctly\nif [[ ! -f workflowconfig.log ]]; then\n  echo \"workflowconfig.log file not found\"\n  exit 1\nfi\n\nexport ALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMPRODUCTIONTAG_KEEP\necho_info \"Restoring ALIEN_JDL_LPMPRODUCTIONTAG to $ALIEN_JDL_LPMPRODUCTIONTAG\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "86c099309b56041b85d6fe058dd5808983769deab8e04c61247a9af5bbca337d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# remove the temporary software environment\nif [ \"${ALIEN_JDL_O2DPG_ASYNC_RECO_TAG}\" ]; then\n  module purge --no-pager\n  # revert to the initial software configuration\n  echo \"Reverting to initial configuration\"\n  module --no-pager restore initial_modules.list\n  module saverm initial_modules.list\n  if [ \"${ALIEN_JDL_O2DPG_OVERWRITE}\" ]; then\n    echo \"Resetting O2DPG_ROOT to the overwritten path ${ALIEN_JDL_O2DPG_OVERWRITE}\"\n    export O2DPG_ROOT=${ALIEN_JDL_O2DPG_OVERWRITE}\n  fi\nfi\n#<----- END OF section that should revert to the clean initial environment if needed ------\n\n# proceed to generate the local MC configuration file --> config-json.json\n# the new configuration output will include blacklist functionality\nASYNC_CONFIG_BLACKLIST=${ASYNC_CONFIG_BLACKLIST:-${O2DPG_ROOT}/MC/run/ANCHOR/anchor-dpl-options-blacklist.json}\n${O2DPG_ROOT}/MC/bin/o2dpg_dpl_config_tools.py workflowconfig.log ${ASYNC_CONFIG_BLACKLIST} config-json.json\nASYNC_WF_RC=${?}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "5c0658257253b585e85d5ddb4505a15fe95f1dff4e8d8c78f96c0984ca1a5720": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# check for the validity of the configuration\nif [[ \"${ASYNC_WF_RC}\" != \"0\" || `grep \"ConfigParams\" config-json.json 2> /dev/null | wc -l` == \"0\" ]]; then\n  echo_error \"Issue detected in anchor configuration. Stopping the process.\"\n  exit 1\nfi\n\n# -- GENERATE THE MC JOB DESCRIPTION TIED TO THE RUN --\n\nMODULES=\"--skipModules ZDC\"\n# Ensure this is specified clearly\nALICEO2_CCDB_LOCALCACHE=${ALICEO2_CCDB_LOCALCACHE:-$(pwd)/ccdb}\n\n# publish MCPRODINFO for the initial jobs in a production run\n# if an external script sets PUBLISH_MCPRODINFO, it will be published regardless\nif [ -z \"$PUBLISH_MCPRODINFO\" ] && [ \"$SPLITID\" -lt 20 ]; then\n  PUBLISH_MCPRODINFO_OPTION=\"--publish-mcprodinfo\"\n  echo \"MCProdInfo will be published\"\nelse\n  echo \"MCProdInfo will not be published\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "0a3c477ab6725d7e85429587f969396d2da3fd0c93899802f2c361b0006f4cd5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# these parameters will be processed by o2dpg_sim_workflow_anchored.py\nbaseargs=\"-tf ${NTIMEFRAMES} --split-id ${SPLITID} --prod-split ${PRODSPLIT} --cycle ${CYCLE} --run-number ${ALIEN_JDL_LPMRUNNUMBER}                               \\\n          ${ALIEN_JDL_RUN_TIME_SPAN_FILE:+--run-time-span-file ${ALIEN_JDL_RUN_TIME_SPAN_FILE} ${ALIEN_JDL_INVERT_IRFRAME_SELECTION:+--invert-irframe-selection}}       \\\n          ${ALIEN_JDL_MC_ORBITS_PER_TF:+--orbitsPerTF ${ALIEN_JDL_MC_ORBITS_PER_TF}} ${PUBLISH_MCPRODINFO_OPTION}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "52c73739b9337362de4fd780e439f03e573742e3403683ab1a379f53c92ccfa3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# these arguments will also be provided but will ultimately be processed by o2dpg_sim_workflow.py, which is invoked by o2dpg_sim_workflow_anchored.py\nremainingargs=\"-seed ${SEED} -ns ${NSIGEVENTS} --include-local-qc --pregenCollContext\"\nremainingargs=\"${remainingargs} -e ${ALIEN_JDL_SIMENGINE} -j ${NWORKERS}\"\nremainingargs=\"${remainingargs} -productionTag ${ALIEN_JDL_LPMPRODUCTIONTAG:-alibi_anchorTest_tmp}\"\n# prepend(!) ALIEN_JDL_ANCHOR_SIM_OPTIONS\n# because the last argument takes precedence, e.g., -productionTag cannot be altered by the user\nremainingargs=\"${ALIEN_JDL_ANCHOR_SIM_OPTIONS} ${remainingargs} --anchor-config config-json.json\"\n# apply the software tagging choice\n# remainingargs=\"${remainingargs} ${ALIEN_JDL_O2DPG_ASYNC_RECO_TAG:+--alternative-reco-software ${ALIEN_JDL_O2DPG_ASYNC_RECO_TAG}}\"\nALIEN_JDL_O2DPG_ASYNC_RECO_FROMSTAGE=${ALIEN_JDL_O2DPG_ASYNC_RECO_FROMSTAGE:-RECO}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "56d0b0860c87b74e3b52ff3a9710968c07460caf9722f8636863c9414a5398c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ALIEN_JDL_O2DPG_ASYNC_RECO_FROMSTAGE=${ALIEN_JDL_O2DPG_ASYNC_RECO_FROMSTAGE:-RECO}\nremainingargs=\"${remainingargs} ${ALIEN_JDL_O2DPG_ASYNC_RECO_TAG:+--alternative-reco-software ${PWD}/env_async.env@${ALIEN_JDL_O2DPG_ASYNC_RECO_FROMSTAGE}}\"\n# potentially add CCDB timemachine timestamp\nremainingargs=\"${remainingargs} ${ALIEN_JDL_CCDB_CONDITION_NOT_AFTER:+--condition-not-after ${ALIEN_JDL_CCDB_CONDITION_NOT_AFTER}}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "6aefc14f1b02284fa3b29f2bfc81315377d36b2cc342971f5d5b4d508584ed52": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo_info \"baseargs passed to o2dpg_sim_workflow_anchored.py: ${baseargs}\"\necho_info \"remainingargs forwarded to o2dpg_sim_workflow.py: ${remainingargs}\"\n\nanchoringLogFile=timestampsampling_${ALIEN_JDL_LPMRUNNUMBER}.log\n# query to CCDB has changed, without \"_\"\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow_anchored.py ${baseargs} -- ${remainingargs} &> ${anchoringLogFile}\nWF_RC=\"${?}\"\nif [ \"${WF_RC}\" != \"0\" ] ; then\n    echo_error \"Issue encountered during anchor timestamp sampling and workflow creation. Exiting.\"\n    exit ${WF_RC}\nfi\n\nTIMESTAMP=`grep \"Determined timestamp to be\" ${anchoringLogFile} | awk '//{print $6}'`\necho_info \"TIMESTAMP IS ${TIMESTAMP}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "d57f22bb1ab2b17889be4ce9fbea8ea8336e5e990ff175e034810e3dd08ac6b7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verify if the job should be skipped due to it being within a bad data-taking period\nISEXCLUDED=$(grep \"TIMESTAMP IS EXCLUDED IN RUN\" ${anchoringLogFile})\nif [ \"${ISEXCLUDED}\" ]; then\n  # we can stop here as there is no further action required\n  # (except perhaps creating a dummy AO2D.root file or similar)\n  echo \"Timestamp is excluded from run. No further action required.\"\n  exit 0\nfi\n\n# -- Generate aligned geometry using ITS ideal alignment to prevent overlaps in geant\nENABLEPW=0\nif [[ ${remainingargs} == *\"GeometryManagerParam.useParallelWorld=1\"* ]]; then\n  ENABLEPW=1\nfi\n\nif [ \"${ENABLEPW}\" == \"0\" ]; then\n  CCDBOBJECTS_IDEAL_MC=\"ITS/Calib/Align\"\n  TIMESTAMP_IDEAL_MC=1\n  ${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch/ -p ${CCDBOBJECTS_IDEAL_MC} -d ${ALICEO2_CCDB_LOCALCACHE} --timestamp ${TIMESTAMP_IDEAL_MC}\n  CCDB_RC=\"${?}\"\n  if [ ! \"${CCDB_RC}\" == \"0\" ]; then\n    echo_error \"Problem during CCDB prefetching of ${CCDBOBJECTS_IDEAL_MC}. Exiting.\"\n    exit ${CCDB_RC}\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "d6525a917be04a141fba5cd7b1dad4a1761d77b40479547c0193cbe75974a911": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TODO This can potentially be removed or, if necessary, should be managed by o2dpg_sim_workflow_anchored.py and O2_dpg_workflow_runner.py\nif [ \"${ENABLEPW}\" == \"0\" ]; then\n  echo \"run with echo in pipe\" | ${O2_ROOT}/bin/o2-create-aligned-geometry-workflow ${ALIEN_JDL_CCDB_CONDITION_NOT_AFTER:+--condition-not-after ${ALIEN_JDL_CCDB_CONDITION_NOT_AFTER}} --configKeyValues \"HBFUtils.startTime=${TIMESTAMP}\" --condition-remap=file://${ALICEO2_CCDB_LOCALCACHE}=ITS/Calib/Align -b --run\nelse\n  echo \"run with echo in pipe\" | ${O2_ROOT}/bin/o2-create-aligned-geometry-workflow ${ALIEN_JDL_CCDB_CONDITION_NOT_AFTER:+--condition-not-after ${ALIEN_JDL_CCDB_CONDITION_NOT_AFTER}} --configKeyValues \"HBFUtils.startTime=${TIMESTAMP}\" -b --run\nfi\nmkdir -p $ALICEO2_CCDB_LOCALCACHE/GLO/Config/GeometryAligned\nln -s -f $PWD/o2sim_geometry-aligned.root $ALICEO2_CCDB_LOCALCACHE/GLO/Config/GeometryAligned/snapshot.root\nif [ \"${ENABLEPW}\" == \"0\" ]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "121f5178b5d7d8647719ffeebe7b0936cb74c857d147592ed81e5134eefa3225": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ \"${ENABLEPW}\" == \"0\" ]; then\n  if [ -f \"$PWD/its_GeometryTGeo.root\" ]; then\n    mkdir -p \"$ALICEO2_CCDB_LOCALCACHE/ITS/Config/Geometry\"\n    ln -s -f \"$PWD/its_GeometryTGeo.root\" \"$ALICEO2_CCDB_LOCALCACHE/ITS/Config/Geometry/snapshot.root\"\n  fi\nfi\nif [ -f \"$PWD/mft_GeometryTGeo.root\" ]; then\n  mkdir -p \"$ALICEO2_CCDB_LOCALCACHE/MFT/Config/Geometry\"\n  ln -s -f \"$PWD/mft_GeometryTGeo.root\" \"$ALICEO2_CCDB_LOCALCACHE/MFT/Config/Geometry/snapshot.root\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "e147b6460d5cda9e627a3e7652e9ec7438293693af80d55b3b8e8f56b64fb946": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# -- RUN THE MC WORKLOAD TO GENERATE AOD --\n\nexport FAIRMQ_IPC_PREFIX=./\n\necho_info \"Prepared to execute the main workflow\"\n\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ${ALIEN_JDL_O2DPGWORKFLOWTARGET:-aod} --cpu-limit ${ALIEN_JDL_CPULIMIT:-8} --dynamic-resources\nMCRC=$?  # <--- we'll report back this code\nif [[ \"${MCRC}\" == \"0\" && \"${ALIEN_JDL_ADDTIMESERIESINMC}\" != \"0\" ]]; then\n  # Default value is 1, so this step is executed by default.\n  echo_info \"Starting TPC time series analysis\"\n  ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt tpctimes\n  # Note: We could potentially remove this if-else condition by integrating `tpctimes` into the workflow-targets above.\nfi\n\nif [[ \"${MCRC}\" == \"0\" && \"${ALIEN_JDL_DOTPCRESIDUALEXTRACTION}\" = \"1\" ]]; then\n  echo_info \"Performing TPC residuals extraction, aggregation, and merging\"\n  ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt tpcresidmerge\nfi\n\n[[ -n \"${DISABLE_QC}\" ]] && echo_info \"QC is turned off, skipping it.\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "2c0c97e4b2ca25212bb37355e2465181450b9d0e36beb20a667bed56092718e7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ -n \"${DISABLE_QC}\" ]] && echo_info \"QC is disabled, skipping it.\"\n\nif [[ -z \"${DISABLE_QC}\" && \"${MCRC}\" == \"0\" && \"${remainingargs}\" == *\"--include-local-qc\"* ]] ; then\n  # execute QC tasks\n  echo_info \"Executing QC\"\n  ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels QC --cpu-limit ${ALIEN_JDL_CPULIMIT:-8} -k\n  # NOTE that the -k|--keep-going option ensures the runner continues executing even if some tasks fail.\n  # As a result, a failing QC task will not necessarily cause the return code to be non-zero.\n  MCRC=$?\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "c77ad746b8d228a167ef73e9c1131ece8dbf0d86dcaf234dbe0669fadd62c917": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# All logs, including quality control (QC) logs, are tarred for output regardless of error codes or validation...\n#\nif [[ -n \"$ALIEN_PROC_ID\" ]]; then\n  find ./ \\( -name \"*.log*\" -o -name \"*mergerlog*\" -o -name \"*serverlog*\" -o -name \"*workerlog*\" -o -name \"pythia8.cfg\" -o -name \"reproducer*.sh\" \\) | tar -czvf debug_log_archive.tgz -T -\n  if [[ \"$ALIEN_JDL_CREATE_TAR_IN_MC\" == \"1\" ]]; then\n    find ./ \\( -name \"*.log*\" -o -name \"*mergerlog*\" -o -name \"*serverlog*\" -o -name \"*workerlog*\" -o -name \"*.root\" \\) | tar -czvf debug_full_archive.tgz -T -\n  fi\nfi\n\nunset FAIRMQ_IPC_PREFIX\n\nexit ${MCRC}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/anchorMC.sh"
        }
    ],
    "440471653a2f06e7e0318f9155e607150bef195f6d2455044259092f8090b690": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n### This script runs the simulation of Pythia8 Pb--Pb events using a multiplicity trigger within the FIT acceptance.\n### The configuration specifics are outlined in the INI configuration files (--configFile).\n\nset -x\n\nMODULES=\"PIPE ITS TPC\"\nEVENTS=10\nNWORKERS=8\n\no2-sim -j ${NWORKERS} -n ${EVENTS} -g pythia8 -t external -m ${MODULES} -o sim \\\n       --configFile ${O2DPG_ROOT}/MC/config/examples/ini/trigger_multiplicity_stableparticles_inFIT.ini \\\n       > logsim 2>&1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/trigger_multiplicity_stableparticles_inFIT.sh"
        }
    ],
    "b60cb6454bed3c82c32098352584dfdd7012c22a5587e929a3b74474e9847fb2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n### This script runs the simulation of Pythia8 pp INEL events with a trigger based on the number of MPI.\n### The specific configuration details are outlined in the INI config files (--configFile).\n\nset -x\n\nMODULES=\"PIPE ITS TPC\"\nEVENTS=20\nNWORKERS=8\n\no2-sim -j ${NWORKERS} -n ${EVENTS} -g pythia8 -m ${MODULES} -o sim \\\n       --configFile ${O2DPG_ROOT}/MC/config/examples/ini/trigger_mpi.ini \\\n       > logsim 2>&1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/trigger_mpi.sh"
        }
    ],
    "1487c80f2da2fe7a327c19e8c4e0eb470c185440fa41388e0e6e73f36abb3bc8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n### This script runs the simulation of Pythia8 pp INEL events using a multiplicity trigger.\n### The configuration specifics are outlined in the INI config files (--configFile).\n\nset -x\n\nMODULES=\"PIPE ITS TPC\"\nEVENTS=20\nNWORKERS=8\n\no2-sim -j ${NWORKERS} -n ${EVENTS} -g pythia8 -m ${MODULES} -o sim \\\n       --configFile ${O2DPG_ROOT}/MC/config/examples/ini/trigger_multiplicity.ini \\\n       > logsim 2>&1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/trigger_multiplicity.sh"
        }
    ],
    "16dabc49001d25c50378a3ea5c00b12f65b6474bffef0d07a173dfcff3a2eb23": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example workflow for MC->RECO->AOD production for a simple pp min bias scenario.\n#\n\n# Ensure that O2DPG and O2 are loaded.\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------------- BEGIN ACTUAL JOB ----------------------------\n\n# Determine if quality control should be performed (default is not if simulation was successful)\nDOQC=${DOQC:+1}\n[ \"${DOQC}\" != \"\" ] && [ ! \"${QUALITYCONTROL_ROOT}\" ] && echo \"Error: This requires QualityControl to be loaded\" && exit 1\n# Determine if test analyses should be run (default is not if simulation was successful)\nDOANALYSIS=${DOANALYSIS:+1}\n[ \"${DOANALYSIS}\" != \"\" ] && [ ! \"${O2PHYSICS_ROOT}\" ] && echo \"Error: This requires O2Physics to be loaded\" && exit 1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/O2DPG_pp_minbias.sh"
        }
    ],
    "9fe9d47deabe7b5348e15bbdbbd1fdac7b52b399ce215f2fdb949001a72aa39f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# choose the transport engine\nSIMENGINE=${SIMENGINE:-TGeant4}\n# total number of timeframes to be simulated\nNTFS=${NTFS:-3}\n# number of simulation workers per timeframe\nNWORKERS=${NWORKERS:-8}\n# number of events to simulate per timeframe\nNEVENTS=${NEVENTS:-20}\n# interaction rate\nINTRATE=${INTRATE:-500000}\n\n# set memory limit in MB\nMEMLIMIT=${MEMLIMIT:+--mem-limit ${MEMLIMIT}}\n# specify number of CPUs\nCPULIMIT=${CPULIMIT:+--cpu-limit ${CPULIMIT}}\n\n# generate the workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -seed 12345 -col pp -gen pythia8 -proc inel -tf ${NTFS} \\\n                                                       -ns ${NEVENTS} -e ${SIMENGINE} -run 301000  \\\n                                                       -j ${NWORKERS} -interactionRate ${INTRATE}  \\\n                                                       --include-qc --include-analysis\n\n# execute the workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod ${MEMLIMIT} ${CPULIMIT}\nRETMC=${?}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/O2DPG_pp_minbias.sh"
        }
    ],
    "37756a05e0db150da0fc5e7f714e6aa131ae3e2f0ea6685616e9fc7ddc77140a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    RETQC=0\nif [ \"${DOQC}\" != \"\" ] && [ \"${RETMC}\" = \"0\" ]; then\n    # execute QC if requested\n    ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels QC ${MEMLIMIT} ${CPULIMIT}\n    RETQC=${?}\nfi\n\nRETANA=0\nif [ \"${DOANALYSIS}\" != \"\" ] && [ \"${RETMC}\" = \"0\" ]; then\n    # run analysis if requested\n    ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels Analysis ${MEMLIMIT} ${CPULIMIT}\n    RETANA=${?}\nfi\n\nRET=$((${RETMC} + ${RETQC} + ${RETANA}))\n\nreturn ${RET} 2>/dev/null || exit ${RET}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/O2DPG_pp_minbias.sh"
        }
    ],
    "128f4bb788e74c5231c561a97c645b27bedcff845ace03eb556330eba4a39ad2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n### This script runs the simulation of signal embedding within a heavy-ion background.\n### It starts by generating the background using the Pythia8/Angantyr model with default settings.\n### The signal generation is set up to be embedded into the background (--embedIntoFile).\n### The signal event generator, an external tool, includes adaptive features that determine the number of signal events based on the background characteristics.\n### These details are specified in the INI configuration files (--configFile).\n\nset -x\n\nMODULES=\"PIPE ITS TPC\"\nBKGEVENTS=5\nSIGEVENTS=20\nNWORKERS=8\n\n# generate background\n\no2-sim -j ${NWORKERS} -n ${BKGEVENTS} -g pythia8hi -m ${MODULES} -o bkg \\\n       --configFile ${O2DPG_ROOT}/MC/config/common/ini/basic.ini \\\n       > logbkg 2>&1\n\n# embed signal into background",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/adaptive_pythia8.sh"
        }
    ],
    "0c84d95e07ca76acda946cf29c8279b6894ce5e4a4ab4a64cd8219ba22e2faf7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Integrate signal into background\n\no2-sim -j ${NWORKERS} -n ${SIGEVENTS} -g external -m ${MODULES} -o sgn \\\n       --configFile ${O2DPG_ROOT}/MC/config/examples/ini/adaptive_pythia8.ini \\\n       --embedIntoFile bkg_Kine.root \\\n       > logsgn 2>&1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/adaptive_pythia8.sh"
        }
    ],
    "62fe757cc1bafdc92bb74a8629cff6002d85b9cf68fafd25c4950e6911cdd859": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Example of how to generate an event pool and integrate it into the O2DPG simulation pipeline.\n\n# Ensure that O2DPG and O2 are properly loaded.\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n# Argument parsing\nMAKE=false\nINPUT=\"\"\n\nhelp() {\n    echo \"Usage: $0 [--make] [-i|--input <input_file>]\"\n    echo \"  --make: Generate the event pool\"\n    echo \"  -i|--input: Path to the input event pool file to be utilized in the simulation. Supports Alien paths.\"\n    echo \"              The full path must be specified (use of environment variables is allowed), otherwise the process will fail.\"\n    echo \"  -h|--help: Display this help message\"\n    exit 0\n}\n\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        --make) MAKE=true ;;\n        -i|--input) INPUT=\"$2\"; shift ;;\n        -h|--help) help ;;\n        *) echo \"Unknown operation: $1\"; help ;;\n    esac\n    shift\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/event_pool.sh"
        }
    ],
    "168d000484474050f52139c95762f5578279c78918bc16bc515ea341548e6f46": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if $MAKE; then\n    echo \"Started generation of event pool\"\n    # Workflow creation. The parameters used are for illustration purposes only\n    # The workflow will generate events but will not proceed to transport. It will halt after event generation and will finalize by merging all kinematic root files from the specified timeframes into a file named evtpool.root in the current directory\n    ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 14000 -col pp -gen pythia8 -proc cdiff -tf 2 -ns 5000 --make-evtpool -seed 546 -interactionRate 500000 -productionTag \"evtpoolcreation\" -o evtpool\n    # Workflow runner\n    ${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f evtpool.json -tt pool\nelif [[ -n \"$INPUT\" ]]; then\n    echo \"Input file provided: $INPUT\"\n    if [[ -f \"$INPUT\" && -s \"$INPUT\" ]] || [[ \"$INPUT\" == alien://* ]]; then\n        # Workflow creation. Phi Rotation is manually set, whereas the event randomization is handled by default",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/event_pool.sh"
        }
    ],
    "54d817bf5c5a5ded64110531d0e7098d1981dd71fbaffaaf43364a2ff85757df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 14000 -confKey \"GeneratorFromO2Kine.randomphi=true;GeneratorFromO2Kine.fileName=$INPUT\" -gen extkinO2 -tf 2 -ns 10 -e TGeant4 -j 4 -interactionRate 500000 -seed 546 -productionTag \"evtpooltest\"\n        # Workflow runner with rerun option to avoid manual file deletion if the script is executed in the same folder\n        ${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod --rerun-from grpcreate\n    else\n        echo \"Error: The file does not exist or is empty: $INPUT\"\n        exit 1\n    fi\nelse\n    echo \"Usage: $0 [--make] [-i|--input <input_file>]\"\n    exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/event_pool.sh"
        }
    ],
    "24bc831eadc047bc8e991fbc32c028834b3f7485f0714adc5c8bbf8342aa3a4e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n#JDL_OUTPUT=*.txt@disk=1,AO2D.root@disk=2,*.log@disk=1,*stat*@disk=1,*.json@disk=1,debug*tgz@disk=2\n#JDL_ERROROUTPUT=*.txt@disk=1,AO2D.root@disk=2,*.log@disk=1,*.json@disk=1,debug*tgz@disk=2\n#JDL_PACKAGE=%{SOFTWARETAG_SIM}\n#JDL_REQUIRE=%{JDL_REQUIREMENT}\n\n#\n# A script template for testing different anchoring configurations and software setups\n# \n\n# Only necessary if running locally\nif [ ! ${O2_ROOT} ]; then\n  source <(/cvmfs/alice.cern.ch/bin/alienv printenv %{SOFTWARETAG_SIM})\nfi\n\n# Job metadata (affects reconstruction settings)\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_CPULIMIT=8\n\nexport ALIEN_JDL_LPMANCHORPASSNAME=%{PASSNAME}\nexport ALIEN_JDL_MCANCHOR=%{PASSNAME}\nexport ALIEN_JDL_COLLISIONSYSTEM=%{COL_SYSTEM}\nexport ALIEN_JDL_LPMPASSNAME=%{PASSNAME}\nexport ALIEN_JDL_LPMRUNNUMBER=%{RUN_NUMBER}\nexport ALIEN_JDL_LPMANCHORRUN=%{RUN_NUMBER}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2tag_template.sh"
        }
    ],
    "53543954a7cb9a0aebd94160505f2fa0540f7c2ac0a467b100d246af0db73c23": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT ALIEN_JDL_LPMINTERACTIONTYPE=%{INTERACTIONTYPE}\nEXPORT ALIEN_JDL_LPMPRODUCTIONTAG=%{PRODUCTION_TAG}\nEXPORT ALIEN_JDL_LPMANCHORPRODUCTION=%{ANCHOR_PRODUCTION}\nEXPORT ALIEN_JDL_LPMANCHORYEAR=%{ANCHORYEAR}\nEXPORT ALIEN_JDL_O2DPG_ASYNC_RECO_TAG=\"%{SOFTWARETAG_ASYNC}\"\n\n# obtain a customized O2DPG for 2tag treatment (this could be utilized to test different O2DPG branches)\n# git clone https://github.com/AliceO2Group/O2DPG O2DPG\n# set O2DPG_ROOT=${PWD}/O2DPG\n# set ALIEN_JDL_O2DPG_OVERWRITE=${PWD}/O2DPG\n\n# configure job dimensions\nEXPORT NTIMEFRAMES=1\n\n# additional job configuration\nEXPORT ALIEN_JDL_ADDTIMESERIESINMC=0\nEXPORT DISABLE_QC=1\nEXPORT ALIEN_JDL_MC_ORBITS_PER_TF=10000:10000000:2 # includes only 2 orbits for high interaction rates\nEXPORT ALIEN_JDL_O2DPGWORKFLOWTARGET=\"aod\"\n\n# define anchoring points\nEXPORT PRODSPLIT=${ALIEN_O2DPG_GRIDSUBMIT_PRODSPLIT:-100}\nEXPORT SPLITID=${ALIEN_O2DPG_GRIDSUBMIT_SUBJOBID:-50}\nEXPORT CYCLE=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2tag_template.sh"
        }
    ],
    "35bb27684e896894a69cef27cfa79343208ea02e08fb87319986d457e143022c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configuration for generator and other simulation settings\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"%{SIM_OPTIONS}\"\n\nexport O2DPG_CUSTOM_REPO=\"%{O2DPG_CUSTOM_REPO}\"\n\n# option to use a specific O2DPG version\nif [ \"${O2DPG_CUSTOM_REPO}\" ]; then\n  echo \"Cloning custom O2DPG repository at ${O2DPG_CUSTOM_REPO}\"\n  git clone \"${O2DPG_CUSTOM_REPO}\" O2DPG\n  export O2DPG_ROOT=${PWD}/O2DPG\n  export ALIEN_JDL_O2DPG_OVERWRITE=${PWD}/O2DPG\nelse\n  echo \"Using standard O2DPG from software tag ${O2DPG_ROOT}\"\nfi\n\n# run the MC simulation\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2tag_template.sh"
        }
    ],
    "210fe96978a7c00661733f935f3f6e4a4798e8a064712a7565761ae891b5e819": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n# iterates through all test cases and runs them\n\n# Load the CSV file\nINPUT_FILE=\"test_anchor_cases.csv\"\nTEMPLATE_FILE=\"test_anchor_2tag_template.sh\"\nOUTPUT_FILE=\"test_anchor_generated\"\n\nDAILYTAGTOTEST=${1:-O2sim::v20250804-1}\n\nSITES_FILE=\"test_GRID_sites.dat\"\n\nWORKING_DIR=\"${PWD}/workdir_$(date +%s)_$RANDOM\"\necho \"WORKING DIR ${WORKING_DIR}\"\nmkdir -p ${WORKING_DIR}\n\nINPUT_FILE_STRIPPED=${WORKING_DIR}/${INPUT_FILE}_clean\n\nREQUIRE_STRING=\"\"\n{\n  while read -r -a values; do\n    if [ ! \"${REQUIRE_STRING}\" == \"\" ]; then\n      REQUIRE_STRING=\"${REQUIRE_STRING} ||\"\n    fi\n    REQUIRE_STRING=\"${REQUIRE_STRING} (other.CE == \\\"${values}\\\")\"\n  done\n} < ${SITES_FILE}\nREQUIRE_STRING=\"(${REQUIRE_STRING});\"\n\necho \"REQUIRE STRING ${REQUIRE_STRING}\"\n\n# remove comments from the CSV file\ngrep -v '#' ${INPUT_FILE} > ${INPUT_FILE_STRIPPED}\n\n# read the header line and transform it into variable names\nIFS=',' read -r -a headers < \"$INPUT_FILE_STRIPPED\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_looper.sh"
        }
    ],
    "88fd4b71788143f19ef3483e7a8d17b7e58283886949397671f1110cd51668ea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Replace placeholders in the header (e.g., %{VAR} → VAR)\nfor i in \"${!headers[@]}\"; do\n    headers[$i]=$(echo \"${headers[$i]}\" | sed -E 's/#?%\\{//;s/\\}//g')\ndone\n\n# Skip the header line and process each subsequent line\n{\n    read  # Proceed to the next line\n\n    count=1  # Initialize counter for output files\n    datestring=$(date +\"%Y%m%d_%H%M%S\")\n    while IFS=',' read -r -a values; do\n        # Assign each value to its corresponding header\n        for i in \"${!headers[@]}\"; do\n            declare \"${headers[$i]}\"=\"${values[$i]}\"\n        done\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_looper.sh"
        }
    ],
    "05856dd13dc10959440c39a8cae07fa05d601638171eabc0e053966fdeff5a9f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PRODUCTION_TAG=\"2tagtest_${datestring}_${count}\"\n    # Example: Display assigned variables\n    echo \"SOFTWARETAG_SIM: $SOFTWARETAG_SIM\"\n    echo \"SOFTWARETAG_ASYNC: $SOFTWARETAG_ASYNC\"\n    echo \"PASSNAME: $PASSNAME\"\n    echo \"COL_SYSTEM: $COL_SYSTEM\"\n    echo \"RUN_NUMBER: $RUN_NUMBER\"\n    echo \"INTERACTIONTYPE: $INTERACTIONTYPE\"\n    echo \"PRODUCTION_TAG: $PRODUCTION_TAG\"\n    echo \"ANCHOR_PRODUCTION: $ANCHOR_PRODUCTION\"\n    echo \"ANCHORYEAR: $ANCHORYEAR\"\n    echo \"SIM_OPTIONS: $SIM_OPTIONS\"\n    echo \"--------------------------------\"\n\n    if [ \"${DAILYTAGTOTEST}\" ]; then\n      SOFTWARETAG_SIM=${DAILYTAGTOTEST}\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_looper.sh"
        }
    ],
    "daa05cab5e90ab6523f89cc9ceb7f7ad5eaa0f6ab9e40122780136ec49c5d752": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ \"${DAILYTAGTOTEST}\" ]; then\n    SOFTWARETAG_SIM=${DAILYTAGTOTEST}\nfi\n\nOUTPUT_FILE_FINAL=\"${WORKING_DIR}/${OUTPUT_FILE}_case${count}.sh\"\n\n# generate the final test script with the specified values\ncp \"$TEMPLATE_FILE\" \"${OUTPUT_FILE_FINAL}\"\nfor var in \"${headers[@]}\"; do\n    sed -i \"s|%{$var}|${!var}|g\" \"$OUTPUT_FILE_FINAL\"\ndone\n# add the required specification\nsed -i \"s/%{JDL_REQUIREMENT}/${REQUIRE_STRING}/g\" \"$OUTPUT_FILE_FINAL\"\n\n# include the custom repository if available\nif [ \"${O2DPG_CUSTOM_REPO}\" ]; then\n    sed -i \"s|%{O2DPG_CUSTOM_REPO}|${O2DPG_CUSTOM_REPO}|g\" \"$OUTPUT_FILE_FINAL\"\nelse\n    sed -i \"/%{O2DPG_CUSTOM_REPO}/d\" \"$OUTPUT_FILE_FINAL\"\nfi\n\nTOPWORKDIR=2tag_release_testing_${BUILD_TAG:-${SOFTWARETAG_SIM}}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_looper.sh"
        }
    ],
    "c329b2b441002962ca4049dbcea842fa29c446a20ca84e4b9fced36354227ed5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    TOPWORKDIR=2tag_release_testing_${BUILD_TAG:-${SOFTWARETAG_SIM}}\n\n        # submit the test to the GRID, processing in batches of 4\n        # ${WORKING_DIR}/submit_case${count}_${SOFTWARETAG_ASYNC//::/-}\n        echo \"${O2DPG_ROOT}/GRID/utils/grid_submit.sh --prodsplit 4 --singularity --ttl 3600 --script ${OUTPUT_FILE_FINAL} \\\n              --jobname \"anchorTest_${count}\" --wait-any --topworkdir ${TOPWORKDIR}\" > ${WORKING_DIR}/submit_case${count}.sh\n        # TODO: optional local execution with --local option\n\n        ((count++))  # Increment the counter for the next iteration\n    done\n} < \"${INPUT_FILE_STRIPPED}\" #Redirect file input to avoid subshell issues\n\ncd ${WORKING_DIR}\n\n# now we submit all the jobs in the background and wait for them to complete\ndeclare -A logfiles\ndeclare -A urls\nfor s in submit*.sh; do\n  echo \"submitting ${s}\"\n  export GRID_SUBMIT_WORKDIR=\"${WORKING_DIR}/${s}_workdir\"\n  (\n    bash ${s} &> log_${s}\n    echo \"Job ${s} completed\"\n  ) &\n  logfiles[\"$s\"]=\"log_${s}\"\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_looper.sh"
        }
    ],
    "ab078453032466dd3c9fea215154d7b115559cba9c70e168db2bf1a323800058": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The subsequent step is to wait until all tasks are operational on AliEn.\nwaitcounter=0\nmaxwait=100\nwhile (( ${#logfiles[@]} > 0 && waitcounter < maxwait )); do\n  for script in \"${!logfiles[@]}\"; do\n    logfile=${logfiles[\"$script\"]}\n    if grep -q \"https://alimonitor.cern.ch/agent/jobs/details.jsp?pid=\" \"$logfile\" 2>/dev/null; then\n      # Extract URL: remove ANSI codes, search for URL, and take the first match\n      url=$(sed 's/\\x1B\\[[0-9;]*[a-zA-Z]//g' \"$logfile\" \\\n            | grep -o 'https://alimonitor.cern.ch/agent/jobs/details.jsp?pid=[0-9]*' \\\n            | head -n1)\n\n      echo \"Task ${script} has AliEn job URL: ${url}\"\n      urls[\"$script\"]=${url}\n      unset logfiles[\"$script\"]\n    fi\n  done\n  sleep 1\n  ((waitcounter++))\ndone\n\n# Wait for all (GRID) tasks to complete.\necho \"Waiting for tasks to complete/finish\"\nwait",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_looper.sh"
        }
    ],
    "45cf8e70b1e9cdd7b03b74d30b0e44b311ae10cb958562e3ada3a7beec4d67d9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# wait for all (GRID) jobs to complete\necho \"Waiting for jobs to complete\"\nwait\n\n# confirm and validate the output generated by these jobs\n# the test is successful if at least one subjob from each test\n# has produced the AO2D output.\necho \"-- Jobs completed ... validating --\"\n\nFINAL_SUCCESS=0\nfor s in submit*.sh; do\n  # determine the output path\n  TEST_OUTPUT_PATH=\"${WORKING_DIR}/${s}_workdir\"  # $(grep \"Local working directory is\" log_${s} | awk '//{print $5}')\n\n  # retrieve the Output path on JAlien from the JDL\n  ALIEN_OUTPUT_FOLDER=$(grep 'OutputDir' ${TEST_OUTPUT_PATH}/*.jdl | cut -d'\"' -f2 | sed 's|/[^/]*#.*#.*$||')\n\n  # check if there is an AO2D.root and a workflow.json in any of the jobs in that folder\n  AODS_FOUND=$(alien.py find ${ALIEN_OUTPUT_FOLDER} AO2D.root)\n  WORKFLOWS_FOUND=$(alien.py find ${ALIEN_OUTPUT_FOLDER} workflow.json)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_looper.sh"
        }
    ],
    "d2089e1d44c0706a07621d2dff2349b8f43ce6e29aab007c95c1ac1791e4f235": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z ${WORKFLOWS_FOUND} || -z ${AODS_FOUND} ]]; then\n    echo \"❌ Missing files for case $s: Check logs at ${urls[${s}]}\"\n    FINAL_SUCCESS=1  # mark as failure\n  else\n    echo \"✅ Files found in $s\"\n  fi\ndone\n\nif [[ ${FINAL_SUCCESS} -eq 0 ]]; then\n  echo \"✅ All submissions have required files.\"\nelse\n  echo \"❌ Some submissions are missing required files.\"\nfi\n\n#TODO: echo \"-- Cleaning up ... \"\ncd ..\n\nexit ${FINAL_SUCCESS}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_looper.sh"
        }
    ],
    "4a85d4a00b520b878e2fbd2f7a4b0e16327198f091e99f3b9824b5fcaec41db3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample steering script for anchored Monte Carlo (MC) simulations in PbPb collisions\n#\n\n# example anchoring\n# derived from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass2\nexport ALIEN_JDL_MCANCHOR=apass2\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=544121\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=PbPb\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a1\nexport ALIEN_JDL_LPMANCHORRUN=544121\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC23zzh\nexport ALIEN_JDL_LPMANCHORYEAR=2023\n\nexport NTIMEFRAMES=2\nexport NSIGEVENTS=2\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# on the GRID, this is set and used as the seed; when set, it overrides SEED\n#export ALIEN_PROC_ID=2963436952\nexport SEED=5",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2023_apass2_PbPb.sh"
        }
    ],
    "72c7ead535c78948458d2319d02b8fd15235c419e798bb57e764a5304b37d245": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the central anchor steering script; this entails\n# * calculating the timestamp\n# * determining the interaction rate\n# * retrieving and preparing configurations (such as which detectors are part of the run)\n# * initiating the simulation (and quality control)\n# To skip quality control, uncomment the next line\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2023_apass2_PbPb.sh"
        }
    ],
    "acb692409a2f4ff1aa1826c722e93da4603fd1fd2edf3f8676c903378214cda5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# An example steering script for anchored MC simulations in pp collisions\n#\n\n# Example anchoring details, adapted from https://its.cern.ch/jira/browse/O2-4586\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass2\nexport ALIEN_JDL_MCANCHOR=apass2\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=535069\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a2\nexport ALIEN_JDL_LPMANCHORRUN=535069\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC23f\nexport ALIEN_JDL_LPMANCHORYEAR=2023\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=50\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\n# On the GRID, this variable is set and used as a seed; when set, it takes precedence over SEED.\n#export ALIEN_PROC_ID=2963436952\nexport SEED=5\n\n# For pp collisions and 50 events per time frame, only 4 workers are launched.\nexport NWORKERS=2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2023_apass2_pp.sh"
        }
    ],
    "fce3207abb79f51a68dfa7d16d1425ab9ff9e14a022b058aad3be40c4420a022": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# For pp collisions and 50 events per TF, we only start 4 workers.\nexport NWORKERS=2\n\nexport ALIEN_JDL_ANCHOR_SIM_OPTIONS=\"-gen pythia8 -confKey \\\"GeometryManagerParam.useParallelWorld=1;GeometryManagerParam.usePwGeoBVH=1;GeometryManagerParam.usePwCaching=1\\\" ${LOCAL_CONFIG:+--overwrite-config ${LOCAL_CONFIG}}\"\n\n# Execute the central anchor steering script, which involves:\n# - determining the timestamp\n# - calculating the interaction rate\n# - extracting and preparing configurations (identifying which detectors are included in the run)\n# - running the simulation and quality control\n# To disable quality control, uncomment the following line:\n#export DISABLE_QC=1\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/tests/test_anchor_2023_apass2_pp.sh"
        }
    ],
    "94918975ff85a1679f5f47510f1c29490134856049ed7f19661c06d299d1f716": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# This script outlines a workflow for MC->RECO->AOD generation for a simple pp minimum bias scenario, tailored for test beam conditions.\n#\n# Additionally, it aims to validate the entire chain of anchoring mechanisms, including:\n# - Incorporating reconstruction pass settings from O2DPG scripts\n# - Anchoring to a specific run's timestamp to ensure correct CCDB access\n# - Applying supplementary settings like vertex/beam spot, which are currently not sourced from elsewhere\n\n\n# Ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n# ------ CREATE AN MC CONFIG STARTING FROM RECO SCRIPT --------\n# - This step should not be performed on the GRID; instead, point to an existing configuration in O2DPG, local storage, or other sources.\n\nRUNNUMBER=${ALIEN_JDL_LPMRUNNUMBER:-505673}\nINTERACTIONRATE=${INTERACTIONRATE:-2000}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "0d5ec0993a1d83744439e52ae6fd213b882f334024ee90ef75b99859b4cbd0bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "RUNNUMBER=${ALIEN_JDL_LPMRUNNUMBER:-505673}\nINTERACTIONRATE=${INTERACTIONRATE:-2000}\n\n# obtain the asynchronous script (this needs to be adjusted)\n# the script's location can be customized with a JDL option\ncp ${ALIEN_JDL_ASYNCRECOSCRIPT:-$O2DPG_ROOT/DATA/production/configurations/2021/OCT/apass4/async_pass.sh} async_pass.sh\ncp $O2DPG_ROOT/DATA/production/configurations/2021/OCT/${ALIEN_JDL_LPMPASSNAME:-apass4}/setenv_extra.sh .\n# settings specific to MC\nsed -ibak 's/GPU_global.dEdxUseFullGainMap=1;GPU_global.dEdxDisableResidualGainMap=1/GPU_global.dEdxSplineTopologyCorrFile=splines_for_dedx_V1_MC_iter0_PP.root;GPU_global.dEdxDisableTopologyPol=1;GPU_global.dEdxDisableGainMap=1;GPU_global.dEdxDisableResidualGainMap=1;GPU_global.dEdxDisableResidualGain=1/' setenv_extra.sh\nchmod +x async_pass.sh\n\n# remove the line that runs the workflow if there is no data input\n[ ${CTF_TEST_FILE} ] || sed -ibak '/WORKFLOWMODE=run/d' async_pass.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "482582332cf63e170afe939f2684e20d22d7f14648764ba60f3cfa561106061f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# remove comments to configure ALIEN_JDL parameters\n# if not already set\nif [ ! ${ALIEN_JDL_LPMRUNNUMBER} ]; then\n  sed -ibak 's/# export ALIEN/export ALIEN/' async_pass.sh\nfi\n# correct the typo\nsed -ibak 's/JDL_ANCHORYEAR/JDL_LPMANCHORYEAR/' async_pass.sh\n\n# set NTIMEFRAMES to xx if needed\nsed -ibak 's/NTIMEFRAMES=-1/NTIMEFRAMES=1/' async_pass.sh\n\nif [[ ! -f commonInput.tgz ]]; then\n  alien.py cp /alice/cern.ch/user/a/alidaq/OCT/apass4/commonInput.tgz file:.\nfi\n\nif [[ ! -f runInput_${RUNNUMBER} ]]; then\n  alien.py cp /alice/cern.ch/user/a/alidaq/OCT/apass4/runInput_${RUNNUMBER}.tgz file:.\nfi\n\nif [[ ! -f TPC_calibdEdx.220301.tgz ]]; then\n  alien.py cp /alice/cern.ch/user/a/alidaq/OCT/apass4/TPC_calibdEdx.220301.tgz file:.\nfi\n\ntar -xzf TPC_calibdEdx.220301.tgz\ncp calibdEdx.pol/*.root .\ntar -xzf commonInput.tgz",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "c5826097771e99eaa3ad7e39ed214e12ecd49ee6407a5ee519f76dd1ac148ff7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# workaround to ensure o2sim_geometry.root exists when not included in the download but -aligned is\nif [[ -f o2sim_geometry-aligned.root && ! -f o2sim_geometry.root ]]; then\n   ln -s o2sim_geometry-aligned.root o2sim_geometry.root\nfi\n\n# generate workflow ---> produces a file that can be processed\nexport IGNORE_EXISTING_SHMFILES=1\ntouch list.list\nALIEN_JDL_LPMPRODUCTIONTAG_KEEP=$ALIEN_JDL_LPMPRODUCTIONTAG\necho \"Substituting ALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMPRODUCTIONTAG with ALIEN_JDL_LPMANCHORPRODUCTION=$ALIEN_JDL_LPMANCHORPRODUCTION for simulation reconstruction...\"\nALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMANCHORPRODUCTION\n./async_pass.sh ${CTF_TEST_FILE:-\"\"} 2&> async_pass_log.log\nRECO_RC=$?\necho \"Reconstruction completed with return code ${RECO_RC}\"\nif [ \"${NO_MC}\" ]; then\n  return ${RECO_RC} 2>/dev/null || exit ${RECO_RC} # optionally terminate here without Monte Carlo (useful for testing)\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "a304c5f1071d0c675440bcdd5e3ba0617e9728b9764b8649cef7601af4e59775": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMPRODUCTIONTAG_KEEP\necho \"Resetting ALIEN_JDL_LPMPRODUCTIONTAG to $ALIEN_JDL_LPMPRODUCTIONTAG\"\n\n# now generate the local MC configuration file --> config-config.json\n${O2DPG_ROOT}/UTILS/parse-async-WorkflowConfig.py\n\n# ensure the configuration was created correctly\nif [[ `grep \"o2-ctf-reader-workflow-options\" config-json.json 2> /dev/null | wc -l` == \"0\" ]]; then\n  echo \"Issue with anchor configuration. Stopping.\"\n  exit 1\nfi\n\n# confirm the necessary input file exists\n[ ! -f splines_for_dedx_V1_MC_iter0_PP.root ] && echo \"TPC calibration input file missing\" && exit 1\n\n# -- CREATE THE MC JOB DESCRIPTION WITH ANCHORING TO RUN --\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nSIMENGINE=${ALIEN_JDL_SIMENGINE:-${SIMENGINE}}\nNTIMEFRAMES=${NTIMEFRAMES:-50}\nNSIGEVENTS=${NSIGEVENTS:-22}\n\n# construct the workflow\n# THIS NEEDS TO COME FROM OUTSIDE\n# echo \"$\" | awk -F' -- ' '{print $1, $3}'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "e686b5f56568fd939aa014fe031c2c2923fad5222e416790c947a4cd690b7df6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n# THIS NEEDS TO COME FROM OUTSIDE\n# echo \"$\" | awk -F' -- ' '{print $1, $3}'\n\nbaseargs=\"-tf ${NTIMEFRAMES} --split-id ${ALIEN_JDL_SPLITID:-1} --prod-split ${ALIEN_JDL_PRODSPLIT:-100} --run-number ${RUNNUMBER} -eCM 900 -col pp\"\n\n# THIS NEEDS TO COME FROM OUTSIDE\nremainingargs=\"-gen pythia8 -proc cdiff -ns ${NSIGEVENTS}                                                                                                                 \\\n               -interactionRate ${INTERACTIONRATE}                                                                                                                        \\\n               -confKey \\\"Diamond.width[2]=6.0;Diamond.width[0]=0.01;Diamond.width[1]=0.01;Diamond.position[0]=0.0;Diamond.position[1]=-0.035;Diamond.position[2]=0.41\\\"  \\\n              --include-local-qc --include-analysis\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "3bbb8fc848e0bacf1615b19fc33794d5f12efc473ba479c17426a1cd3439bfda": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "remainingargs=\"${remainingargs} -e ${SIMENGINE} -j ${NWORKERS}\"\nremainingargs=\"${remainingargs} -productionTag ${ALIEN_JDL_LPMPRODUCTIONTAG:-alibi_anchorTest_tmp}\"\nremainingargs=\"${remainingargs} --anchor-config config-json.json\"\n\necho \"baseargs: ${baseargs}\"\necho \"remainingargs: ${remainingargs}\"\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow_anchored.py ${baseargs} -- ${remainingargs} &> timestampsampling.log\n[ \"$?\" != \"0\" ] && echo \"Issue with anchor timestamp sampling\" && exit 1\n\nTIMESTAMP=`grep \"Determined timestamp to be\" timestampsampling.log | awk '//{print $6}'`\necho \"TIMESTAMP IS ${TIMESTAMP}\"\n\n# -- PREPARE CCDB OBJECTS ON DISK      --\n# (ensure the correct objects at the specified timestamp are available\n#  until https://alice.its.cern.ch/jira/browse/O2-2852 is resolved)\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n[ ! -d .ccdb ] && mkdir .ccdb",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "5d1f80de0aa880ed9326d982542805aa6f22e1bef9a4d844e5d75a3fcf9c58cc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CCDBOBJECTS=\"/CTP/Calib/OrbitReset /GLO/Config/GRPMagField/ /GLO/Config/GRPLHCIF /ITS/Calib/DeadMap /ITS/Calib/NoiseMap /ITS/Calib/ClusterDictionary /TPC/Calib/PadGainFull /TPC/Calib/TopologyGain /TPC/Calib/TimeGain /TPC/Calib/PadGainResidual /TPC/Config/FEEPad /TOF/Calib/Diagnostic /TOF/Calib/LHCphase /TOF/Calib/FEELIGHT /TOF/Calib/ChannelCalib /MFT/Calib/DeadMap /MFT/Calib/NoiseMap /MFT/Calib/ClusterDictionary /MFT/Calib/Align /FT0/Calibration/ChannelTimeOffset /FV0/Calibration/ChannelTimeOffset\"\n\n${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch/ -p ${CCDBOBJECTS} -d .ccdb --timestamp ${TIMESTAMP}\nif [ ! \"$?\" -eq \"0\" ]; then\n  echo \"Issue encountered during CCDB pre-fetching of ${CCDBOBJECTS}. Exiting.\"\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "fd62a2e83470b67ebe911f361e0949823af3f509ab979f5e1695e16448f13491": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# -- Generate aligned geometry using ITS ideal alignment to prevent overlaps in geant\nCCDBOBJECTS_IDEAL_MC=\"ITS/Calib/Align\"\nTIMESTAMP_IDEAL_MC=1\n${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch/ -p ${CCDBOBJECTS_IDEAL_MC} -d .ccdb --timestamp ${TIMESTAMP_IDEAL_MC}\nif [ ! \"$?\" == \"0\" ]; then\n  echo \"Issue during CCDB pre-fetching of ${CCDBOBJECTS_IDEAL_MC}. Exiting.\"\n  exit 1\nfi\n\n${O2_ROOT}/bin/o2-create-aligned-geometry-workflow --configKeyValues \"HBFUtils.startTime=${TIMESTAMP}\" --condition-remap=file://${ALICEO2_CCDB_LOCALCACHE}=ITS/Calib/Align,MFT/Calib/Align -b \nmkdir -p $ALICEO2_CCDB_LOCALCACHE/GLO/Config/GeometryAligned\nln -s -f $PWD/o2sim_geometry-aligned.root $ALICEO2_CCDB_LOCALCACHE/GLO/Config/GeometryAligned/snapshot.root\n\n# -- EXECUTE THE MC TASK TO CREATE AOD --",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "bbf0d77d56e99c2769eceb248756ed6fc7e2dd0ea4b2db8abe3fb392bb598c83": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# -- RUN THE MC WORKLOAD TO GENERATE AOD --\n\nexport FAIRMQ_IPC_PREFIX=./\n\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ${ALIEN_JDL_O2DPGWORKFLOWTARGET:-aod} --cpu-limit ${ALIEN_JDL_CPULIMIT:-8}\nMCRC=$?  # <--- we'll report this code\n\nif [[ \"${MCRC}\" -eq 0 && \"${remainingargs}\" == *\"--include-local-qc\"* ]] ; then\n  # proceed with QC tasks\n  echo \"Executing QC\"\n  ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels QC --cpu-limit ${ALIEN_JDL_CPULIMIT:-8}\n  RC=$?\nfi\n\n#\n# compress all logs into a tar archive, irrespective of the error code or validation - to capture QC logs as well...\n#\nif [[ -n \"$ALIEN_PROC_ID\" ]]; then\n  find ./ \\( -name \"*.log*\" -o -name \"*mergerlog*\" -o -name \"*serverlog*\" -o -name \"*workerlog*\" \\) | tar -czvf debug_log_archive.tgz -T -\nfi\n\nunset FAIRMQ_IPC_PREFIX\n\nreturn ${MCRC} 2>/dev/null || exit ${MCRC}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2021/OCT/pass4/anchorMC.sh"
        }
    ],
    "54fe17c6b4930245ff56d09aa378e10dd31117811493019159eb952c95e4138c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# procedure for setting up and executing an anchored MC \n#\n\n\n# ensure O2DPG and O2 are loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n\n# ------ CREATE AN MC CONFIGURATION BASED ON RECO SCRIPT --------\n# - this section should not be performed on the GRID, where we should instead\n#   reference an existing configuration (from O2DPG repository or local storage)\nexport ALIEN_JDL_LPMANCHORYEAR=${ALIEN_JDL_LPMANCHORYEAR:-2022}\nRUNNUMBER=${ALIEN_JDL_LPMRUNNUMBER:-517616}\nINTERACTIONRATE=${INTERACTIONRATE:-2000}\n\n# obtain the asynchronous script (we need to adjust it)\n# the script's location can be specified via a JDL option\n#cp ${ALIEN_JDL_ASYNCRECOSCRIPT:-$O2DPG_ROOT/DATA/production/configurations/2021/OCT/apass4/async_pass.sh} async_pass.sh\nalien.py cp /alice/cern.ch/user/a/alidaq/LHC22c/apass1/async_pass.sh file:.\n\ncp $O2DPG_ROOT/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh .",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "6cd2c245d7f8f59e86d80add0a1ce45dbb795d286d3c8d85bbec94f1cb66b1c4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    cp $O2DPG_ROOT/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh .\n\n#settings that are specific to Monte Carlo\nsed -i 's/GPU_global.dEdxUseFullGainMap=1;GPU_global.dEdxDisableResidualGainMap=1/GPU_global.dEdxSplineTopologyCorrFile=splines_for_dedx_V1_MC_iter0_PP.root;GPU_global.dEdxDisableTopologyPol=1;GPU_global.dEdxDisableGainMap=1;GPU_global.dEdxDisableResidualGainMap=1;GPU_global.dEdxDisableResidualGain=1/' setenv_extra.sh\n### ???\n\nchmod +x async_pass.sh\n\n# remove the line running the workflow if there's no data input\n[ ${CTF_TEST_FILE} ] || sed -i '/WORKFLOWMODE=run/d' async_pass.sh\n\n# eliminate comments to set ALIEN_JDL parameters\n# if not already set\nif [ ! ${ALIEN_JDL_LPMRUNNUMBER} ]; then\n  sed -i 's/# export ALIEN/export ALIEN/' async_pass.sh\nfi\n# correct a typo\nsed -i 's/JDL_ANCHORYEAR/JDL_LPMANCHORYEAR/' async_pass.sh\n\n# set the number of timeframes to xx if needed\nsed -i 's/NTIMEFRAMES=-1/NTIMEFRAMES=1/' async_pass.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "1123ee62f240c43bea6855f412fcb428a95ba0b018dbd872e4b878583958c67c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ ! -f commonInput.tgz ]] && alien.py cp /alice/cern.ch/user/a/alidaq/LHC22c/apass1/commonInput.tgz file:.\ntar -xzf commonInput.tgz\n\n# workaround to ensure o2sim_geometry.root exists if not included in the download but -aligned version is present\nif [[ -f o2sim_geometry-aligned.root && ! -f o2sim_geometry.root ]]; then\n   ln -s o2sim_geometry-aligned.root o2sim_geometry.root\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "fa3120c7cebc527b776f3e18ec891e1c6186966d86e70c30f72882353d67bce7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow ---> generates the file for parsing\nexport IGNORE_EXISTING_SHMFILES=1\ntouch list.list\nALIEN_JDL_LPMPRODUCTIONTAG_KEEP=$ALIEN_JDL_LPMPRODUCTIONTAG\necho \"Replacing ALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMPRODUCTIONTAG with ALIEN_JDL_LPMANCHORPRODUCTION=$ALIEN_JDL_LPMANCHORPRODUCTION for simulating reco pass...\"\nALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMANCHORPRODUCTION\n./async_pass.sh ${CTF_TEST_FILE:-\"\"} 2>&1 > async_pass_log.log\nRECO_RC=$?\necho \"RECO finished with ${RECO_RC}\"\nif [ \"${NO_MC}\" ]; then\n  return ${RECO_RC} 2>/dev/null || exit ${RECO_RC} # optionally terminate here and skip MC (useful for testing)\nfi\n\nALIEN_JDL_LPMPRODUCTIONTAG=$ALIEN_JDL_LPMPRODUCTIONTAG_KEEP\necho \"Restoring ALIEN_JDL_LPMPRODUCTIONTAG to $ALIEN_JDL_LPMPRODUCTIONTAG\"\n\n# now generate the local MC configuration file --> config-config.json\n${O2DPG_ROOT}/UTILS/parse-async-WorkflowConfig.py",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "6634f3716e519664af9bbbe1e3a43e927d1fbe69033fedc99359a6b3f312aeb5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verify config is correctly set\nif [[ `grep \"o2-ctf-reader-workflow-options\" config-json.json 2> /dev/null | wc -l` == \"0\" ]]; then\n  echo \"Anchor config creation issue detected. Stopping.\"\n  exit 1\nfi\n\n# -- GENERATE THE MC JOB DESCRIPTION BASED ON THE RUN --\n\nNWORKERS=${NWORKERS:-8}\nMODULES=\"--skipModules ZDC\"\nSIMENGINE=${SIMENGINE:-TGeant4}\nSIMENGINE=${ALIEN_JDL_SIMENGINE:-${SIMENGINE}}\nNTIMEFRAMES=${NTIMEFRAMES:-50}\nNSIGEVENTS=${NSIGEVENTS:-22}\n\n# generate the workflow\n# THIS NEEDS TO BE PROVIDED EXTERNALLY\n# echo \"$\" | awk -F' -- ' '{print $1, $3}'\n\nbaseargs=\"-tf ${NTIMEFRAMES} --split-id ${ALIEN_JDL_SPLITID:-1} --prod-split ${ALIEN_JDL_PRODSPLIT:-100} --run-number ${RUNNUMBER} -eCM 900 -col pp\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "b8b47fd1aec84c526a91d984e3be3abafe8153f9f388f88eab177680277abca8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# THESE SETTINGS MUST BE PROVIDED FROM EXTERNAL SOURCES\nremainingargs=\"-gen pythia8 -proc cdiff -ns ${NSIGEVENTS}                                                                                                                 \\\n               -interactionRate ${INTERACTIONRATE}                                                                                                                        \\\n               -confKey \\\"Diamond.width[2]=6.0;Diamond.width[0]=0.01;Diamond.width[1]=0.01;Diamond.position[0]=0.0;Diamond.position[1]=-0.035;Diamond.position[2]=0.41\\\"  \\\n              --include-local-qc --include-analysis\"\n\nremainingargs=\"${remainingargs} -e ${SIMENGINE} -j ${NWORKERS}\"\nremainingargs=\"${remainingargs} -productionTag ${ALIEN_JDL_LPMPRODUCTIONTAG:-alibi_anchorTest_tmp}\"\nremainingargs=\"${remainingargs} --anchor-config config-json.json\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "fb94ace4d0668cc73ac5672271db9e2b31f3a98f1ec5d096d30c0655f60df893": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"baseargs: ${baseargs}\"\necho \"remainingargs: ${remainingargs}\"\n              \n# The way to query CCDB has changed, now without \"_\"\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow_anchored.py ${baseargs} -- ${remainingargs} &> timestampsampling_${RUNNUMBER}.log\n[ \"$?\" != \"0\" ] && echo \"Issue encountered during anchor timestamp sampling \" && exit 1\n\nTIMESTAMP=`grep \"Determined timestamp to be\" timestampsampling_${RUNNUMBER}.log | awk '//{print $6}'`\necho \"TIMESTAMP IS ${TIMESTAMP}\"\n\n# -- PRECACHING CCDB OBJECTS ON DISK --\n# (ensuring the correct objects at the correct timestamp are retrieved\n#  until https://alice.its.cern.ch/jira/browse/O2-2852 is resolved)\nexport ALICEO2_CCDB_LOCALCACHE=$PWD/.ccdb\n[ ! -d .ccdb ] && mkdir .ccdb",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "f2b4673557b7460316c0a97ad0cc1fc09a2b9fd63f86eca673529a4688109d21": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CCDBOBJECTS=\"/CTP/Calib/OrbitReset /GLO/Config/GRPMagField/ /GLO/Config/GRPLHCIF /ITS/Calib/DeadMap /ITS/Calib/NoiseMap /ITS/Calib/ClusterDictionary /TPC/Calib/PadGainFull /TPC/Calib/TopologyGain /TPC/Calib/TimeGain /TPC/Calib/PadGainResidual /TPC/Config/FEEPad /TOF/Calib/Diagnostic /TOF/Calib/LHCphase /TOF/Calib/FEELIGHT /TOF/Calib/ChannelCalib /MFT/Calib/DeadMap /MFT/Calib/NoiseMap /MFT/Calib/ClusterDictionary /MFT/Calib/Align /FT0/Calibration/ChannelTimeOffset /FV0/Calibration/ChannelTimeOffset /GLO/GRP/BunchFilling\"\n\n${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch/ -p ${CCDBOBJECTS} -d .ccdb --timestamp ${TIMESTAMP}\nif [ ! \"$?\" -eq \"0\" ]; then\n  echo \"Issue encountered during CCDB object prefetching for ${CCDBOBJECTS}. Exiting.\"\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "120551dbb83a7d68f00e82782b381cbb907a594862c8ba747b979bed7d4497c7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# -- Generate aligned geometry using ITS ideal alignment to prevent overlaps in geant\nCCDBOBJECTS_IDEAL_MC=\"ITS/Calib/Align\"\nTIMESTAMP_IDEAL_MC=1\n${O2_ROOT}/bin/o2-ccdb-downloadccdbfile --host http://alice-ccdb.cern.ch/ -p ${CCDBOBJECTS_IDEAL_MC} -d .ccdb --timestamp ${TIMESTAMP_IDEAL_MC}\nif [ ! \"$?\" == \"0\" ]; then\n  echo \"Issue encountered while fetching ${CCDBOBJECTS_IDEAL_MC} from CCDB. Exiting.\"\n  exit 1\nfi\n\n${O2_ROOT}/bin/o2-create-aligned-geometry-workflow --configKeyValues \"HBFUtils.startTime=TIMESTAM\" --condition-remap=file://${ALICEO2_CCDB_LOCALCACHE}=ITS/Calib/Align,MFT/Calib/Align -b \nmkdir -p $ALICEO2_CCDB_LOCALCACHE/GLO/Config/GeometryAligned\nln -s -f $PWD/o2sim_geometry-aligned.root $ALICEO2_CCDB_LOCALCACHE/GLO/Config/GeometryAligned/snapshot.root\n\n# -- EXECUTE THE MC WORKFLOW TO CREATE AOD --\n\nexport FAIRMQ_IPC_PREFIX=./\n\necho \"Prepared to run the main workflow\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "f4fbba604d589a7936912deb0dfe9852213a27a9f47928c3dbd615a232d8e485": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export FAIRMQ_IPC_PREFIX=./\n\necho \"Prepared to run the main workflow\"\n\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt ${ALIEN_JDL_O2DPGWORKFLOWTARGET:-aod} --cpu-limit ${ALIEN_JDL_CPULIMIT:-8}\nMCRC=$?  # <--- we'll report back this code\nexit 0\n\nif [[ \"${MCRC}\" == \"0\" && \"${remainingargs}\" == *\"--include-local-qc\"* ]]; then\n  # proceed with QC tasks\n  echo \"Performing QC\"\n  ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels QC --cpu-limit ${ALIEN_JDL_CPULIMIT:-8} -k\n  RC=$?\nfi\n\n#\n# Tar all logs for output, regardless of the error code or validation - to include QC logs as well...\n#\nif [[ -n \"$ALIEN_PROC_ID\" ]]; then\n  find ./ \\( -name \"*.log*\" -o -name \"*mergerlog*\" -o -name \"*serverlog*\" -o -name \"*workerlog*\" \\) | tar -czvf debug_log_archive.tgz -T -\nfi\n\nunset FAIRMQ_IPC_PREFIX\n\nreturn ${MCRC} 2>/dev/null || exit ${MCRC}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/ANCHOR/2022/JUN/pass1/anchorMC.sh"
        }
    ],
    "50fd7004deb5cc905bf54b36787cccdfaf1e03801b4d3706fc6d45363b915dae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n\no2-sim -m CAVE -n 10 -g pythia6 --configFile pythia6_ccbar.ini",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/run/examples/pythia6_ccbar/pythia6_ccbar.sh"
        }
    ],
    "f364ca1991090625192fa73c8c8f348b46d993481582a9f1aa12ab887b99c508": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# A sample workflow from MC to RECO to AOD for signal-background embedding, designed\n# to study embedding performance improvements.\n# Background events are reused across different timeframes.\n#\n\n# ensure O2DPG and O2 are properly loaded\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This requires O2DPG to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: This requires O2 to be loaded\" && exit 1\n\n\n# ----------- START ACTUAL JOB  -----------------------------\n\nNSIGEVENTS=${NSIGEVENTS:-5}\nSIGPROC=${SIGPROC:-cdiff}\nNTIMEFRAMES=${NTIMEFRAMES:-2}\nSIMENGINE=${SIMENGINE:-TGeant3}\nNWORKERS=${NWORKERS:-1}\nSEED=${SEED:-624}\nINTERACTIONRATE=${INTERACTIONRATE:-50000}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/tests/wf_test_pp.sh"
        }
    ],
    "9c50023a0770869f6772c864827b31f3b4a2c06b5f28f23fef468d79e5bb018c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# create workflow\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 5020 -col pp -gen pythia8 -proc ${SIGPROC} -ns ${NSIGEVENTS} \\\n                                           -tf ${NTIMEFRAMES} -e ${SIMENGINE} -j ${NWORKERS} -seed ${SEED} \\\n                                           --include-analysis -run 310000 -interactionRate ${INTERACTIONRATE} \\\n                                           --include-local-qc",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/bin/tests/wf_test_pp.sh"
        }
    ],
    "e5a12cfeab16de8ad94d0c9094c1c3bf9dde541897e09022672a5fb20e4c6342": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script designed to format JSON files\n\nfor file in $(find . | grep \"\\.json\"); do\n    case \"$file\" in\n    *analyses_config.json*)\n        continue\n        ;;\n    esac\n    echo \"Formatting $file\"\n    jq -S . $file >a.json\n    mv a.json $file\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/analysis_testing/json/format_json.sh"
        }
    ],
    "63ca6a3004fc7940968b9137b001fad8ea2392892a4a44523cda186055833019": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/sh\n# Script derived from the CRMC example.\n# EPOS4 option files need to specify ihepmc as 2 for HepMC data output to stdout. The -hepmc flag is no longer necessary, but -hepstd is essential to prevent unnecessary stdout output (a z-*optns*.mtr file will be generated).\n\noptns=\"example\"\nseed=$(od -An -N2 -tu2 /dev/urandom | tr -d ' ')\nEPOS4=\"\"\n\nif [ -z \"$EPO4VSN\" ]; then\n    echo \"Error: EPO4VSN environment variable is not set\"\n    exit 1\nfi\n\nif [ \"$EPO4VSN\" = \"4.0.0\" ]; then\n    EPOS4=\"$EPOS4_ROOT/epos4/scripts/epos\"\n    export LIBDIR=$EPOS4_ROOT/epos4/bin\nelse\n    EPOS4=\"$EPOS4_ROOT/bin/epos\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/examples/epos4/epos.sh"
        }
    ],
    "31b7ac885ad6180a0fb842384a7e562a9adda32b0cfa1bdfb55be384b5336d54": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Ensure the EPO4 environment variable is defined (required for o2dpg-sim-tests on CI machines)\n# If not, initialize all EPOS4-related variables, which are likely also undefined.\nif [ -z \"${EPO4}\" ]; then\n    export OPT=./\n    export HTO=./\n    export CHK=./\n    if [ \"$EPO4VSN\" = \"4.0.0\" ]; then\n        export EPO4=$EPOS4_ROOT/epos4/\n    else\n        export EPO4=$EPOS4_ROOT/\n    fi\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -i|--input)   optns=$2 ; shift ;;\n        -s|--seed)    seed=$2 ; shift ;;\n        -h|--help) usage; exit 0 ;;\n    esac\n    shift\ndone\n\nif [ ! -f $optns.optns ]; then\n    echo \"Error: Options file $optns.optns not found\"\n    exit 2\nfi\n\nif grep -Fq \"set ihq 1\" $optns.optns; then\n    if [ -z \"$EPO4HQVSN\" ]; then\n        # Error: EPOS4HQ version not found\n        exit 3\n    else\n        # Running with EPOS4HQ\n        if [ -z \"${EPO4HQ}\" ]; then\n            export EPO4HQ=$EPOS4HQ_ROOT/\n        fi\n        EPOS4=\"$EPO4HQ/bin/eposhq\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/examples/epos4/epos.sh"
        }
    ],
    "6b8089b21cdba41a0ed44fc321d0f000f5a96195c6884cb88b9dae70e4d88bf9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $seed -eq 0 ]; then\n    # The seed cannot be 0, so a random number will be utilized\n    seed=$(od -An -N2 -tu2 /dev/urandom | tr -d ' ')\nfi\n\n# The OR filter processes the stdout, retaining only the HepMC relevant data\n$EPOS4 -hepstd -s $seed $optns | sed -n 's/^\\(HepMC::\\|[EAUWVP] \\)/\\1/p'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/MC/config/examples/epos4/epos.sh"
        }
    ],
    "fc155236a7362577a68772186a8597cdf6ee32a33f3fa5d544fc09b53653e786": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Test utility functionality\n#\n\n# a global counter for tests\nTEST_COUNTER=0\n\n# Prepare some colored output\nSRED=\"\\033[0;31m\"\nSGREEN=\"\\033[0;32m\"\nSYELLOW=\"\\033[0;33m\"\nSEND=\"\\033[0m\"\n\necho_green()\n{\n    echo -e \"${SGREEN}${*}${SEND}\"\n}\n\n\necho_red()\n{\n    echo -e \"${SRED}${*}${SEND}\"\n}\n\n\necho_yellow()\n{\n    echo -e \"${SYELLOW}${*}${SEND}\"\n}\n\n\nremove_artifacts()\n{\n    [[ \"${KEEP_ONLY_LOGS}\" == \"1\" ]] && find . -type f ! -name '*.log' -and ! -name \"*serverlog*\" -and ! -name \"*mergerlog*\" -and ! -name \"*workerlog*\" -delete\n}\n\n\ngit_get_changed_files()\n{\n    # in the Github CIs, environment variables provide the base and head hashes,\n    # so use them if available\n    # Otherwise, fall back to a few steps back\n    local hash_base_user=${O2DPG_TEST_HASH_BASE:-\"HEAD~1\"}\n    local hash_head_user=${O2DPG_TEST_HASH_HEAD:-\"HEAD\"}\n    local hash_base=${ALIBUILD_BASE_HASH:-${hash_base_user}}\n    local hash_head=${ALIBUILD_HEAD_HASH:-${hash_head_user}}\n\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/common/utils/utils.sh"
        }
    ],
    "cdf08ac3379a2b315ec448ac2d5a906cc69242abbcc576bc70d4b9a097f82db0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verify the presence of unstaged changes and check if ALIBUILD_HEAD_HASH is unset, then compare against unstaged changes\n# if there are unstaged changes and no user-specified head, leave it empty\n[[ ! -z \"$(git diff)\" && -z ${ALIBUILD_HEAD_HASH+x} && -z ${O2DPG_TEST_HASH_HEAD+x} ]] && hash_head=\"\"\n# if there are unstaged changes and no user-specified base, set it to HEAD\n[[ ! -z \"$(git diff)\" && -z ${ALIBUILD_HEAD_HASH+x} && -z ${O2DPG_TEST_HASH_BASE+x} ]] && hash_base=\"HEAD\"\nlocal paths=$(git diff --diff-filter=AMR --name-only ${hash_base} ${hash_head})\nlocal absolute_paths=\nfor p in ${paths} ; do\n    absolute_paths+=\"$(realpath ${p}) \"\ndone\necho \"${absolute_paths}\"\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/common/utils/utils.sh"
        }
    ],
    "26951b7cda3ac178d53c9eeee7d534c8c0fb2b1c381cb9f5873e723327a224a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    get_workflow_creation_from_script()\n    {\n        # Extract the line in the script responsible for creating a workflow\n        local wf_script=${1}\n        # Identify the line where the workflow is defined\n        local look_for=\"o2dpg_sim_workflow.py\"\n        # Construct the entire line, removing line breaks, from the file\n        local string_wo_line_breaks=\n        while read -r line ; do\n            [[ \"${line}\" == *\"${look_for}\"* ]] && has_started=1\n            [[ \"${has_started}\" != \"1\" ]] && continue\n            string_wo_line_breaks+=${line%%\\\\}\n            [[ \"${line}\" == *\"\\\\\"* ]] && string_wo_line_breaks+=\" \"\n            [[ \"${line}\" != *\"\\\\\"* ]] && break\n        done < ${wf_script}\n        echo ${string_wo_line_breaks}\n    }\n\n    make_wf_creation_script()\n    {\n        # The output should only include the workflow creation, excluding any runner or other elements",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/common/utils/utils.sh"
        }
    ],
    "66ad110eb44718b65d04161a35fedcee5051236c4302161349def3eee0e9a6db": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "make_wf_creation_script()\n{\n    # The goal is to extract just the workflow creation, without running any additional scripts.\n\n    # The strategy\n    # Capture all lines until the first occurrence of the simulation workflow creation; then stop\n    # This assumes that the workflow creation command is not nested within if-else statements or enclosed in another scope.\n    # in\n    local full_wf_script=${1}\n    # out\n    local out_script=${2}\n\n    # Ensure the runner is not executed\n    local look_for=\"o2dpg_sim_workflow.py\"\n    # Verify that the runner line is present; if not, the script will not execute\n    local has_no_wf=1\n\n    while read -r line ; do\n        if [[ \"${line}\" == *\"${look_for}\"* ]] ; then\n            has_no_wf=0\n        fi\n        if [[ \"${has_no_wf}\" == \"0\" ]] ; then\n            break\n        fi\n        echo \"${line}\" >> ${out_script}\n    done < ${full_wf_script}\n\n    echo \"$(get_workflow_creation_from_script ${full_wf_script})\" >> ${out_script}\n    return ${has_no_wf}\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/common/utils/utils.sh"
        }
    ],
    "a22cabd7698e9df84a990fb8105a7a7af43fedc370339dd42f8e8f9a2610f359": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "print_error_logs()\n{\n    local search_directory=${1}\n    local search_pattern=\"TASK-EXIT-CODE: ([1-9][0-9]*)|[Ss]egmentation violation|[Ss]egmentation fault|Program crashed|[Ee]xception caught|\\[FATAL\\]|uncaught exception|\\(int\\) ([1-9][0-9]*)|fair::FatalException\"\n    local error_logs=$(find ${search_directory} -maxdepth 4 -type f \\( -name \"*.log\" -or -name \"*serverlog*\" -or -name \"*workerlog*\" -or -name \"*mergerlog*\" \\) | xargs grep -l -E \"${search_pattern}\" | sort)\n    for el in ${error_logs} ; do\n        echo_red \"Error detected in log $(realpath ${el})\"\n        # display the match along with the preceding and following 10 lines\n        grep -n -A 10 -B 10 -E \"${search_pattern}\" ${el}\n    done\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/test/common/utils/utils.sh"
        }
    ],
    "9c7a42175da200f674bcf32c2198697f32a8a4ce7ab653b68d7cb16457b74640": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Source path for the script\n# source $O2DPG/UTILS/Parsers/workflowToJSON.sh\n# source  $NOTES/JIRA/ATO-648/workflowToJSON.sh\n\n# Description:\n# This script converts workflow configuration logs into a structured JSON format for improved data analysis and readability.\n\n# Usage:\n# Example: source $O2DPG/UTILS/Parsers/workflowToJSON.sh\n\nalias helpCat=cat\n[[ -x \"$(command -v pygmentize)\" ]] && alias helpCat=\"pygmentize -O style=borland,linenos=1 -l bash\"\n\nfunction helpCat0() {\n    local language=\"$1\"\n    shift\n    [[ -x \"$(command -v pygmentize)\" ]] && pygmentize -O style=monokai,linenos=1 -l \"$language\" | cat - \"$@\"\n    [[ ! -x \"$(command -v pygmentize)\" ]] && cat - \"$@\"\n}\n\ninit648() {\n  cat <<HELP_USAGE | helpCat\n      Function Overview: init648\n\n      This function sets up the script environment and provides access to a variety of utility commands aimed at managing and converting workflow logs.\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "382b39915b3cd225077ec58646b0b397b1ee3d520aa86210dc26fa8276e041be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Available Commands:\n  - \\[init648]: Sets up the required environment for script execution. Use this before running other functions to ensure all configurations are properly configured.\n  - \\[description]: Offers a detailed explanation of the workflow processing steps, outlining each stage and its role within the system.\n  - \\[makeParse]: Runs the log parsing process, converting detailed workflow logs into a structured JSON format, which aids in easier data handling and analysis.\n  - \\[makeDiffExample]: Illustrates how to compare two JSON files generated from workflow logs, pointing out the differences.\n\n  Usage:\n  For more information on each command, enter the command followed by 'help'. This will provide detailed information about the command's function and usage examples.\n\n  Example:\n    \\$ init648 help   # Displays help information for the init648 command.\n\n  Note: Tests were performed in the directory:\nHELP_USAGE\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "9101af69725ed54a8cf7ed095b60cca5ac9d633207b092b19dccb8c93b4e2651": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Note: Tests were carried out in the directory:\nHELP_USAGE\n}\n\ndescription() {\ncat <<HELP_USAGE | helpCat0 bash\nDescription:\nThis script analyzes 'workflowconfig.log' files, which include lines of commands with their respective switches and configuration settings. It aims to convert these log entries into a structured JSON format, enhancing data manipulation and readability.\n\nPurpose:\n- To transform workflow configuration logs into a JSON structure where each command, including its switches and key values, is represented as an object within an array. This improves data handling and clarity.\n\nFormat of Log Entries:\n- Each line in the log file represents a single command with its options, formatted as:\n  <commandName> <switches> --configKeyValues\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "94149900f63191b61ba9633c43314ba05269cddabce3d2dab8b632a8f298b051": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Example Command:\nA sample command in the log could look like this:\no2-ctf-reader-workflow --session default_1304519_3825 --severity info --shm-segment-id 0 --shm-segment-size 64000000000 --resources-monitoring 50 --resources-monitoring-dump-interval 50 --early-forward-policy noraw --fairmq-rate-logging 0 --timeframes-rate-limit 2 --timeframes-rate-limit-ipcid 0 --ans-version compat --delay 1 --loop 0 --max-tf 2 --ctf-input list.list --onlyDet ITS,TPC,TOF,FV0,FT0,FDD,TRD,CTP --pipeline tpc-entropy-decoder:1 --allow-missing-detectors --its-digits --mft-digits --configKeyValues \"keyval.input_dir=/tmp/tmp.rgwfzmuG63;keyval.output_dir=/dev/null;;\"\n\nTransformation:\nThis script converts each command from the log into a JSON object, restructuring the data to make it more organized and easier to query and analyze programmatically.\nHELP_USAGE\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "c28af907b0758299f6ffa368d201d425cb943b5935b5acb658986849c8c2615d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "makeParse() {\n    # Use heredoc to forward help text via the helpCat alias, which applies syntax highlighting if pygmentize is installed.\n    if [[ -z \"$1\" ]]; then\n        # Use heredoc to forward help text via the helpCat alias, which applies syntax highlighting if pygmentize is installed.\n        cat <<'HELP_USAGE' | helpCat0 bash\nmakeParse: Parse the workflow log and generate an output.json file.\nUsage:\n    makeParse <workflowconfig.log>\n\n    HELP_USAGE\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "3ec62985189d70b3b94f97fc9dc891b7696e53aee32cfc88e119fdd38646d0e9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXAMPLE USAGE:\n#makeParse workflowconfig.log > ~/output.json  # To parse a specific log file.\nmakeParse /lustre/alice/tpcdata/Run3/SCDprodTests/fullRec/PbPb_Streamers_Tune_ClusterErrors-merge-streamer/avgCharge_fullTPC_sampling_TimeBins16-Average0_rejectEdgeCl-Seed0-Track0-margin0/LHC23zzh.b5p/544116.38kHz/0110/workflowconfig.log > workflow.json\ncat workflow.json | jq '.[] | select(.command | test(\"^o2-dpl\"))'  # Filter DPL workflows.\njq '.[] | select(.command | test(\"^o2-gpu\"))' workflow.json  # Filter GPU related commands.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "3db1caf1b6446ad395b4aed61308c54a0686b8f79bf55c0aa9fafb940e74f75d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    HELP_USAGE\n        return  # Exit the function if no parameters provided\n    fi\n    #\n    log_file=$1\njq -Rn '\n  [inputs | split(\"\\n\")[] | select(length > 0 and startswith(\"o2-\")) |\n    {\n      command: (split(\" \")[0]),\n      switches: (split(\" \") | .[1:-1] |\n        reduce .[] as $item ({};\n          if $item | startswith(\"--\") then\n            if $item | contains(\"=\") then\n              . + ({($item | ltrimstr(\"--\") | split(\"=\")[0]): ($item | split(\"=\")[1])})\n            else\n              . + ({($item | ltrimstr(\"--\")): true})\n            end\n          else\n            .[keys_unsorted[-1]] = $item\n          end\n        )),\n        configKeyValues: (if (contains(\"--configKeyValues\")) then\n        (split(\"--configKeyValues\")[1] | split(\"|\")[0] | gsub(\"^\\\\s+\\\"|\\\"\\\\s+;\"; \"\") | split(\";\") |\n        map(select(. != \"\" and contains(\"=\"))) |\n        map(split(\"=\") | select(length == 2)) |\n        map({(.[0]): .[1]})) | add\n      else\n        {}\n      end\n      )\n    }\n  ]' \"$log_file\"\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "6fecba8f017d03989fc7f0ff33b1f7d87142ac2eaf300f346fd7e6bd285c20bd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # createDiffWorkflow alien:///alice/data/2023/LHC23zzk/544515/apass5/1140/o2_ctf_run00544515_orbit0221337280_tf0000047516_epn242/workflowconfig.log alien:///alice/data/2023/LHC23zzk/544515/apass4/1140/o2_ctf_run00544515_orbit0221337280_tf0000047516_epn242/workflowconfig.log 1 gpu\ncreateDiffWorkflow() {\n    # Generate a difference between two workflowConfig.log JSON files.\n    # Usage:\n    #   createDiffWorkflow <file0> <file1> <diffType> <filter>\n    #   file0: path or alien:// to the first workflowconfig.log\n    #   file1: path or alien:// to the second workflowconfig.log\n    #   diffType: 0 for unified diff, 1 for side-by-side (default: 1)\n    #   filter: string to match commands, e.g. gpu (default: gpu)\n    # Notes:\n    #   Generates workflow0.json and workflow1.json from the parsed inputs.\n    #   Utilizes makeParse and jq for filtering and comparison.\n    #   Supports Alien paths through alien.py cat.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "8805cd6308c53dee293999ab53cba86169db52ceac59dedaf01f72c6475660df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"$1\" || -z \"$2\" ]]; then\n    cat <<'HELP_USAGE' | helpCat0 bash\nmakeDiffWorkflow: Compare two O2 workflowconfig logs (local or Alien).\nUsage:\n    makeDiffWorkflow <file0> <file1> <diffType> <filter>\nParameters:\n    file0      – path to the first workflowconfig.log or Alien path\n    file1      – path to the second workflowconfig.log or Alien path\n    diffType   – (optional) 0 for unified diff, 1 for side-by-side diff (default: 1)\n    filter     – (optional) command string filter, such as \"gpu\" or \"hlt\" (default: gpu)\nExample:\n    makeDiffWorkflow alien:///path/to/file0.log ./file1.log 1 gpu\n    makeDiffWorkflow alien:///alice/data/2023/LHC23zzk/544515/apass5/1140/o2_ctf_run00544515_orbit0221337280_tf0000047516_epn242/workflowconfig.log alien:///alice/data/2023/LHC23zzk/544515/apass4/1140/o2_ctf_run00544515_orbit0221337280_tf0000047516_epn242/workflowconfig.log 1 gpu\n\n    HELP_USAGE\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "32f3264edc1e4d44d97644564c3deddfc10a7566b9a1688525aecae98db7e877": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    HELP_USAGE\n        return\n    fi\n    file0=\"$1\"\n    file1=\"$2\"\n    diffType=\"${3:-1}\"\n    filter=\"${4:-o2-gpu}\"\n    # Retrieve the file from alien if necessary\n    if [[ \"$file0\" == alien://* ]]; then\n        echo \"Fetching $file0 from Alien...\"\n        alien.py cat \"$file0\" > \"${TMPDIR:-/tmp}/workflow0.log\"\n        file0=\"${TMPDIR:-/tmp}/workflow0.log\"\n    fi\n    if [[ \"$file1\" == alien://* ]]; then\n        echo \"Fetching $file1 from Alien...\"\n        alien.py cat \"$file1\" > \"${TMPDIR:-/tmp}/workflow1.log\"\n        file1=\"${TMPDIR:-/tmp}/workflow1.log\"\n    fi\n\n    makeParse \"$file0\" > workflow0.json\n    makeParse \"$file1\" > workflow1.json\n\n    # Apply the filter to both JSON files\n    jq \".[] | select(.command | test(\\\"^${filter}\\\"))\" workflow0.json | jq --sort-keys . > workflow0.filtered.json\n    jq \".[] | select(.command | test(\\\"^${filter}\\\"))\" workflow1.json | jq --sort-keys . > workflow1.filtered.json\n\n    echo \"Comparing workflow commands filtered by '^o2-${filter}'...\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "d14b6e71c7807d4724a6e67b9eade6c5b79a21e8a00bde4ad6b762adf9ec9cce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Displaying workflow commands filtered by '^o2-${filter}' using comparison commands...\"\n\n    if [[ \"$diffType\" -eq 1 ]]; then\n        diff --side-by-side --left-column --color=always workflow0.filtered.json workflow1.filtered.json | less -R\n    else\n        diff --color=always workflow0.filtered.json workflow1.filtered.json | less -R\n    fi\n}\n\n\n\n\nmakeDiffExample(){\n  cat <<HELP_USAGE | helpCat\nDescription:\n\nThis function provides examples of how to parse workflow configuration logs into JSON format and then compare these JSON files using \\`diff\\`. The comparison can be done directly using \\`jq\\` to filter and sort the JSON data, which aids in clearly identifying the differences.\n\nExamples:\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "15eeade3b215601fe324628577c3b6fea10cbb62116b26cdff21c466cea88da0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXAMPLES:\n\n1. Convert workflow configuration logs to JSON:\n   \\`makeParse /lustre/alice/tpcdata/Run3/SCDprodTests/fullRec/PbPb_Streamers_Tune_ClusterErrors-merge-streamer/avgCharge_fullTPC_sampling_TimeBins16-Average0_rejectEdgeCl-Seed0-Track0-margin0/LHC23zzh.b5p/544116.38kHz/0110/workflowconfig.log > workflow0.json\\`\n\n   \\`makeParse /lustre/alice/tpcdata/Run3/SCDprodTests/fullRec/PbPb_Streamers_Tune_ClusterErrors-merge-streamer/avgCharge_fullTPC_sampling_TimeBins16-Average0_rejectEdgeCl-Seed0-Track0-margin0-ref/LHC23zzh.b5p/544116.38kHz/0110/workflowconfig.log > workflow1.json\\`\n\n2. Directly compare two JSON files using \\`jq\\` and \\`diff\\`:\n   \\diff <(jq --sort-keys . workflow1.json) <(jq --sort-keys . workflow0.json)\\\n\n3. Utilize \\`diff\\` for a side-by-side comparison with color highlighting:\n   \\`diff --side-by-side --left-column --color=always <(jq --sort-keys . workflow1.json) <(jq --sort-keys . workflow0.json) | less -R\\`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "3e82453b590ad3d83e67fd7ddbb3a1c618ce15a7fde8cb4a0fee6085b6ccd5f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    4. Compare JSON files focusing only on commands that start with \"o2-gpu\":\n   Filter the entries where the command starts with \"o2-gpu\" and then perform the comparison:\n   \\ diff --side-by-side --left-column --color=always  <(jq '.[] | select(.command | test(\"^o2-gpu\"))' workflow1.json | jq --sort-keys .)  <(jq '.[] | select(.command | test(\"^o2-gpu\"))' workflow0.json | jq --sort-keys .) | less -R\nHELP_USAGE\n}\n\ninit648",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/Parsers/workflowToJSON.sh"
        }
    ],
    "e814fc4dbce56e772d98e2063060a46647cdaed0459a47043bc1467f9380fe84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# This script tallies the number of events, bc's, and tracks in a collection of AO2D.root files.\n# Execute with: counttracks.sh [file1] [file2] ...\n# For remote files, use the format: alien:///alice/.../AO2D.root\n\nLIST=\"\"\nfor var in \"$@\"\ndo\n  LIST+=\"$var \"\ndone\n\nLIST=\\\"$LIST\\\"\n\nroot.exe -b -q -l counttracks.C\\(\"$LIST\"\\)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/UTILS/aod-size/counttracks.sh"
        }
    ],
    "d4b3f1a3fa50ffa17a3cea711e7a0c9b6046772297af041ae84658e7fe9f6454": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# ---------------------------------------------------------------------------------------------------------------------\n\n# Verify that the conditions for enabling calibrations are met, and\n# activate them by default if they are not already enabled or\n# if they have not been explicitly disabled.\n# Subsequently, configure the data specification based on the enabled calibrations.\n\n# Used to prevent sourcing this file more than once\nif [[ -z ${SOURCE_GUARD_SETENV_CALIB:-} ]]; then\nSOURCE_GUARD_SETENV_CALIB=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "7c52e69bb48f2b3927ffa4992fd7711e85abe30d33d61269c1d46e484bd52427": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define the conditions for each calibration\nif the ITS detector calibration is present and ITS reconstruction is available along with primary vertex matching, and the VERTEXING_SOURCES variable is not empty, set CAN_DO_CALIB_PRIMVTX_MEANVTX to 1; otherwise, set it to 0.\nif the ITS detector calibration is present, set CAN_DO_CALIB_ITS_DEADMAP_TIME to 1; otherwise, set it to 0.\nif the MFT detector calibration is present, set CAN_DO_CALIB_MFT_DEADMAP_TIME to 1; otherwise, set it to 0.\nif TOF detector calibration and TOF reconstruction are both present, set CAN_DO_CALIB_TOF_DIAGNOSTICS and CAN_DO_CALIB_TOF_INTEGRATEDCURR to 1; otherwise, set both to 0.\nif TOF detector calibration, TOF reconstruction, and either ITS-TPC matching or ITS-TPC-TRD matching are available, set CAN_DO_CALIB_TOF_LHCPHASE and CAN_DO_CALIB_TOF_CHANNELOFFSETS to 1; otherwise, set both to 0.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "2aaabaf0ea588e1857f8c7a49f742fe6d93e56a75c99c041b07576a573721a16": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the TPC has calibration and ITS and TPC detectors are matched; then CAN_DO_CALIB_TPC_SCDCALIB=1; else CAN_DO_CALIB_TPC_SCDCALIB=0; fi\nif the TPC has calibration and TPC_DEDX processing step; then CAN_DO_CALIB_TPC_TIMEGAIN=1; CAN_DO_CALIB_TPC_RESPADGAIN=1; else CAN_DO_CALIB_TPC_TIMEGAIN=0; CAN_DO_CALIB_TPC_RESPADGAIN=0; fi\nif the TPC has calibration and ITS and TPC detectors are matched; then CAN_DO_CALIB_TPC_VDRIFTTGL=1; else CAN_DO_CALIB_TPC_VDRIFTTGL=0; fi\nif the TPC has calibration; then CAN_DO_CALIB_TPC_IDC=1; CAN_DO_CALIB_TPC_SAC=1; else CAN_DO_CALIB_TPC_IDC=0; CAN_DO_CALIB_TPC_SAC=0; fi\nif the FLP_IDS is not empty and does not include 145 or the GEN_TOPO_DEPLOYMENT_TYPE is ALICE_STAGING; then CAN_DO_CALIB_TPC_SAC=0; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "8c973e325183078a9c33942087fd9742bdffef9e71de98f3fd84ad6367bce652": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the TRD detector is calibrated and the ITS, TPC, and TRD detectors are present and have matching data; then set CAN_DO_CALIB_TRD_VDRIFTEXB to 1, CAN_DO_CALIB_TRD_GAIN to 1, and CAN_DO_CALIB_TRD_T0 to 1; otherwise, set all three to 0. \nif the EMC detector is calibrated and there is corresponding reconstruction data for EMC; then set CAN_DO_CALIB_EMC_BADCHANNELCALIB and CAN_DO_CALIB_EMC_TIMECALIB to 1; otherwise, set both to 0. \nif the PHS detector is calibrated and there is corresponding reconstruction data for PHS; then set CAN_DO_CALIB_PHS_BADMAPCALIB, CAN_DO_CALIB_PHS_TURNONCALIB, CAN_DO_CALIB_PHS_RUNBYRUNCALIB, and CAN_DO_CALIB_PHS_L1PHASE to 1; otherwise, set all four to 0. \nif the CPV detector is calibrated and there is corresponding reconstruction data for CPV; then set CAN_DO_CALIB_CPV_GAIN to 1; otherwise, set it to 0.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "8d39d8dc3d18ea74018e4283dd902c8af0537e9c9915af46b9c5b5d983b6f052": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the detector_calib is FT0 and the detector_reco is FT0; then CAN_DO_CALIB_FT0_TIMEOFFSET=1; CAN_DO_CALIB_FT0_INTEGRATEDCURR=1; else CAN_DO_CALIB_FT0_TIMEOFFSET=0; CAN_DO_CALIB_FT0_INTEGRATEDCURR=0; fi\nif the detector_calib is FV0 and the processing_step is FV0_RECO; then CAN_DO_CALIB_FV0_INTEGRATEDCURR=1; else CAN_DO_CALIB_FV0_INTEGRATEDCURR=0; fi\nif the detector_calib is FDD and the processing_step is FDD_RECO; then CAN_DO_CALIB_FDD_INTEGRATEDCURR=1; else CAN_DO_CALIB_FDD_INTEGRATEDCURR=0; fi\nif the detector_calib is ZDC and the processing_step is ZDC_RECO; then CAN_DO_CALIB_ZDC_TDC=1; else CAN_DO_CALIB_ZDC_TDC=0; fi\nif the SYNCMODE is 1 and the processing_step is ENTROPY_ENCODER and the WORKFLOW_DETECTORS_CTF is not empty and not equal to NONE; then CAN_DO_CALIB_RCT_UPDATER=1; else CAN_DO_CALIB_RCT_UPDATER=0; fi\n# for asynchronous recalibration\nif the detector_calib is EMC and the detector_reco is EMC and the SYNCMODE is not 1; then CAN_DO_CALIB_EMC_ASYNC_RECALIB=1; else CAN_DO_CALIB_EMC_ASYNC_RECALIB=0; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "4ed58e1de2d8dd692f024fab996b5916747b5e320eaf3ba564db399f0fd1c805": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $SYNCMODE -ne 1 ]] && has_detector_reco TPC; then CAN_DO_CALIB_ASYNC_EXTRACTTPCCURRENTS=1; else CAN_DO_CALIB_ASYNC_EXTRACTTPCCURRENTS=0; fi\nif [[ $SYNCMODE -ne 1 ]] && has_detector_reco TPC && has_detector_reco ITS && has_detector_reco FT0; then CAN_DO_CALIB_ASYNC_EXTRACTTIMESERIES=1; else CAN_DO_CALIB_ASYNC_EXTRACTTIMESERIES=0; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "0aabc6429eaea3d2bb15dac8f038b686c36e97f62be5d8e5723562b9d7c79189": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# additional individual settings for calibration workflows\nif has_detector CTP; then export CALIB_TPC_SCDCALIB_CTP_INPUT=\"--enable-ctp\"; else export CALIB_TPC_SCDCALIB_CTP_INPUT=\"\"; fi\nif [[ ${DISABLE_TRD_PH:-} == 1 ]]; then CAN_DO_CALIB_TRD_T0=0; fi\n\n: ${CALIB_TPC_SCDCALIB_SLOTLENGTH:=600} # the slot length must be known both on the aggregator and the processing nodes, hence it is defined (in seconds!) here\n: ${CALIB_TPC_SCDCALIB_SENDTRKDATA:=1}  # by default, we intend to record track information alongside unbinned residuals to facilitate more precise offline filtering\n\nif [[ $BEAMTYPE != \"cosmic\" ]] || [[ ${FORCECALIBRATIONS:-} == 1 ]] ; then # calibrations are enabled in non-COSMIC runs\n\n  # we will not handle calibrations exclusively for async! e.g. EMC_ASYNC_RECALIB; we prefer them to be explicitly enabled always",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "c0fe8d8a05124d259086b1024539738c27a899816e72c55a4f549c469539b311": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  # calibrations for primary vertex\n  if [[ $CAN_DO_CALIB_PRIMVTX_MEANVTX == 1 ]]; then\n    if [[ -z ${CALIB_PRIMVTX_MEANVTX+x} ]]; then CALIB_PRIMVTX_MEANVTX=1; fi\n  fi\n  \n  # calibrations for ITS\n  if [[ $CAN_DO_CALIB_ITS_DEADMAP_TIME == 1 ]]; then\n    if [[ -z ${CALIB_ITS_DEADMAP_TIME+x} ]]; then CALIB_ITS_DEADMAP_TIME=1; fi\n  fi\n  \n  # calibrations for MFT\n  if [[ $CAN_DO_CALIB_MFT_DEADMAP_TIME == 1 ]]; then\n    if [[ -z ${CALIB_MFT_DEADMAP_TIME+x} ]]; then CALIB_MFT_DEADMAP_TIME=1; fi\n  fi\n  \n  # calibrations for TOF\n  if [[ $CAN_DO_CALIB_TOF_DIAGNOSTICS == 1 ]]; then\n    if [[ -z ${CALIB_TOF_DIAGNOSTICS+x} ]]; then CALIB_TOF_DIAGNOSTICS=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TOF_LHCPHASE == 1 ]]; then\n    if [[ -z ${CALIB_TOF_LHCPHASE+x} ]]; then CALIB_TOF_LHCPHASE=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TOF_CHANNELOFFSETS == 1 ]]; then\n    if [[ -z ${CALIB_TOF_CHANNELOFFSETS+x} ]]; then CALIB_TOF_CHANNELOFFSETS=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TOF_INTEGRATEDCURR == 1 ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "b8580d07a2a6cc397576f7134fb0c3e9f1bb1b478503941c6d15eaa7a9b1b99f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "fi\n  if [[ $CAN_DO_CALIB_TOF_INTEGRATEDCURR -eq 1 ]]; then\n    if [[ -z ${CALIB_TOF_INTEGRATEDCURR+x} ]]; then CALIB_TOF_INTEGRATEDCURR=1; fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "e406fd2e3263c13aeb7ab4d40f820900a3ebe164e5469969375c02a2dec5c32f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# calibrations for TPC\n  if [[ $CAN_DO_CALIB_TPC_SCDCALIB == 1 ]] ; then\n    if [[ -z ${CALIB_TPC_SCDCALIB+x} ]]; then CALIB_TPC_SCDCALIB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TPC_TIMEGAIN == 1 ]]; then\n    if [[ -z ${CALIB_TPC_TIMEGAIN+x} ]]; then CALIB_TPC_TIMEGAIN=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TPC_RESPADGAIN == 1 ]]; then\n    if [[ -z ${CALIB_TPC_RESPADGAIN+x} ]]; then CALIB_TPC_RESPADGAIN=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TPC_VDRIFTTGL == 1 ]]; then\n    if [[ -z ${CALIB_TPC_VDRIFTTGL+x} ]]; then CALIB_TPC_VDRIFTTGL=1; fi\n  fi\n\n  # calibrations for TRD\n  if [[ $CAN_DO_CALIB_TRD_VDRIFTEXB == 1 ]] ; then\n    if [[ -z ${CALIB_TRD_VDRIFTEXB+x} ]]; then CALIB_TRD_VDRIFTEXB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TRD_GAIN == 1 ]] ; then\n    if [[ -z ${CALIB_TRD_GAIN+x} ]]; then CALIB_TRD_GAIN=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TRD_T0 == 1 ]] ; then\n    if [[ -z ${CALIB_TRD_T0+x} ]]; then CALIB_TRD_T0=1; fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "1fa91f4aa89878d33e1b151779a16956741f8bb9dbeafa1c30edc1f0961af9ed": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $CAN_DO_CALIB_EMC_BADCHANNELCALIB == 1 ]]; then\n    if [[ -z ${CALIB_EMC_BADCHANNELCALIB+x} ]]; then CALIB_EMC_BADCHANNELCALIB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_EMC_TIMECALIB == 1 ]]; then\n    if [[ -z ${CALIB_EMC_TIMECALIB+x} ]]; then CALIB_EMC_TIMECALIB=1; fi\n  fi\n\n  # Calibration settings for PHS\n  if [[ $CAN_DO_CALIB_PHS_ENERGYCALIB == 1 ]]; then\n    if [[ -z ${CALIB_PHS_ENERGYCALIB+x} ]]; then CALIB_PHS_ENERGYCALIB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_PHS_BADMAPCALIB == 1 ]]; then\n    if [[ -z ${CALIB_PHS_BADMAPCALIB+x} ]]; then CALIB_PHS_BADMAPCALIB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_PHS_TURNONCALIB == 1 ]]; then\n    if [[ -z ${CALIB_PHS_TURNONCALIB+x} ]]; then CALIB_PHS_TURNONCALIB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_PHS_RUNBYRUNCALIB == 1 ]]; then\n    if [[ -z ${CALIB_PHS_RUNBYRUNCALIB+x} ]]; then CALIB_PHS_RUNBYRUNCALIB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_PHS_L1PHASE == 1 ]]; then\n    if [[ -z ${CALIB_PHS_L1PHASE+x} ]]; then CALIB_PHS_L1PHASE=1; fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "3c6bf42e57345121a52d44d4da94eccb6fa8c07ffe457a55aa3a3cf8bc4194fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  # calibrations for CPV\n  if [[ $CAN_DO_CALIB_CPV_GAIN == 1 ]]; then\n    if [[ -z ${CALIB_CPV_GAIN+x} ]]; then CALIB_CPV_GAIN=1; fi\n  fi\n\n  # calibrations for ZDC\n  if [[ $CAN_DO_CALIB_ZDC_TDC == 1 ]]; then\n    if [[ -z ${CALIB_ZDC_TDC+x} ]]; then CALIB_ZDC_TDC=1; fi\n  fi\n\n  # calibrations for FIT\n  if [[ $CAN_DO_CALIB_FT0_TIMEOFFSET == 1 ]]; then\n    if [[ -z ${CALIB_FT0_TIMEOFFSET+x} ]]; then CALIB_FT0_TIMEOFFSET=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_FT0_INTEGRATEDCURR == 1 ]]; then\n    if [[ -z ${CALIB_FT0_INTEGRATEDCURR+x} ]]; then CALIB_FT0_INTEGRATEDCURR=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_FV0_INTEGRATEDCURR == 1 ]]; then\n    if [[ -z ${CALIB_FV0_INTEGRATEDCURR+x} ]]; then CALIB_FV0_INTEGRATEDCURR=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_FDD_INTEGRATEDCURR == 1 ]]; then\n    if [[ -z ${CALIB_FDD_INTEGRATEDCURR+x} ]]; then CALIB_FDD_INTEGRATEDCURR=1; fi\n  fi\nfi\n\n# Calibrations that are independent of cosmic or non-cosmic run conditions:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "5e08e65c5225298cf9605d4baf5d4cd7a36695ab102a0cf9d77e99fcc4dcb417": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Calibrations regardless of whether the run is COSMIC or non-COSMIC:\n\n# if feasible, run RCT updater\nif [[ $CAN_DO_CALIB_RCT_UPDATER == 1 ]]; then\n  if [[ -z ${CALIB_RCT_UPDATER+x} ]]; then CALIB_RCT_UPDATER=1; fi\nfi\n\n# IDCs (by default, this is activated for synchronization reconstruction on EPNs, but not on staging due to the limited availability of calibration nodes)\nif [[ $CAN_DO_CALIB_TPC_IDC == 1 ]]; then\n  if [[ -z ${CALIB_TPC_IDC+x} ]]; then\n    if [[ $EPNSYNCMODE == 1 ]] && [[ \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" != \"ALICE_STAGING\" ]]; then\n      CALIB_TPC_IDC=1;\n    else\n      CALIB_TPC_IDC=0;\n    fi\n  fi\nfi\n# SAC (by default, this is enabled for synchronization reconstruction on EPNs)\nif [[ $CAN_DO_CALIB_TPC_SAC == 1 ]]; then\n  if [[ -z ${CALIB_TPC_SAC+x} ]]; then\n    if [[ $EPNSYNCMODE == 1 ]]; then\n      CALIB_TPC_SAC=1;\n    else\n      CALIB_TPC_SAC=0;\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "b1f0a1e2ed55baceaedf8424a55190224491498be8910a32c17ef12bfaeba69e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "( [[ -z ${CALIB_FT0_INTEGRATEDCURR:-} ]] || [[ $CAN_DO_CALIB_FT0_INTEGRATEDCURR == 0 ]] ) && CALIB_FT0_INTEGRATEDCURR=0\n( [[ -z ${CALIB_FV0_INTEGRATEDCURR:-} ]] || [[ $CAN_DO_CALIB_FV0_INTEGRATEDCURR == 0 ]] ) && CALIB_FV0_INTEGRATEDCURR=0\n( [[ -z ${CALIB_FDD_INTEGRATEDCURR:-} ]] || [[ $CAN_DO_CALIB_FDD_INTEGRATEDCURR == 0 ]] ) && CALIB_FDD_INTEGRATEDCURR=0\n( [[ -z ${CALIB_FT0_TIMEOFFSET:-} ]] || [[ $CAN_DO_CALIB_FT0_TIMEOFFSET == 0 ]] ) && CALIB_FT0_TIMEOFFSET=0\n( [[ -z ${CALIB_PRIMVTX_MEANVTX:-} ]] || [[ $CAN_DO_CALIB_PRIMVTX_MEANVTX == 0 ]] ) && CALIB_PRIMVTX_MEANVTX=0\n( [[ -z ${CALIB_TOF_LHCPHASE:-} ]] || [[ $CAN_DO_CALIB_TOF_LHCPHASE == 0 ]] ) && CALIB_TOF_LHCPHASE=0\n( [[ -z ${CALIB_TOF_CHANNELOFFSETS:-} ]] || [[ $CAN_DO_CALIB_TOF_CHANNELOFFSETS == 0 ]] ) && CALIB_TOF_CHANNELOFFSETS=0\n( [[ -z ${CALIB_TOF_DIAGNOSTICS:-} ]] || [[ $CAN_DO_CALIB_TOF_DIAGNOSTICS == 0 ]] ) && CALIB_TOF_DIAGNOSTICS=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "253928e4708935367f29777bf15151b594a1d6d720c333b09ea87c88f8e4305c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "( [[ -z ${CALIB_TOF_INTEGRATEDCURR:-} ]] || [[ $CAN_DO_CALIB_TOF_INTEGRATEDCURR == 0 ]] ) && CALIB_TOF_INTEGRATEDCURR=0\n( [[ -z ${CALIB_TPC_SCDCALIB:-} ]] || [[ $CAN_DO_CALIB_TPC_SCDCALIB == 0 ]] ) && CALIB_TPC_SCDCALIB=0\n( [[ -z ${CALIB_TPC_TIMEGAIN:-} ]] || [[ $CAN_DO_CALIB_TPC_TIMEGAIN == 0 ]] ) && CALIB_TPC_TIMEGAIN=0\n( [[ -z ${CALIB_TPC_RESPADGAIN:-} ]] || [[ $CAN_DO_CALIB_TPC_RESPADGAIN == 0 ]] ) && CALIB_TPC_RESPADGAIN=0\n( [[ -z ${CALIB_TPC_IDC:-} ]] || [[ $CAN_DO_CALIB_TPC_IDC == 0 ]] ) && CALIB_TPC_IDC=0\n( [[ -z ${CALIB_TPC_SAC:-} ]] || [[ $CAN_DO_CALIB_TPC_SAC == 0 ]] ) && CALIB_TPC_SAC=0\n( [[ -z ${CALIB_TPC_VDRIFTTGL:-} ]] || [[ $CAN_DO_CALIB_TPC_VDRIFTTGL == 0 ]] ) && CALIB_TPC_VDRIFTTGL=0\n( [[ -z ${CALIB_TRD_VDRIFTEXB:-} ]] || [[ $CAN_DO_CALIB_TRD_VDRIFTEXB == 0 ]] ) && CALIB_TRD_VDRIFTEXB=0\n( [[ -z ${CALIB_TRD_GAIN:-} ]] || [[ $CAN_DO_CALIB_TRD_GAIN == 0 ]] ) && CALIB_TRD_GAIN=0\n( [[ -z ${CALIB_TRD_T0:-} ]] || [[ $CAN_DO_CALIB_TRD_T0 == 0 ]] ) && CALIB_TRD_T0=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "d357c58fcc20b8c8d86e9402876196fd95cba440c1a296d2c68ff4fd1d3f85fe": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "( [[ -z ${CALIB_TRD_T0:-} ]] || [[ $CAN_DO_CALIB_TRD_T0 == 0 ]] ) && CALIB_TRD_T0=0\n( [[ -z ${CALIB_EMC_BADCHANNELCALIB:-} ]] || [[ $CAN_DO_CALIB_EMC_BADCHANNELCALIB == 0 ]] ) && CALIB_EMC_BADCHANNELCALIB=0\n( [[ -z ${CALIB_EMC_TIMECALIB:-} ]] || [[ $CAN_DO_CALIB_EMC_TIMECALIB == 0 ]] ) && CALIB_EMC_TIMECALIB=0\n( [[ -z ${CALIB_PHS_ENERGYCALIB:-} ]] || [[ $CAN_DO_CALIB_PHS_ENERGYCALIB == 0 ]] ) && CALIB_PHS_ENERGYCALIB=0\n( [[ -z ${CALIB_PHS_BADMAPCALIB:-} ]] || [[ $CAN_DO_CALIB_PHS_BADMAPCALIB == 0 ]] ) && CALIB_PHS_BADMAPCALIB=0\n( [[ -z ${CALIB_PHS_TURNONCALIB:-} ]] || [[ $CAN_DO_CALIB_PHS_TURNONCALIB == 0 ]] ) && CALIB_PHS_TURNONCALIB=0\n( [[ -z ${CALIB_PHS_RUNBYRUNCALIB:-} ]] || [[ $CAN_DO_CALIB_PHS_RUNBYRUNCALIB == 0 ]] ) && CALIB_PHS_RUNBYRUNCALIB=0\n( [[ -z ${CALIB_PHS_L1PHASE:-} ]] || [[ $CAN_DO_CALIB_PHS_L1PHASE == 0 ]] ) && CALIB_PHS_L1PHASE=0\n( [[ -z ${CALIB_CPV_GAIN:-} ]] || [[ $CAN_DO_CALIB_CPV_GAIN == 0 ]] ) && CALIB_CPV_GAIN=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "b336709a001282e7e919660b233c4be4bba979e599ae114d772224dc41855bb9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "( [[ -z ${CALIB_CPV_GAIN:-} ]] || [[ $CAN_DO_CALIB_CPV_GAIN == 0 ]] ) && CALIB_CPV_GAIN=0\n( [[ -z ${CALIB_ZDC_TDC:-} ]] || [[ $CAN_DO_CALIB_ZDC_TDC == 0 ]] ) && CALIB_ZDC_TDC=0\n( [[ -z ${CALIB_ITS_DEADMAP_TIME:-} ]] || [[ $CAN_DO_CALIB_ITS_DEADMAP_TIME == 0 ]] ) && CALIB_ITS_DEADMAP_TIME=0\n( [[ -z ${CALIB_MFT_DEADMAP_TIME:-} ]] || [[ $CAN_DO_CALIB_MFT_DEADMAP_TIME == 0 ]] ) && CALIB_MFT_DEADMAP_TIME=0\n( [[ -z ${CALIB_RCT_UPDATER:-} ]] || [[ $CAN_DO_CALIB_RCT_UPDATER == 0 ]] ) && CALIB_RCT_UPDATER=0\n# for asynchronous operations:\n( [[ -z ${CALIB_EMC_ASYNC_RECALIB:-} ]] || [[ $CAN_DO_CALIB_EMC_ASYNC_RECALIB == 0 ]] ) && CALIB_EMC_ASYNC_RECALIB=0\n( [[ -z ${CALIB_ASYNC_EXTRACTTPCCURRENTS:-} ]] || [[ $CAN_DO_CALIB_ASYNC_EXTRACTTPCCURRENTS == 0 ]] ) && CALIB_ASYNC_EXTRACTTPCCURRENTS=0\n( [[ -z ${CALIB_ASYNC_DISABLE3DCURRENTS:-} ]] || [[ $CAN_DO_CALIB_ASYNC_DISABLE3DCURRENTS == 0 ]] ) && CALIB_ASYNC_DISABLE3DCURRENTS=0\n: ${ON_SKIMMED_DATA:=0}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "1e0288854a135c9c8aedda60b1493b19b861ff4fb2053f9825e096645d4e4696": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": ": ${ON_SKIMMED_DATA:=0}\n( [[ -z ${CALIB_ASYNC_EXTRACTTIMESERIES:-} ]] || [[ $CAN_DO_CALIB_ASYNC_EXTRACTTIMESERIES == 0 ]] ) && CALIB_ASYNC_EXTRACTTIMESERIES=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "8be67d3ada2002ae0340f944bbaa0dae959578df79dacf1b85c69a19bf317c87": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0${GEN_TOPO_VERBOSE:-}\" == \"01\" ]]; then\n  echo \"CALIB_RCT_UPDATER = ${CALIB_RCT_UPDATER:-}\" 1>&2\n  echo \"CALIB_PRIMVTX_MEANVTX = $CALIB_PRIMVTX_MEANVTX\" 1>&2\n  echo \"CALIB_TOF_LHCPHASE = $CALIB_TOF_LHCPHASE\" 1>&2\n  echo \"CALIB_TOF_CHANNELOFFSETS = $CALIB_TOF_CHANNELOFFSETS\" 1>&2\n  echo \"CALIB_TOF_DIAGNOSTICS = $CALIB_TOF_DIAGNOSTICS\" 1>&2\n  echo \"CALIB_TOF_INTEGRATEDCURR = $CALIB_TOF_INTEGRATEDCURR\" 1>&2\n  echo \"CALIB_EMC_BADCHANNELCALIB = $CALIB_EMC_BADCHANNELCALIB\" 1>&2\n  echo \"CALIB_EMC_TIMECALIB = $CALIB_EMC_TIMECALIB\" 1>&2\n  echo \"CALIB_PHS_ENERGYCALIB = $CALIB_PHS_ENERGYCALIB\" 1>&2\n  echo \"CALIB_PHS_BADMAPCALIB = $CALIB_PHS_BADMAPCALIB\" 1>&2\n  echo \"CALIB_PHS_TURNONCALIB = $CALIB_PHS_TURNONCALIB\" 1>&2\n  echo \"CALIB_PHS_RUNBYRUNCALIB = $CALIB_PHS_RUNBYRUNCALIB\" 1>&2\n  echo \"CALIB_PHS_L1PHASE = $CALIB_PHS_L1PHASE\" 1>&2\n  echo \"CALIB_TRD_VDRIFTEXB = $CALIB_TRD_VDRIFTEXB\" 1>&2\n  echo \"CALIB_TRD_GAIN = $CALIB_TRD_GAIN\" 1>&2\n  echo \"CALIB_TRD_T0 = $CALIB_TRD_T0\" 1>&2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "c4ebfc3923019f4db7e1d3393237eca0116cbc8e3ceaf42352ba22b5d0685780": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"CALIB_TRD_GAIN = $CALIB_TRD_GAIN\" 1>&2\n    echo \"CALIB_TRD_T0 = $CALIB_TRD_T0\" 1>&2\n    echo \"CALIB_TPC_TIMEGAIN = $CALIB_TPC_TIMEGAIN\" 1>&2\n    echo \"CALIB_TPC_RESPADGAIN = $CALIB_TPC_RESPADGAIN\" 1>&2\n    echo \"CALIB_TPC_IDC = $CALIB_TPC_IDC\" 1>&2\n    echo \"CALIB_TPC_SAC = $CALIB_TPC_SAC\" 1>&2\n    echo \"CALIB_CPV_GAIN = $CALIB_CPV_GAIN\" 1>&2\n    echo \"CALIB_ZDC_TDC = $CALIB_ZDC_TDC\" 1>&2\n    echo \"CALIB_FT0_TIMEOFFSET = $CALIB_FT0_TIMEOFFSET\" 1>&2\n    echo \"CALIB_FT0_INTEGRATEDCURR = $CALIB_FT0_INTEGRATEDCURR\" 1>&2\n    echo \"CALIB_FV0_INTEGRATEDCURR = $CALIB_FV0_INTEGRATEDCURR\" 1>&2\n    echo \"CALIB_FDD_INTEGRATEDCURR = $CALIB_FDD_INTEGRATEDCURR\" 1>&2\n    echo \"Calibrations for asynchronous settings:\" 1>&2\n    echo \"CALIB_EMC_ASYNC_RECALIB = $CALIB_EMC_ASYNC_RECALIB\" 1>&2\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "76868e08285d87852e7fbbd2eda90a0a2ea36fa28641c37884f425de72923793": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define specification for the proxy of TF-based outputs from BARREL\nif [[ -z ${CALIBDATASPEC_BARREL_TF:-} ]]; then\n  # RCT updater\n  if [[ $CALIB_RCT_UPDATER == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"calibRCT:CTF/DONE/0\"; fi\n  # primary vertex\n  if [[ $CALIB_PRIMVTX_MEANVTX == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"pvtx:GLO/PVTX/0\"; fi\n\n  # ITS\n  if [[ $CALIB_ITS_DEADMAP_TIME == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"itsChipStatus:ITS/CHIPSSTATUS/0\"; fi\n\n  # MFT\n  if [[ $CALIB_MFT_DEADMAP_TIME == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"mftChipStatus:MFT/CHIPSSTATUS/0\"; fi\n\n  # TOF\n  if [[ $CALIB_TOF_LHCPHASE == 1 ]] || [[ $CALIB_TOF_CHANNELOFFSETS == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"calibTOF:TOF/CALIBDATA/0\"; fi\n  if [[ $CALIB_TOF_DIAGNOSTICS == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"diagWords:TOF/DIAFREQ/0\"; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "0d994cefa7fefaee6807725c6e9de9eca58ba7858515962f6d4dbc7850a93ef1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TPC\nif [[ $CALIB_TPC_SCDCALIB == 1 ]]; then\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"unbinnedTPCResiduals:GLO/UNBINNEDRES/0\"\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"trackReferences:GLO/TRKREFS/0\"\nfi\nif [[ $CALIB_TPC_SCDCALIB == 1 ]] && [[ ${CALIB_TPC_SCDCALIB_SENDTRKDATA:-} == \"1\" ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"tpcInterpTrkData:GLO/TRKDATA/0\"; fi\nif [[ $CALIB_TPC_SCDCALIB == 1 ]] && [[ ${CALIB_TPC_SCDCALIB_CTP_INPUT:-} == \"--enable-ctp\" ]]; then\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"lumi:CTP/LUMI/0\"\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"ctpdigi:CTP/DIGITS/0\"\nfi\nif [[ $CALIB_TPC_VDRIFTTGL == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"tpcvdtgl:GLO/TPCITS_VDTGL/0\"; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "52145e2920003bde0ce04f2c0c8f4f8f8355fb7125ab4fa25c254e8d36757e06": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $CALIB_TRD_VDRIFTEXB == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"angResHistoTRD:TRD/ANGRESHISTS/0\"; fi\n  if [[ $CALIB_TRD_GAIN == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"gainHistoTRD:TRD/GAINCALIBHISTS/0\"; fi\n  if [[ $CALIB_TRD_T0 == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"trdph:TRD/PULSEHEIGHT/0\"; fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "ff5609a4a94c8429df8a4b9281eedd059a7411aac6e2381fd9213df13dc7e04b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# set specifications for proxy related to occasional outputs from the BARREL\nif [[ -z ${CALIBDATASPEC_BARREL_SPORADIC:-} ]]; then\n  # TPC\n  if [[ $CALIB_TPC_RESPADGAIN == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_SPORADIC \"trackGainHistoTPC:TPC/TRACKGAINHISTOS/0\"; fi\n  if [[ $CALIB_TPC_TIMEGAIN == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_SPORADIC \"tpcmips:TPC/MIPS/0\"; fi\n  # TOF\n  if [[ $CALIB_TOF_INTEGRATEDCURR == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_BARREL_SPORADIC \"integrCurrNTOF:TOF/ITOFCN/0\"\n    add_semicolon_separated CALIBDATASPEC_BARREL_SPORADIC \"integrCurrQTOF:TOF/ITOFCQ/0\"\n  fi\nfi\n\n# set specifications for proxy associated with TPC IDCs - Side A\nif [[ -z ${CALIBDATASPEC_TPCIDC_A:-} ]]; then\n  # TPC\n  if [[ $CALIB_TPC_IDC == 1 ]]; then add_semicolon_separated CALIBDATASPEC_TPCIDC_A \"idcsgroupa:TPC/IDCGROUPA\"; fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "742d04db435db6aa40a03820c7c8502a3f6686805f03d4f72632bd04d3e3b45e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define the proxy specification for TPC IDCs on Side C\nif [[ -z ${CALIBDATASPEC_TPCIDC_C:-} ]]; then\n  # TPC\n  if [[ $CALIB_TPC_IDC == 1 ]]; then add_semicolon_separated CALIBDATASPEC_TPCIDC_C \"idcsgroupc:TPC/IDCGROUPC\"; fi\nfi\n\n# define the proxy specification for TPC SAC\nif [[ -z ${CALIBDATASPEC_TPCSAC:-} ]]; then\n  # TPC\n  if [[ $CALIB_TPC_SAC == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_TPCSAC \"sacdec:TPC/DECODEDSAC/0\"\n    add_semicolon_separated CALIBDATASPEC_TPCSAC \"sacreftime:TPC/REFTIMESAC/0\"\n  fi\nfi\n\n# define the proxy specification for TF-based outputs from CALO\nif [[ -z ${CALIBDATASPEC_CALO_TF:-} ]]; then\n  # EMC\n  if [[ $CALIB_EMC_BADCHANNELCALIB == 1 ]] || [[ $CALIB_EMC_TIMECALIB == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"cellsEMC:EMC/CELLS/0\"\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"cellsTrgREMC:EMC/CELLSTRGR/0\"\n    if has_detector CTP; then\n      add_semicolon_separated CALIBDATASPEC_CALO_TF \"ctpdigi:CTP/DIGITS/0\"\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "45419601672d8be81c354d0e6514d30608dded5622b7181c1034087e6152ab20": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $CALIB_PHS_ENERGYCALIB == 1 ]] || [[ $CALIB_PHS_TURNONCALIB == 1 ]] || [[ $CALIB_PHS_RUNBYRUNCALIB == 1 ]] || [[ $CALIB_PHS_L1PHASE == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"clsPHS:PHS/CLUSTERS/0\"\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"clTRPHS:PHS/CLUSTERTRIGREC/0\"\n  fi\n  if [[ $CALIB_PHS_ENERGYCALIB == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"cluelementsPHS:PHS/CLUELEMENTS/0\"\n  fi\n  if [[ $CALIB_PHS_BADMAPCALIB == 1 ]] || [[ $CALIB_PHS_TURNONCALIB == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"cellsPHS:PHS/CELLS/0\"\n  fi\n  if [[ $CALIB_PHS_TURNONCALIB == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"cellsTRPHS:PHS/CELLTRIGREC/0\"\n  fi\n\n  # CPV\n  if [[ $CALIB_CPV_GAIN == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"calibdCPV:CPV/CALIBDIGITS/0\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "11a09558079e01af66ecc5c0305468a8bb38c2093afa5c2c725ba541d6c51a6d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define specification for proxy of TF-based outputs from forward detectors\nif [[ -z ${CALIBDATASPEC_FORWARD_TF:-} ]]; then\n  # FT0\n  if [[ $CALIB_FT0_TIMEOFFSET -eq 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_TF \"timeSpectraFT0:FT0/TIME_SPECTRA/0\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "146ec1e89ac8615febfaba04bdbb8eb08baaac4bb01ade64ce1504beb668dc13": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define specification for proxy for occasional outputs from forward detectors\nif [[ -z ${CALIBDATASPEC_FORWARD_SPORADIC:-} ]]; then\n  # FIT\n  if [[ $CALIB_FT0_INTEGRATEDCURR == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"integrCurrFT0:FT0/IFT0C/0\"\n  fi\n  if [[ $CALIB_FV0_INTEGRATEDCURR == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"integrCurrFV0:FV0/IFV0C/0\"\n  fi\n  if [[ $CALIB_FDD_INTEGRATEDCURR == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"integrCurrFDD:FDD/IFDDC/0\"\n  fi\n  # ZDC\n  if [[ $CALIB_ZDC_TDC == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"tdcZDC:ZDC/TDCCALIBDATA/0\"\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"histoZDC:ZDC/TDC_1DH\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "5d9985529da972d98f1219ee3f91c4c102426233e626f1a60e332650cd0cee34": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0${GEN_TOPO_VERBOSE:-}\" == \"01\" ]]; then\n  # debug output\n  echo CALIBDATASPEC_BARREL_TF = ${CALIBDATASPEC_BARREL_TF:-} 1>&2\n  echo CALIBDATASPEC_BARREL_SPORADIC = ${CALIBDATASPEC_BARREL_SPORADIC:-} 1>&2\n  echo CALIBDATASPEC_TPCIDC_A = ${CALIBDATASPEC_TPCIDC_A:-} 1>&2\n  echo CALIBDATASPEC_TPCIDC_C = ${CALIBDATASPEC_TPCIDC_C:-} 1>&2\n  echo CALIBDATASPEC_CALO_TF = ${CALIBDATASPEC_CALO_TF:-} 1>&2\n  echo CALIBDATASPEC_CALO_SPORADIC = ${CALIBDATASPEC_CALO_SPORADIC:-} 1>&2\n  echo CALIBDATASPEC_MUON_TF = ${CALIBDATASPEC_MUON_TF:-} 1>&2\n  echo CALIBDATASPEC_MUON_SPORADIC = ${CALIBDATASPEC_MUON_SPORADIC:-} 1>&2\n  echo CALIBDATASPEC_FORWARD_TF = ${CALIBDATASPEC_FORWARD_TF:-} 1>&2\n  echo CALIBDATASPEC_FORWARD_SPORADIC = ${CALIBDATASPEC_FORWARD_SPORADIC:-} 1>&2\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "f1d4323effe3b78378d0d3edc111d30e17fa631a9bc1e4a85578ca0483754e53": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Proxies Properties\nget_proxy_connection()\n{\n  if (( $# < 3 )); then\n    echo \"$# parameters received\"\n    echo \"Function name: ${FUNCNAME} requires a minimum of 3 parameters:\"\n    echo \"the first parameter is the string ID of the proxy\"\n    echo \"the second parameter is the type of connection (input/output)\"\n    echo \"the third parameter is either sporadic or timeframe\"\n    exit 1\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "d799827ea057b23f48ea35ddc437909d2281662743bae7ff651585f5ff4700e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# defining the connection method\nif [[ $2 == \"input\" ]]; then\n  local CONNECTION=\"method=bind\"\n  local NAMEPROXY=\"--proxy-name aggregator-proxy-$1\"\n  local NAMEPROXYCHANNEL=\n  if workflow_has_parameter CALIB_LOCAL_AGGREGATOR; then\n    CONNECTION+=\",type=pull\"\n  else\n    CONNECTION+=\",type=sub\"\n  fi\nelif [[ $2 == \"output\" ]]; then\n  local CONNECTION=\"method=connect\"\n  local NAMEPROXY=\"--proxy-name calib-output-proxy-$1\"\n  local NAMEPROXYCHANNEL=\"--proxy-channel-name aggregator-proxy-$1\"\n  if workflow_has_parameter CALIB_LOCAL_AGGREGATOR; then\n    CONNECTION+=\",type=push\"\n  else\n    CONNECTION+=\",type=pub\"\n  fi\nelse\n  echo \"parameter 2 should be either 'input' or 'output'\"\n  exit 2\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "15554a469de2576b231a6ee397159cb8d0b13c8d375ce7159d788ff559f28a43": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the workflow includes the CALIB_LOCAL_AGGREGATOR parameter; then\n    CONNECTION+=\",transport=zeromq,address=ipc://${UDS_PREFIX}aggregator-shm-$1\"\nelse\n    CONNECTION+=\",transport=zeromq\"\nfi\n  local PROXY_CONN=\"$NAMEPROXY $NAMEPROXYCHANNEL --channel-config \\\"name=aggregator-proxy-$1,$CONNECTION,rateLogging=10\\\"\"\n  if [ $EPNSYNCMODE -eq 1 ]; then\n    PROXY_CONN+=\" --network-interface ib0\"\n  fi\n  if [ $2 == \"input\" ] && [ ! -z ${TIMEFRAME_SHM_LIMIT:-} ]; then\n    PROXY_CONN+=\" --timeframes-shm-limit $TIMEFRAME_SHM_LIMIT\"\n  fi\n  if [ $2 == \"output\" ]; then\n    if [ $3 == \"timeframe\" ]; then\n      PROXY_CONN+=\" --environment DPL_OUTPUT_PROXY_ORDERED=1\"\n    elif [ $3 == \"sporadic\" ]; then\n      PROXY_CONN+=\" --environment \\\"DPL_OUTPUT_PROXY_WHENANY=1 DPL_DONT_DROP_OLD_TIMESLICE=1\\\" --sporadic-inputs\"\n    else\n      echo \"invalid option $3, must be (sporadic|timeframe)\" 1>&2\n      exit 1\n    fi\n  fi\n  if [ $2 == \"input\" ] && [ $3 == \"sporadic\" ]; then\n    PROXY_CONN+=\" --sporadic-outputs\"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "cef04bb40760218acf650219ede2d8206f2805f197705d966d607686236b39ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $2 == \"input\" && $3 == \"sporadic\" ]]; then\n    PROXY_CONN+=\" --sporadic-outputs\"\n  fi\n  if [[ \"0${GEN_TOPO_VERBOSE:-}\" == \"01\" ]]; then\n    echo \"PROXY_CONN = $PROXY_CONN\" 1>&2\n  fi\n  echo $PROXY_CONN\n}\nfi # setenv_calib.sh sourced",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv_calib.sh"
        }
    ],
    "db964f79492d6c931f1e9ec56b543137f8bf232d1e76eaab61ed06d1ba6f9ef8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# to prevent sourcing this file multiple times\nif [[ -z ${SOURCE_GUARD_GETCOMMONARGS:-} ]]; then\nSOURCE_GUARD_GETCOMMONARGS=1\n\nif [[ -z $SEVERITY || -z $NUMAID || -z $SHMSIZE || -z $FILEWORKDIR || -z $EPNSYNCMODE || -z $INFOLOGGER_SEVERITY || -z $SHMTHROW || -z $NORATELOG ]]; then\n  echo \"Missing Configuration Environment Variables in getCommonArgs.sh\" 1>&2\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/getCommonArgs.sh"
        }
    ],
    "f520ec6569cd960ba66a99d9235cf951c017e5ca4b1c8427e50d771380ae5919": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n   ARGS_ALL=\"--session ${OVERRIDE_SESSION:-default} --severity $SEVERITY --shm-segment-id ${O2JOBSHMID:-$NUMAID} --shm-segment-size $SHMSIZE ${ARGS_ALL_EXTRA:-} --early-forward-policy noraw\"\nARGS_ALL_CONFIG=\"keyval.input_dir=$FILEWORKDIR;keyval.output_dir=/dev/null;${ALL_EXTRA_CONFIG:-}\"\nif [[ $EPNSYNCMODE -eq 1 ]]; then\n  ARGS_ALL+=\" --infologger-severity $INFOLOGGER_SEVERITY\"\n  ARGS_ALL+=\" --monitoring-backend influxdb-unix:///tmp/telegraf.sock --resources-monitoring ${GEN_TOPO_RESOURCE_MONITORING:-15} ${GEN_TOPO_RESOURCE_MONITORING:+--dpl-stats-min-online-publishing-interval $GEN_TOPO_RESOURCE_MONITORING}\"\n  ARGS_ALL_CONFIG+=\"NameConf.mCCDBServer=$GEN_TOPO_EPN_CCDB_SERVER;\"\n  export DPL_CONDITION_BACKEND=$GEN_TOPO_EPN_CCDB_SERVER\n  [[ -z ${O2_DPL_DEPLOYMENT_MODE:-} ]] && O2_DPL_DEPLOYMENT_MODE=OnlineECS\nelse\n  if [[ \"${ENABLE_METRICS:-}\" != \"1\" ]]; then\n    ARGS_ALL+=\" --monitoring-backend no-op://\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/getCommonArgs.sh"
        }
    ],
    "fe0bd1948d0de68b50f12f07804ea2d5a04a451715d165bba578f4eff0d1ecec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "elif [[ \"${ENABLE_METRICS:-}\" != \"1\" ]]; then\n ARGS_ALL+=\" --monitoring-backend no-op://\"\nfi\n[[ $SHMTHROW == 0 ]] && ARGS_ALL+=\" --bad-alloc-max-attempts 60 --bad-alloc-attempt-interval 1000\"\n[[ -n ${SHM_MANAGER_SHMID:-} && ${GEN_TOPO_CALIB_WORKFLOW:-} != 1 ]] && ARGS_ALL+=\" --no-cleanup --shm-no-cleanup on --shmid $SHM_MANAGER_SHMID\"\n[[ $NORATELOG == 1 ]] && ARGS_ALL+=\" --fairmq-rate-logging 0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/getCommonArgs.sh"
        }
    ],
    "7277c5b882fa342e973084439dfdcf02199a5912618f76bdf7e4aaa450e125b4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ ! -z ${O2_DPL_EXIT_TRANSITION_TIMEOUT_DEFAULT:-} ]] && ARGS_ALL+=\" --exit-transition-timeout $O2_DPL_EXIT_TRANSITION_TIMEOUT_DEFAULT\"\n[[ ! -z ${O2_DPL_PROCESSING_TRANSITION_TIMEOUT_DEFAULT:-} ]] && ARGS_ALL+=\" --data-processing-timeout $O2_DPL_PROCESSING_TRANSITION_TIMEOUT_DEFAULT\"\n\ntrue\n\nfi # getCommonArgs.sh sourced",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/getCommonArgs.sh"
        }
    ],
    "70cbd57163c60d2d431949207d7b3d6ea0cc2a6145b4162f58fbd4b2b5ad6756": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# used to prevent sourcing this file multiple times\nif [[ -z ${SOURCE_GUARD_SETENV:-} ]]; then\nSOURCE_GUARD_SETENV=1\n\nsource $O2DPG_ROOT/DATA/common/gen_topo_helper_functions.sh || { echo \"gen_topo_helper_functions.sh failed\" 1>&2 && exit 1; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "d27da8486b857e923c2809fd83cfdc6bec6e6646f519bde47bc3fc96099809b3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # Ensure we can open enough files and allocate sufficient memory\nif [[ ${SETENV_NO_ULIMIT:-} != \"1\" ]]; then\n  ulimit -S -n 4096 && ulimit -S -m unlimited && ulimit -S -v unlimited && [[ -z ${GPUTYPE:-} ]] || [[ ${GPUTYPE:-} == \"CPU\" ]] || ulimit -S -l unlimited\n  if [[ $? != 0 ]]; then\n    echo Error setting ulimits\n    exit 1\n  fi\nelse\n  ULIMIT_S=`ulimit -S -n`\n  ULIMIT_H=`ulimit -H -n`\n  ULIMIT_REQ=4000\n  [[ $ULIMIT_S == \"unlimited\" ]] && ULIMIT_S=$ULIMIT_REQ\n  [[ $ULIMIT_H == \"unlimited\" ]] && ULIMIT_H=$ULIMIT_REQ\n  if [[ $ULIMIT_H -gt $ULIMIT_S ]] && [[ $ULIMIT_S -lt $ULIMIT_REQ ]]; then\n    ulimit -S -n $(($ULIMIT_H > $ULIMIT_REQ ? $ULIMIT_REQ : $ULIMIT_H))\n  fi\n  ULIMIT_FINAL=`ulimit -n`\n  if [[ $ULIMIT_FINAL -lt $ULIMIT_REQ ]]; then\n    echo \"Could not raise 'ulimit -n' to $ULIMIT_REQ, running with $ULIMIT_FINAL\" 1>&2\n  fi\nfi\n\nLIST_OF_DETECTORS=\"ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,ZDC,FDD,HMP,FV0,TRD,MCH,CTP\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "08ece65ee8d716606d66a93105657f0425479d17cb974350677842b4efda3299": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    LIST_OF_DETECTORS=\"ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,ZDC,FDD,HMP,FV0,TRD,MCH,CTP\"\n\nLIST_OF_GLORECO=\"ITSTPC,TPCTRD,ITSTPCTRD,TPCTOF,ITSTPCTOF,MFTMCH,MCHMID,PRIMVTX,SECVTX,STRK,AOD\"\n\nLIST_OF_PID=\"FT0-TOF\"\n\n# Detectors used in the workflow / enabled parameters\n# Available options: WORKFLOW_DETECTORS, WORKFLOW_DETECTORS_EXCLUDE, WORKFLOW_DETECTORS_QC, WORKFLOW_DETECTORS_EXCLUDE_QC, WORKFLOW_DETECTORS_CALIB, WORKFLOW_DETECTORS_EXCLUDE_CALIB, ...\nif [[ -z \"${WORKFLOW_DETECTORS+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS\" == \"0ALL\" ]]; then WORKFLOW_DETECTORS=$LIST_OF_DETECTORS; fi\nif [[ -n ${WORKFLOW_DETECTORS_EXCLUDE+x} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE//,/ }; do\n    WORKFLOW_DETECTORS=$(echo $WORKFLOW_DETECTORS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\"'$'\"//\" -e \"s/^$i\"'$'\"//\")\n  done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "ae2f3a9a96810dfd7fbe65daabc990bf0b4d927fb7dfd166c230c7c75da3b884": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${WORKFLOW_DETECTORS_GPU+x}\" ]]; then export WORKFLOW_DETECTORS_GPU=\"TPC\"; fi\nif [[ -z \"${WORKFLOW_DETECTORS_QC+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_QC\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_QC=\"$WORKFLOW_DETECTORS,$LIST_OF_GLORECO,TOF_MATCH\"; fi\nif [[ -z \"${WORKFLOW_DETECTORS_CALIB+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_CALIB\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_CALIB=$WORKFLOW_DETECTORS; fi\nif [[ -z \"${WORKFLOW_DETECTORS_RECO+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_RECO\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_RECO=$WORKFLOW_DETECTORS; fi\nif [[ -z \"${WORKFLOW_DETECTORS_CTF+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_CTF\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_CTF=$WORKFLOW_DETECTORS; fi\nif [[ \"0${WORKFLOW_DETECTORS_FLP_PROCESSING:-}\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_FLP_PROCESSING=$WORKFLOW_DETECTORS; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "a20908c29e5ef46c6d282db8548ce8f4d20c927ba7f7f4279cc40687e4cbb202": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER:-}\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER=$WORKFLOW_DETECTORS; else export WORKFLOW_DETECTORS_USE_GLOBAL_READER=${WORKFLOW_DETECTORS_USE_GLOBAL_READER:-}; fi\nif [[ -z \"${WORKFLOW_PARAMETERS:-}\" ]]; then export WORKFLOW_PARAMETERS=; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "43f51a72b88668edb18d9752e6aaac939d9d0ac0963f32a66d0596a7507c07be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE_QC:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE_QC//,/ }; do\n    export WORKFLOW_DETECTORS_QC=$(echo $WORKFLOW_DETECTORS_QC | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\\$//g\" -e \"s/^$i\\$//g\")\n  done\nfi\nif [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE_CALIB:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE_CALIB//,/ }; do\n    export WORKFLOW_DETECTORS_CALIB=$(echo $WORKFLOW_DETECTORS_CALIB | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\\$//g\" -e \"s/^$i\\$//g\")\n  done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "72530ceec81a72ff0b93f4335a140a3f73b9e91d6a718851c4a5ae3bbc16cdc8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${TFLOOP:-}\" ]];         then export TFLOOP=0; fi                    # initialize loop over timeframes\nif [[ -z \"${NTIMEFRAMES:-}\" ]];    then export NTIMEFRAMES=-1; fi              # set maximum number of time frames to process, with a value of <=0 indicating unlimited\nif [[ -z \"${CTFDICT_NTF:-}\" ]];    then export CTFDICT_NTF=100; fi             # automatically save the CTF dictionary after every CTFDICT_NTF time frames (if the count is greater than 0)\nif [[ -z \"${CTF_MAXDETEXT:-}\" ]];  then export CTF_MAXDETEXT=0; fi             # extend the CTF output directory name by detector names if the number of detectors does not surpass this limit\nif [[ -z \"${TFDELAY:-}\" ]];        then export TFDELAY=0; fi                   # introduce a delay in seconds between the publication of time frames\nif [[ -z \"${GPUTYPE:-}\" ]];        then export GPUTYPE=CPU; fi                 # specify the GPU Tracking backend to use, options include CPU, CUDA, HIP, OCL, or OCL2\nif [[ -z \"${DDSHMSIZE:-}\" ]];      then export DDSHMSIZE=$(( 8 << 10 )); fi    # define the size of shared memory for DD Input",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "8136d70911ff1e788152b20da101028bd03851930299f551807334549ed8b22f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${DDHDRSIZE:-}\" ]];      then export DDHDRSIZE=$(( 1 << 10 )); fi    # Shared memory size for DD Input\nif [[ -z \"${GPUMEMSIZE:-}\" ]];     then export GPUMEMSIZE=$(( 14 << 30 )); fi  # Size of allocated GPU memory (if GPUTYPE is not CPU)\nif [[ -z \"${HOSTMEMSIZE:-}\" ]];    then export HOSTMEMSIZE=0; fi               # Allocated host memory for GPU reconstruction (set to 0 for default)\nif [[ -z \"${CREATECTFDICT:-}\" ]];  then export CREATECTFDICT=0; fi             # Create CTF dictionary\nif [[ -z \"${SAVECTF:-}\" ]];        then export SAVECTF=0; fi                   # Save CTF to a ROOT file\nif [[ -z \"${SYNCMODE:-}\" ]];       then export SYNCMODE=0; fi                  # Execute only reconstruction steps of synchronous reconstruction\nif [[ -z \"${NUMAID:-}\" ]];         then export NUMAID=0; fi                    # ID for shared memory segment and set of GPUs to use (set to 0 or 1 for 2 NUMA domains)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "c2c3b2f998d3fcca962ece629870a20cf7d68820e3923c79399864a38aaa13c8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${NUMAGPUIDS:-}\" ]]; then export NUMAGPUIDS=0; fi                     # Selection of GPU IDs considering NUMA awareness\nif [[ -z \"${CTFINPUT:-}\" ]]; then export CTFINPUT=0; fi                         # Use o2-ctf-reader to read input from CTF (incompatible with EXTINPUT=1 and RAWTFINPUT)\nif [[ -z \"${RAWTFINPUT:-}\" ]]; then export RAWTFINPUT=0; fi                     # Read input from raw TFs using o2-raw-tf-reader (incompatible with EXTINPUT=1 and CTFINPUT=1)\nif [[ -z \"${DIGITINPUT:-}\" ]]; then export DIGITINPUT=0; fi                     # Read input from digit files (incompatible with EXTINPUT, CTFINPUT, RAWTFINPUT)\nif [[ -z \"${NHBPERTF:-}\" ]]; then export NHBPERTF=128; fi                       # Time frame length specified in HBF\nif [[ -z \"${GLOBALDPLOPT:-}\" ]]; then export GLOBALDPLOPT=; fi                  # Appended global DPL workflow options at the end\nif [[ -z \"${SEVERITY:-}\" ]]; then export SEVERITY=\"info\"; fi                    # Set log verbosity level",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "4791d1e737d7e0fb2d15be88df92caab1714d8780028ff2997c41ea40203d12e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${SEVERITY:-}\" ]]; then export SEVERITY=\"info\"; fi                     # Set log verbosity\nif [[ -z \"${NORATELOG:-}\" ]]; then export NORATELOG=1; fi                       # Turn off FairMQ Rate Logging\nif [[ -z \"${INRAWCHANNAME:-}\" ]]; then export INRAWCHANNAME=stfb-to-dpl; fi     # Define raw channel name for communication with DataDistribution\nif [[ -z \"${WORKFLOWMODE:-}\" ]]; then export WORKFLOWMODE=run; fi               # Set workflow mode, which must be run, print, or dds\nif [[ -z \"${FILEWORKDIR:-}\" ]]; then export FILEWORKDIR=`pwd`; fi               # Specify the folder to locate grp, etc.\nif [[ -z \"${FILEWORKDIRRUN:-}\" ]]; then export FILEWORKDIRRUN=$FILEWORKDIR; fi  # Directory for run-related files (grp, collision context)\nif [[ -z \"${RAWINPUTDIR:-}\" ]]; then export RAWINPUTDIR=$FILEWORKDIR; fi        # Directory to find input files (raw, raw tf, or ctf)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "6d0b7791791af8d981ba4f3a205dadb497f1578217726200998a7520ef997e49": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${EPNSYNCMODE:-}\" ]]; then export EPNSYNCMODE=0; fi               # Does this workflow need to run on EPN for sync processing? Will activate InfoLogger, metrics, and fetching QC JSONs from consul...\nif [[ -z \"${BEAMTYPE:-}\" ]]; then export BEAMTYPE=PbPb; fi               # Specify the beam type: PbPb, pp, pPb, pO, Op, OO, NeNe (cosmic), or technical\nif [[ -z \"${RUNTYPE:-}\" ]]; then export RUNTYPE=Standalone; fi          # Determine the run type: Standalone for local tests, otherwise PHYSICS, COSMICS, TECHNICAL, or SYNTHETIC\nif [[ -z \"${IS_SIMULATED_DATA:-}\" && $RUNTYPE == \"SYNTHETIC\" ]]; then export IS_SIMULATED_DATA=1; fi # For SYNTHETIC runs, always process simulated data\nif [[ -z \"${IS_SIMULATED_DATA:-}\" && ( $RUNTYPE == \"PHYSICS\" || $RUNTYPE == \"COSMICS\" ) ]]; then export IS_SIMULATED_DATA=0; fi # For PHYSICS and COSMICS runs, always process simulated data\nif [[ -z \"${IS_SIMULATED_DATA:-}\" ]]; then export IS_SIMULATED_DATA=1; fi      # Assume processing simulated data by default",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "4d17dd479ba020c617664c46f0d345fff3ef7cb192def665202a9e0fc8243ea3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${IS_TRIGGERED_DATA:-}\" ]]; then export IS_TRIGGERED_DATA=0; fi      # Handling data processed from TPC triggers rather than continuous mode\nif [[ -z \"${CTF_DIR:-}\" ]];           then CTF_DIR=$FILEWORKDIR; fi            # Directory for storing CTFs, defaults to FILEWORKDIR\nif [[ -z \"${CALIB_DIR:-}\" ]];         then CALIB_DIR=\"/dev/null\"; fi           # Directory for output from calibration workflows, defaults to /dev/null to skip writing\nif [[ -z \"${EPN2EOS_METAFILES_DIR:-}\" ]]; then EPN2EOS_METAFILES_DIR=\"/dev/null\"; fi # Directory for epn2eos metadata storage, defaults to /dev/null to skip writing\nif [[ -z \"${DCSCCDBSERVER:-}\" ]];  then export DCSCCDBSERVER=\"http://alio2-cr1-flp199-ib:8083\"; fi # Server for transferring calibration data to DCS\nif [[ -z \"${DCSCCDBSERVER_PERS:-}\" ]]; then export DCSCCDBSERVER_PERS=\"http://alio2-cr1-flp199-ib:8084\"; fi # Persistent server for transferring calibration data to DCS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "cc9fb015bbcd253314703c46006b05e0d733312d44cb55da2a9efca5abd59d7f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the BEAMTYPE is \"pO\", \"Op\", \"Op\", \"OO\", or \"NeNe\", then set LIGHTNUCLEI to 1; otherwise, set LIGHTNUCLEI to 0.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "2cc86caa2948d237e4cabf40a9f0f6aa9acd497afe43f5a78cce4986c86c916a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $EPNSYNCMODE == 0 ]]; then\n  if [[ -z \"${SHMSIZE:-}\" ]]; then export SHMSIZE=$(( 8 << 30 )); fi         # Shared memory size for messages\n  if [[ -z \"${NGPUS:-}\" ]]; then export NGPUS=1; fi                         # Number of GPUs to use, data distributed round-robin\n  if [[ -z \"${EXTINPUT:-}\" ]]; then export EXTINPUT=0; fi                   # Receive input from raw FMQ channel instead of running o2-raw-file-reader\n  if [[ -z \"${EPNPIPELINES:-}\" ]]; then export EPNPIPELINES=0; fi           # Set default EPN pipeline multiplicities\n  if [[ -z \"${SHMTHROW:-}\" ]]; then export SHMTHROW=1; fi                   # Throw exception when SHM runs out\n  if [[ -z \"${EDJSONS_DIR:-}\" ]]; then export EDJSONS_DIR=\"jsons\"; fi       # Directory for output ED json files",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "66ee871eb58d68faef3e4e5022c7bbcf20aca1e3e74c9ba6006c6b1e945d4bee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${WORKFLOW_DETECTORS_FLP_PROCESSING+x}\" ]]; then export WORKFLOW_DETECTORS_FLP_PROCESSING=\"\"; fi # By default, no FLP processing is enabled unless the sync EPN workflow is run, such as in full system tests, which will then also perform full FLP processing\nelse # Default settings for running on the EPN\n  if [[ \"0${GEN_TOPO_CALIB_WORKFLOW:-}\" != \"01\" ]]; then\n    if [[ -z \"${GEN_TOPO_CALIB_NCORES:-}\" ]]; then\n      if [[ -z \"${SHMSIZE:-}\" ]]; then export SHMSIZE=$(( 32 << 30 )); fi\n    else\n      if [[ -z \"${SHMSIZE:-}\" ]]; then export SHMSIZE=$(( ($GEN_TOPO_CALIB_NCORES * 2) << 30 )); fi\n    fi\n  else\n    if [[ -z \"${SHMSIZE:-}\" ]]; then export SHMSIZE=$(( 112 << 30 )); fi\n  fi\n  if [[ -z \"${NGPUS:-}\" ]]; then export NGPUS=4; fi\n  if [[ -z \"${EXTINPUT:-}\" ]]; then export EXTINPUT=1; fi\n  if [[ -z \"${EPNPIPELINES:-}\" ]]; then export EPNPIPELINES=1; fi\n  if [[ -z \"${SHMTHROW:-}\" ]]; then export SHMTHROW=0; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "80dbc8d46350398be63ba0a55d7c98d815b58ecfef34cc454eae506b22759584": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${SHMTHROW:-}\" ]]; then export SHMTHROW=0; fi\nif [[ -z \"${TIMEFRAME_SHM_LIMIT:-}\" ]]; then export TIMEFRAME_SHM_LIMIT=$(( $SHMSIZE / 2 )); fi\nif [[ -z \"${EDJSONS_DIR:-}\" ]]; then export EDJSONS_DIR=\"/scratch/services/ed/jsons_${RUNTYPE}\"; fi\nif [[ -z \"${WORKFLOW_DETECTORS_FLP_PROCESSING+x}\" ]]; then export WORKFLOW_DETECTORS_FLP_PROCESSING=\"CTP\"; fi # The current default in synchronous processing is to enable FLP processing only for TOF\nif [[ -z \"${GEN_TOPO_AUTOSCALE_PROCESSES:-}\" ]]; then export GEN_TOPO_AUTOSCALE_PROCESSES=1; fi # On the EPN, it's essential to utilize the node capacity fully\nfi\n# Additional settings for EPN operation\nif [[ -z \"${INFOLOGGER_SEVERITY:-}\" ]]; then export INFOLOGGER_SEVERITY=\"important\"; fi\nif [[ -z \"${MULTIPLICITY_FACTOR_RAWDECODERS:-}\" ]]; then export MULTIPLICITY_FACTOR_RAWDECODERS=1; fi\nif [[ -z \"${MULTIPLICITY_FACTOR_CTFENCODERS:-}\" ]]; then export MULTIPLICITY_FACTOR_CTFENCODERS=1; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "c25e7c2056e71f03c25e68375cd452d630dbcb39df551dc149a86fcd61344aa9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${MULTIPLICITY_FACTOR_REST:-}\" ]]; then export MULTIPLICITY_FACTOR_REST=1; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "39e16d9f8095e2c1622a93610f39094752a88be29492d3bb7cc3b3e74666835b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    [[ -z \"${SEVERITY_TPC+x}\" ]] && SEVERITY_TPC=\"info\" # sets the severity level for the tpc workflow if not defined\n[[ -z \"${DISABLE_MC+x}\" ]] && DISABLE_MC=\"--disable-mc\"\n[[ -z \"${DISABLE_ROOT_OUTPUT+x}\" ]] && DISABLE_ROOT_OUTPUT=\"--disable-root-output\"\n\nif [[ `uname` == Darwin ]]; then UDS_PREFIX=; else UDS_PREFIX=\"@\"; fi\n\n# Required environment variables for workflow setup\nif [[ $SYNCMODE == 1 ]]; then\n  if [[ -z \"${WORKFLOW_DETECTORS_MATCHING+x}\" ]]; then WORKFLOW_DETECTORS_MATCHING=\"ITSTPC,ITSTPCTRD,ITSTPCTOF,ITSTPCTRDTOF,PRIMVTX,SECVTX\"; fi # Specifies enabled matchings in sync mode\nelse\n  if [[ -z \"${WORKFLOW_DETECTORS_MATCHING+x}\" ]]; then WORKFLOW_DETECTORS_MATCHING=\"ALL\"; fi # Specifies all enabled matchings and vertexing in async mode\nfi\n\nLIST_OF_ASYNC_RECO_STEPS=\"MID MCH MFT FDD FV0 ZDC HMP\"\n\nDISABLE_DIGIT_ROOT_INPUT=\"--disable-root-input\"\nDISABLE_ROOT_INPUT=\"--disable-root-input\"\n: ${DISABLE_DIGIT_CLUSTER_INPUT=\"--clusters-from-upstream\"}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "1597e988019f2813127ddc098090d5aced94e43c7695d412e50844e353173ee2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Special detector-related settings\nif [[ -z \"${TPC_CORR_SCALING:-}\" ]]; then # TPC correction map lumi scaling options, any combination of --lumi-type <0,1,2> --corrmap-lumi-mode <0,1>, and TPCCorrMap... configurable parameters\n TPC_CORR_SCALING=\n if [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" ]] && has_detector CTP; then TPC_CORR_SCALING+=\"--lumi-type 1\"; fi\n if [[ $BEAMTYPE == \"PbPb\" ]] && has_detector CTP; then TPC_CORR_SCALING+=\"--lumi-type 1 TPCCorrMap.lumiInstFactor=2.414\"; fi\n if [[ $BEAMTYPE == \"cosmic\" ]]; then TPC_CORR_SCALING=\" TPCCorrMap.lumiMean=-1;\"; fi # for COSMICS we disable all corrections\n export TPC_CORR_SCALING=$TPC_CORR_SCALING\nfi\n\nMID_FEEID_MAP=\"$FILEWORKDIR/mid-feeId_mapper.txt\"\n\nITSMFT_STROBES=\"\"\nif [[ ! -z ${ITS_STROBE:-} ]]; then ITSMFT_STROBES+=\"ITSAlpideParam.roFrameLengthInBC=$ITS_STROBE;\";\nfi\nif [[ ! -z ${MFT_STROBE:-} ]]; then ITSMFT_STROBES+=\"MFTAlpideParam.roFrameLengthInBC=$MFT_STROBE;\";\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "1e0284e745cc45eb0693c9d1ec2fb19495e04fdacac24042ea1bd4ff483bf555": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Activate reconstruction steps (defaults included based on SYNCMODE)\nfor i in `echo $LIST_OF_GLORECO | sed \"s/,/ /g\"`; do\n  if has_processing_step MATCH_$i; then add_comma_separated WORKFLOW_DETECTORS_MATCHING $i # Enable extra matchings specified by WORKFLOW_EXTRA_PROCESSING_STEPS\n  fi\ndone\nif [[ $SYNCMODE == 1 ]]; then # Include default steps for synchronous mode\n  add_comma_separated WORKFLOW_EXTRA_PROCESSING_STEPS ENTROPY_ENCODER\nelse # Include default steps for asynchronous mode\n  for i in $LIST_OF_ASYNC_RECO_STEPS; do\n    if has_detector_reco $i; then add_comma_separated WORKFLOW_EXTRA_PROCESSING_STEPS ${i}_RECO\n    fi\n  done\n  add_comma_separated WORKFLOW_EXTRA_PROCESSING_STEPS TPC_DEDX\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "e960fd32c87f8d256e611091bddbd7e83c43f759b65323c2995d373b847b5c3d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Assemble compatible sources\nTRD_SOURCES=\nTOF_SOURCES=\nHMP_SOURCES=\nTRACK_SOURCES=\nif detectors_reco include ITS and TPC, and detector_matching includes ITSTPC, then append TRACK_SOURCES with \"ITS-TPC\"\nif detectors_reco include TPC and TRD, and detector_matching includes TPCTRD, then append TRD_SOURCES with TPC and TRACK_SOURCES with \"TPC-TRD\"\nif detectors_reco include ITS, TPC, and TRD, and detector_matching includes ITSTPC and ITSTPCTRD, then append TRD_SOURCES with ITS-TPC and TRACK_SOURCES with \"ITS-TPC-TRD\"\nif detectors_reco include TPC and TOF, and detector_matching includes TPCTOF, then append TOF_SOURCES with TPC and TRACK_SOURCES with \"TPC-TOF\"\nif detectors_reco include ITS, TPC, and TOF, and detector_matching includes ITSTPC and ITSTPCTOF, then append TOF_SOURCES with ITS-TPC and TRACK_SOURCES with \"ITS-TPC-TOF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "74a6f4cd549643f0223e42298b97da9baa0413013530c4c9fcde60058589d7c9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detectors_reco TPC TRD TOF && has_detector_matching TPCTRD && has_detector_matching TPCTRDTOF && { add_comma_separated TOF_SOURCES TPC-TRD; add_comma_separated TRACK_SOURCES \"TPC-TRD-TOF\"; }\nhas_detectors_reco ITS TPC TRD TOF && has_detector_matching ITSTPC && has_detector_matching ITSTPCTRD && has_detector_matching ITSTPCTRDTOF && { add_comma_separated TOF_SOURCES ITS-TPC-TRD; add_comma_separated TRACK_SOURCES \"ITS-TPC-TRD-TOF\"; }\nhas_detectors_reco HMP ITS TPC && has_detector_matching ITSTPC && add_comma_separated HMP_SOURCES \"ITS-TPC\"\nhas_detectors_reco HMP ITS TPC TRD && has_detector_matching ITSTPC && has_detector_matching ITSTPCTRD && add_comma_separated HMP_SOURCES \"ITS-TPC-TRD\"\nhas_detectors_reco HMP ITS TPC TOF && has_detector_matching ITSTPC && has_detector_matching ITSTPCTOF && add_comma_separated HMP_SOURCES \"ITS-TPC-TOF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "b33b172b17e97613bb4df2a0c471d0d9a276067787ed7d7e4355c10a9d2e2d3a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    has_detectors_reco HMP ITS TPC TRD TOF && has_detector_matching ITSTPC && has_detector_matching ITSTPCTRD && has_detector_matching ITSTPCTRDTOF && add_comma_separated HMP_SOURCES \"ITS-TPC-TRD-TOF\"\nhas_detectors_reco HMP TPC TRD && has_detector_matching TPCTRD && add_comma_separated HMP_SOURCES \"TPC-TRD\"\nhas_detectors_reco HMP TPC TOF && has_detector_matching TPCTOF && add_comma_separated HMP_SOURCES \"TPC-TOF\"\nhas_detectors_reco HMP TPC TRD TOF && has_detector_matching TPCTRD && has_detector_matching TPCTRDTOF && add_comma_separated HMP_SOURCES \"TPC-TRD-TOF\"\nhas_detectors_reco MFT MCH && has_detector_matching MFTMCH && add_comma_separated TRACK_SOURCES \"MFT-MCH\"\nhas_detectors_reco MCH MID && has_detector_matching MCHMID && add_comma_separated TRACK_SOURCES \"MCH-MID\"\nfor det in `echo $LIST_OF_DETECTORS | sed \"s/,/ /g\"`; do\n  if [[ $LIST_OF_ASYNC_RECO_STEPS =~ (^| )${det}( |$) ]]; then\n    has_detector ${det} && has_processing_step ${det}_RECO && add_comma_separated TRACK_SOURCES \"$det\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "b020464f51f680daeb9461081ccba5bf817404092356d679a92e89a416f5f018": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "else\n  has_detector_reco $det && add_comma_separated TRACK_SOURCES \"$det\"\nfi\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "ec22741357ab2aaf8c3f216ca7f294fb8602fc722857d7431c03a4f4cce6870f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS:-}\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$TRACK_SOURCES;\nelif [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS:-}\" == \"0ALLSINGLE\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$WORKFLOW_DETECTORS;\nelse export WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=${WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS:-}; fi\nif [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS:-}\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$TRACK_SOURCES;\nelif [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS:-}\" == \"0ALLSINGLE\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$WORKFLOW_DETECTORS;\nelse export WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=${WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS:-}; fi\nif [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS//,/ }; do",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "3d4e280e1f8e13bce87e04b610b6a4b298952ddd356fcd517cc351955f1b00ae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for i in ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS//,/ }; do\n  export WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$(echo $WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\\$//\" -e \"s/^$i\\$//\")\ndone\nif [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_CLUSTERS:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_CLUSTERS//,/ }; do\n    export WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$(echo $WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\\$//\" -e \"s/^$i\\$//\")\n  done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "ed905be48aac0e88fc24957d1e5848609ba9e0237084f224be63d75ea54be784": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": ": ${VERTEXING_SOURCES:=\"$TRACK_SOURCES\"}\n: ${VERTEX_TRACK_MATCHING_SOURCES:=\"$TRACK_SOURCES\"}\nif [ -n \"$VERTEXING_SOURCES\" ]; then PVERTEX_CONFIG+=\" --vertexing-sources $VERTEXING_SOURCES\"; fi\nif [ -n \"$VERTEX_TRACK_MATCHING_SOURCES\" ]; then PVERTEX_CONFIG+=\" --vertex-track-matching-sources $VERTEX_TRACK_MATCHING_SOURCES\"; fi\n\nif [ -z \"${SVERTEXING_SOURCES:-}\" ]; then\n  SVERTEXING_SOURCES=\"$VERTEXING_SOURCES\"\nelse\n  if [ \"${SVERTEXING_SOURCES^^}\" == \"NONE\" ]; then\n    SVERTEXING_SOURCES=\n  fi\nfi\n\n# this option necessitates precise timing calibration among different detectors; for now, it is deactivated\n#has_detector_reco FT0 && PVERTEX_CONFIG+=\" --validate-with-ft0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "dfe755ca84edd8e0f9881d6729392f4decf6f86e58bf1f4f284b5580d1988b51": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Validation of environment variables\nif [[ $(( $EXTINPUT + $CTFINPUT + $RAWTFINPUT + $DIGITINPUT )) -ge 2 ]]; then\n  echo Only one of EXTINPUT, CTFINPUT, RAWTFINPUT, or DIGITINPUT should be configured\n  exit 1\nfi\nif [[ $SAVECTF == 1 ]] && [[ $CTFINPUT == 1 ]]; then\n  echo SAVECTF and CTFINPUT are not compatible\n  exit 1\nfi\nif [[ $SYNCMODE == 1 ]] && [[ $CTFINPUT == 1 ]]; then\n  echo SYNCMODE and CTFINPUT are not compatible\n  exit 1\nfi\nif [[ $WORKFLOWMODE != \"run\" ]] && [[ $WORKFLOWMODE != \"print\" ]] && [[ $WORKFLOWMODE != \"dds\" ]] && [[ $WORKFLOWMODE != \"dump\" ]]; then\n  echo Invalid workflow mode\n  exit 1\nfi\n\n\nfi # setenv.sh sourced",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/setenv.sh"
        }
    ],
    "b124d65173d16990227756cdb3f2d1a54c2d2dccfd77b74dc9676acee4dff997": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# to prevent sourcing this file multiple times\nif [[ -z ${SOURCE_GUARD_FUNCTIONS:-} ]]; then\nSOURCE_GUARD_FUNCTIONS=1\n\ncheck_detector()\n{\n  [[ $WORKFLOW_DETECTORS =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_global_reader_clusters()\n{\n  [[ $WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_global_reader_tracks()\n{\n  [[ $WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_global_reader()\n{\n  check_global_reader_tracks $1 || check_global_reader_clusters $1\n}\n\ncheck_calib()\n{\n  check_detector $1 && [[ $WORKFLOW_DETECTORS_CALIB =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_reco()\n{\n  check_detector $1 && [[ $WORKFLOW_DETECTORS_RECO =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_ctf()\n{\n  check_detector $1 && [[ $WORKFLOW_DETECTORS_CTF =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_flp_processing()\n{\n  check_detector $1 && [[ $WORKFLOW_DETECTORS_FLP_PROCESSING =~ (^|,)\"$1\"(,|$) ]]\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "ba7e43c9b330afd51810e2b2df77ec0478d86e55b4fa776cb855ab0e9a67cfab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    has_detector_matching()\n    {\n      [[ $WORKFLOW_DETECTORS_MATCHING =~ (^|,)\"ALL\"(,|$) ]] || [[ $WORKFLOW_DETECTORS_MATCHING =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_detector_gpu()\n    {\n      has_detector $1 && [[ $WORKFLOW_DETECTORS_GPU =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_secvtx_source()\n    {\n      [[ $SVERTEXING_SOURCES =~ (^|,)\"ALL\"(,|$) ]] || [[ $SVERTEXING_SOURCES =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_detector_qc()\n    {\n      has_detector $1 && [[ $WORKFLOW_DETECTORS_QC =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_matching_qc()\n    {\n      has_detector_matching $1 && [[ $WORKFLOW_DETECTORS_QC =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_pid_qc()\n    {\n      PIDDETECTORS=$(echo $1 | tr \"-\" \"\\n\")\n      for PIDDETECTOR in $PIDDETECTORS; do\n        if [[ $PIDDETECTOR == \"TOF\" ]]; then\n          (! has_detectors_reco ITS TPC TOF || ! has_detector_matching ITSTPCTOF) && return 1\n        fi\n        ! has_detector_qc $PIDDETECTOR && return 1\n      done\n      return 0\n    }\n\n    has_track_source()\n    {\n      [[ $TRACK_SOURCES =~ (^|,)\"$1\"(,|$) ]]\n    }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "391bce64eecfdd9415181c8bf4567abe6f0eb13da7dcb01f0e84960b38df33af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    has_track_source()\n    {\n      [[ $TRACK_SOURCES =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_tof_matching_source()\n    {\n      [[ $TOF_SOURCES =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    workflow_has_parameter()\n    {\n      [[ $WORKFLOW_PARAMETERS =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_processing_step()\n    {\n      [[ ${WORKFLOW_EXTRA_PROCESSING_STEPS:-} =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    _check_multiple()\n    {\n      CHECKER=$1\n      shift\n      while true; do\n        if [[ -z ${1:-} ]]; then return 0; fi\n        if ! $CHECKER $1; then return 1; fi\n        shift\n      done\n    }\n\n    has_detectors()\n    {\n      _check_multiple has_detector \"$@\"\n    }\n\n    has_detectors_qc()\n    {\n      _check_multiple has_detector_qc \"$@\"\n    }\n\n    has_detectors_calib()\n    {\n      _check_multiple has_detector_calib \"$@\"\n    }\n\n    has_detectors_reco()\n    {\n      _check_multiple has_detector_reco \"$@\"\n    }\n\n    has_detectors_ctf()\n    {\n      _check_multiple has_detector_ctf \"$@\"\n    }\n\n    has_detectors_flp_processing()\n    {\n      _check_multiple has_detector_flp_processing \"$@\"\n    }\n\n    has_detectors_gpu()\n    {\n      _check_multiple has_detector_gpu \"$@\"\n    }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "7aae45dea1e83a1cba6597dceaa954044abd44d08d88bc5ccadb20e67ccf5f4f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    has_detectors_gpu()\n    {\n      _check_multiple has_detector_gpu \"$@\"\n    }\n\n    workflow_has_parameters()\n    {\n      _check_multiple workflow_has_parameter \"$@\"\n    }\n\n    add_comma_separated()\n    {\n      if (( $# < 2 )); then\n        echo \"$# parameters received\"\n        echo \"Function name: ${FUNCNAME} requires at least 2 parameters:\"\n        echo \"it joins the content of the first parameter with the subsequent ones using commas. $# parameters received\"\n        exit 1\n      fi\n\n      for ((i = 2; i <= $#; i++ )); do\n        if [[ -z ${!1:-} ]]; then\n          eval $1+=\"${!i}\"\n        else\n          eval $1+=\",${!i}\"\n        fi\n      done\n    }\n\n    add_semicolon_separated()\n    {\n      if (( $# < 2 )); then\n        echo \"$# parameters received\"\n        echo \"Function name: ${FUNCNAME} requires at least 2 parameters:\"\n        echo \"it joins the content of the first parameter with the subsequent ones using semicolons. $# parameters received\"\n        exit 1\n      fi\n\n      for ((i = 2; i <= $#; i++ )); do\n        if [[ -z ${!1:-} ]]; then\n          eval $1+=\"${!i}\"\n        else\n          eval $1+=\";${!i}\"\n        fi\n      done\n    }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "1e9d687a7d57beb18dd3095a265c916d1576bb296cd0ae5f2880c53368820291": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    for ((i = 2; i <= $#; i++ )); do\n    if [[ -z ${!1:-} ]]; then\n      eval $1+=\"${!i}\"\n    else\n      eval $1+=\"\\;${!i}\"\n    fi\n  done\n}\n\nadd_pipe_separated()\n{\n  if (( $# < 2 )); then\n    echo \"$# parameters received\"\n    echo \"Function name: ${FUNCNAME} requires at least 2 parameters:\"\n    echo \"it concatenates the string in the first parameter with the subsequent ones, creating a pipe-separated string. $# parameters received\"\n    exit 1\n  fi\n\n  for ((i = 2; i <= $#; i++ )); do\n    eval $1+=\"\\|${!i}\"\n  done\n}\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Helper functions for multiplicities",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "75ae7c6993105b139df6ecfc5233b20c0b8117cced995e178d3f32c0a0610f53": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "{\n  local FACTOR_NAME=\"N_F_$3\"\n  local DETECTOR_NAME=\"MULTIPLICITY_FACTOR_DETECTOR_$2\"\n  local PROCESS_NAME=\"MULTIPLICITY_PROCESS_${1//-/_}\"\n  local PROCESS_FACTOR_NAME=\"MULTIPLICITY_FACTOR_PROCESS_${1//-/_}\"\n  local DEFAULT_NAME=\"N_${5:-}\"\n  local MULT=${!PROCESS_NAME:-$((${!FACTOR_NAME} * ${!DETECTOR_NAME:-1} * ${!PROCESS_FACTOR_NAME:-1} * ${!DEFAULT_NAME:-1}))}\n  [[ ! -z ${EPN_GLOBAL_SCALING:-} && $1 != \"gpu-reconstruction\" ]] && MULT=$(($MULT * $EPN_GLOBAL_SCALING))\n  if [[ ${GEN_TOPO_AUTOSCALE_PROCESSES_GLOBAL_WORKFLOW:-} == 1 && -z ${!PROCESS_NAME:-} && ${GEN_TOPO_AUTOSCALE_PROCESSES:-} == 1 && ($WORKFLOWMODE != \"print\" || ${GEN_TOPO_RUN_HOME_TEST:-} == 1) && ${4:-} != 0 ]]; then\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "1c56b81099d470cd286dacbdd6b9345dd0d26eb73fab0633c865a156342e2930": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo $1:\\$\\(\\(\\($MULT*\\$AUTOSCALE_PROCESS_FACTOR/100\\) \\< 16 ? \\($MULT*\\$AUTOSCALE_PROCESS_FACTOR/100\\) : 16\\)\\)\n  else\n    echo $1:$MULT\n  fi\n}\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "3e779f79cbeb104fc1ddcd4f0e33e3ed591c19cc8f8dc7e62b953909239f2b9b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    math_max()\n    {\n      echo $(($1 > $2 ? $1 : $2))\n    }\n    math_min()\n    {\n      echo $(($1 < $2 ? $1 : $2))\n    }\n\n    # ---------------------------------------------------------------------------------------------------------------------\n    # Function to determine if root output is required for a specific process\n\n    needs_root_output()\n    {\n      local NAME_PROC_ENABLE_ROOT_OUTPUT=\"ENABLE_ROOT_OUTPUT_${1//-/_}\"\n      [[ ! -z ${!NAME_PROC_ENABLE_ROOT_OUTPUT+x} ]]\n    }\n\n    # ---------------------------------------------------------------------------------------------------------------------\n    # Function to include binaries in the workflow, incorporating both default and user-defined arguments",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "0c14c5dbc1975f1a328c4fc70bc7aba7715abc5e718d1970fceb30bf9cbd322f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    add_W() # Add binary to workflow command USAGE: add_W [BINARY] [COMMAND_LINE_OPTIONS] [CONFIG_KEY_VALUES] [Add ARGS_ALL_CONFIG, optional, default = 1]\n{\n  local PROC_NAME_ARGS=\"ARGS_EXTRA_PROCESS_${1//-/_}\"\n  local PROC_NAME_CONFIG=\"CONFIG_EXTRA_PROCESS_${1//-/_}\"\n  local CONFIG_KEY_VALUES=\n  [[ \"0${4:-}\" != \"00\" ]] && CONFIG_KEY_VALUES+=\"$ARGS_ALL_CONFIG;\"\n  [[ ! -z \"${3:-}\" ]] && CONFIG_KEY_VALUES+=\"$3;\"\n  [[ ! -z ${!PROC_NAME_CONFIG:-} ]] && CONFIG_KEY_VALUES+=\"${!PROC_NAME_CONFIG};\"\n  [[ ! -z \"$CONFIG_KEY_VALUES\" ]] && CONFIG_KEY_VALUES=\"--configKeyValues \\\"$CONFIG_KEY_VALUES\\\"\"\n  local WFADD=\"$1 $ARGS_ALL ${2:-} ${!PROC_NAME_ARGS:-} $CONFIG_KEY_VALUES | \"\n  local PROC_ENABLE_ROOT_OUTPUT=\"ENABLE_ROOT_OUTPUT_${1//-/_}\"\n  if [[ ! -z $DISABLE_ROOT_OUTPUT ]] && needs_root_output $1 ; then\n      WFADD=${WFADD//$DISABLE_ROOT_OUTPUT/}\n  fi\n  WORKFLOW+=$WFADD\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "38f0120c33513bfeaedfb2ac60fab543a89c5ec0366057b32471213156259e67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ${EPNSYNCMODE:-0} == 1 ]]; then\n  if [[ \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n    GEN_TOPO_QC_CONSUL_SERVER=ali-staging.cern.ch\n  else\n    GEN_TOPO_QC_CONSUL_SERVER=alio2-cr1-hv-con01.cern.ch\n  fi\n  GEN_TOPO_QC_APRICOT_SERVER=$(curl -s \"http://${GEN_TOPO_QC_CONSUL_SERVER}:8500/v1/kv/o2/runtime/aliecs/vars/apricot_endpoint?raw\")\nfi\n\nadd_QC_from_consul()\n{\n  if [[ ${EPNSYNCMODE:-0} != 1 ]]; then\n    echo \"Error fetching QC JSON $1: consul server only set for EPNSYNCMODE == 1\" 1>&2\n    exit 1\n  fi\n  if [[ ! -z ${GEN_TOPO_QC_JSON_FILE:-} ]]; then\n    curl -s -o $GEN_TOPO_QC_JSON_FILE \"http://${GEN_TOPO_QC_CONSUL_SERVER}:8500/v1/kv${1}?raw\"\n    if [[ $? != 0 ]]; then\n      echo \"Error fetching QC JSON $1 (1)\" 1>&2\n      exit 1\n    fi\n    QC_CONFIG_ARG=\"json://${GEN_TOPO_QC_JSON_FILE}\"\n  else\n    QC_CONFIG_ARG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500$1\"\n  fi\n  add_W o2-qc \"--config $QC_CONFIG_ARG $2\"\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "43172406ee84264cb0c54aae825520007d0cd7c465eadad467dbd54795ede59b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "add_QC_from_apricot()\n{\n  if [[ ${EPNSYNCMODE:-0} -ne 1 ]]; then\n    echo \"Error fetching QC JSON $1: apricot server only set for EPNSYNCMODE == 1\" 1>&2\n    exit 1\n  fi\n  if [[ -n ${GEN_TOPO_QC_JSON_FILE:-} ]]; then\n    if [[ $1 == \"?\" ]]; then\n      curl -s -o $GEN_TOPO_QC_JSON_FILE \"${GEN_TOPO_QC_APRICOT_SERVER}/${1}&process=true\"\n    else\n      curl -s -o $GEN_TOPO_QC_JSON_FILE \"${GEN_TOPO_QC_APRICOT_SERVER}/${1}?process=true\"\n    fi\n    if [[ $? -ne 0 ]]; then\n      echo \"Error fetching QC JSON $1 (2)\" 1>&2\n      exit 1\n    fi\n    QC_CONFIG_ARG=\"json://${GEN_TOPO_QC_JSON_FILE}\"\n  else\n    QC_CONFIG_ARG=\"apricot://${GEN_TOPO_QC_APRICOT_SERVER}$1\"\n  fi\n  add_W o2-qc \"--config $QC_CONFIG_ARG $2\"\n}\n\nfi # functions.sh sourced",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/common/gen_topo_helper_functions.sh"
        }
    ],
    "0e439c710e643de89b236168f7a983c6bc4b979585f57195b1baacdaa79bd87c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nif [[ -z ${SOURCE_GUARD_MULTIPLICITIES:-} ]]; then\nSOURCE_GUARD_MULTIPLICITIES=1\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Threads\n\n: ${NITSDECTHREADS:=2}\n: ${NMFTDECTHREADS:=2}\n\n: ${NMFTTHREADS:=2}\n\n: ${SVERTEX_THREADS:=2}\n\nif [[ $SYNCMODE == 1 ]]; then\n: ${ITSTRK_THREADS:=1}\n: ${ITSTPC_THREADS:=1}\nelse\n: ${ITSTRK_THREADS:=2}\n: ${ITSTPC_THREADS:=2}\nfi\n\n: ${TPCTIMESERIES_THREADS:=1}\n\n: ${TOFMATCH_THREADS:=1}\n\n: ${HIGH_RATE_PP:=0}\n\n# FIXME: Multithreading in the itsmft reconstruction is currently not supported on macOS.\nif [[ $(uname) == \"Darwin\" ]]; then\n    NITSDECTHREADS=1\n    NMFTDECTHREADS=1\nfi\n\nif [[ $SYNCMODE == 1 ]]; then NTRDTRKTHREADS=1; else NTRDTRKTHREADS=; fi\n\n: ${NGPURECOTHREADS:=-1} # -1 = auto-detect",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "77d5a25cf4d4c7d2070c3b6a08b5d2fedf044d7b6a795623b3df49f7d829bd29": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": ": ${NGPURECOTHREADS:=-1} # -1 = auto-detect\n\n[[ ! -z $RECO_NUM_NODES_WORKFLOW ]] && RECO_NUM_NODES_WORKFLOW_CMP=$((($RECO_NUM_NODES_WORKFLOW > 15 ? ($RECO_NUM_NODES_WORKFLOW < 230 ? $RECO_NUM_NODES_WORKFLOW : 230) : 15) * ($NUMAGPUIDS != 0 ? 2 : 1))) # Set a minimum scaling factor and multiply by 2 if there are 2 NUMA domains\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Define process multiplicities\n\nN_F_REST=$MULTIPLICITY_FACTOR_REST\nN_F_RAW=$MULTIPLICITY_FACTOR_RAWDECODERS\nN_F_CTF=$MULTIPLICITY_FACTOR_CTFENCODERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "244743771f3411005511a8a643a2c960edfbc884b77b9d83fd6620149482fde5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "N_TPCTRK=$NGPUS\nif [[ ! -z ${OPTIMIZED_PARALLEL_ASYNC:-} ]]; then\n  # Optimized settings for asynchronous processing\n  if [[ ${OPTIMIZED_PARALLEL_ASYNC_AUTO_SHM_LIMIT:-} == 1 ]]; then\n    [[ ! -z ${TIMEFRAME_RATE_LIMIT:-} ]] && unset TIMEFRAME_RATE_LIMIT\n    [[ ! -z ${SHMSIZE:-} ]] && unset SHMSIZE\n  fi\n  if [[ $OPTIMIZED_PARALLEL_ASYNC == \"pp_8cpu\" ]]; then\n    [[ -z ${TIMEFRAME_RATE_LIMIT:-} ]] && TIMEFRAME_RATE_LIMIT=3\n    [[ -z ${SHMSIZE:-} ]] && SHMSIZE=16000000000\n    NGPURECOTHREADS=5\n  elif [[ $OPTIMIZED_PARALLEL_ASYNC == \"pp_16cpu\" ]]; then\n    [[ -z ${TIMEFRAME_RATE_LIMIT:-} ]] && TIMEFRAME_RATE_LIMIT=8\n    [[ -z ${SHMSIZE:-} ]] && SHMSIZE=22000000000\n    NGPURECOTHREADS=9\n    NTRDTRKTHREADS=3\n    ITSTRK_THREADS=3\n    ITSTPC_THREADS=3\n  elif [[ $OPTIMIZED_PARALLEL_ASYNC == \"pp_64cpu\" ]]; then\n    [[ -z ${TIMEFRAME_RATE_LIMIT:-} ]] && TIMEFRAME_RATE_LIMIT=32\n    [[ -z ${SHMSIZE:-} ]] && SHMSIZE=90000000000\n    NGPURECOTHREADS=12\n    NTRDTRKTHREADS=3\n    ITSTRK_THREADS=3",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "8d5e6c0f22159604c4eff2b43a89f436ded50e67953a620f23279a145b6b52a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    NGPURECOTHREADS=12\n    NTRDTRKTHREADS=3\n    ITSTRK_THREADS=3\n    ITSTPC_THREADS=3\n    N_TPCTRK=3\n    N_ITSTRK=3\n    N_TPCITS=3\n    N_TRDTRK=2\n    N_MCHCL=3\n    N_TOFMATCH=2\n    N_TPCENTDEC=3\n  elif [[ $OPTIMIZED_PARALLEL_ASYNC == \"pp_1gpu\" ]]; then\n    [[ -z ${TIMEFRAME_RATE_LIMIT:-} ]] && TIMEFRAME_RATE_LIMIT=8\n    [[ -z ${SHMSIZE:-} ]] && SHMSIZE=30000000000\n    N_TOFMATCH=2\n    N_MCHCL=3\n    N_TPCENTDEC=2\n    N_TPCITS=3\n    N_MCHTRK=2\n    N_ITSTRK=3\n    NGPURECOTHREADS=8\n    NTRDTRKTHREADS=3\n    ITSTRK_THREADS=2\n    ITSTPC_THREADS=2\n  elif [[ $OPTIMIZED_PARALLEL_ASYNC =~ ^pp_4gpu(_|$) ]]; then\n    if [[ -z ${TIMEFRAME_RATE_LIMIT:-} ]]; then\n      if [[ ! -z ${ALIEN_JDL_LPMANCHORYEAR} && ${ALIEN_JDL_LPMANCHORYEAR} -lt 2023 ]]; then\n        TIMEFRAME_RATE_LIMIT=45\n      else\n        TIMEFRAME_RATE_LIMIT=120\n      fi\n    fi\n    [[ -z ${SHMSIZE:-} ]] && SHMSIZE=100000000000\n    if [[ $OPTIMIZED_PARALLEL_ASYNC == \"pp_4gpu_NERSC\" ]]; then\n      NGPUS=1\n      GPUTYPE=CUDA\n    else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "fa05332b0ab629733fc43a65096df0caf9e9c2c47f198f8a50266a84dba75219": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    NGPUS=1\n      GPUTYPE=CUDA\n    else\n      NGPUS=4\n    fi\n    NGPURECOTHREADS=8\n    NTRDTRKTHREADS=2\n    ITSTRK_THREADS=2\n    ITSTPC_THREADS=2\n    SVERTEX_THREADS=4\n    TPCTIMESERIES_THREADS=2\n    N_TPCTRK=4\n    N_FWDMATCH=2\n    N_PRIMVTXMATCH=1\n    N_PRIMVTX=1\n    N_SECVTX=2\n    N_TRDTRKTRANS=1\n    N_AODPROD=4\n    N_TRDTRK=5\n    N_TOFMATCH=8\n    N_MCHCL=12\n    N_MCHTRK=6\n    N_TPCENTDEC=6\n    N_TPCITS=12\n    N_ITSTRK=12\n    N_ITSCL=2\n    export DPL_SMOOTH_RATE_LIMITING=1\n  elif [[ $OPTIMIZED_PARALLEL_ASYNC =~ ^PbPb_4gpu(_|$) ]]; then\n    [[ -z ${TIMEFRAME_RATE_LIMIT:-} ]] && TIMEFRAME_RATE_LIMIT=35\n    [[ -z ${SHMSIZE:-} ]] && SHMSIZE=100000000000 # SHM_LIMIT 3/4\n    [[ -z ${TIMEFRAME_SHM_LIMIT:-} ]] && TIMEFRAME_SHM_LIMIT=$(($SHMSIZE / 3))\n    if [[ $OPTIMIZED_PARALLEL_ASYNC == \"PbPb_4gpu_NERSC\" ]]; then\n      NGPUS=1\n      GPUTYPE=CUDA\n    else\n      NGPUS=4\n    fi\n    NGPURECOTHREADS=8\n    NTRDTRKTHREADS=8\n    ITSTRK_THREADS=5\n    ITSTPC_THREADS=3\n    SVERTEX_THREADS=20",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "ffac1e5feaf9a05858d51bc08600f0ce64568a646cac138ac851ec8d8128b663": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "NTRDTRKTHREADS=8\nITSTRK_THREADS=5\nITSTPC_THREADS=3\nSVERTEX_THREADS=20\nTOFMATCH_THREADS=2\nN_SECVTX=2\nN_TPCTRK=$NGPUS\n# processing times in seconds: primary vertexing 16, tof matching 30, trd tracking 82, itstpc 53, its 200, mft tracking 30, tpc event timing 23, hmp clusterization 40 (25.11.22)\nN_TPCENTDEC=$(math_max $((4 * $NGPUS / 4)) 1)\nN_ITSTRK=$(math_max $((12 * $NGPUS / 4)) 1)\nN_TPCITS=$(math_max $((5 * $NGPUS / 4)) 1)\nN_MFTTRK=$(math_max $((3 * $NGPUS / 4)) 1)\nN_TRDTRK=$(math_max $((5 * $NGPUS / 4)) 1)\nN_TOFMATCH=$(math_max $((5 * $NGPUS / 4)) 1)\nN_HMPCLUS=$(math_max $((3 * $NGPUS / 4)) 1)\nN_ITSCL=4\nN_AODPROD=3\nN_MCHCL=9\nN_HMPMATCH=1\nN_MCHTRK=7\nN_PRIMVTXMATCH=2\nN_PRIMVTX=3\n# export DPL_SMOOTH_RATE_LIMITING=1\n  elif [[ $OPTIMIZED_PARALLEL_ASYNC == \"PbPb_64cpu\" ]]; then\n    NGPURECOTHREADS=6\n    NTRDTRKTHREADS=2\n    N_TPCENTDEC=2\n    N_MFTTRK=3\n    N_ITSTRK=3\n    N_TPCITS=2\n    N_MCHTRK=1\n    N_TOFMATCH=9\n    N_TPCTRK=6\n  else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "73ed01e67038c683a47d2678368eee829af19fb17767fb0a017fb1f9814d53a8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "N_MFTTRK=3\n    N_ITSTRK=3\n    N_TPCITS=2\n    N_MCHTRK=1\n    N_TOFMATCH=9\n    N_TPCTRK=6\n  else\n    echo \"Invalid optimized setting '$OPTIMIZED_PARALLEL_ASYNC'\" 1>&2\n    exit 1\n  fi\n  if [[ ${OPTIMIZED_PARALLEL_ASYNC_AUTO_SHM_LIMIT:-} == 1 && ${EPN_NODE_MI100:-} == 1 ]]; then\n    TIMEFRAME_RATE_LIMIT=$(($TIMEFRAME_RATE_LIMIT * 2))\n    SHMSIZE=$(($SHMSIZE * 2))\n    EPN_GLOBAL_SCALING=\"3 / 2\"\n  fi\nelif [[ $EPNPIPELINES != 0 ]]; then\n  NTRDTRKTHREADS=2\n  ITSTRK_THREADS=2\n  ITSTPC_THREADS=2\n  # Adjusted multiplicities for synchronized pp / Pb-Pb processing\n  if [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" ]]; then\n    N_ITSRAWDEC=$(math_max $((6 * $EPNPIPELINES * $NGPUS / 4)) 1)\n    N_MFTRAWDEC=$(math_max $((2 * $EPNPIPELINES * $NGPUS / 4)) 1)\n    if [[ \"${GEN_TOPO_AUTOSCALE_PROCESSES:-}\" == \"1\" && $RUNTYPE == \"PHYSICS\" ]]; then\n      N_MCHCL=$(math_max $((6 * 100 / $RECO_NUM_NODES_WORKFLOW_CMP)) 1)\n    fi\n    if [[ \"$HIGH_RATE_PP\" == \"1\" ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "597ed7ff9862882ba981ea63b5de864f28382f3e1d06c99fb3c2ebf67b65fee5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"$HIGH_RATE_PP\" == \"1\" ]]; then\n  N_TPCITS=$(math_max $((5 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  N_TPCENT=$(math_max $((4 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  N_TOFMATCH=$(math_max $((2 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  N_TRDTRKTRANS=$(math_max $((4 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  N_ITSTRK=$(math_max $((9 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  N_PRIMVTX=$(math_max $((2 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  N_PRIMVTXMATCH=$(math_max $((2 * $EPNPIPELINES * $NGPUS / 4)) 1)\nelse\n  N_TPCITS=$(math_max $((3 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  N_TPCENT=$(math_max $((3 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  N_ITSTRK=$(math_max $((6 * $EPNPIPELINES * $NGPUS / 4)) 1)\nfi\nelse\n  if [[ $BEAMTYPE == \"PbPb\" ]]; then\n    N_ITSTRK=$(math_max $((2 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  elif [[ $BEAMTYPE == \"cosmic\" ]]; then\n    N_ITSTRK=$(math_max $((4 * $EPNPIPELINES * $NGPUS / 4)) 1)\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "a901ed6a9c8f816dd711ccf004ff9d1c35cfc598dfd6927aae52b85208b20d3d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "N_ITSTRK=$(math_max $((4 * $EPNPIPELINES * $NGPUS / 4)) 1)\nN_ITSRAWDEC=$(math_max $((3 * $EPNPIPELINES * $NGPUS / 4)) 1)\nN_TPCITS=$(math_max $((3 * $EPNPIPELINES * $NGPUS / 4)) 1)\nN_TPCENT=$(math_max $((3 * $EPNPIPELINES * $NGPUS / 4)) 1)\nN_EMCREC=$(math_max $((3 * $EPNPIPELINES * $NGPUS / 4)) 1)\nN_TRDENT=$(math_max $((3 * $EPNPIPELINES * $NGPUS / 4)) 1)\nN_TRDTRK=$(math_max $((3 * $EPNPIPELINES * $NGPUS / 4)) 1)\nN_MFTTRK=$(math_max $((5 * $EPNPIPELINES * $NGPUS / 4)) 1)\nN_TPCRAWDEC=$(math_max $((12 * $EPNPIPELINES * $NGPUS / 4)) 1)\nif [[ $GPUTYPE == \"CPU\" ]]; then\n  N_TPCTRK=8\n  NGPURECOTHREADS=4\nfi\nif [[ \"${GEN_TOPO_AUTOSCALE_PROCESSES:-}\" == \"1\" ]]; then\n  # Scale some multiplicities with the number of nodes",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "42ce359352677f3a8644ad4a4b9fd04788221acdf9c3e5b5fa181c2baffe3693": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Scale some multiplicities with the number of nodes\nN_ITSRAWDEC=$(math_max $((3 * 60 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_ITSRAWDEC:-1}) # If there are 60 EPN nodes, at least 3 ITS RAW decoders are required (automatically scaled down by a factor of two if there are 2 NUMA domains)\nN_MFTRAWDEC=$(math_max $((3 * 60 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_MFTRAWDEC:-1})\nif [[ $RUNTYPE == \"PHYSICS\" || $RUNTYPE == \"COSMICS\" ]]; then\n  if [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" ]]; then\n    N_ITSTRK=$(math_max $((9 * 200 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_ITSTRK:-1})\n  elif [[ $BEAMTYPE == \"cosmic\" ]]; then\n    N_ITSTRK=$(math_max $((5 * 200 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_ITSTRK:-1})\n  else\n    N_ITSTRK=$(math_max $((2 * 200 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_ITSTRK:-1})\n  fi\n  N_ITSTRK=$(( $N_ITSTRK < 7 ? $N_ITSTRK : 7 ))\n  N_MFTTRK=$(math_max $((1 * 60 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_MFTTRK:-1})",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "8c04d4ba99621f9e5a84292988b297def93d3ee54db57bc359c9492c0fa83934": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "N_MFTTRK=$(math_max $((1 * 60 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_MFTTRK:-1})\nN_CTPRAWDEC=$(math_max $((1 * 30 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_CTPRAWDEC:-1})\nN_TRDRAWDEC=$(math_max $((3 * 60 / $RECO_NUM_NODES_WORKFLOW_CMP)) ${N_TRDRAWDEC:-1})\nfi\nfi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "b96a201b89c47005cde5456abfa51d3335bf4b277db362e7ac53098cf9aece99": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z ${EVE_NTH_EVENT:-} ]]; then\n  if [[ $BEAMTYPE == \"PbPb\" ]]; then\n    EVE_NTH_EVENT=2\n  elif [[ \"$HIGH_RATE_PP\" == \"1\" ]]; then\n    EVE_NTH_EVENT=10\n  elif [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" ]]; then\n    EVE_NTH_EVENT=$((4 * 250 / $RECO_NUM_NODES_WORKFLOW_CMP))\n  else # COSMICS / TECHNICALS / ...\n    EVE_NTH_EVENT=1\n  fi\n  [[ ! -z ${EPN_GLOBAL_SCALING:-} ]] && EVE_NTH_EVENT=$(($EVE_NTH_EVENT * $EPN_GLOBAL_SCALING))\nfi\n\nif [[ \"$HIGH_RATE_PP\" == \"1\" ]]; then\n  : ${CUT_RANDOM_FRACTION_ITS:=0.97}\nelif [[ $BEAMTYPE == \"PbPb\" ]]; then\n  : ${CUT_RANDOM_FRACTION_ITS:=-1}\n  : ${CUT_MULT_MIN_ITS:=100}\n  : ${CUT_MULT_MAX_ITS:=200}\n  : ${CUT_MULT_VTX_ITS:=20}\nelse\n  : ${CUT_RANDOM_FRACTION_ITS:=0.95}\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "50731d67bf77c053ddf1543cb1d1dab590043558e769b9bdfc57dcc1fd18991f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configuration for random data sampling fraction in MCH\n\nif the BEAMTYPE is \"pp\" or $LIGHTNUCLEI equals \"1\", then:\n    : ${CUT_RANDOM_FRACTION_MCH_WITH_ITS:=0.5}\n    : ${CUT_RANDOM_FRACTION_MCH_NO_ITS:=0.995}\nelif the HIGH_RATE_PP is \"1\", then:\n    : ${CUT_RANDOM_FRACTION_MCH_WITH_ITS:=0.7}\n    : ${CUT_RANDOM_FRACTION_MCH_NO_ITS:=0.995}\nelif the BEAMTYPE is \"PbPb\", then:\n    : ${CUT_RANDOM_FRACTION_MCH_WITH_ITS:=0.9}\n    : ${CUT_RANDOM_FRACTION_MCH_NO_ITS:=0.995}\nelse:\n    : ${CUT_RANDOM_FRACTION_MCH_WITH_ITS:=0.99}\n    : ${CUT_RANDOM_FRACTION_MCH_NO_ITS:=0.99}\nfi\n\n#if the HIGH_RATE_PP is \"1\", then\n  # Additional settings for HIGH_RATE_PP\n#fi\n\nfi\n\ntrue",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/workflow-multiplicities.sh"
        }
    ],
    "460c58f1926be94a6324f8f7e48c4e5307b8b2ad29c8c7ac9cca41c3dca0ff99": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nif [ \"0$O2_ROOT\" == \"0\" ]; then\n    echo O2 environment not loaded 1>&2\n    exit 1\nfi\n\nsource $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh || { echo \"dpl-workflow.sh failed\" 1>&2 && exit 1; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/dpl-workflow.sh"
        }
    ],
    "422dee459e8a4f7d13159282790c14391bf73a9b8fb7f76791a98611ba77b4d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# ---------------------------------------------------------------------------------------------------------------------\n\n# Verify that the prerequisites for enabling the calibrations are satisfied, and\n# activate them by default if they haven't been enabled or\n# if they are not explicitly disabled.\n# Subsequently, configure the data specification based on the enabled calibrations.\n\n# Utilized to prevent sourcing this file more than once\nif [[ -z ${SOURCE_GUARD_SETENV_CALIB:-} ]]; then\nSOURCE_GUARD_SETENV_CALIB=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "dc7dd1125dac12e47e5e178f89d1637939581c50a43a25d0f3b85337b30da3b9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define the conditions for each calibration\nif the ITS detector calibration is present and ITS detector reconstruction is available, and the primary vertex sources are defined, then set CAN_DO_CALIB_PRIMVTX_MEANVTX to 1; otherwise, set it to 0.\nif the ITS detector calibration is present, then set CAN_DO_CALIB_ITS_DEADMAP_TIME to 1; otherwise, set it to 0.\nif the MFT detector calibration is present, then set CAN_DO_CALIB_MFT_DEADMAP_TIME to 1; otherwise, set it to 0.\nif TOF detector calibration is present and TOF detector reconstruction is available, then set CAN_DO_CALIB_TOF_DIAGNOSTICS to 1 and CAN_DO_CALIB_TOF_INTEGRATEDCURR to 1; otherwise, set both to 0.\nif TOF detector calibration is present, TOF detector reconstruction is available, and either ITS-TPC or ITS-TPC-TRD matching is defined, then set CAN_DO_CALIB_TOF_LHCPHASE and CAN_DO_CALIB_TOF_CHANNELOFFSETS to 1; otherwise, set both to 0.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "6dd2badc96bc0a8073df17607db0adf88a32a78b1317797579addb68d961d7a6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the TPC detector calibration is available and ITS TPC detectors are present with matching ITSTPC; then CAN_DO_CALIB_TPC_SCDCALIB=1; otherwise CAN_DO_CALIB_TPC_SCDCALIB=0; fi\nif TPC detector calibration is available and the TPC processing step TPC_DEDX is present; then CAN_DO_CALIB_TPC_TIMEGAIN=1 and CAN_DO_CALIB_TPC_RESPADGAIN=1; otherwise CAN_DO_CALIB_TPC_TIMEGAIN=0 and CAN_DO_CALIB_TPC_RESPADGAIN=0; fi\nif TPC detector calibration is available and ITS TPC detectors are present with matching ITSTPC; then CAN_DO_CALIB_TPC_VDRIFTTGL=1; otherwise CAN_DO_CALIB_TPC_VDRIFTTGL=0; fi\nif TPC detector calibration is available; then CAN_DO_CALIB_TPC_IDC=1 and CAN_DO_CALIB_TPC_SAC=1; otherwise CAN_DO_CALIB_TPC_IDC=0 and CAN_DO_CALIB_TPC_SAC=0; fi\nif FLP_IDS is not empty and does not include \"145\", or if GEN_TOPO_DEPLOYMENT_TYPE is \"ALICE_STAGING\"; then CAN_DO_CALIB_TPC_SAC=0; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "d703827a6f54f6ed6c2a5abd67a81f01153a62a79e109760aedb959abb11fa17": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the detector calibration for TRD is present and the detectors ITS, TPC, and TRD are available and have matching conditions; then set CAN_DO_CALIB_TRD_VDRIFTEXB to 1, CAN_DO_CALIB_TRD_GAIN to 1, and CAN_DO_CALIB_TRD_T0 to 1; otherwise, set these values to 0. \nif the detector calibration for EMC is present and the EMC reconstruction is available; then set CAN_DO_CALIB_EMC_BADCHANNELCALIB to 1 and CAN_DO_CALIB_EMC_TIMECALIB to 1; otherwise, set these values to 0. \nif the detector calibration for PHS is present and the PHS reconstruction is available; then set CAN_DO_CALIB_PHS_BADMAPCALIB to 1, CAN_DO_CALIB_PHS_TURNONCALIB to 1, CAN_DO_CALIB_PHS_RUNBYRUNCALIB to 1, and CAN_DO_CALIB_PHS_L1PHASE to 1; otherwise, set all these values to 0. \nif the detector calibration for CPV is present and the CPV reconstruction is available; then set CAN_DO_CALIB_CPV_GAIN to 1; otherwise, set it to 0.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "b9d63848ca563fd1a61a4d4a9847c10f17fb5a42d9874ffff5aa59ccd222277a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the FT0 detector has been calibrated and the FT0 reconstruction step is available; then CAN_DO_CALIB_FT0_TIMEOFFSET=1; CAN_DO_CALIB_FT0_INTEGRATEDCURR=1; else set CAN_DO_CALIB_FT0_TIMEOFFSET=0; CAN_DO_CALIB_FT0_INTEGRATEDCURR=0; fi\nif the FV0 detector has been calibrated and the FV0 reconstruction step is performed; then CAN_DO_CALIB_FV0_INTEGRATEDCURR=1; else set CAN_DO_CALIB_FV0_INTEGRATEDCURR=0; fi\nif the FDD detector has been calibrated and the FDD reconstruction step is performed; then CAN_DO_CALIB_FDD_INTEGRATEDCURR=1; else set CAN_DO_CALIB_FDD_INTEGRATEDCURR=0; fi\nif the ZDC detector has been calibrated and the ZDC reconstruction step is performed; then CAN_DO_CALIB_ZDC_TDC=1; else set CAN_DO_CALIB_ZDC_TDC=0; fi\nif the SYNCMODE is set to 1 and the ENTROPY_ENCODER processing step is active, and the WORKFLOW_DETECTORS_CTF is defined and not \"NONE\"; then set CAN_DO_CALIB_RCT_UPDATER=1; else set CAN_DO_CALIB_RCT_UPDATER=0; fi\n# for asynchronous recalibration\nif the EMC detector has been calibrated, the EMC reconstruction step is available, and the SYNCMODE is not set to 1; then set CAN_DO_CALIB_EMC_ASYNC_RECALIB=1; else set CAN_DO_CALIB_EMC_ASYNC_RECALIB=0; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "cd6982595b219bf8d90349617ce6e82bf5c2dfc2ccb3e9c3857e4e0948371b8c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $SYNCMODE != 1 ]] && has_detector_reco TPC; then CAN_DO_CALIB_ASYNC_EXTRACTTPCCURRENTS=1; else CAN_DO_CALIB_ASYNC_EXTRACTTPCCURRENTS=0; fi\nif [[ $SYNCMODE != 1 ]] && has_detector_reco TPC && has_detector_reco ITS && has_detector_reco FT0; then CAN_DO_CALIB_ASYNC_EXTRACTTIMESERIES=1; else CAN_DO_CALIB_ASYNC_EXTRACTTIMESERIES=0; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "34ae3407fbac0d709f93b1a4bc25ef1c2d023f142f1a42e01527c1e6a0e605cc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# additional individual settings for calibration workflows\nif the detector is CTP; then set CALIB_TPC_SCDCALIB_CTP_INPUT=\"--enable-ctp\"; else set CALIB_TPC_SCDCALIB_CTP_INPUT=\"\"; fi\nif [[ ${DISABLE_TRD_PH:-} == 1 ]]; then set CAN_DO_CALIB_TRD_T0=0; fi\n\n: ${CALIB_TPC_SCDCALIB_SLOTLENGTH:=600} # the slot length must be known both on the aggregator and the processing nodes, so it is defined here (in seconds!)\n: ${CALIB_TPC_SCDCALIB_SENDTRKDATA:=1}  # by default, we include track information along with unbinned residuals to facilitate more detailed offline filtering\n\nif [[ $BEAMTYPE != \"cosmic\" ]] || [[ ${FORCECALIBRATIONS:-} == 1 ]] ; then # calibrations are enabled in non-COSMIC runs\n\n  # we will not handle calibrations specifically for async! e.g. EMC_ASYNC_RECALIB; they should always be explicitly enabled",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "42502ecd40f6bfaecd6fcbc8e5911f15ccade50a730a242c7fd57d30e328e1c5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $CAN_DO_CALIB_PRIMVTX_MEANVTX == 1 ]]; then\n    if [[ -z ${CALIB_PRIMVTX_MEANVTX+x} ]]; then CALIB_PRIMVTX_MEANVTX=1; fi\n  fi\n  \n  if [[ $CAN_DO_CALIB_ITS_DEADMAP_TIME == 1 ]]; then\n    if [[ -z ${CALIB_ITS_DEADMAP_TIME+x} ]]; then CALIB_ITS_DEADMAP_TIME=1; fi\n  fi\n  \n  if [[ $CAN_DO_CALIB_MFT_DEADMAP_TIME == 1 ]]; then\n    if [[ -z ${CALIB_MFT_DEADMAP_TIME+x} ]]; then CALIB_MFT_DEADMAP_TIME=1; fi\n  fi\n  \n  if [[ $CAN_DO_CALIB_TOF_DIAGNOSTICS == 1 ]]; then\n    if [[ -z ${CALIB_TOF_DIAGNOSTICS+x} ]]; then CALIB_TOF_DIAGNOSTICS=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TOF_LHCPHASE == 1 ]]; then\n    if [[ -z ${CALIB_TOF_LHCPHASE+x} ]]; then CALIB_TOF_LHCPHASE=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TOF_CHANNELOFFSETS == 1 ]]; then\n    if [[ -z ${CALIB_TOF_CHANNELOFFSETS+x} ]]; then CALIB_TOF_CHANNELOFFSETS=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TOF_INTEGRATEDCURR == 1 ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "6fefb6c9f8ec64532009748d9edcc9a8184a48ed79c02909bc3815b5b25b1e84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $CAN_DO_CALIB_TOF_INTEGRATEDCURR == 1 ]]; then\n  if [[ -z ${CALIB_TOF_INTEGRATEDCURR+x} ]]; then\n    CALIB_TOF_INTEGRATEDCURR=1\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "70b5984ae2b2794e08d9462e7a5088fa13cd084905aaedcd45673e1cdc17c9e2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# calibrations for TPC\n  if [[ $CAN_DO_CALIB_TPC_SCDCALIB == 1 ]] ; then\n    if [[ -z ${CALIB_TPC_SCDCALIB+x} ]]; then CALIB_TPC_SCDCALIB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TPC_TIMEGAIN == 1 ]]; then\n    if [[ -z ${CALIB_TPC_TIMEGAIN+x} ]]; then CALIB_TPC_TIMEGAIN=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TPC_RESPADGAIN == 1 ]]; then\n    if [[ -z ${CALIB_TPC_RESPADGAIN+x} ]]; then CALIB_TPC_RESPADGAIN=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TPC_VDRIFTTGL == 1 ]]; then\n    if [[ -z ${CALIB_TPC_VDRIFTTGL+x} ]]; then CALIB_TPC_VDRIFTTGL=1; fi\n  fi\n\n  # calibrations for TRD\n  if [[ $CAN_DO_CALIB_TRD_VDRIFTEXB == 1 ]] ; then\n    if [[ -z ${CALIB_TRD_VDRIFTEXB+x} ]]; then CALIB_TRD_VDRIFTEXB=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TRD_GAIN == 1 ]] ; then\n    if [[ -z ${CALIB_TRD_GAIN+x} ]]; then CALIB_TRD_GAIN=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_TRD_T0 == 1 ]] ; then\n    if [[ -z ${CALIB_TRD_T0+x} ]]; then CALIB_TRD_T0=1; fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "1fe329a7065e5e63adbed1278654772b1b293423ad89866fb68633f4abfa3c62": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $CAN_DO_CALIB_EMC_BADCHANNELCALIB == 1 ]]; then\n    if [[ -z ${CALIB_EMC_BADCHANNELCALIB+x} ]]; then\n      CALIB_EMC_BADCHANNELCALIB=1\n    fi\n  fi\n  if [[ $CAN_DO_CALIB_EMC_TIMECALIB == 1 ]]; then\n    if [[ -z ${CALIB_EMC_TIMECALIB+x} ]]; then\n      CALIB_EMC_TIMECALIB=1\n    fi\n  fi\n\n  # calibrations for PHS\n  if [[ $CAN_DO_CALIB_PHS_ENERGYCALIB == 1 ]]; then\n    if [[ -z ${CALIB_PHS_ENERGYCALIB+x} ]]; then\n      CALIB_PHS_ENERGYCALIB=1\n    fi\n  fi\n  if [[ $CAN_DO_CALIB_PHS_BADMAPCALIB == 1 ]]; then\n    if [[ -z ${CALIB_PHS_BADMAPCALIB+x} ]]; then\n      CALIB_PHS_BADMAPCALIB=1\n    fi\n  fi\n  if [[ $CAN_DO_CALIB_PHS_TURNONCALIB == 1 ]]; then\n    if [[ -z ${CALIB_PHS_TURNONCALIB+x} ]]; then\n      CALIB_PHS_TURNONCALIB=1\n    fi\n  fi\n  if [[ $CAN_DO_CALIB_PHS_RUNBYRUNCALIB == 1 ]]; then\n    if [[ -z ${CALIB_PHS_RUNBYRUNCALIB+x} ]]; then\n      CALIB_PHS_RUNBYRUNCALIB=1\n    fi\n  fi\n  if [[ $CAN_DO_CALIB_PHS_L1PHASE == 1 ]]; then\n    if [[ -z ${CALIB_PHS_L1PHASE+x} ]]; then\n      CALIB_PHS_L1PHASE=1\n    fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "177f6e7b866ac312d703984b2aad52128a411198d316ebf85eedbdffd6d0c6d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $CAN_DO_CALIB_CPV_GAIN == 1 ]]; then\n    if [[ -z ${CALIB_CPV_GAIN+x} ]]; then CALIB_CPV_GAIN=1; fi\n  fi\n\n  if [[ $CAN_DO_CALIB_ZDC_TDC == 1 ]]; then\n    if [[ -z ${CALIB_ZDC_TDC+x} ]]; then CALIB_ZDC_TDC=1; fi\n  fi\n\n  if [[ $CAN_DO_CALIB_FT0_TIMEOFFSET == 1 ]]; then\n    if [[ -z ${CALIB_FT0_TIMEOFFSET+x} ]]; then CALIB_FT0_TIMEOFFSET=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_FT0_INTEGRATEDCURR == 1 ]]; then\n    if [[ -z ${CALIB_FT0_INTEGRATEDCURR+x} ]]; then CALIB_FT0_INTEGRATEDCURR=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_FV0_INTEGRATEDCURR == 1 ]]; then\n    if [[ -z ${CALIB_FV0_INTEGRATEDCURR+x} ]]; then CALIB_FV0_INTEGRATEDCURR=1; fi\n  fi\n  if [[ $CAN_DO_CALIB_FDD_INTEGRATEDCURR == 1 ]]; then\n    if [[ -z ${CALIB_FDD_INTEGRATEDCURR+x} ]]; then CALIB_FDD_INTEGRATEDCURR=1; fi\n  fi\nfi\n\n# Calibrations that apply regardless of whether it is a cosmic or non-cosmic run:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "076c2efed95f8d0777a2ea9af908bc22984b25dc3553eb2b34fb5e2b4a768061": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Calibrations regardless of whether the run is COSMIC or non-COSMIC:\n\n# if feasible, execute RCT updater\nif [[ $CAN_DO_CALIB_RCT_UPDATER == 1 ]]; then\n  if [[ -z ${CALIB_RCT_UPDATER+x} ]]; then CALIB_RCT_UPDATER=1; fi\nfi\n\n# IDCs (by default, they are activated for synchronization reconstruction on EPNs, but not on staging due to the limited number of calibration nodes)\nif [[ $CAN_DO_CALIB_TPC_IDC == 1 ]]; then\n  if [[ -z ${CALIB_TPC_IDC+x} ]]; then\n    if [[ $EPNSYNCMODE == 1 ]] && [[ \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" != \"ALICE_STAGING\" ]]; then\n      CALIB_TPC_IDC=1;\n    else\n      CALIB_TPC_IDC=0;\n    fi\n  fi\nfi\n# SAC (by default, it is activated for synchronization reconstruction on EPNs)\nif [[ $CAN_DO_CALIB_TPC_SAC == 1 ]]; then\n  if [[ -z ${CALIB_TPC_SAC+x} ]]; then\n    if [[ $EPNSYNCMODE == 1 ]]; then\n      CALIB_TPC_SAC=1;\n    else\n      CALIB_TPC_SAC=0;\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "6167fd1fc520be083af33e4b5d47ab16ae5342f90d08ac8154963e5520be42c8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "( [[ -z ${CALIB_FT0_INTEGRATEDCURR:-} ]] || [[ $CAN_DO_CALIB_FT0_INTEGRATEDCURR == 0 ]] ) && CALIB_FT0_INTEGRATEDCURR=0\n( [[ -z ${CALIB_FV0_INTEGRATEDCURR:-} ]] || [[ $CAN_DO_CALIB_FV0_INTEGRATEDCURR == 0 ]] ) && CALIB_FV0_INTEGRATEDCURR=0\n( [[ -z ${CALIB_FDD_INTEGRATEDCURR:-} ]] || [[ $CAN_DO_CALIB_FDD_INTEGRATEDCURR == 0 ]] ) && CALIB_FDD_INTEGRATEDCURR=0\n( [[ -z ${CALIB_FT0_TIMEOFFSET:-} ]] || [[ $CAN_DO_CALIB_FT0_TIMEOFFSET == 0 ]] ) && CALIB_FT0_TIMEOFFSET=0\n( [[ -z ${CALIB_PRIMVTX_MEANVTX:-} ]] || [[ $CAN_DO_CALIB_PRIMVTX_MEANVTX == 0 ]] ) && CALIB_PRIMVTX_MEANVTX=0\n( [[ -z ${CALIB_TOF_LHCPHASE:-} ]] || [[ $CAN_DO_CALIB_TOF_LHCPHASE == 0 ]] ) && CALIB_TOF_LHCPHASE=0\n( [[ -z ${CALIB_TOF_CHANNELOFFSETS:-} ]] || [[ $CAN_DO_CALIB_TOF_CHANNELOFFSETS == 0 ]] ) && CALIB_TOF_CHANNELOFFSETS=0\n( [[ -z ${CALIB_TOF_DIAGNOSTICS:-} ]] || [[ $CAN_DO_CALIB_TOF_DIAGNOSTICS == 0 ]] ) && CALIB_TOF_DIAGNOSTICS=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "d4df5b16591f598fb61db62f1261bc957147855de41064659148b8e87e1e0e81": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "( [[ -z ${CALIB_TOF_INTEGRATEDCURR:-} ]] || [[ $CAN_DO_CALIB_TOF_INTEGRATEDCURR == 0 ]] ) && CALIB_TOF_INTEGRATEDCURR=0\n( [[ -z ${CALIB_TPC_SCDCALIB:-} ]] || [[ $CAN_DO_CALIB_TPC_SCDCALIB == 0 ]] ) && CALIB_TPC_SCDCALIB=0\n( [[ -z ${CALIB_TPC_TIMEGAIN:-} ]] || [[ $CAN_DO_CALIB_TPC_TIMEGAIN == 0 ]] ) && CALIB_TPC_TIMEGAIN=0\n( [[ -z ${CALIB_TPC_RESPADGAIN:-} ]] || [[ $CAN_DO_CALIB_TPC_RESPADGAIN == 0 ]] ) && CALIB_TPC_RESPADGAIN=0\n( [[ -z ${CALIB_TPC_IDC:-} ]] || [[ $CAN_DO_CALIB_TPC_IDC == 0 ]] ) && CALIB_TPC_IDC=0\n( [[ -z ${CALIB_TPC_SAC:-} ]] || [[ $CAN_DO_CALIB_TPC_SAC == 0 ]] ) && CALIB_TPC_SAC=0\n( [[ -z ${CALIB_TPC_VDRIFTTGL:-} ]] || [[ $CAN_DO_CALIB_TPC_VDRIFTTGL == 0 ]] ) && CALIB_TPC_VDRIFTTGL=0\n( [[ -z ${CALIB_TRD_VDRIFTEXB:-} ]] || [[ $CAN_DO_CALIB_TRD_VDRIFTEXB == 0 ]] ) && CALIB_TRD_VDRIFTEXB=0\n( [[ -z ${CALIB_TRD_GAIN:-} ]] || [[ $CAN_DO_CALIB_TRD_GAIN == 0 ]] ) && CALIB_TRD_GAIN=0\n( [[ -z ${CALIB_TRD_T0:-} ]] || [[ $CAN_DO_CALIB_TRD_T0 == 0 ]] ) && CALIB_TRD_T0=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "1d345db70aabeb5f5949aba42226394d768af5ba2a3941b1580b7e6304fe646e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "( [[ -z ${CALIB_TRD_T0:-} ]] || [[ $CAN_DO_CALIB_TRD_T0 == 0 ]] ) && CALIB_TRD_T0=0\n( [[ -z ${CALIB_EMC_BADCHANNELCALIB:-} ]] || [[ $CAN_DO_CALIB_EMC_BADCHANNELCALIB == 0 ]] ) && CALIB_EMC_BADCHANNELCALIB=0\n( [[ -z ${CALIB_EMC_TIMECALIB:-} ]] || [[ $CAN_DO_CALIB_EMC_TIMECALIB == 0 ]] ) && CALIB_EMC_TIMECALIB=0\n( [[ -z ${CALIB_PHS_ENERGYCALIB:-} ]] || [[ $CAN_DO_CALIB_PHS_ENERGYCALIB == 0 ]] ) && CALIB_PHS_ENERGYCALIB=0\n( [[ -z ${CALIB_PHS_BADMAPCALIB:-} ]] || [[ $CAN_DO_CALIB_PHS_BADMAPCALIB == 0 ]] ) && CALIB_PHS_BADMAPCALIB=0\n( [[ -z ${CALIB_PHS_TURNONCALIB:-} ]] || [[ $CAN_DO_CALIB_PHS_TURNONCALIB == 0 ]] ) && CALIB_PHS_TURNONCALIB=0\n( [[ -z ${CALIB_PHS_RUNBYRUNCALIB:-} ]] || [[ $CAN_DO_CALIB_PHS_RUNBYRUNCALIB == 0 ]] ) && CALIB_PHS_RUNBYRUNCALIB=0\n( [[ -z ${CALIB_PHS_L1PHASE:-} ]] || [[ $CAN_DO_CALIB_PHS_L1PHASE == 0 ]] ) && CALIB_PHS_L1PHASE=0\n( [[ -z ${CALIB_CPV_GAIN:-} ]] || [[ $CAN_DO_CALIB_CPV_GAIN == 0 ]] ) && CALIB_CPV_GAIN=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "0e92faffb0e9360c6238cdcec68443ad3980bd94e0d6164d43c804e22b5fc571": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "( [[ -z ${CALIB_CPV_GAIN:-} ]] || [[ $CAN_DO_CALIB_CPV_GAIN == 0 ]] ) && CALIB_CPV_GAIN=0\n( [[ -z ${CALIB_ZDC_TDC:-} ]] || [[ $CAN_DO_CALIB_ZDC_TDC == 0 ]] ) && CALIB_ZDC_TDC=0\n( [[ -z ${CALIB_ITS_DEADMAP_TIME:-} ]] || [[ $CAN_DO_CALIB_ITS_DEADMAP_TIME == 0 ]] ) && CALIB_ITS_DEADMAP_TIME=0\n( [[ -z ${CALIB_MFT_DEADMAP_TIME:-} ]] || [[ $CAN_DO_CALIB_MFT_DEADMAP_TIME == 0 ]] ) && CALIB_MFT_DEADMAP_TIME=0\n( [[ -z ${CALIB_RCT_UPDATER:-} ]] || [[ $CAN_DO_CALIB_RCT_UPDATER == 0 ]] ) && CALIB_RCT_UPDATER=0\n# for asynchronous operations:\n( [[ -z ${CALIB_EMC_ASYNC_RECALIB:-} ]] || [[ $CAN_DO_CALIB_EMC_ASYNC_RECALIB == 0 ]] ) && CALIB_EMC_ASYNC_RECALIB=0\n( [[ -z ${CALIB_ASYNC_EXTRACTTPCCURRENTS:-} ]] || [[ $CAN_DO_CALIB_ASYNC_EXTRACTTPCCURRENTS == 0 ]] ) && CALIB_ASYNC_EXTRACTTPCCURRENTS=0\n( [[ -z ${CALIB_ASYNC_DISABLE3DCURRENTS:-} ]] || [[ $CAN_DO_CALIB_ASYNC_DISABLE3DCURRENTS == 0 ]] ) && CALIB_ASYNC_DISABLE3DCURRENTS=0\n: ${ON_SKIMMED_DATA:=0}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "2ab3bdd6a7638199fc5a7c35f85daeb969c98b40e1b6cee0a5accbeac976d4eb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": ": ${ON_SKIMMED_DATA:=0}\n( [[ -z ${CALIB_ASYNC_EXTRACTTIMESERIES:-} ]] || [[ $CAN_DO_CALIB_ASYNC_EXTRACTTIMESERIES == 0 ]] ) && CALIB_ASYNC_EXTRACTTIMESERIES=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "0a9707e5d3086068fef3b1bbed33efe016780d3da2d2d27a08430d0f7900b32b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0${GEN_TOPO_VERBOSE:-}\" == \"01\" ]]; then\n  echo \"CALIB_RCT_UPDATER = ${CALIB_RCT_UPDATER:-}\" 1>&2\n  echo \"CALIB_PRIMVTX_MEANVTX = $CALIB_PRIMVTX_MEANVTX\" 1>&2\n  echo \"CALIB_TOF_LHCPHASE = $CALIB_TOF_LHCPHASE\" 1>&2\n  echo \"CALIB_TOF_CHANNELOFFSETS = $CALIB_TOF_CHANNELOFFSETS\" 1>&2\n  echo \"CALIB_TOF_DIAGNOSTICS = $CALIB_TOF_DIAGNOSTICS\" 1>&2\n  echo \"CALIB_TOF_INTEGRATEDCURR = $CALIB_TOF_INTEGRATEDCURR\" 1>&2\n  echo \"CALIB_EMC_BADCHANNELCALIB = $CALIB_EMC_BADCHANNELCALIB\" 1>&2\n  echo \"CALIB_EMC_TIMECALIB = $CALIB_EMC_TIMECALIB\" 1>&2\n  echo \"CALIB_PHS_ENERGYCALIB = $CALIB_PHS_ENERGYCALIB\" 1>&2\n  echo \"CALIB_PHS_BADMAPCALIB = $CALIB_PHS_BADMAPCALIB\" 1>&2\n  echo \"CALIB_PHS_TURNONCALIB = $CALIB_PHS_TURNONCALIB\" 1>&2\n  echo \"CALIB_PHS_RUNBYRUNCALIB = $CALIB_PHS_RUNBYRUNCALIB\" 1>&2\n  echo \"CALIB_PHS_L1PHASE = $CALIB_PHS_L1PHASE\" 1>&2\n  echo \"CALIB_TRD_VDRIFTEXB = $CALIB_TRD_VDRIFTEXB\" 1>&2\n  echo \"CALIB_TRD_GAIN = $CALIB_TRD_GAIN\" 1>&2\n  echo \"CALIB_TRD_T0 = $CALIB_TRD_T0\" 1>&2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "82336c6a7890cbae43a1850025b4cb01e4744ced565b3de6748290f6a6d1b338": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"CALIB_TRD_GAIN = $CALIB_TRD_GAIN\" 1>&2\n  echo \"CALIB_TRD_T0 = $CALIB_TRD_T0\" 1>&2\n  echo \"CALIB_TPC_TIMEGAIN = $CALIB_TPC_TIMEGAIN\" 1>&2\n  echo \"CALIB_TPC_RESPADGAIN = $CALIB_TPC_RESPADGAIN\" 1>&2\n  echo \"CALIB_TPC_IDC = $CALIB_TPC_IDC\" 1>&2\n  echo \"CALIB_TPC_SAC = $CALIB_TPC_SAC\" 1>&2\n  echo \"CALIB_CPV_GAIN = $CALIB_CPV_GAIN\" 1>&2\n  echo \"CALIB_ZDC_TDC = $CALIB_ZDC_TDC\" 1>&2\n  echo \"CALIB_FT0_TIMEOFFSET = $CALIB_FT0_TIMEOFFSET\" 1>&2\n  echo \"CALIB_FT0_INTEGRATEDCURR = $CALIB_FT0_INTEGRATEDCURR\" 1>&2\n  echo \"CALIB_FV0_INTEGRATEDCURR = $CALIB_FV0_INTEGRATEDCURR\" 1>&2\n  echo \"CALIB_FDD_INTEGRATEDCURR = $CALIB_FDD_INTEGRATEDCURR\" 1>&2\n  echo \"Calibrations for asynchronous settings:\" 1>&2\n  echo \"CALIB_EMC_ASYNC_RECALIB = $CALIB_EMC_ASYNC_RECALIB\" 1>&2\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "b86b1730ba1fc18e5e9d82773bf4ed4955c7f5b5f0b1e02566045aeb02ba4b67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define specifications for the proxy used for TF-based outputs from BARREL\nif [[ -z ${CALIBDATASPEC_BARREL_TF:-} ]]; then\n  # RCT updater\n  if [[ $CALIB_RCT_UPDATER == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"calibRCT:CTF/DONE/0\"; fi\n  # primary vertex\n  if [[ $CALIB_PRIMVTX_MEANVTX == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"pvtx:GLO/PVTX/0\"; fi\n\n  # ITS\n  if [[ $CALIB_ITS_DEADMAP_TIME == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"itsChipStatus:ITS/CHIPSSTATUS/0\"; fi\n\n  # MFT\n  if [[ $CALIB_MFT_DEADMAP_TIME == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"mftChipStatus:MFT/CHIPSSTATUS/0\"; fi\n\n  # TOF\n  if [[ $CALIB_TOF_LHCPHASE == 1 ]] || [[ $CALIB_TOF_CHANNELOFFSETS == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"calibTOF:TOF/CALIBDATA/0\"; fi\n  if [[ $CALIB_TOF_DIAGNOSTICS == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"diagWords:TOF/DIAFREQ/0\"; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "97a758eed9911a5fac3decbf75e3c630dd03ae0f9a2c510fc934881addcc4602": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TPC\nif [[ $CALIB_TPC_SCDCALIB == 1 ]]; then\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"unbinnedTPCResiduals:GLO/UNBINNEDRES/0\"\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"trackReferences:GLO/TRKREFS/0\"\nfi\nif [[ $CALIB_TPC_SCDCALIB == 1 ]] && [[ ${CALIB_TPC_SCDCALIB_SENDTRKDATA:-} == \"1\" ]]; then\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"tpcInterpTrkData:GLO/TRKDATA/0\"\nfi\nif [[ $CALIB_TPC_SCDCALIB == 1 ]] && [[ ${CALIB_TPC_SCDCALIB_CTP_INPUT:-} == \"--enable-ctp\" ]]; then\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"lumi:CTP/LUMI/0\"\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"ctpdigi:CTP/DIGITS/0\"\nfi\nif [[ $CALIB_TPC_VDRIFTTGL == 1 ]]; then\n  add_semicolon_separated CALIBDATASPEC_BARREL_TF \"tpcvdtgl:GLO/TPCITS_VDTGL/0\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "47c26007f3ac499bbd60918c86829701aff939a4c759b0e2ca125255c7e13722": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TRD\n  if [[ $CALIB_TRD_VDRIFTEXB == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"angResHistoTRD:TRD/ANGRESHISTS/0\"; fi\n  if [[ $CALIB_TRD_GAIN == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"gainHistoTRD:TRD/GAINCALIBHISTS/0\"; fi\n  if [[ $CALIB_TRD_T0 == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_TF \"trdph:TRD/PULSEHEIGHT/0\"; fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "84da71939a0896340b698aec31a9c89f34b61122d0cb5917d4739a8ae07fae41": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define specification for proxy of BARREL's sporadic outputs\nif [[ -z ${CALIBDATASPEC_BARREL_SPORADIC:-} ]]; then\n  # TPC\n  if [[ $CALIB_TPC_RESPADGAIN == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_SPORADIC \"trackGainHistoTPC:TPC/TRACKGAINHISTOS/0\"; fi\n  if [[ $CALIB_TPC_TIMEGAIN == 1 ]]; then add_semicolon_separated CALIBDATASPEC_BARREL_SPORADIC \"tpcmips:TPC/MIPS/0\"; fi\n  # TOF\n  if [[ $CALIB_TOF_INTEGRATEDCURR == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_BARREL_SPORADIC \"integrCurrNTOF:TOF/ITOFCN/0\"\n    add_semicolon_separated CALIBDATASPEC_BARREL_SPORADIC \"integrCurrQTOF:TOF/ITOFCQ/0\"\n  fi\nfi\n\n# define specification for proxy of TPC IDCs - Side A\nif [[ -z ${CALIBDATASPEC_TPCIDC_A:-} ]]; then\n  # TPC\n  if [[ $CALIB_TPC_IDC == 1 ]]; then add_semicolon_separated CALIBDATASPEC_TPCIDC_A \"idcsgroupa:TPC/IDCGROUPA\"; fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "6e79c0a50649d7bae7223834721a51900db34e7fed5738a4fe4928b1aeaba6f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# specify proxy for TPC IDCs - Side C\nif [[ -z ${CALIBDATASPEC_TPCIDC_C:-} ]]; then\n  # TPC\n  if [[ $CALIB_TPC_IDC == 1 ]]; then add_semicolon_separated CALIBDATASPEC_TPCIDC_C \"idcsgroupc:TPC/IDCGROUPC\"; fi\nfi\n\n# specify proxy for TPC SAC\nif [[ -z ${CALIBDATASPEC_TPCSAC:-} ]]; then\n  # TPC\n  if [[ $CALIB_TPC_SAC == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_TPCSAC \"sacdec:TPC/DECODEDSAC/0\"\n    add_semicolon_separated CALIBDATASPEC_TPCSAC \"sacreftime:TPC/REFTIMESAC/0\"\n  fi\nfi\n\n# specify proxy for TF-based outputs from CALO\nif [[ -z ${CALIBDATASPEC_CALO_TF:-} ]]; then\n  # EMC\n  if [[ $CALIB_EMC_BADCHANNELCALIB == 1 ]] || [[ $CALIB_EMC_TIMECALIB == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"cellsEMC:EMC/CELLS/0\"\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"cellsTrgREMC:EMC/CELLSTRGR/0\"\n    if has_detector CTP; then\n      add_semicolon_separated CALIBDATASPEC_CALO_TF \"ctpdigi:CTP/DIGITS/0\"\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "cd55d4cace7f18d05d39db57ef0ff9aef6bc4442d9d99af3c0cd71d2de6a1d2d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $CALIB_PHS_ENERGYCALIB == 1 ]] || [[ $CALIB_PHS_TURNONCALIB == 1 ]] || [[ $CALIB_PHS_RUNBYRUNCALIB == 1 ]] || [[ $CALIB_PHS_L1PHASE == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"clsPHS:PHS/CLUSTERS/0\"\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"clTRPHS:PHS/CLUSTERTRIGREC/0\"\n  fi\n  if [[ $CALIB_PHS_ENERGYCALIB == 1 ]]; then add_semicolon_separated CALIBDATASPEC_CALO_TF \"cluelementsPHS:PHS/CLUELEMENTS/0\"; fi\n  if [[ $CALIB_PHS_BADMAPCALIB == 1 ]] || [[ $CALIB_PHS_TURNONCALIB == 1 ]]; then add_semicolon_separated CALIBDATASPEC_CALO_TF \"cellsPHS:PHS/CELLS/0\"; fi\n  if [[ $CALIB_PHS_TURNONCALIB == 1 ]]; then add_semicolon_separated CALIBDATASPEC_CALO_TF \"cellsTRPHS:PHS/CELLTRIGREC/0\"; fi\n\n  # CPV\n  if [[ $CALIB_CPV_GAIN == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_CALO_TF \"calibdCPV:CPV/CALIBDIGITS/0\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "81b6d6aa5f1523d2efeb7296bb535740c379032441a6bc93b26539037c75321a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define specification for proxy of TF-based outputs from forward detectors\nif [[ -z ${CALIBDATASPEC_FORWARD_TF:-} ]]; then\n  # FT0\n  if [[ $CALIB_FT0_TIMEOFFSET == 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_TF \"timeSpectraFT0:FT0/TIME_SPECTRA/0\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "a78c2bc73997a1091de6e4e0944156ef9ef061e10f3cc1865aeb0bb97c2b5cf9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# define specification for proxy of sporadic forward detector outputs\nif [[ -z ${CALIBDATASPEC_FORWARD_SPORADIC:-} ]]; then\n  # FIT\n  if [[ $CALIB_FT0_INTEGRATEDCURR -eq 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"integrCurrFT0:FT0/IFT0C/0\"\n  fi\n  if [[ $CALIB_FV0_INTEGRATEDCURR -eq 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"integrCurrFV0:FV0/IFV0C/0\"\n  fi\n  if [[ $CALIB_FDD_INTEGRATEDCURR -eq 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"integrCurrFDD:FDD/IFDDC/0\"\n  fi\n  # ZDC\n  if [[ $CALIB_ZDC_TDC -eq 1 ]]; then\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"tdcZDC:ZDC/TDCCALIBDATA/0\"\n    add_semicolon_separated CALIBDATASPEC_FORWARD_SPORADIC \"histoZDC:ZDC/TDC_1DH\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "6e5917487c86cfb73cebdc855359a584d427795e38cc76e23bcb74ddf3fab001": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0${GEN_TOPO_VERBOSE:-}\" == \"01\" ]]; then\n  # debug printing\n  echo CALIBDATASPEC_BARREL_TF = ${CALIBDATASPEC_BARREL_TF:-} 1>&2\n  echo CALIBDATASPEC_BARREL_SPORADIC = ${CALIBDATASPEC_BARREL_SPORADIC:-} 1>&2\n  echo CALIBDATASPEC_TPCIDC_A = ${CALIBDATASPEC_TPCIDC_A:-} 1>&2\n  echo CALIBDATASPEC_TPCIDC_C = ${CALIBDATASPEC_TPCIDC_C:-} 1>&2\n  echo CALIBDATASPEC_CALO_TF = ${CALIBDATASPEC_CALO_TF:-} 1>&2\n  echo CALIBDATASPEC_CALO_SPORADIC = ${CALIBDATASPEC_CALO_SPORADIC:-} 1>&2\n  echo CALIBDATASPEC_MUON_TF = ${CALIBDATASPEC_MUON_TF:-} 1>&2\n  echo CALIBDATASPEC_MUON_SPORADIC = ${CALIBDATASPEC_MUON_SPORADIC:-} 1>&2\n  echo CALIBDATASPEC_FORWARD_TF = ${CALIBDATASPEC_FORWARD_TF:-} 1>&2\n  echo CALIBDATASPEC_FORWARD_SPORADIC = ${CALIBDATASPEC_FORWARD_SPORADIC:-} 1>&2\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "4c915a4e1912f185d73a4c640fe20662928a9badf0acdb0b74b2d614fd96ec75": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Proxy Properties\nget_proxy_connection()\n{\n  if (( $# < 3 )); then\n    echo \"Number of parameters received: $#\"\n    echo \"Function ${FUNCNAME} requires a minimum of 3 parameters:\"\n    echo \"The first parameter should be the string ID of the proxy\"\n    echo \"The second parameter should specify the type of connection (input/output)\"\n    echo \"The third parameter should indicate whether the connection is sporadic or within a timeframe\"\n    exit 1\n  fi\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "468abd2453ea2030253d0aa4065920da6fe7c782763627520026b5f01472306f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# configuring the connection type\n  if [[ $2 == \"input\" ]]; then\n    local CONNECTION=\"method=bind\"\n    local NAMEPROXY=\"--proxy-name aggregator-proxy-$1\"\n    local NAMEPROXYCHANNEL=\n    if workflow_has_parameter CALIB_LOCAL_AGGREGATOR; then\n      CONNECTION+=\",type=pull\"\n    else\n      CONNECTION+=\",type=sub\"\n    fi\n  elif [[ $2 == \"output\" ]]; then\n    local CONNECTION=\"method=connect\"\n    local NAMEPROXY=\"--proxy-name calib-output-proxy-$1\"\n    local NAMEPROXYCHANNEL=\"--proxy-channel-name aggregator-proxy-$1\"\n    if workflow_has_parameter CALIB_LOCAL_AGGREGATOR; then\n      CONNECTION+=\",type=push\"\n    else\n      CONNECTION+=\",type=pub\"\n    fi\n  else\n    echo \"parameter 2 must be either 'input' or 'output'\"\n    exit 2\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "09cc9f6b016f0c6a9237e0812c1d2ea88cb11962198c535da768288cc664303d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the workflow includes the CALIB_LOCAL_AGGREGATOR parameter; then\n    CONNECTION+=\",transport=zeromq,address=ipc://${UDS_PREFIX}aggregator-shm-$1\"\nelse\n    CONNECTION+=\",transport=zeromq\"\nfi\n  local PROXY_CONN=\"$NAMEPROXY $NAMEPROXYCHANNEL --channel-config \\\"name=aggregator-proxy-$1,$CONNECTION,rateLogging=10\\\"\"\n  when EPNSYNCMODE is set to 1, append --network-interface ib0 to PROXY_CONN\n  if the second argument is \"input\" and TIMEFRAME_SHM_LIMIT is defined, add --timeframes-shm-limit $TIMEFRAME_SHM_LIMIT to PROXY_CONN\n  if the second argument is \"output\", then based on the third argument:\n    if it is \"timeframe\", add --environment DPL_OUTPUT_PROXY_ORDERED=1 to PROXY_CONN\n    if it is \"sporadic\", add --environment \"DPL_OUTPUT_PROXY_WHENANY=1 DPL_DONT_DROP_OLD_TIMESLICE=1\" --sporadic-inputs to PROXY_CONN\n  else, if the third argument is neither \"sporadic\" nor \"timeframe\", print \"invalid option $3, must be (sporadic|timeframe)\" to stderr and exit with status 1\n  if the second argument is \"input\" and the third argument is \"sporadic\", append --sporadic-outputs to PROXY_CONN",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "33033e7f24f27f29534b75d60d2e58e6ffc628e97577a41dea6e85ec01590a81": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $2 == \"input\" && $3 == \"sporadic\" ]]; then\n  PROXY_CONN+=\" --sporadic-outputs\"\nfi\nif [[ \"0${GEN_TOPO_VERBOSE:-}\" == \"01\" ]]; then\n  echo PROXY_CONN = $PROXY_CONN 1>&2\nfi\necho $PROXY_CONN\n}\nfi # setenv_calib.sh sourced",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv_calib.sh"
        }
    ],
    "cbde2f15d000bf467283db93d663a9f1bd254627613693295eab0da7758b3c41": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# to prevent sourcing this file multiple times\nif [[ -z ${SOURCE_GUARD_GETCOMMONARGS:-} ]]; then\nSOURCE_GUARD_GETCOMMONARGS=1\n\nif [[ -z $SEVERITY || -z $NUMAID || -z $SHMSIZE || -z $FILEWORKDIR || -z $EPNSYNCMODE || -z $INFOLOGGER_SEVERITY || -z $SHMTHROW || -z $NORATELOG ]]; then\n  echo \"Missing Configuration Environment Variables in getCommonArgs.sh\" 1>&2\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/getCommonArgs.sh"
        }
    ],
    "44b599cad4b521e37f5793ea04797e2f2be3b734a8492636186b422d129ac6ff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ARGS_ALL=\"--session ${OVERRIDE_SESSION:-default} --severity $SEVERITY --shm-segment-id ${O2JOBSHMID:-$NUMAID} --shm-segment-size $SHMSIZE ${ARGS_ALL_EXTRA:-} --early-forward-policy noraw\"\nARGS_ALL_CONFIG=\"keyval.input_dir=$FILEWORKDIR;keyval.output_dir=/dev/null;${ALL_EXTRA_CONFIG:-}\"\nif [[ $EPNSYNCMODE == 1 ]]; then\n  ARGS_ALL+=\" --infologger-severity $INFOLOGGER_SEVERITY\"\n  ARGS_ALL+=\" --monitoring-backend influxdb-unix:///tmp/telegraf.sock --resources-monitoring ${GEN_TOPO_RESOURCE_MONITORING:-15} ${GEN_TOPO_RESOURCE_MONITORING:+--dpl-stats-min-online-publishing-interval $GEN_TOPO_RESOURCE_MONITORING}\"\n  ARGS_ALL_CONFIG+=\"NameConf.mCCDBServer=$GEN_TOPO_EPN_CCDB_SERVER;\"\n  export DPL_CONDITION_BACKEND=$GEN_TOPO_EPN_CCDB_SERVER\n  [[ -z ${O2_DPL_DEPLOYMENT_MODE:-} ]] && O2_DPL_DEPLOYMENT_MODE=OnlineECS\nelif [[ \"${ENABLE_METRICS:-}\" != \"1\" ]]; then\n  ARGS_ALL+=\" --monitoring-backend no-op://\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/getCommonArgs.sh"
        }
    ],
    "fac3bb8d5e258050f64246921a7ff254846fbeaa7f7da8f4beee58f0c70377bc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "elif [[ \"${ENABLE_METRICS:-}\" != \"1\" ]]; then\n  ARGS_ALL+=\" --monitoring-backend no-op://\"\nfi\n[[ $SHMTHROW == 0 ]] && ARGS_ALL+=\" --bad-alloc-max-attempts 60 --bad-alloc-attempt-interval 1000\"\n[[ ! -z ${SHM_MANAGER_SHMID:-} && ${GEN_TOPO_CALIB_WORKFLOW:-} != 1 ]] && ARGS_ALL+=\" --no-cleanup --shm-no-cleanup on --shmid $SHM_MANAGER_SHMID\"\n[[ $NORATELOG == 1 ]] && ARGS_ALL+=\" --fairmq-rate-logging 0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/getCommonArgs.sh"
        }
    ],
    "e81055684d84790e27302386c1fd93f1ff882e4ae3ace06eb83aa53837da0aae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ ! -z ${O2_DPL_EXIT_TRANSITION_TIMEOUT_DEFAULT:-} ]] && ARGS_ALL+=\" --exit-transition-timeout $O2_DPL_EXIT_TRANSITION_TIMEOUT_DEFAULT\"\n[[ ! -z ${O2_DPL_PROCESSING_TRANSITION_TIMEOUT_DEFAULT:-} ]] && ARGS_ALL+=\" --data-processing-timeout $O2_DPL_PROCESSING_TRANSITION_TIMEOUT_DEFAULT\"\n\ntrue\n\nfi # getCommonArgs.sh sourced",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/getCommonArgs.sh"
        }
    ],
    "7a6ca88cc14943d6fcf5ec1b2efb34596c86f9b4ade4d5659e6403f624c5507b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# used to prevent sourcing this file more than once\nif [[ -z ${SOURCE_GUARD_SETENV:-} ]]; then\nSOURCE_GUARD_SETENV=1\n\nsource $O2DPG_ROOT/DATA/common/gen_topo_helper_functions.sh || { echo \"gen_topo_helper_functions.sh failed\" 1>&2 && exit 1; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "06f035607205cf3a602c0f60ff79fea4666c66036843bcaaf516919b7594716f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # Ensure adequate file handling and memory allocation\nif [[ ${SETENV_NO_ULIMIT:-} != \"1\" ]]; then\n  ulimit -S -n 4096 && ulimit -S -m unlimited && ulimit -S -v unlimited && [[ -z ${GPUTYPE:-} ]] || [[ ${GPUTYPE:-} == \"CPU\" ]] || ulimit -S -l unlimited\n  if [[ $? != 0 ]]; then\n    echo Error setting ulimits\n    exit 1\n  fi\nelse\n  ULIMIT_S=`ulimit -S -n`\n  ULIMIT_H=`ulimit -H -n`\n  ULIMIT_REQ=4000\n  [[ $ULIMIT_S == \"unlimited\" ]] && ULIMIT_S=$ULIMIT_REQ\n  [[ $ULIMIT_H == \"unlimited\" ]] && ULIMIT_H=$ULIMIT_REQ\n  if [[ $ULIMIT_H -gt $ULIMIT_S ]] && [[ $ULIMIT_S -lt $ULIMIT_REQ ]]; then\n    ulimit -S -n $(($ULIMIT_H > $ULIMIT_REQ ? $ULIMIT_REQ : $ULIMIT_H))\n  fi\n  ULIMIT_FINAL=`ulimit -n`\n  if [[ $ULIMIT_FINAL -lt $ULIMIT_REQ ]]; then\n    echo \"Could not raise 'ulimit -n' to $ULIMIT_REQ, running with $ULIMIT_FINAL\" 1>&2\n  fi\nfi\n\nLIST_OF_DETECTORS=\"ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,ZDC,FDD,HMP,FV0,TRD,MCH,CTP\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "946aceb75e99b15d725b99f996940835bb1382651a39524f2950add36071178b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    LIST_OF_DETECTORS=\"ITS,MFT,TPC,TOF,FT0,MID,EMC,PHS,CPV,ZDC,FDD,HMP,FV0,TRD,MCH,CTP\"\n\nLIST_OF_GLORECO=\"ITSTPC,TPCTRD,ITSTPCTRD,TPCTOF,ITSTPCTOF,MFTMCH,MCHMID,PRIMVTX,SECVTX,STRK,AOD\"\n\nLIST_OF_PID=\"FT0-TOF\"\n\n# Detectors employed in the workflow / activated parameters\n# Available choices: WORKFLOW_DETECTORS, WORKFLOW_DETECTORS_EXCLUDE, WORKFLOW_DETECTORS_QC, WORKFLOW_DETECTORS_EXCLUDE_QC, WORKFLOW_DETECTORS_CALIB, WORKFLOW_DETECTORS_EXCLUDE_CALIB, ...\nif [[ -z \"${WORKFLOW_DETECTORS+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS=$LIST_OF_DETECTORS; fi\nif [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE//,/ }; do\n    export WORKFLOW_DETECTORS=$(echo $WORKFLOW_DETECTORS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\"'$'\"//\" -e \"s/^$i\"'$'\"//\")\n  done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "b38da2a630e89effe9c16f0f639da6113e55a951728a2e463500f91ccc2c7843": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${WORKFLOW_DETECTORS_GPU+x}\" ]]; then export WORKFLOW_DETECTORS_GPU=\"TPC\"; fi\nif [[ -z \"${WORKFLOW_DETECTORS_QC+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_QC\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_QC=\"$WORKFLOW_DETECTORS,$LIST_OF_GLORECO,TOF_MATCH\"; fi\nif [[ -z \"${WORKFLOW_DETECTORS_CALIB+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_CALIB\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_CALIB=$WORKFLOW_DETECTORS; fi\nif [[ -z \"${WORKFLOW_DETECTORS_RECO+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_RECO\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_RECO=$WORKFLOW_DETECTORS; fi\nif [[ -z \"${WORKFLOW_DETECTORS_CTF+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_CTF\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_CTF=$WORKFLOW_DETECTORS; fi\nif [[ \"0${WORKFLOW_DETECTORS_FLP_PROCESSING:-}\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_FLP_PROCESSING=$WORKFLOW_DETECTORS; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "f64209d09ce38e4f8cd1d3e3ef44bf0590a2368246b23cc91ab12ac9ac9ed81a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER:-}\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER=$WORKFLOW_DETECTORS; else export WORKFLOW_DETECTORS_USE_GLOBAL_READER=${WORKFLOW_DETECTORS_USE_GLOBAL_READER:-}; fi\nif [[ -z \"${WORKFLOW_PARAMETERS:-}\" ]]; then export WORKFLOW_PARAMETERS=; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "0250732f73736e50ea4c2488c48ce723969d5a70809c5cc5674d005dea140a20": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE_QC:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE_QC//,/ }; do\n    export WORKFLOW_DETECTORS_QC=$(echo $WORKFLOW_DETECTORS_QC | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\\$//\" -e \"s/^$i\\$//\")\n  done\nfi\nif [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE_CALIB:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE_CALIB//,/ }; do\n    export WORKFLOW_DETECTORS_CALIB=$(echo $WORKFLOW_DETECTORS_CALIB | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\\$//\" -e \"s/^$i\\$//\")\n  done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "f18a63fed252328051295421cc2aa4f6bfe4245fdd02207ebbefec70f85853b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${TFLOOP:-}\" ]];         then export TFLOOP=0; fi                    # initiate looping over timeframes\nif [[ -z \"${NTIMEFRAMES:-}\" ]];    then export NTIMEFRAMES=-1; fi              # set maximum number of time frames to process, <=0: unlimited\nif [[ -z \"${CTFDICT_NTF:-}\" ]];    then export CTFDICT_NTF=100; fi             # automatically save CTF dictionary after every CTFDICT_NTF time frames (if > 0)\nif [[ -z \"${CTF_MAXDETEXT:-}\" ]];  then export CTF_MAXDETEXT=0; fi             # append detector names to CTF output directory names if their count is less than or equal to this value\nif [[ -z \"${TFDELAY:-}\" ]];        then export TFDELAY=0; fi                   # introduce a delay in seconds between publishing time frames\nif [[ -z \"${GPUTYPE:-}\" ]];        then export GPUTYPE=CPU; fi                 # specify the GPU tracking backend to use, options are CPU, CUDA, HIP, OCL, or OCL2\nif [[ -z \"${DDSHMSIZE:-}\" ]];      then export DDSHMSIZE=$(( 8 << 10 )); fi    # configure the size of shared memory for DD Input",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "53c5b1b42ede5dd23d6df5b9bf28f71fe62d780e94ccdd33093742199a9b31ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [[ -z \"${DDHDRSIZE:-}\" ]]; then export DDHDRSIZE=$(( 1 << 10 )); fi    # Size of shared memory for DD Input\nif [[ -z \"${GPUMEMSIZE:-}\" ]]; then export GPUMEMSIZE=$(( 14 << 30 )); fi  # Size of allocated GPU memory (if GPUTYPE != CPU)\nif [[ -z \"${HOSTMEMSIZE:-}\" ]]; then export HOSTMEMSIZE=0; fi              # Size of allocated host memory for GPU reconstruction (0 = default)\nif [[ -z \"${CREATECTFDICT:-}\" ]]; then export CREATECTFDICT=0; fi          # Create CTF dictionary\nif [[ -z \"${SAVECTF:-}\" ]]; then export SAVECTF=0; fi                      # Save the CTF to a ROOT file\nif [[ -z \"${SYNCMODE:-}\" ]]; then export SYNCMODE=0; fi                    # Run only reconstruction steps of the synchronous reconstruction\nif [[ -z \"${NUMAID:-}\" ]]; then export NUMAID=0; fi                        # SHM segment id to use for shipping data as well as set of GPUs to use (use 0 or 1 for 2 NUMA domains)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "dd11f0da9af2dbf791da5a892afc8a7a4b46b71b3123eab2c518365e420d40fd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${NUMAGPUIDS:-}\" ]]; then export NUMAGPUIDS=0; fi                    # Configure NUMA-aware GPU ID selection\nif [[ -z \"${CTFINPUT:-}\" ]]; then export CTFINPUT=0; fi                       # Use o2-ctf-reader for CTF input (incompatible with EXTINPUT=1 and RAWTFINPUT)\nif [[ -z \"${RAWTFINPUT:-}\" ]]; then export RAWTFINPUT=0; fi                   # Use o2-raw-tf-reader for raw TF input (incompatible with EXTINPUT=1 and CTFINPUT=1)\nif [[ -z \"${DIGITINPUT:-}\" ]]; then export DIGITINPUT=0; fi                   # Use digit files for input (incompatible with EXTINPUT, CTFINPUT, RAWTFINPUT)\nif [[ -z \"${NHBPERTF:-}\" ]]; then export NHBPERTF=128; fi                     # Set time frame length to 128 HBF\nif [[ -z \"${GLOBALDPLOPT:-}\" ]]; then export GLOBALDPLOPT=; fi                # Append global DPL workflow options at the end\nif [[ -z \"${SEVERITY:-}\" ]]; then export SEVERITY=\"info\"; fi                  # Set log verbosity to info",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "600a5e23a5f36a21072736b71799d6433cf404880f1df2928cca45f2ef3efc96": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${SEVERITY:-}\" ]]; then export SEVERITY=\"info\"; fi    # Set log verbosity\nif [[ -z \"${NORATELOG:-}\" ]]; then export NORATELOG=1; fi      # Turn off FairMQ Rate Logging\nif [[ -z \"${INRAWCHANNAME:-}\" ]]; then export INRAWCHANNAME=stfb-to-dpl; fi  # Define the raw channel name for DataDistribution communication\nif [[ -z \"${WORKFLOWMODE:-}\" ]]; then export WORKFLOWMODE=run; fi   # Set the workflow mode to run, print or dds\nif [[ -z \"${FILEWORKDIR:-}\" ]]; then export FILEWORKDIR=`pwd`; fi  # Specify the folder for finding grp, etc.\nif [[ -z \"${FILEWORKDIRRUN:-}\" ]]; then export FILEWORKDIRRUN=$FILEWORKDIR; fi  # Set the directory for run-related files (grp, collision context)\nif [[ -z \"${RAWINPUTDIR:-}\" ]]; then export RAWINPUTDIR=$FILEWORKDIR; fi  # Directory to find input files (raw, raw tf, ctf)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "5fee153966d66363ada1723909d66988c30f1988a167e651c7b8d8155813d616": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${EPNSYNCMODE:-}\" ]]; then export EPNSYNCMODE=0; fi                     # Should this workflow run on EPN for sync processing? It will activate InfoLogger, metrics, and fetching QC JSONs from Consul.\nif [[ -z \"${BEAMTYPE:-}\" ]]; then export BEAMTYPE=PbPb; fi                       # Define the beam type: PbPb, pp, pPb, pO, Op, OO, NeNe for cosmic rays, or technical.\nif [[ -z \"${RUNTYPE:-}\" ]]; then export RUNTYPE=Standalone; fi                   # Specify the run type: Standalone for local tests, or PHYSICS, COSMICS, TECHNICAL, or SYNTHETIC.\nif [[ -z \"${IS_SIMULATED_DATA:-}\" && $RUNTYPE == \"SYNTHETIC\" ]]; then export IS_SIMULATED_DATA=1; fi                              # For SYNTHETIC runs, always process simulated data.\nif [[ -z \"${IS_SIMULATED_DATA:-}\" && ( $RUNTYPE == \"PHYSICS\" || $RUNTYPE == \"COSMICS\" ) ]]; then export IS_SIMULATED_DATA=0; fi    # For PHYSICS and COSMICS runs, always process real data.\nif [[ -z \"${IS_SIMULATED_DATA:-}\" ]]; then export IS_SIMULATED_DATA=1; fi        # Default to processing simulated data.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "f8e77d4181e82f298f277a86fbbc97f86d2226ecf1c4923cc2184744b2b8f07a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${IS_TRIGGERED_DATA:-}\" ]]; then export IS_TRIGGERED_DATA=0; fi      # handling data processed due to TPC triggers instead of continuous operation\nif [[ -z \"${CTF_DIR:-}\" ]];           then CTF_DIR=$FILEWORKDIR; fi            # Directory for storing CTFs, defaults to $FILEWORKDIR\nif [[ -z \"${CALIB_DIR:-}\" ]];         then CALIB_DIR=\"/dev/null\"; fi           # Directory for storing calibration workflow outputs, defaults to /dev/null if skipped\nif [[ -z \"${EPN2EOS_METAFILES_DIR:-}\" ]]; then EPN2EOS_METAFILES_DIR=\"/dev/null\"; fi # Directory for storing metadata of epn2eos files, defaults to /dev/null if skipped\nif [[ -z \"${DCSCCDBSERVER:-}\" ]];  then export DCSCCDBSERVER=\"http://alio2-cr1-flp199-ib:8083\"; fi # server for transferring calibration data to DCS\nif [[ -z \"${DCSCCDBSERVER_PERS:-}\" ]]; then export DCSCCDBSERVER_PERS=\"http://alio2-cr1-flp199-ib:8084\"; fi # persistent server for transferring calibration data to DCS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "41a9d85186361044c7a469ba8f26b16acb8bd9a829c8e0d883591cded5d555b4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $BEAMTYPE == \"pO\" ]] || [[ $BEAMTYPE == \"Op\" ]] || [[ $BEAMTYPE == \"OO\" ]] || [[ $BEAMTYPE == \"NeNe\" ]] ; then\n  export LIGHTNUCLEI=1\nelse\n  export LIGHTNUCLEI=0\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "c8abc49ded22ad9b3fe01bf6e289be992bdb795a01191ed53b7b1e5525629f77": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $EPNSYNCMODE == 0 ]]; then\n  if [[ -z \"${SHMSIZE:-}\" ]];       then export SHMSIZE=$(( 8 << 30 )); fi    # Define the size of shared memory for messages\n  if [[ -z \"${NGPUS:-}\" ]];         then export NGPUS=1; fi                   # Specify the number of GPUs to use, with data distributed in a round-robin fashion\n  if [[ -z \"${EXTINPUT:-}\" ]];      then export EXTINPUT=0; fi                # Use a raw FMQ channel for input instead of running o2-raw-file-reader\n  if [[ -z \"${EPNPIPELINES:-}\" ]];  then export EPNPIPELINES=0; fi            # Set the default multiplicity of EPN pipelines\n  if [[ -z \"${SHMTHROW:-}\" ]];      then export SHMTHROW=1; fi                # Enable throwing an exception when SHM runs out\n  if [[ -z \"${EDJSONS_DIR:-}\" ]];   then export EDJSONS_DIR=\"jsons\"; fi       # Set the output directory for ED json files",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "911bf06490265234b5fe1b70f76a83c7da84e203cd2aeb49215f18ffcdf686be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [[ -z \"${WORKFLOW_DETECTORS_FLP_PROCESSING+x}\" ]]; then export WORKFLOW_DETECTORS_FLP_PROCESSING=\"\"; fi # By default, no FLP processing unless running the sync EPN workflow, e.g., a full system test will still execute full FLP processing\nelse # Default settings for running on EPN\n  if [[ \"0${GEN_TOPO_CALIB_WORKFLOW:-}\" != \"01\" ]]; then\n    if [[ -z \"${GEN_TOPO_CALIB_NCORES:-}\" ]]; then\n      if [[ -z \"${SHMSIZE:-}\" ]]; then export SHMSIZE=$(( 32 << 30 )); fi\n    else\n      if [[ -z \"${SHMSIZE:-}\" ]]; then export SHMSIZE=$(( ($GEN_TOPO_CALIB_NCORES * 2) << 30 )); fi\n    fi\n  else\n    if [[ -z \"${SHMSIZE:-}\" ]]; then export SHMSIZE=$(( 112 << 30 )); fi\n  fi\n  if [[ -z \"${NGPUS:-}\" ]]; then export NGPUS=4; fi\n  if [[ -z \"${EXTINPUT:-}\" ]]; then export EXTINPUT=1; fi\n  if [[ -z \"${EPNPIPELINES:-}\" ]]; then export EPNPIPELINES=1; fi\n  if [[ -z \"${SHMTHROW:-}\" ]]; then export SHMTHROW=0; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "90207445726d336a006fd79007dc9ca914beeabbe1e553417074a6153d3fdea3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${SHMTHROW:-}\" ]]; then export SHMTHROW=0; fi\nif [[ -z \"${TIMEFRAME_SHM_LIMIT:-}\" ]]; then export TIMEFRAME_SHM_LIMIT=$(( $SHMSIZE / 2 )); fi\nif [[ -z \"${EDJSONS_DIR:-}\" ]]; then export EDJSONS_DIR=\"/scratch/services/ed/jsons_${RUNTYPE}\"; fi\nif [[ -z \"${WORKFLOW_DETECTORS_FLP_PROCESSING+x}\" ]]; then export WORKFLOW_DETECTORS_FLP_PROCESSING=\"CTP\"; fi # The current default in synchronous processing is that FLP processing is enabled only for TOF\nif [[ -z \"${GEN_TOPO_AUTOSCALE_PROCESSES:-}\" ]]; then export GEN_TOPO_AUTOSCALE_PROCESSES=1; fi # On the EPN, it is important to ensure the node is fully utilized\nfi\n# Additional settings for running on the EPN\nif [[ -z \"${INFOLOGGER_SEVERITY:-}\" ]]; then export INFOLOGGER_SEVERITY=\"important\"; fi\nif [[ -z \"${MULTIPLICITY_FACTOR_RAWDECODERS:-}\" ]]; then export MULTIPLICITY_FACTOR_RAWDECODERS=1; fi\nif [[ -z \"${MULTIPLICITY_FACTOR_CTFENCODERS:-}\" ]]; then export MULTIPLICITY_FACTOR_CTFENCODERS=1; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "c64941a4d4c2dfa4414ff7c5aeb17094bf36df433052c6542b9e86154c525420": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${MULTIPLICITY_FACTOR_REST:-}\" ]]; then export MULTIPLICITY_FACTOR_REST=1; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "4ea02202f949a5bf9114cc10e29fab9cac0cfe91e7a2197e0ea443ec28aa7b5b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ -z \"${SEVERITY_TPC+x}\" ]] && SEVERITY_TPC=\"info\" # sets the severity level for the tpc workflow if not already defined\n[[ -z \"${DISABLE_MC+x}\" ]] && DISABLE_MC=\"--disable-mc\"\n[[ -z \"${DISABLE_ROOT_OUTPUT+x}\" ]] && DISABLE_ROOT_OUTPUT=\"--disable-root-output\"\n\nif [[ `uname` == Darwin ]]; then UDS_PREFIX=\"\"; else UDS_PREFIX=\"@\"; fi\n\n# Environmental variables necessary for workflow setup\nif [[ $SYNCMODE == 1 ]]; then\n  if [[ -z \"${WORKFLOW_DETECTORS_MATCHING+x}\" ]]; then WORKFLOW_DETECTORS_MATCHING=\"ITSTPC,ITSTPCTRD,ITSTPCTOF,ITSTPCTRDTOF,PRIMVTX,SECVTX\"; fi # Defines detector matchings for sync mode if not set\nelse\n  if [[ -z \"${WORKFLOW_DETECTORS_MATCHING+x}\" ]]; then WORKFLOW_DETECTORS_MATCHING=\"ALL\"; fi # Sets all matchings/vertexing for async mode if not defined\nfi\n\nLIST_OF_ASYNC_RECO_STEPS=\"MID MCH MFT FDD FV0 ZDC HMP\"\n\nDISABLE_DIGIT_ROOT_INPUT=\"--disable-root-input\"\nDISABLE_ROOT_INPUT=\"--disable-root-input\"\n: ${DISABLE_DIGIT_CLUSTER_INPUT=\"--clusters-from-upstream\"}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "0cbca9bed1b261c6a80b3f15912cfa7b6322562bcaf971baa0f1d5c038118550": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Special detector-related settings\nif [[ -z \"${TPC_CORR_SCALING:-}\" ]]; then # TPC correction map lumi scaling options, any combination of --lumi-type <0,1,2> --corrmap-lumi-mode <0,1> and TPCCorrMap... configurable parameters\n TPC_CORR_SCALING=\n if [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" ]] && has_detector CTP; then TPC_CORR_SCALING+=\"--lumi-type 1\"; fi\n if [[ $BEAMTYPE == \"PbPb\" ]] && has_detector CTP; then TPC_CORR_SCALING+=\"--lumi-type 1 TPCCorrMap.lumiInstFactor=2.414\"; fi\n if [[ $BEAMTYPE == \"cosmic\" ]]; then TPC_CORR_SCALING=\" TPCCorrMap.lumiMean=-1;\"; fi # for cosmic runs, all corrections are disabled\n export TPC_CORR_SCALING=$TPC_CORR_SCALING\nfi\n\nMID_FEEID_MAP=\"$FILEWORKDIR/mid-feeId_mapper.txt\"\n\nITSMFT_STROBES=\"\"\n[[ ! -z ${ITS_STROBE:-} ]] && ITSMFT_STROBES+=\"ITSAlpideParam.roFrameLengthInBC=$ITS_STROBE;\"\n[[ ! -z ${MFT_STROBE:-} ]] && ITSMFT_STROBES+=\"MFTAlpideParam.roFrameLengthInBC=$MFT_STROBE;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "e026f09c91f5f933e884b2ae5e6785405d344dedf24f6f0eb3b5e5880de2681f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Define active reconstruction steps (default configurations based on SYNCMODE)\nfor i in `echo $LIST_OF_GLORECO | sed \"s/,/ /g\"`; do\n  if has_processing_step MATCH_$i; then\n    add_comma_separated WORKFLOW_DETECTORS_MATCHING $i # Enable extra matchings specified in WORKFLOW_EXTRA_PROCESSING_STEPS\n  fi\ndone\nif [[ $SYNCMODE -eq 1 ]]; then # Include default steps for synchronous mode\n  add_comma_separated WORKFLOW_EXTRA_PROCESSING_STEPS ENTROPY_ENCODER\nelse # Include default steps for asynchronous mode\n  for i in $LIST_OF_ASYNC_RECO_STEPS; do\n    if has_detector_reco $i; then\n      add_comma_separated WORKFLOW_EXTRA_PROCESSING_STEPS ${i}_RECO\n    fi\n  done\n  add_comma_separated WORKFLOW_EXTRA_PROCESSING_STEPS TPC_DEDX\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "f8ed8b56f306e07abb08cd447af2d6d3128ebb8270eea471a7ded8e07189962e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Assemble matching sources\nTRD_SOURCES=\nTOF_SOURCES=\nHMP_SOURCES=\nTRACK_SOURCES=\nif ITS and TPC are detectors for reconstruction, and detector matching is required for ITS-TPC, then add \"ITS-TPC\" to TRACK_SOURCES.\nif TPC and TRD are detectors for reconstruction, and detector matching is needed for TPC-TRD, then add TPC to TRD_SOURCES and TPC-TRD to TRACK_SOURCES.\nif ITS, TPC, and TRD are detectors for reconstruction, and matching is required for both ITS-TPC and ITSTPCTRD, then add ITS-TPC to TRD_SOURCES and ITS-TPC-TRD to TRACK_SOURCES.\nif TPC and TOF are detectors for reconstruction, and matching is needed for TPCTOF, then add TPC to TOF_SOURCES and TPC-TOF to TRACK_SOURCES.\nif ITS, TPC, and TOF are detectors for reconstruction, and matching is required for both ITS-TPC and ITSTPCTOF, then add ITS-TPC to TOF_SOURCES and ITS-TPC-TOF to TRACK_SOURCES.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "87370d3bd894fad49809bb51f1a7fb248a0981646b6366e96f7085eee48cffbd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detectors_reco TPC TRD TOF && has_detector_matching TPCTRD && has_detector_matching TPCTRDTOF && { add_comma_separated TOF_SOURCES TPC-TRD; add_comma_separated TRACK_SOURCES \"TPC-TRD-TOF\"; }\nhas_detectors_reco ITS TPC TRD TOF && has_detector_matching ITSTPC && has_detector_matching ITSTPCTRD && has_detector_matching ITSTPCTRDTOF && { add_comma_separated TOF_SOURCES ITS-TPC-TRD; add_comma_separated TRACK_SOURCES \"ITS-TPC-TRD-TOF\"; }\nhas_detectors_reco HMP ITS TPC && has_detector_matching ITSTPC && add_comma_separated HMP_SOURCES \"ITS-TPC\"\nhas_detectors_reco HMP ITS TPC TRD && has_detector_matching ITSTPC && has_detector_matching ITSTPCTRD && add_comma_separated HMP_SOURCES \"ITS-TPC-TRD\"\nhas_detectors_reco HMP ITS TPC TOF && has_detector_matching ITSTPC && has_detector_matching ITSTPCTOF && add_comma_separated HMP_SOURCES \"ITS-TPC-TOF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "df703392421617e8d97901ecaee495607512ce006175c00fa592b0b37e678ecc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    has_detectors_reco HMP ITS TPC TRD TOF && has_detector_matching ITSTPC && has_detector_matching ITSTPCTRD && has_detector_matching ITSTPCTRDTOF && add_comma_separated HMP_SOURCES \"ITS, TPC, TRD, TOF\"\nhas_detectors_reco HMP TPC TRD && has_detector_matching TPCTRD && add_comma_separated HMP_SOURCES \"TPC, TRD\"\nhas_detectors_reco HMP TPC TOF && has_detector_matching TPCTOF && add_comma_separated HMP_SOURCES \"TPC, TOF\"\nhas_detectors_reco HMP TPC TRD TOF && has_detector_matching TPCTRD && has_detector_matching TPCTRDTOF && add_comma_separated HMP_SOURCES \"TPC, TRD, TOF\"\nhas_detectors_reco MFT MCH && has_detector_matching MFTMCH && add_comma_separated TRACK_SOURCES \"MFT, MCH\"\nhas_detectors_reco MCH MID && has_detector_matching MCHMID && add_comma_separated TRACK_SOURCES \"MCH, MID\"\nfor det in `echo $LIST_OF_DETECTORS | sed \"s/,/ /g\"`; do\n  if [[ $LIST_OF_ASYNC_RECO_STEPS =~ (^| )${det}( |$) ]]; then\n    has_detector ${det} && has_processing_step ${det}_RECO && add_comma_separated TRACK_SOURCES \"$det\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "d1a21eed8eb569bbf8e00def0e0687846636816cd2e7a59a3c11e48e6aa65e66": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "else\n  has_detector_reco $det && add_comma_separated TRACK_SOURCES \"$det\"\nfi\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "c22480ce68e4b0f3c23e28f2d6cbe82ac7362268097cd50d3110ededb9a08671": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS:-}\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$TRACK_SOURCES;\nelif [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS:-}\" == \"0ALLSINGLE\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$WORKFLOW_DETECTORS;\nelse export WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=${WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS:-}; fi\nif [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS:-}\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$TRACK_SOURCES;\nelif [[ \"0${WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS:-}\" == \"0ALLSINGLE\" ]]; then export WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$WORKFLOW_DETECTORS;\nelse export WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=${WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS:-}; fi\nif [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS//,/ }; do",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "0d931564c448f2915043857623991f868cf158e2fc1626724b797d41412c2292": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for i in ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS//,/ }; do\n  export WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$(echo $WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\\$//\" -e \"s/^$i\\$//\")\ndone\nif [[ ! -z ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_CLUSTERS:-} ]]; then\n  for i in ${WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_CLUSTERS//,/ }; do\n    export WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$(echo $WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\\$//\" -e \"s/^$i\\$//\")\n  done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "d7befb83982bf45c8f58588cf8e647713fe60fe642c8be251df44345ebc45188": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": ": ${VERTEXING_SOURCES:=\"$TRACK_SOURCES\"}\n: ${VERTEX_TRACK_MATCHING_SOURCES:=\"$TRACK_SOURCES\"}\nif [[ -n $VERTEXING_SOURCES ]]; then PVERTEX_CONFIG+=\" --vertexing-sources $VERTEXING_SOURCES\"; fi\nif [[ -n $VERTEX_TRACK_MATCHING_SOURCES ]]; then PVERTEX_CONFIG+=\" --vertex-track-matching-sources $VERTEX_TRACK_MATCHING_SOURCES\"; fi\n\nif [[ -z ${SVERTEXING_SOURCES:-} ]]; then\n  SVERTEXING_SOURCES=\"$VERTEXING_SOURCES\"\nelif [[ \"${SVERTEXING_SOURCES^^}\" == \"NONE\" ]]; then\n  SVERTEXING_SOURCES=\nfi\n\n# this option necessitates precise timing calibration between detectors; currently, it is disabled\n#has_detector_reco FT0 && PVERTEX_CONFIG+=\" --validate-with-ft0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "6c55b072eebdfd6c8d62d1de3d86ba5455b7f4d7873e1433ed74d4a15e7e0d4a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Ensuring proper environment variable settings\nif the sum of $EXTINPUT, $CTFINPUT, $RAWTFINPUT, and $DIGITINPUT is at least 2, then\n  echo At least two of EXTINPUT, CTFINPUT, RAWTFINPUT, or DIGITINPUT cannot be set simultaneously\n  exit 1\nfi\nif SAVECTF is set to 1 and CTFINPUT is also set to 1, then\n  echo SAVECTF and CTFINPUT are mutually exclusive options\n  exit 1\nfi\nif SYNCMODE is set to 1 and CTFINPUT is also set to 1, then\n  echo SYNCMODE and CTFINPUT are incompatible options\n  exit 1\nfi\nif WORKFLOWMODE is neither \"run\", \"print\", \"dds\", nor \"dump\", then\n  echo Invalid value for WORKFLOWMODE\n  exit 1\nfi\n\n\nfi # setenv.sh sourced",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/setenv.sh"
        }
    ],
    "0b18ceca986c5f74b7441b2570aca93fa80abe870eed739a8b485eb6f1e73d9f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nif [ \"0$O2_ROOT\" == \"0\" ]; then\n    echo O2 environment not loaded 1>&2\n    exit 1\nfi\n\nsource $O2_ROOT/prodtests/full-system-test/aggregator-workflow.sh || { echo \"aggregator-workflow.sh failed\" 1>&2 && exit 1; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/aggregator-workflow.sh"
        }
    ],
    "1b421889c3aabc3269006a0a3f21f2e32471becf7a57a2d6830f6fc3d2df7893": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nif [ \"0$O2_ROOT\" == \"0\" ]; then\n    echo O2 environment not loaded 1>&2\n    exit 1\nfi\n\nsource $O2_ROOT/prodtests/full-system-test/calib-workflow.sh || { echo \"calib-workflow.sh failed\" 1>&2 && exit 1; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib-workflow.sh"
        }
    ],
    "c0d80562aeb03c256ee08e0b3338b03f770254b2e96cb7864280194b4ab5951f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# to prevent sourcing this file multiple times\nif [[ -z ${SOURCE_GUARD_FUNCTIONS:-} ]]; then\nSOURCE_GUARD_FUNCTIONS=1\n\ncheck_detector()\n{\n  [[ $WORKFLOW_DETECTORS =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_global_reader_clusters()\n{\n  [[ $WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_global_reader_tracks()\n{\n  [[ $WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_global_reader()\n{\n  check_global_reader_tracks $1 || check_global_reader_clusters $1\n}\n\ncheck_calib()\n{\n  check_detector $1 && [[ $WORKFLOW_DETECTORS_CALIB =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_reco()\n{\n  check_detector $1 && [[ $WORKFLOW_DETECTORS_RECO =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_ctf()\n{\n  check_detector $1 && [[ $WORKFLOW_DETECTORS_CTF =~ (^|,)\"$1\"(,|$) ]]\n}\n\ncheck_flp_processing()\n{\n  check_detector $1 && [[ $WORKFLOW_DETECTORS_FLP_PROCESSING =~ (^|,)\"$1\"(,|$) ]]\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "c65990e0cc205506d7239b9fb852ae2dacaa1adfd7b03d286e0977cb0da97a00": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detector_matching()\n{\n  [[ $WORKFLOW_DETECTORS_MATCHING =~ (^|,)\"ALL\"(,|$) ]] || [[ $WORKFLOW_DETECTORS_MATCHING =~ (^|,)\"$1\"(,|$) ]]\n}\n\nhas_detector_gpu()\n{\n  has_detector $1 && [[ $WORKFLOW_DETECTORS_GPU =~ (^|,)\"$1\"(,|$) ]]\n}\n\nhas_secvtx_source()\n{\n  [[ $SVERTEXING_SOURCES =~ (^|,)\"ALL\"(,|$) ]] || [[ $SVERTEXING_SOURCES =~ (^|,)\"$1\"(,|$) ]]\n}\n\nhas_detector_qc()\n{\n  has_detector $1 && [[ $WORKFLOW_DETECTORS_QC =~ (^|,)\"$1\"(,|$) ]]\n}\n\nhas_matching_qc()\n{\n  has_detector_matching $1 && [[ $WORKFLOW_DETECTORS_QC =~ (^|,)\"$1\"(,|$) ]]\n}\n\nhas_pid_qc()\n{\n    PIDDETECTORS=$(echo $1 | tr \"-\" \"\\n\")\n    for PIDDETECTOR in $PIDDETECTORS; do\n        if [[ $PIDDETECTOR == \"TOF\" ]]; then\n            (! has_detectors_reco ITS TPC TOF || ! has_detector_matching ITSTPCTOF) && return 1\n        fi\n        ! has_detector_qc $PIDDETECTOR && return 1\n    done\n    return 0\n}\n\nhas_track_source()\n{\n  [[ $TRACK_SOURCES =~ (^|,)\"$1\"(,|$) ]]\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "757e5614df66be5e1f075b473b8d84b468dd1e28c86552b320880289ee651e58": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    has_track_source()\n    {\n      [[ $TRACK_SOURCES =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_tof_matching_source()\n    {\n      [[ $TOF_SOURCES =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    workflow_has_parameter()\n    {\n      [[ $WORKFLOW_PARAMETERS =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    has_processing_step()\n    {\n      [[ ${WORKFLOW_EXTRA_PROCESSING_STEPS:-} =~ (^|,)\"$1\"(,|$) ]]\n    }\n\n    _check_multiple()\n    {\n      CHECKER=$1\n      shift\n      while true; do\n        if [[ -z ${1:-} ]]; then return 0; fi\n        if ! $CHECKER $1; then return 1; fi\n        shift\n      done\n    }\n\n    has_detectors()\n    {\n      _check_multiple has_detector \"$@\"\n    }\n\n    has_detectors_qc()\n    {\n      _check_multiple has_detector_qc \"$@\"\n    }\n\n    has_detectors_calib()\n    {\n      _check_multiple has_detector_calib \"$@\"\n    }\n\n    has_detectors_reco()\n    {\n      _check_multiple has_detector_reco \"$@\"\n    }\n\n    has_detectors_ctf()\n    {\n      _check_multiple has_detector_ctf \"$@\"\n    }\n\n    has_detectors_flp_processing()\n    {\n      _check_multiple has_detector_flp_processing \"$@\"\n    }\n\n    has_detectors_gpu()\n    {\n      _check_multiple has_detector_gpu \"$@\"\n    }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "4a18aa7e047279ad8c6bfd343624215f64f60048b8c1ad941f3484dd2aaa8495": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    has_detectors_gpu()\n    {\n      _check_multiple has_detector_gpu \"$@\"\n    }\n\n    workflow_has_parameters()\n    {\n      _check_multiple workflow_has_parameter \"$@\"\n    }\n\n    add_comma_separated()\n    {\n      if (( $# < 2 )); then\n        echo \"$# parameters received\"\n        echo \"Function name: ${FUNCNAME} requires at least 2 parameters:\"\n        echo \"it concatenates the string from the first parameter with the subsequent ones, creating a comma-separated string. $# parameters received\"\n        exit 1\n      fi\n\n      for ((i = 2; i <= $#; i++ )); do\n        if [[ -z ${!1:-} ]]; then\n          eval $1+=\"${!i}\"\n        else\n          eval $1+=\",${!i}\"\n        fi\n      done\n    }\n\n    add_semicolon_separated()\n    {\n      if (( $# < 2 )); then\n        echo \"$# parameters received\"\n        echo \"Function name: ${FUNCNAME} expects at least 2 parameters:\"\n        echo \"it concatenates the string in the first parameter with the following ones, creating a semicolon-separated string. $# parameters received\"\n        exit 1\n      fi\n\n      for ((i = 2; i <= $#; i++ )); do\n        if [[ -z ${!1:-} ]]; then\n          eval $1+=\"${!i}\"\n        else\n          eval $1+=\";${!i}\"\n        fi\n      done\n    }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "5ac68d090274ff2d95bde3322de4b2ff0a5025743c370277c2d8d1da85cea473": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for ((i = 2; i <= $#; i++ )); do\n    if [[ -z ${!1:-} ]]; then\n      eval $1+=\"${!i}\"\n    else\n      eval $1+=\"\\;${!i}\"\n    fi\n  done\n}\n\nconcatenate_with_pipe()\n{\n  if (( $# < 2 )); then\n    echo \"$# parameters received\"\n    echo \"Function name: ${FUNCNAME} expects at least 2 parameters:\"\n    echo \"it concatenates the string in the first parameter with the subsequent ones, forming a pipe-separated string. $# parameters received\"\n    exit 1\n  fi\n\n  for ((i = 2; i <= $#; i++ )); do\n    eval $1+=\"\\|${!i}\"\n  done\n}\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Helper functions for multiplicities",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "ab43a25ab61b585a249db1726f30995412bd9896ae056a5fcfdf292b452aaec0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    get_N() # USAGE: get_N [processor-name] [DETECTOR_NAME] [RAW|CTF|REST] [threads, for process scaling. 0 = no scaling] [optional variable name [FOO] with default, default = 1]\n{\n  local FACTOR_NAME=\"N_F_$3\"\n  local DETECTOR_NAME=\"MULTIPLICITY_FACTOR_DETECTOR_$2\"\n  local PROCESS_NAME=\"MULTIPLICITY_PROCESS_${1//-/_}\"\n  local PROCESS_FACTOR_NAME=\"MULTIPLICITY_FACTOR_PROCESS_${1//-/_}\"\n  local DEFAULT_NAME=\"N_${5:-}\"\n  local MULT=${!PROCESS_NAME:-$((${!FACTOR_NAME} * ${!DETECTOR_NAME:-1} * ${!PROCESS_FACTOR_NAME:-1} * ${!DEFAULT_NAME:-1}))}\n  [[ ! -z ${EPN_GLOBAL_SCALING:-} && $1 != \"gpu-reconstruction\" ]] && MULT=$(($MULT * $EPN_GLOBAL_SCALING))\n  if [[ ${GEN_TOPO_AUTOSCALE_PROCESSES_GLOBAL_WORKFLOW:-} == 1 && -z ${!PROCESS_NAME:-} && ${GEN_TOPO_AUTOSCALE_PROCESSES:-} == 1 && ($WORKFLOWMODE != \"print\" || ${GEN_TOPO_RUN_HOME_TEST:-} == 1) && ${4:-} != 0 ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "9bc9e5994f087b9388b04b30bea76acf71af4dd8d623def972e1ec67f4263dfd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo $1:\\$\\(\\(\\($MULT*\\$AUTOSCALE_PROCESS_FACTOR/100\\) \\< 16 ? \\($MULT*\\$AUTOSCALE_PROCESS_FACTOR/100\\) : 16\\)\\)\n  else\n    echo $1:$MULT\n  fi\n}\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "725a985924e1e48400a4080374419bdb465bbabda47ef93f195204348a4aeb9a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    math_max()\n    {\n      echo $(($1 > $2 ? $1 : $2))\n    }\n    math_min()\n    {\n      echo $(($1 < $2 ? $1 : $2))\n    }\n\n    # ---------------------------------------------------------------------------------------------------------------------\n    # Helper function to verify if root output is required for a specific process\n\n    needs_root_output()\n    {\n      local NAME_PROC_ENABLE_ROOT_OUTPUT=\"ENABLE_ROOT_OUTPUT_${1//-/_}\"\n      [[ ! -z ${!NAME_PROC_ENABLE_ROOT_OUTPUT+x} ]]\n    }\n\n    # ---------------------------------------------------------------------------------------------------------------------\n    # Helper function to include binaries in the workflow, incorporating both default and custom arguments",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "9c7e4eb0c82acba6ecbafd0fd81962606a2a8630160359167ba0d647c420ef90": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    add_W() # Add binary to workflow command USAGE: add_W [BINARY] [COMMAND_LINE_OPTIONS] [CONFIG_KEY_VALUES] [Add ARGS_ALL_CONFIG, optional, default = 1]\n{\n  local NAME_PROC_ARGS=\"ARGS_EXTRA_PROCESS_${1//-/_}\"\n  local NAME_PROC_CONFIG=\"CONFIG_EXTRA_PROCESS_${1//-/_}\"\n  local KEY_VALUES=\n  [[ \"0${4:-}\" != \"00\" ]] && KEY_VALUES+=\"$ARGS_ALL_CONFIG;\"\n  [[ ! -z \"${3:-}\" ]] && KEY_VALUES+=\"$3;\"\n  [[ ! -z ${!NAME_PROC_CONFIG:-} ]] && KEY_VALUES+=\"${!NAME_PROC_CONFIG};\"\n  [[ ! -z \"$KEY_VALUES\" ]] && KEY_VALUES=\"--configKeyValues \\\"$KEY_VALUES\\\"\"\n  local WFADD=\"$1 $ARGS_ALL ${2:-} ${!NAME_PROC_ARGS:-} $KEY_VALUES | \"\n  local NAME_PROC_ENABLE_ROOT_OUTPUT=\"ENABLE_ROOT_OUTPUT_${1//-/_}\"\n  if [[ ! -z $DISABLE_ROOT_OUTPUT ]] && needs_root_output $1 ; then\n      WFADD=${WFADD//$DISABLE_ROOT_OUTPUT/}\n  fi\n  WORKFLOW+=$WFADD\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "14d730e96237126dab824f1be84e30f51eea5ce5cd7ee455e6e9b761722971fd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ${EPNSYNCMODE:-0} == 1 ]]; then\n  if [[ \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n    GEN_TOPO_QC_CONSUL_SERVER=ali-staging.cern.ch\n  else\n    GEN_TOPO_QC_CONSUL_SERVER=alio2-cr1-hv-con01.cern.ch\n  fi\n  GEN_TOPO_QC_APRICOT_SERVER=$(curl -s \"http://${GEN_TOPO_QC_CONSUL_SERVER}:8500/v1/kv/o2/runtime/aliecs/vars/apricot_endpoint?raw\")\nfi\n\nadd_QC_from_consul()\n{\n  [[ ${EPNSYNCMODE:-0} == 1 ]] || { echo \"Error fetching QC JSON $1: consul server only set for EPNSYNCMODE == 1\" 1>&2 && exit 1; }\n  if [[ ! -z ${GEN_TOPO_QC_JSON_FILE:-} ]]; then\n    curl -s -o $GEN_TOPO_QC_JSON_FILE \"http://${GEN_TOPO_QC_CONSUL_SERVER}:8500/v1/kv${1}?raw\"\n    if [[ $? != 0 ]]; then\n      echo \"Error fetching QC JSON $1 (1)\" 1>&2\n      exit 1\n    fi\n    QC_CONFIG_ARG=\"json://${GEN_TOPO_QC_JSON_FILE}\"\n  else\n    QC_CONFIG_ARG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500$1\"\n  fi\n  add_W o2-qc \"--config $QC_CONFIG_ARG $2\"\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "3ae1dafbd43e9e415fb519a42755f8172cbb89dfd75f9de527b8106088d947cb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "add_QC_from_apricot()\n{\n  [[ ${EPNSYNCMODE:-0} == 1 ]] || { echo \"Error fetching QC JSON $1: apricot server only set for EPNSYNCMODE == 1\" 1>&2 && exit 1; }\n  if [[ ! -z ${GEN_TOPO_QC_JSON_FILE:-} ]]; then\n    if [[ ${1} =~ \"?\" ]]; then\n      curl -s -o $GEN_TOPO_QC_JSON_FILE \"${GEN_TOPO_QC_APRICOT_SERVER}/${1}&process=true\"\n    else\n      curl -s -o $GEN_TOPO_QC_JSON_FILE \"${GEN_TOPO_QC_APRICOT_SERVER}/${1}?process=true\"\n    fi\n    if [[ $? != 0 ]]; then\n      echo \"Error fetching QC JSON $1 (2)\" 1>&2\n      exit 1\n    fi\n    QC_CONFIG_ARG=\"json://${GEN_TOPO_QC_JSON_FILE}\"\n  else\n    QC_CONFIG_ARG=\"apricot://${GEN_TOPO_QC_APRICOT_SERVER}$1\"\n  fi\n  add_W o2-qc \"--config $QC_CONFIG_ARG $2\"\n}\n\nfi # functions.sh sourced",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/gen_topo_helper_functions.sh"
        }
    ],
    "78eda92e70116c47f3d490fc49defa56b86e77ca5b9efff0ad8997ed21d44383": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nif [[ -z \"$WORKFLOW\" || -z \"$GEN_TOPO_MYDIR\" ]]; then\n  echo This script needs to be executed from dpl-workflow.sh and not on its own 1>&2\n  exit 1\nfi\n\nsource $GEN_TOPO_MYDIR/gen_topo_helper_functions.sh || { echo \"gen_topo_helper_functions.sh failed\" 1>&2 && exit 1; }\nsource $GEN_TOPO_MYDIR/setenv.sh || { echo \"setenv.sh failed\" 1>&2 && exit 1; }\n\nif [[ ! -z ${GEN_TOPO_QC_JSON_FILE:-} ]]; then\n  exec 101>$GEN_TOPO_QC_JSON_FILE.lock || exit 1\n  flock 101 || exit 1\nfi\n\nFETCHTMPDIR=$(mktemp -d -t GEN_TOPO_DOWNLOAD_JSON-XXXXXX)\n\nJSON_FILES=\nOUTPUT_SUFFIX=",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "b7ee567d72408ce4c4f5b469b69520462b734acf645fd06a29d7d2fcf3468c8f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "add_QC_JSON() {\n  if [[ ${2} =~ ^consul://.* ]]; then\n    [[ $EPNSYNCMODE == 1 ]] || { echo \"Error fetching QC JSON $2: consul server is used for EPNSYNCMODE == 1 only\" 1>&2 && exit 1; }\n    TMP_FILENAME=$FETCHTMPDIR/$1.$RANDOM.$RANDOM.json\n    curl -s -o $TMP_FILENAME \"http://${GEN_TOPO_QC_CONSUL_SERVER}:8500/v1/kv/${2/consul:\\/\\//}?raw\"\n    if [[ $? != 0 ]]; then\n      echo \"Error fetching QC JSON $2 (3)\" 1>&2\n      exit 1\n    fi\n  elif [[ ${2} =~ ^apricot://.* ]]; then\n    [[ $EPNSYNCMODE == 1 ]] || { echo \"Error fetching QC JSON $2: apricot server is used for EPNSYNCMODE == 1 only\" 1>&2 && exit 1; }\n    TMP_FILENAME=$FETCHTMPDIR/$1.$RANDOM.$RANDOM.json\n    if [[ ${2} =~ \"?\" ]]; then\n      curl -s -o $TMP_FILENAME \"${GEN_TOPO_QC_APRICOT_SERVER}/${2/apricot:\\/\\/o2\\//}\\&run_type=${RUNTYPE:-}\\&beam_type=${BEAMTYPE:-}\\&process=true\"\n    else\n      curl -s -o $TMP_FILENAME \"${GEN_TOPO_QC_APRICOT_SERVER}/${2/apricot:\\/\\/o2\\//}?run_type=${RUNTYPE:-}\\&beam_type=${BEAMTYPE:-}\\&process=true\"\n    fi\n  fi\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "6cf1fc3fd8aa1a0d0e300dd88d97d0c5689387dbf73329ac07a6b68d3316eaf4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fi\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "7248a4544e4c05f718e49ce18ca87aa6b8ebf2d18c19ba2b49ba3dd0a3671e90": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $? != 0 ]]; then\n  echo \"Error fetching QC JSON $2 (4)\" 1>&2\n  exit 1\nfi\nelse\n  TMP_FILENAME=$2\nfi\nJSON_FILES+=\" $TMP_FILENAME\"\njq -rM '\"\"' > /dev/null < $TMP_FILENAME\nif [[ $? != 0 ]]; then\n  echo \"Invalid QC JSON $2\" 1>&2\n  exit 1\nfi\nOUTPUT_SUFFIX+=\"-$1\"\n}\n\nJSON_TEMP_FILES=\"()\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "efabee812fb8b8f98e698a901803b4aff2db96fb6232daee3ed5c84aea414cf6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    QC_CONFIG=\n: ${QC_CONFIG_OVERRIDE:=} # set to an empty string only if not already defined externally\n: ${QC_DETECTOR_CONFIG_OVERRIDE:=} # set to an empty string only if not already defined externally\nif [[ -z ${QC_JSON_FROM_OUTSIDE:-} && ! -z ${GEN_TOPO_QC_JSON_FILE:-} && -f $GEN_TOPO_QC_JSON_FILE ]]; then\n  QC_JSON_FROM_OUTSIDE=$GEN_TOPO_QC_JSON_FILE\nelif [[ -z ${QC_JSON_FROM_OUTSIDE:-} ]]; then\n  if [[ $EPNSYNCMODE == 1 || \"${GEN_TOPO_LOAD_QC_JSON_FROM_CONSUL:-}\" == \"1\" ]]; then # Sync processing running on the EPN\n    [[ -z \"${QC_JSON_TPC:-}\" ]] && QC_JSON_TPC=apricot://o2/components/qc/ANY/any/tpc-full-qcmn\n    [[ -z \"${QC_JSON_ITS:-}\" ]] && QC_JSON_ITS=apricot://o2/components/qc/ANY/any/its-qcmn-epn-full\n    if [[ -z \"${QC_JSON_MFT:-}\" ]]; then\n      if has_detector MFT && has_processing_step MFT_RECO; then\n        QC_JSON_MFT=apricot://o2/components/qc/ANY/any/mft-full-qcmn\n      else\n        QC_JSON_MFT=apricot://o2/components/qc/ANY/any/mft-full-no-tracks-qcmn\n      fi\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "2bbd2f08410d91290f071fc4a146efda745924f7d0cb49fa2b4583917c74172f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    QC_JSON_MFT=apricot://o2/components/qc/ANY/any/mft-full-no-tracks-qcmn\n      fi\n    fi\n    if [[ -z \"${QC_JSON_TOF:-}\" ]]; then\n      if has_detector_flp_processing TOF; then\n        QC_JSON_TOF=apricot://o2/components/qc/ANY/any/tof-full-qcmn-on-epn\n      else\n        QC_JSON_TOF=apricot://o2/components/qc/ANY/any/tof-full-epn-qcmn-on-epn\n      fi\n    fi\n    [[ -z \"${QC_JSON_FDD:-}\" ]] && QC_JSON_FDD=apricot://o2/components/qc/ANY/any/fdd-digits-qc-epn\n    [[ -z \"${QC_JSON_FT0:-}\" ]] && QC_JSON_FT0=apricot://o2/components/qc/ANY/any/ft0-digits-qc-epn\n    [[ -z \"${QC_JSON_FV0:-}\" ]] && QC_JSON_FV0=apricot://o2/components/qc/ANY/any/fv0-digits-qc-epn\n    if [[ -z \"${QC_JSON_EMC:-}\" ]]; then\n      if [[ \"$BEAMTYPE\" == \"PbPb\" ]]; then\n        if has_detector CTP; then\n          QC_JSON_EMC=apricot://o2/components/qc/ANY/any/emc-qcmn-epnall-withCTP-PbPb\n        else\n          QC_JSON_EMC=apricot://o2/components/qc/ANY/any/emc-qcmn-epnall-PbPb\n        fi\n      else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "721b4d8fc09023ad05308ea91e1b40dbe9764b1edeaf784b5bdaefbe36350ff8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    QC_JSON_EMC=apricot://o2/components/qc/ANY/any/emc-qcmn-epnall-PbPb\n        fi\n      else\n        if has_detector CTP; then\n          QC_JSON_EMC=apricot://o2/components/qc/ANY/any/emc-qcmn-epnall-withCTP\n        else\n          QC_JSON_EMC=apricot://o2/components/qc/ANY/any/emc-qcmn-epnall\n        fi\n      fi\n    fi\n    If QC_JSON_ZDC is not set, and there is a ZDC_RECO processing step, then QC_JSON_ZDC=apricot://o2/components/qc/ANY/any/zdc-full-qcmn\n    if QC_JSON_MCH is not set, then\n      if there is a MCH detector and MCH_RECO processing step;\n        if the track source is MCH-MID;\n          QC_JSON_MCH=apricot://o2/components/qc/ANY/any/mch-qcmn-epn-full-track-matching\n        else\n          QC_JSON_MCH=apricot://o2/components/qc/ANY/any/mch-qcmn-epn-full\n        fi\n      else\n        QC_JSON_MCH=apricot://o2/components/qc/ANY/any/mch-qcmn-epn-digits\n      fi\n    fi\n    if QC_JSON_MID is not set, then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "a6ad3967ddc8925ad400940f1ecec67d892bf45a9acdbd82544e9089f9f098d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fi\n    fi\n    if [ -z \"${QC_JSON_MID:-}\" ]; then\n      if detector_exists MID && processing_step_exists MID_RECO; then\n        QC_JSON_MID=apricot://o2/components/qc/ANY/any/mid-full-qcmn\n      else\n        QC_JSON_MID=apricot://o2/components/qc/ANY/any/mid-flp_raw-epn_digits-qcmn\n      fi\n    fi\n    [[ -z \"${QC_JSON_CPV:-}\" ]] && QC_JSON_CPV=apricot://o2/components/qc/ANY/any/cpv-physics-qcmn-epn\n    [[ -z \"${QC_JSON_TRD:-}\" ]] && QC_JSON_TRD=apricot://o2/components/qc/ANY/any/trd-full-qcmn\n    [[ -z \"${QC_JSON_PHS:-}\" ]] && QC_JSON_PHS=apricot://o2/components/qc/ANY/any/phos-raw-clusters-epn\n    [[ -z \"${QC_JSON_GLO_PRIMVTX:-}\" ]] && QC_JSON_GLO_PRIMVTX=apricot://o2/components/qc/ANY/any/glo-vtx-qcmn-epn\n    [[ -z \"${QC_JSON_GLO_ITSTPC:-}\" ]] && QC_JSON_GLO_ITSTPC=apricot://o2/components/qc/ANY/any/glo-itstpc-mtch-qcmn-epn\n    if [ -z \"${QC_JSON_TOF_MATCH:-}\" ]; then\n      if has_tof_matching_source ITS-TPC && has_tof_matching_source ITS-TPC-TRD; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "550a307ecb0f74f87029bf31deb1e91373dafdf0b4da5ef25336944597ada5bc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the TOF matching source includes ITS-TPC and ITS-TPC-TRD; then\n    QC_JSON_TOF_MATCH=apricot://o2/components/qc/ANY/any/tof-qcmn-match-itstpctrdtof\nelif the TOF matching source includes ITS-TPC; then\n    QC_JSON_TOF_MATCH=apricot://o2/components/qc/ANY/any/tof-qcmn-match-itstpctof\nfi\nif the reconstructed detectors include MFT, MCH, and MID and there are matching QCs for MFTMCH and MCHMID; then\n    [[ -z \"${QC_JSON_GLO_MFTMCH:-}\" ]] && QC_JSON_GLO_MFTMCH=apricot://o2/components/qc/ANY/any/glo-mftmchmid-mtch-qcmn-epn\nelif the reconstructed detectors include MFT and MCH and there is a matching QC for MFTMCH; then\n    [[ -z \"${QC_JSON_GLO_MFTMCH:-}\" ]] && QC_JSON_GLO_MFTMCH=apricot://o2/components/qc/ANY/any/glo-mftmch-mtch-qcmn-epn\nelif the reconstructed detectors include MCH and MID and there is a matching QC for MCHMID; then\n    [[ -z \"${QC_JSON_GLO_MCHMID:-}\" ]] && QC_JSON_GLO_MCHMID=apricot://o2/components/qc/ANY/any/glo-mchmid-mtch-qcmn-epn\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "299b134b328138e8b7f6c2e48aa47edd699d84001d7a09a334dd2c3ef1c2f859": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fi\n    if the processing step includes ENTROPY_ENCODER and WORKFLOW_DETECTORS_CTF is not empty and not set to NONE and the CTP detector is present; then\n      if QC_JSON_CTF_SIZE is not set, assign it the value apricot://o2/components/qc/ANY/any/glo-qc-data-size\n    fi\n    if \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" equals \"ALICE_STAGING\"; then\n      if QC_JSON_GLOBAL is not set, assign it the value $O2DPG_ROOT/DATA/production/qc-sync/qc-global-epn-staging.json # this must be the last assignment\n    else\n      if QC_JSON_GLOBAL is not set, assign it the value $O2DPG_ROOT/DATA/production/qc-sync/qc-global-epn.json # this must be the last assignment\n    fi\n  elif SYNCMODE equals 1; then # Sync processing running locally (CI, laptop)\n    if QC_JSON_TPC is not set, assign it the value $O2DPG_ROOT/DATA/production/qc-sync/tpc.json\n    if QC_JSON_ITS is not set, assign it the value $O2DPG_ROOT/DATA/production/qc-sync/its.json\n    if QC_JSON_MFT is not set and the processing step includes MFT_RECO; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "9c07ba9a65f4b48b7d73f4cc18d1adb113b26096e3c7cca77281097c996e73d2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${QC_JSON_MFT:-}\" ]]; then\n  if has_processing_step MFT_RECO; then\n    QC_JSON_MFT=$O2DPG_ROOT/DATA/production/qc-sync/mft-full.json\n  else\n    QC_JSON_MFT=$O2DPG_ROOT/DATA/production/qc-sync/mft-full-no-tracks.json\n  fi\nfi\n[[ -z \"${QC_JSON_TOF:-}\" ]] && QC_JSON_TOF=$O2DPG_ROOT/DATA/production/qc-sync/tof.json\n[[ -z \"${QC_JSON_FDD:-}\" ]] && QC_JSON_FDD=$O2DPG_ROOT/DATA/production/qc-sync/fdd.json\n[[ -z \"${QC_JSON_FT0:-}\" ]] && QC_JSON_FT0=$O2DPG_ROOT/DATA/production/qc-sync/ft0.json\n[[ -z \"${QC_JSON_FV0:-}\" ]] && QC_JSON_FV0=$O2DPG_ROOT/DATA/production/qc-sync/fv0.json\n[[ -z \"${QC_JSON_EMC:-}\" ]] && QC_JSON_EMC=$O2DPG_ROOT/DATA/production/qc-sync/emc.json\n[[ -z \"${QC_JSON_ZDC:-}\" ]] && has_processing_step ZDC_RECO && QC_JSON_ZDC=$O2DPG_ROOT/DATA/production/qc-sync/zdc.json\n[[ -z \"${QC_JSON_MCH:-}\" ]] && QC_JSON_MCH=$O2DPG_ROOT/DATA/production/qc-sync/mch.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "17c19da1e318f1330a8aef843d1125529b0113d58ac560773a69aaf1d7e8ea1f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ -z \"${QC_JSON_MCH:-}\" ]] && QC_JSON_MCH=$O2DPG_ROOT/DATA/production/qc-sync/mch.json\n[[ -z \"${QC_JSON_MID:-}\" ]] && QC_JSON_MID=$O2DPG_ROOT/DATA/production/qc-sync/mid-digits.json && has_processing_step MID_RECO && QC_JSON_MID=$O2DPG_ROOT/DATA/production/qc-sync/mid.json\n[[ -z \"${QC_JSON_CPV:-}\" ]] && QC_JSON_CPV=$O2DPG_ROOT/DATA/production/qc-sync/cpv.json\n[[ -z \"${QC_JSON_PHS:-}\" ]] && QC_JSON_PHS=$O2DPG_ROOT/DATA/production/qc-sync/phs.json\n[[ -z \"${QC_JSON_TRD:-}\" ]] && QC_JSON_TRD=$O2DPG_ROOT/DATA/production/qc-sync/trd.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "bf5e4b8d5eab1d0a4a47f551fcca2900f6eebbb293b016aa217673b42ad1b432": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    [[ -z \"${QC_JSON_GLO_PRIMVTX:-}\" ]] && QC_JSON_GLO_PRIMVTX=$O2DPG_ROOT/DATA/production/qc-sync/glo-vtx-qcmn-epn.json\n    [[ -z \"${QC_JSON_GLO_ITSTPC:-}\" ]] && QC_JSON_GLO_ITSTPC=$O2DPG_ROOT/DATA/production/qc-sync/glo-itstpc-mtch-qcmn-epn.json\n    if [[ -z \"${QC_JSON_TOF_MATCH:-}\" ]]; then\n      if has_tof_matching_source ITS-TPC && has_tof_matching_source ITS-TPC-TRD; then\n        QC_JSON_TOF_MATCH=$O2DPG_ROOT/DATA/production/qc-sync/itstpctrdtof.json\n      elif has_tof_matching_source ITS-TPC; then\n        QC_JSON_TOF_MATCH=$O2DPG_ROOT/DATA/production/qc-sync/itstpctof.json\n      fi\n    fi\n    if has_detectors_reco MFT MCH MID && has_matching_qc MFTMCH && has_matching_qc MCHMID; then\n        [[ -z \"${QC_JSON_GLO_MFTMCH:-}\" ]] && QC_JSON_GLO_MFTMCH=$O2DPG_ROOT/DATA/production/qc-sync/glo-mftmchmid-mtch-qcmn-epn.json\n    elif has_detectors_reco MFT MCH && has_matching_qc MFTMCH; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "08b40484e50fb6ef1e2282e8892eb299da9cba0ba49f6adba40fa593baf16fb0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    elif the_reco_includes_detectors MFT MCH and has_matching_qc MFTMCH; then\n        [[ -z \"${QC_JSON_GLO_MFTMCH:-}\" ]] && QC_JSON_GLO_MFTMCH=$O2DPG_ROOT/DATA/production/qc-sync/glo-mftmch-mtch-qcmn-epn.json\n    elif the_reco_includes_detectors MCH MID and has_matching_qc MCHMID; then\n        [[ -z \"${QC_JSON_GLO_MCHMID:-}\" ]] && QC_JSON_GLO_MCHMID=$O2DPG_ROOT/DATA/production/qc-sync/glo-mchmid-mtch-qcmn-epn.json\n    fi\n    [[ -z \"${QC_JSON_GLOBAL:-}\" ]] && QC_JSON_GLOBAL=$O2DPG_ROOT/DATA/production/qc-sync/qc-global.json # this must be the last step",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "4b94d6f91ee6fcc626357484489bc051a58e26c8882639b5bf37458333ad9ecc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    QC_CONFIG_OVERRIDE+=\"qc.config.conditionDB.url=${DPL_CONDITION_BACKEND:-http://alice-ccdb.cern.ch};\"\n  else # Asynchronous processing\n    [[ -z \"${QC_JSON_TPC:-}\" ]] && QC_JSON_TPC=$O2DPG_ROOT/DATA/production/qc-async/tpc.json\n    [[ -z \"${QC_JSON_ITS:-}\" ]] && QC_JSON_ITS=$O2DPG_ROOT/DATA/production/qc-async/its.json\n    [[ -z \"${QC_JSON_MFT:-}\" ]] && QC_JSON_MFT=$O2DPG_ROOT/DATA/production/qc-async/mft.json\n    [[ -z \"${QC_JSON_TOF:-}\" ]] && QC_JSON_TOF=$O2DPG_ROOT/DATA/production/qc-async/tof.json\n    [[ -z \"${QC_JSON_HMP:-}\" ]] && QC_JSON_HMP=$O2DPG_ROOT/DATA/production/qc-async/hmp.json\n    [[ -z \"${QC_JSON_FT0:-}\" ]] && QC_JSON_FT0=$O2DPG_ROOT/DATA/production/qc-async/ft0.json\n    [[ -z \"${QC_JSON_FV0:-}\" ]] && QC_JSON_FV0=$O2DPG_ROOT/DATA/production/qc-async/fv0.json\n    [[ -z \"${QC_JSON_FDD:-}\" ]] && QC_JSON_FDD=$O2DPG_ROOT/DATA/production/qc-async/fdd.json\n    [[ -z \"${QC_JSON_MID:-}\" ]] && QC_JSON_MID=$O2DPG_ROOT/DATA/production/qc-async/mid.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "b07f21c650be4c20982e93a518b53ec1470651402c2b637503f786895a9d38de": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    [[ -z \"${QC_JSON_MID:-}\" ]] && QC_JSON_MID=$O2DPG_ROOT/DATA/production/qc-async/mid.json\n    if [[ -z \"${QC_JSON_ZDC:-}\" ]] && has_processing_step ZDC_RECO; then\n      if [[ \"$BEAMTYPE\" == \"PbPb\" ]]; then\n        QC_JSON_ZDC=$O2DPG_ROOT/DATA/production/qc-async/zdcPbPb.json\n      else\n        QC_JSON_ZDC=$O2DPG_ROOT/DATA/production/qc-async/zdc.json\n      fi\n    fi\n    if -z \"${QC_JSON_EMC:-}\"; then\n      if \"$BEAMTYPE\" == \"PbPb\"; then\n        QC_JSON_EMC=$O2DPG_ROOT/DATA/production/qc-async/emc_PbPb.json\n      else\n        QC_JSON_EMC=$O2DPG_ROOT/DATA/production/qc-async/emc.json\n      fi\n    fi\n    if has_detector_qc MCH && -z \"${QC_JSON_MCH:-}\"; then\n      add_QC_JSON MCH_DIGITS $O2DPG_ROOT/DATA/production/qc-async/mch-digits.json\n      if has_processing_step \"MCH_RECO\"; then\n        add_QC_JSON MCH_RECO $O2DPG_ROOT/DATA/production/qc-async/mch-reco.json\n        add_QC_JSON MCH_ERRORS $O2DPG_ROOT/DATA/production/qc-async/mch-errors.json\n      fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "32b9292a2e1a7b5676e71f3e852179f2c64ac398084e58c274fe398eb9f4927d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    add_QC_JSON MCH_ERRORS $O2DPG_ROOT/DATA/production/qc-async/mch-errors.json\n    fi\n    if has_track_source \"MCH\"; then\n        add_QC_JSON MCH_TRACKS $O2DPG_ROOT/DATA/production/qc-async/mch-tracks.json\n    fi\n    fi\n    if has_reco_detectors MFT MCH MID && has_matching_qc MFTMCH && has_matching_qc MCHMID; then\n        [[ -z \"${QC_JSON_GLO_MFTMCH:-}\" ]] && QC_JSON_GLO_MFTMCH=$O2DPG_ROOT/DATA/production/qc-async/mftmchmid-tracks.json\n    elif has_reco_detectors MFT MCH && has_matching_qc MFTMCH; then\n        [[ -z \"${QC_JSON_GLO_MFTMCH:-}\" ]] && QC_JSON_GLO_MFTMCH=$O2DPG_ROOT/DATA/production/qc-async/mftmch-tracks.json\n    elif has_reco_detectors MCH MID && has_matching_qc MCHMID; then\n        [[ -z \"${QC_JSON_GLO_MCHMID:-}\" ]] && QC_JSON_GLO_MCHMID=$O2DPG_ROOT/DATA/production/qc-async/mchmid-tracks.json\n    fi\n    [[ -z \"${QC_JSON_CPV:-}\" ]] && QC_JSON_CPV=$O2DPG_ROOT/DATA/production/qc-async/cpv.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "baad90203504d88ca908e8215aea5c286b304ebceb902a70755712937de1d271": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fi\n    [[ -z \"${QC_JSON_CPV:-}\" ]] && QC_JSON_CPV=$O2DPG_ROOT/DATA/production/qc-async/cpv.json\n    [[ -z \"${QC_JSON_PHS:-}\" ]] && QC_JSON_PHS=$O2DPG_ROOT/DATA/production/qc-async/phs.json\n    [[ -z \"${QC_JSON_TRD:-}\" ]] && QC_JSON_TRD=$O2DPG_ROOT/DATA/production/qc-async/trd.json\n    # the subsequent two ($QC_JSON_PRIMVTX and $QC_JSON_ITSTPC) replace $QC_JSON_GLO for asynchronous processing\n    [[ -z \"${QC_JSON_GLO_PRIMVTX:-}\" ]] && QC_JSON_GLO_PRIMVTX=$O2DPG_ROOT/DATA/production/qc-async/primvtx.json\n    [[ -z \"${QC_JSON_GLO_ITSTPC:-}\" ]] && QC_JSON_GLO_ITSTPC=$O2DPG_ROOT/DATA/production/qc-async/itstpc.json\n    if [[ -z \"${QC_JSON_TOF_MATCH:-}\" ]]; then\n      if has_tof_matching_source ITS-TPC && has_tof_matching_source ITS-TPC-TRD; then\n        QC_JSON_TOF_MATCH=$O2DPG_ROOT/DATA/production/qc-async/itstpctofwtrd.json\n      elif has_tof_matching_source ITS-TPC; then\n        QC_JSON_TOF_MATCH=$O2DPG_ROOT/DATA/production/qc-async/itstpctof.json\n      fi\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "894db133e2eb7b2c68ee796f232c5936699382801ee5d6f6a4b8f54506c78a4c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    QC_JSON_TOF_MATCH=$O2DPG_ROOT/DATA/production/qc-async/itstpctof.json\n      fi\n    fi\n    if [[ -z \"${QC_JSON_PID_FT0TOF:-}\" ]]; then\n      if has_tof_matching_source ITS-TPC && has_tof_matching_source ITS-TPC-TRD; then\n        QC_JSON_PID_FT0TOF=$O2DPG_ROOT/DATA/production/qc-async/pidft0tofwtrd.json\n      elif has_tof_matching_source ITS-TPC; then\n        QC_JSON_PID_FT0TOF=$O2DPG_ROOT/DATA/production/qc-async/pidft0tof.json\n      fi\n    fi\n    if [[ -z \"${QC_JSON_GLOBAL:-}\" ]]; then\n      QC_JSON_GLOBAL=$O2DPG_ROOT/DATA/production/qc-async/qc-global.json\n    fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "63c3ca0d78e84693daf5a6c632cdf3f95e3f90f5f6b81788714afcfb14273b58": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${GEN_TOPO_WORKDIR:-}\" ]]; then\n  echo This script must be run via the gen_topo scripts, or a GEN_TOPO_WORKDIR must be provided where merged JSONS are stored 1>&2\n  exit 1\nfi\n\n\n# TOF matching\nif has_detector_qc TOF && [[ $WORKFLOW_DETECTORS_QC =~ (^|,)\"TOF_MATCH\"(,|$) ]] && [ ! -z \"${QC_JSON_TOF_MATCH:-}\" ]; then\n  add_QC_JSON matchTOF ${QC_JSON_TOF_MATCH}\nfi\n\n# Detector QC\nfor i in ${LIST_OF_DETECTORS//,/ }; do\n  DET_JSON_FILE=\"QC_JSON_$i\"\n  if has_detector_qc $i && [ ! -z \"${!DET_JSON_FILE:-}\" ]; then\n    add_QC_JSON $i ${!DET_JSON_FILE}\n  fi\ndone\n\n# Global reconstruction QC\nfor i in ${LIST_OF_GLORECO//,/ }; do\n  DET_JSON_FILE=\"QC_JSON_GLO_$i\"\n  if has_matching_qc $i && [ ! -z \"${!DET_JSON_FILE:-}\" ]; then\n    if [[ $i == \"PRIMVTX\" ]] && ! has_detector_reco ITS; then continue; fi\n    if [[ $i == \"ITSTPC\" ]] && ! has_detectors_reco ITS TPC; then continue; fi\n    add_QC_JSON GLO_$i ${!DET_JSON_FILE}\n  fi\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "bd7e7b632ce924db337c74bbbdc30b1737c826ada9975d211db286236086967e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [[ $i == \"ITSTPC\" ]]; then\n        LOCAL_FILENAME=${JSON_FILES//*\\ /}\n        # modify the input sources based on the detector composition and relevant detectors\n        ITSTPCMatchQuery=\"trackITSTPC:GLO/TPCITS/0;trackITSTPCABREFS:GLO/TPCITSAB_REFS/0;trackITSTPCABCLID:GLO/TPCITSAB_CLID/0;trackTPC:TPC/TRACKS;trackTPCClRefs:TPC/CLUSREFS/0;trackITS:ITS/TRACKS/0;trackITSROF:ITS/ITSTrackROF/0;trackITSClIdx:ITS/TRACKCLSID/0;alpparITS:ITS/ALPIDEPARAM/0?lifetime=condition&ccdb-path=ITS/Config/AlpideParam;SVParam:GLO/SVPARAM/0?lifetime=condition&ccdb-path=GLO/Config/SVertexerParam\"\n        TRACKSOURCESK0=\"ITS,TPC,ITS-TPC\"\n        if [[ $BEAMTYPE != \"cosmic\" ]] && (has_processing_step MATCH_SECVTX || has_detector_matching SECVTX); then\n          if [[ $SYNCMODE == 1 ]] || [[ $EPNSYNCMODE == 1 ]]; then\n            HAS_K0_ENABLED=$(jq -r .qc.tasks.MTCITSTPC.taskParameters.doK0QC \"${LOCAL_FILENAME}\")\n          else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "03f53b054cb0d544481856d5e29c885469e55dfb891c3f6ebd058071a6fcbff8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ELSE\n            HAS_K0_ENABLED=$(jq -r .qc.tasks.GLOMatchTrITSTPC.taskParameters.doK0QC \"${LOCAL_FILENAME}\")\n          fi\n          if [[ $HAS_K0_ENABLED == \"true\" ]]; then\n            ITSTPCMatchQuery+=\";p2decay3body:GLO/PVTX_3BODYREFS/0;decay3body:GLO/DECAYS3BODY/0;decay3bodyIdx:GLO/DECAYS3BODY_IDX/0;p2cascs:GLO/PVTX_CASCREFS/0;cascs:GLO/CASCS/0;cascsIdx:GLO/CASCS_IDX/0;p2v0s:GLO/PVTX_V0REFS/0;v0s:GLO/V0S/0;v0sIdx:GLO/V0S_IDX/0;pvtx_tref:GLO/PVTX_TRMTCREFS/0;pvtx_trmtc:GLO/PVTX_TRMTC/0;pvtx:GLO/PVTX/0;clusTPCoccmap:TPC/TPCOCCUPANCYMAP/0;clusTPC:TPC/CLUSTERNATIVE;clusTPCshmap:TPC/CLSHAREDMAP/0;trigTPC:TPC/TRIGGERWORDS/0\"\n            if has_secvtx_source ITS-TPC-TRD; then\n              ITSTPCMatchQuery+=\";trigITSTPCTRD:TRD/TRGREC_ITSTPC/0;trackITSTPCTRD:TRD/MATCH_ITSTPC/0\"\n              TRACKSOURCESK0+=\",ITS-TPC-TRD\"\n            fi\n            if has_secvtx_source ITS-TPC-TOF; then\n              ITSTPCMatchQuery+=\";matchITSTPCTOF:TOF/MTC_ITSTPC/0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "1a6049147aaf7b9533706aa285804567accf900e6900e12a74e40443d7e54c90": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ITSTPCMatchQuery+=\";matchITSTPCTOF:TOF/MTC_ITSTPC/0\"\n              TRACKSOURCESK0+=\",ITS-TPC-TOF\"\n            fi\n            if has_secvtx_source ITS-TPC-TRD-TOF; then\n              ITSTPCMatchQuery+=\";matchITSTPCTRDTOF:TOF/MTC_ITSTPCTRD/0\"\n              TRACKSOURCESK0+=\",ITS-TPC-TRD-TOF\"\n            fi\n            if has_secvtx_source TPC-TRD; then\n              ITSTPCMatchQuery+=\";trigTPCTRD:TRD/TRGREC_TPC/0;trackTPCTRD:TRD/MATCH_TPC/0\"\n              TRACKSOURCESK0+=\",TPC-TRD\"\n            fi\n            if has_secvtx_source TPC-TOF; then\n              ITSTPCMatchQuery+=\";matchTPCTOF:TOF/MTC_TPC/0;trackTPCTOF:TOF/TOFTRACKS_TPC/0\"\n              TRACKSOURCESK0+=\",TPC-TOF\"\n            fi\n            if has_secvtx_source TPC-TRD-TOF; then\n              ITSTPCMatchQuery+=\";matchTPCTRDTOF/TOF/MTC_TPCTRD/0\"\n              TRACKSOURCESK0+=\",TPC-TRD-TOF\"\n            fi\n            if has_secvtx_source TOF; then\n              ITSTPCMatchQuery+=\";tofcluster:TOF/CLUSTERS/0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "4dd5aa6b6cfce20b859ab134f4eaf13dee04661e1856f04c19f3989218d69c5c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ITSTPCMatchQuery+=\";tofcluster:TOF/CLUSTERS/0\"\n              TRACKSOURCESK0+=\",TOF\"\n            fi\n            if has_secvtx_source TRD; then\n              TRACKSOURCESK0+=\",TRD\"\n            fi\n          fi\n          TEMP_FILE=$(mktemp \"${GEN_TOPO_WORKDIR:+$GEN_TOPO_WORKDIR/}${i}\"_XXXXXXX)\n          if [[ $SYNCMODE == 1 ]] || [[ $EPNSYNCMODE == 1 ]]; then\n            cat \"${LOCAL_FILENAME}\" | jq \"(.dataSamplingPolicies[] | select(.id == \\\"ITSTPCmSampK0\\\") | .query) = \\\"$ITSTPCMatchQuery\\\" | .qc.tasks.MTCITSTPC.taskParameters.trackSourcesK0 = \\\"$TRACKSOURCESK0\\\"\" >\"$TEMP_FILE\"\n          else\n            cat \"${LOCAL_FILENAME}\" | jq \".qc.tasks.GLOMatchTrITSTPC.dataSource.query = \\\"$ITSTPCMatchQuery\\\" | .qc.tasks.GLOMatchTrITSTPC.taskParameters.trackSourcesK0 = \\\"$TRACKSOURCESK0\\\"\" >\"$TEMP_FILE\"\n          fi\n        else\n          # we need to ensure that the K0s part is turned off\n          TEMP_FILE=$(mktemp \"${GEN_TOPO_WORKDIR:+$GEN_TOPO_WORKDIR/}${i}\"_XXXXXXX)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "975efeae892057326e6a7edff003b6ed2060ebd05b707c19082a181ae0a9ec07": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    TEMP_FILE=$(mktemp \"${GEN_TOPO_WORKDIR:+$GEN_TOPO_WORKDIR/}${i}\"_XXXXXXX)\n    if [[ $SYNCMODE == 1 ]] || [[ $EPNSYNCMODE == 1 ]]; then\n        cat \"${LOCAL_FILENAME}\" | jq \"(.dataSamplingPolicies[] | select(.id == \\\"ITSTPCmSampK0\\\") | .query) = \\\"$ITSTPCMatchQuery\\\" | .qc.tasks.MTCITSTPC.taskParameters.trackSourcesK0 = \\\"$TRACKSOURCESK0\\\" | .qc.tasks.MTCITSTPC.taskParameters.doK0QC = \\\"false\\\"\" >\"$TEMP_FILE\"\n    else\n        cat \"${LOCAL_FILENAME}\" | jq \".qc.tasks.GLOMatchTrITSTPC.dataSource.query = \\\"$ITSTPCMatchQuery\\\" | .qc.tasks.GLOMatchTrITSTPC.taskParameters.trackSourcesK0 = \\\"$TRACKSOURCESK0\\\" | .qc.tasks.GLOMatchTrITSTPC.taskParameters.doK0QC = \\\"false\\\"\" >\"$TEMP_FILE\"\n    fi\n    JSON_FILES=${JSON_FILES/$LOCAL_FILENAME/$TEMP_FILE}\n    JSON_TEMP_FILES+=(\"$TEMP_FILE\")\n  fi\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "c9b75aef230e2d6b2ecea7749490f9cdd846f4e5302e93b85fdd3dc8dff31493": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# PID QC\nfor i in ${LIST_OF_PID//,/ }; do\n  PIDDETFORFILE=${i//-/}\n  PID_JSON_FILE=\"QC_JSON_PID_$PIDDETFORFILE\"\n  if has_pid_qc $i && [ ! -z \"${!PID_JSON_FILE:-}\" ]; then\n    add_QC_JSON pid$i ${!PID_JSON_FILE}\n  fi\ndone\n\n# CTF QC\nif [[ ! -z \"${QC_JSON_CTF_SIZE:-}\" ]]; then\n  add_QC_JSON GLO_CTF ${QC_JSON_CTF_SIZE}\n#  add_pipe_separated QC_DETECTOR_CONFIG_OVERRIDE '.qc.tasks.CTFSize.taskParameters.detectors=\\\"${WORKFLOW_DETECTORS}\\\"'\nfi\n\n# additional custom QC\nif [[ ! -z \"${QC_JSON_EXTRA:-}\" ]]; then\n  add_QC_JSON EXTRA ${QC_JSON_EXTRA}\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "eec405c742b5310617e8f20bd16fa8c1ceb83c02e076fd00171ee9ff62a2edb7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# extra settings based on available detectors\n  # for strings, remember to escape e.g. \" and ;\n  # e.g. .qc.tasks.Tracking.taskParameters.dataSource.query=\\\"tracks:TPC/TRACKS\\;clusters:TPC/CLUSTERS\\\"\n  if [[ -z \"${DISABLE_QC_DETECTOR_CONFIG_OVERRIDE:-}\" ]]; then\n    if has_detector_qc TRD && [[ ! -z ${QC_JSON_TRD:-} ]]; then # extra settings for TRD QC\n      if ! has_matching_qc ITSTPCTRD || ! has_detectors_reco ITS TPC TRD; then\n        add_pipe_separated QC_DETECTOR_CONFIG_OVERRIDE '.qc.tasks.Tracking.active=false'\n        add_pipe_separated QC_DETECTOR_CONFIG_OVERRIDE '.qc.tasks.PHTrackMatch.active=false'\n      fi\n      if has_matching_qc TPCTRD && has_detectors_reco TPC TRD; then # should be only enabled in async\n        add_pipe_separated QC_DETECTOR_CONFIG_OVERRIDE '.qc.tasks.Tracking.dataSource.query=\\\"trackITSTPCTRD:TRD/MATCH_ITSTPC\\;trigITSTPCTRD:TRD/TRGREC_ITSTPC\\;trackTPCTRD:TRD/MATCH_TPC\\;trigTPCTRD:TRD/TRGREC_TPC\\\"'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "1066b552038d982b5d9eee5992eb6af2cf50288c90fe3a607f8b5e9311c249ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "add_pipe_separated QC_DETECTOR_CONFIG_OVERRIDE '.qc.tasks.Tracking.taskParameters.trackSources=\\\"ITS-TPC-TRD,TPC-TRD\\\"'\nfi\nfi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "8f0d74315249685d46d797228c8b21a136bb6a2dc43f783f0e45eed45db67bad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z \"$JSON_FILES\" ]]; then\nif [[ -z \"${GEN_TOPO_QC_JSON_FILE:-}\" ]]; then\n  mkdir -p $GEN_TOPO_WORKDIR/json_cache\n  if [[ \"${GEN_TOPO_ONTHEFLY:-}\" == \"1\" ]]; then\n    find $GEN_TOPO_WORKDIR/json_cache/ -maxdepth 1 -type f -mtime +30 | xargs rm -f\n  fi\n  MERGED_JSON_FILENAME=$GEN_TOPO_WORKDIR/json_cache/$(date +%Y%m%d-%H%M%S)-$$-$RANDOM-$OUTPUT_SUFFIX.json\nelse\n  MERGED_JSON_FILENAME=$GEN_TOPO_QC_JSON_FILE\nfi\njq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks)  | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing)| .dataSamplingPolicies += ($s.dataSamplingPolicies))'${QC_DETECTOR_CONFIG_OVERRIDE} $QC_JSON_GLOBAL $JSON_FILES > $MERGED_JSON_FILENAME\nif [[ $? != 0 ]]; then\n  echo Merging QC workflow with JSON files $JSON_FILES failed 1>&2\n  exit 1\nfi\nMERGED_JSON_FILENAME=$(realpath $MERGED_JSON_FILENAME)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "92edc1ddf1b4daf8ee1ccc79e057ca2709ab240c0b9b86097b1bdf838cc45e15": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Clean up: remove the temporary files after they are no longer needed\nfor tf in \"${JSON_TEMP_FILES[@]}\"; do\n  rm -f \"$tf\"\ndone\n\nif [[ \"${QC_REDIRECT_MERGER_TO_LOCALHOST:-}\" == \"1\" ]]; then\n  sed -i.bak -E 's/( *)\"remoteMachine\" *: *\".*\"(,?) *$/\\1\"remoteMachine\": \"127.0.0.1\"\\2/' $MERGED_JSON_FILENAME\n  unlink $MERGED_JSON_FILENAME.bak\n  QC_CONFIG_OVERRIDE+=\"qc.config.database.host=ccdb-test.cern.ch:8080;\"\nfi\n\nif [[ ! -z ${GEN_TOPO_QC_OVERRIDE_CCDB_SERVER:-} ]]; then\n  sed -i \"s,http://alice-ccdb.cern.ch,$GEN_TOPO_QC_OVERRIDE_CCDB_SERVER,g\" $MERGED_JSON_FILENAME\nfi\nQC_JSON_FROM_OUTSIDE=\"$MERGED_JSON_FILENAME\"\nfi\n\nrm -Rf $FETCHTMPDIR\nfi\n\n[[ $EPNSYNCMODE == 1 && $NUMAGPUIDS == 1 ]] && QC_CONFIG_OVERRIDE+=\"qc.config.infologger.filterDiscardFile=../../qc-_ID_-${NUMAID}.log;\"\n[[ $EPNSYNCMODE == 0 ]] && QC_CONFIG+=\" --no-infologger\"\n\n[[ ! -z $QC_CONFIG_OVERRIDE ]] && QC_CONFIG+=\" --override-values \\\"$QC_CONFIG_OVERRIDE\\\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "dfa55520e68d4f08031dc740e9efc26282a8ef31ea26f64ab4b8267747e70789": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ ! -z $QC_CONFIG_OVERRIDE ]] && QC_CONFIG+=\" --override-values \\\"$QC_CONFIG_OVERRIDE\\\"\"\n\nif [[ ! -z \"${QC_JSON_FROM_OUTSIDE:-}\" ]]; then\n  if [[ ! -f $QC_JSON_FROM_OUTSIDE ]]; then\n    echo QC JSON FILE $QC_JSON_FROM_OUTSIDE is missing 1>&2\n    exit 1\n  fi\n  jq -rM '\"\"' > /dev/null < $QC_JSON_FROM_OUTSIDE\n  if [[ $? != 0 ]]; then\n    echo \"Final QC JSON FILE $QC_JSON_FROM_OUTSIDE has invalid syntax\" 1>&2\n    #cat $QC_JSON_FROM_OUTSIDE 1>&2\n    exit 1\n  fi\n  if [[ -z ${QC_CONFIG_PARAM:-} ]]; then\n    if [[ $SYNCMODE == 1 ]]; then\n      QC_CONFIG_PARAM=\"--local --host ${QC_HOST:-localhost}\"\n    else\n      QC_CONFIG_PARAM=\"--local-batch=QC.root\"\n    fi\n  fi\n\n  add_W o2-qc \"--config json://$QC_JSON_FROM_OUTSIDE ${QC_CONFIG_PARAM} ${QC_CONFIG}\"\n\nfi\n\nif [[ ! -z ${GEN_TOPO_QC_JSON_FILE:-} ]]; then\n  flock -u 101 || exit 1\nfi\n\ntrue # everything checks out up to this point, so the script should return 0 (it will be non-zero if the last check failed)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/qc-workflow.sh"
        }
    ],
    "c25a1ecdab54ede8363e1d827e4b1b54557ca5bd11deb42392d11101ec10320a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: O2DPG needs to be loaded\" && exit 1\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 1\n[ ! \"${QUALITYCONTROL_ROOT}\" ] && echo \"Error: QUALITYCONTROL needs to be loaded\" && exit 1\n\n\n# create workflow\n${O2DPG_ROOT}/DATA/production/o2dpg_qc_postproc_workflow.py --passName apass1 --qcdbUrl ccdb-test.cern.ch:8080 -o qc_postproc_workflow.json\n\n# run workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f qc_postproc_workflow.json --cpu-limit 4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/examples/example-qc-postproc-workflow.sh"
        }
    ],
    "e4c65849e8990941c412d7251998adbc26a64424688a4b4d017a28d018172898": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Source common setup scripts for environment variables and functions\nsource common/setenv.sh\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\n# Specify required input data for DPL, in this case all RAWDATA from TPC\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\n\n# Initialize an empty workflow\nWORKFLOW=\n# Utilize the add_W helper function to include necessary workflows (optional arguments: [BINARY] [COMMAND_LINE_OPTIONS] [CONFIG_KEY_VALUES] [Add ARGS_ALL_CONFIG, default = 1])\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --readout-proxy \\\"--channel-config \\\\\\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\\\\\"\\\"\" \"\" 0\nadd_W o2-tpc-raw-to-digits-workflow \"--input-spec \\\"$PROXY_INSPEC\\\" --remove-duplicates\" \"TPCDigitDump.LastTimeBin=1000\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/examples/example-workflow.sh"
        }
    ],
    "2db9df63f3ecc055d9635ec56a51d199a37b5bcd539818673429be66c49a3ac9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Add the o2-dpl-run workflow manually, with options to print or create a topology (default)\nWORKFLOW+=\"o2-dpl-run $GLOBALDPLOPT $ARGS_ALL\"\n[[ $WORKFLOWMODE != \"print\" ]] && WORKFLOW+=\" --${WORKFLOWMODE} ${WORKFLOWMODE_FILE:-}\"\n[[ $WORKFLOWMODE == \"print\" || \"${PRINT_WORKFLOW:-}\" == \"1\" ]] && echo \"#Workflow command:\\n\\n${WORKFLOW}\\n\" | sed -e \"s/\\\\\\\\n/\\n/g\" -e\"s/| */| \\\\\\\\\\n/g\" | eval cat $( [[ $WORKFLOWMODE == \"dds\" ]] && echo '1>&2')\nif [[ $WORKFLOWMODE != \"print\" ]]; then eval $WORKFLOW; else true; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/examples/example-workflow.sh"
        }
    ],
    "4e8239ab8d631724e834a13659bb8ce2bceeb630cee62cff099f5bc0aae1b0ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Define general arguments\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC=\"A:ITS/COMPCLUSTERS/0;B:ITS/PATTERNS/0;C:ITS/CLUSTERSROF/0;eos:***/INFORMATION\"\n\nWORKFLOW=\"o2-dpl-raw-proxy $ARGS_ALL --proxy-name its-noise-input-proxy --dataspec \\\"$PROXY_INSPEC\\\" --network-interface ib0 --channel-config \\\"name=its-noise-input-proxy,method=bind,type=pull,rateLogging=0,transport=zeromq\\\" | \"\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/examples/example-calib-aggregator.sh"
        }
    ],
    "43e37885ddd397bf0e46881c61fb63b028fd25d7db4fb0c1a89fdfc94ecc41a6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Define general arguments\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC=\"A:ITS/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\nPROXY_OUTSPEC=\"downstreamA:ITS/COMPCLUSTERS/0;downstreamB:ITS/PATTERNS/0;downstreamC:ITS/CLUSTERSROF/0\"\n\nWORKFLOW=\"o2-dpl-raw-proxy ${ARGS_ALL} --dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=0\\\" | \"\nWORKFLOW+=\"o2-itsmft-stf-decoder-workflow ${ARGS_ALL} --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --nthreads 4 | \"\nWORKFLOW+=\"o2-dpl-output-proxy ${ARGS_ALL} --dataspec \\\"$PROXY_OUTSPEC\\\" --proxy-channel-name its-noise-input-proxy --channel-config \\\"name=its-noise-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=0\\\" | \"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/examples/example-calib-processing.sh"
        }
    ],
    "4591c8f58ab99f5aa6092931f44232d724d1777ec7bef12642cd0bbe575c06f0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/examples/example-calib-processing.sh"
        }
    ],
    "82cac4c7b0a2484f1d76a06cb2404aa70ff44fc116e4e20e4f9b299e95c87e91": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing-disk                                        # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n#export DDMODE=processing                                             # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# These settings are for acquiring the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # Git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/runTF_ext_dpl.sh"
        }
    ],
    "435f3e60a91584be73cbe9be2a85478347d74eedd4faa5260934af20c5bbd19b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                             # Set the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/shahoian/alice/O2DataProcessing       # Path to the O2DataProcessing repository\n\nexport EXTINPUT=1\nexport EPNSYNCMODE=1\nexport SYNCMODE=1\nexport SHMSIZE=128000000000\nexport INFOLOGGER_SEVERITY=warning\n\nexport EDJSONS_DIR=\"/home/ed/jsons\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/runTF_ext_dpl.sh"
        }
    ],
    "8135f5621127955a6b636ba56b56d83debb596920f54b339e26bf4ab4b9a1435": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    set GEN_TOPO_LIBRARY_FILE=testing/private/shahoian/workflows_dpl.desc # File containing the topology description to load\n    set WORKFLOW_DETECTORS=ALL                                            # Optional setting for the workflow: List of detectors to run reconstruction for (comma-separated)\n    set WORKFLOW_DETECTORS_QC=ALL                                         # Optional setting for the workflow: List of detectors to run quality control for\n    set WORKFLOW_DETECTORS_CALIB=                                         # Optional setting for the workflow: List of detectors to run calibration for\n    set WORKFLOW_PARAMETERS=QC,CTF,GPU                                     # Additional settings for the workflow: Quality control, CTF, GPU\n    set RECO_NUM_NODES_OVERRIDE=0                                          # Override the number of EPN compute nodes to be used (default is specified in the description library file)\n    set NHBPERTF=128                                                       # Number of HBF per TF\n    set ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/runTF_ext_dpl.sh"
        }
    ],
    "9a513dc62cc6aa713c7d889d48f670db8714c745602bfbebdad2185ca89b3dfe": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"\n#export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"\"\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_proc.debugLevel=1;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/runTF_ext_dpl.sh"
        }
    ],
    "6f209bd98e589448e535f32521f532aecacfae9c1998fa94e4c72d60bc1baebb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1\nexport MULTIPLICITY_FACTOR_REST=1\n\nfor wf in \"$@\"\ndo\n    echo\n    echo\n    echo Working on workflow $wf\n    export GEN_TOPO_WORKFLOW_NAME=$wf\n /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo/dpl/${GEN_TOPO_WORKFLOW_NAME}.xml\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/runTF_ext_dpl.sh"
        }
    ],
    "edeb2c1ccc245895766653a81cd14a094180791d3f0159d0af7f035f19dd2c10": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=warning\nARGS_ALL=\"--session default --severity $SEVERITY --shm-segment-id $NUMAID --shm-segment-size $SHMSIZE\"\nARGS_ALL+=\" --infologger-severity $INFOLOGGER_SEVERITY\"\n#ARGS_ALL+=\" --monitoring-backend influxdb-unix:///tmp/telegraf.sock\"\nARGS_ALL_CONFIG=\"NameConf.mDirGRP=$FILEWORKDIR;NameConf.mDirGeom=$FILEWORKDIR;NameConf.mDirCollContext=$FILEWORKDIR;NameConf.mDirMatLUT=$FILEWORKDIR;keyval.input_dir=$FILEWORKDIR;keyval.output_dir=/dev/null\"\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/zampolli-workflow.sh"
        }
    ],
    "ee07aa068738d8029dbf68d30cd16e450380790c0685b6ef0855a5d304895583": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    PROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\n\no2-dpl-raw-proxy $ARGS_ALL \\\n    --dataspec \"$PROXY_INSPEC\" --inject-missing-data \\\n    --readout-proxy \"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\" \\\n    | o2-tpc-raw-to-digits-workflow $ARGS_ALL \\\n    --dataspec \"$PROXY_INSPEC\" \\\n    --remove-duplicates \\\n    --configKeyValues \"$ARGS_ALL_CONFIG;TPCDigitDump.LastTimeBin=1000;\" \\\n    | o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/zampolli-workflow.sh"
        }
    ],
    "3aec225b928c3b5c83157e1ae54a669d825cfeedf4fa287e0d5e51da3e222872": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\n#export DDMODE=processing-disk                                        # DataDistribution mode - possible options include: processing, disk, processing-disk, and discard\nexport DDMODE=processing                                             # DataDistribution mode - valid options are: processing, disk, processing-disk, or discard\n\n# These settings can be used to retrieve the Workflow Repository via a specific version identifier\n#export GEN_TOPO_HASH=1                                              # Use a git hash to fetch the O2DataProcessing repository\n#export GEN_TOPO_SOURCE=v0.5                                         # Specify the git hash version to fetch",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/run_ext_dpl.sh"
        }
    ],
    "13e7eb30d4eb6f8ad4578dc8b7b9653bea5480ba075becc23e188f8faf68847e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to indicate the location of the workflow repository within your home directory\nexport GEN_TOPO_HASH=0                                             # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/zampolli/alice/O2DataProcessing       # Path to the O2DataProcessing repository\n\nexport EXTINPUT=1\nexport EPNSYNCMODE=1\nexport SYNCMODE=1\nexport SHMSIZE=128000000000\nexport INFOLOGGER_SEVERITY=warning\n\nexport EDJSONS_DIR=\"/home/ed/jsons\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/run_ext_dpl.sh"
        }
    ],
    "46aa4904b798339e381b84f17706097d6242cf112c25e9ba627c5c4d8c81cc2c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=testing/private/shahoian/workflows_dpl.desc # File containing the topology description library to load\nexport WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: List of detectors to perform reconstruction for (separated by commas)\nexport WORKFLOW_DETECTORS_QC=ALL                                     # Optional parameter for the workflow: List of detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameters for the workflow: List of detectors to perform calibration for\nexport WORKFLOW_PARAMETERS=QC,CTF,GPU                                # Additional parameters for the workflow: Quality Control, CTF, GPU\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes to use (default is set in the description library file)\nexport NHBPERTF=128                                                  # Number of HBF per TF\nexport ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/run_ext_dpl.sh"
        }
    ],
    "6e5526b7805c932f21ef2725261d00a92e7322d4106cb915ec3fc278f12e6cf5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"\n#export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"\"\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_proc.debugLevel=1;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/run_ext_dpl.sh"
        }
    ],
    "77be8f709200ee4045e0fc8cb5de5f5293288a47d39790761db32fd3877329c4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1\nexport MULTIPLICITY_FACTOR_REST=1\n\n\nfor wf in \"$@\"\ndo\n\n    echo\n    echo\n    echo Handling workflow $wf\n    export GEN_TOPO_WORKFLOW_NAME=$wf\n export WORKFLOWMODE=dds\n /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo/dplTest/${GEN_TOPO_WORKFLOW_NAME}.xml\n# export WORKFLOWMODE=print\n# /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo/dpl/${GEN_TOPO_WORKFLOW_NAME}.sh\n\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/run_ext_dpl.sh"
        }
    ],
    "bf7fea232b2726631a520daf2cda54b5481d6b81895ec8103c87486be401b826": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource /home/mfasel/alice/O2DataProcessing/common/setenv.sh\n\nPROXY_INSPEC=\"A:EMC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\n\nNCPU=20 #$(grep ^cpu\\\\scores /proc/cpuinfo | uniq |  awk '{print $4}')\nARGS_ALL=\"-b --session default --shm-segment-size $SHMSIZE\"\n#HOST='$(hostname -s)-ib'\nHOST=epn\n\nQC_CONFIG=consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/emc-qcmn-epnall-work\n#QC_CONFIG=json:///home/epn/odc/files/emcQCTasks_multinode.json\nINFOLOGGER_SEVERITY_RAWPROXY=warning\nSEVERITY_RAWPROXY=warning\nINFOLOGGER_SEVERITY=warning\nSEVERITY=warning\nINFOLOGGER_SEVERITY_QC=warning\nSEVERITY_QC=warning\n\n# CTF compression dictionary\nCTF_DICT=\"${FILEWORKDIR}/ctf_dictionary.root\"\n# minimum file size for CTF (accumulate CTFs until this size is reached)\nCTF_MINSIZE=\"500000000\"\nCTF_MAX_PER_FILE=10000",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/mfasel/runEMCRawToDigitsRecoPilelineQCAlllocalCTF.sh"
        }
    ],
    "6f85f908e897558ee407e24053d8113ac6ced9dcd28407b214a1426e018ce367": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "o2-dpl-raw-proxy $ARGS_ALL \\\n    --dataspec \"$PROXY_INSPEC\" --inject-missing-data \\\n    --readout-proxy \"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1'\" \\\n    --severity $SEVERITY_RAWPROXY \\\n    --infologger-severity $INFOLOGGER_SEVERITY_RAWPROXY \\\n    | o2-emcal-reco-workflow $ARGS_ALL \\\n    --input-type raw \\\n    --output-type cells \\\n    --no-root-input \\\n    --no-root-output \\\n    --no-mc \\\n    --EMCALRawToCellConverterSpec \"--fitmethod=\\\"gamma2\\\" --maxmessage=10\" \\\n    --severity $SEVERITY \\\n    --infologger-severity $INFOLOGGER_SEVERITY \\\n    --parallelism EMCALRawToCellConverterSpec:$NCPU \\\n    | o2-qc $ARGS_ALL \\\n    --config $QC_CONFIG \\\n    --local \\\n    --server-host $HOST \\\n    --severity $SEVERITY_QC \\\n    --infologger-severity $INFOLOGGER_SEVERITY_QC \\\n    | o2-emcal-entropy-encoder-workflow $ARGS_ALL \\\n    --ctf-dictionary \"${CTF_DICT}\" \\\n    --memory-factor 5 \\\n    --severity info \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/mfasel/runEMCRawToDigitsRecoPilelineQCAlllocalCTF.sh"
        }
    ],
    "2b7b3ca47c1f2d106afd04f3285e41b4f76d3c4aaaf63f6e08fe2938a0418ece": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "--ctf-dict \"${CTF_DICT}\" \\\n--mem-factor 5 \\\n--severity info \\\n--infologger-severity warning \\\n| o2-ctf-writer-workflow $ARGS_ALL \\\n--configKeyValues \"${CONFKEYVAL}\" \\\n--onlyDet $WORKFLOW_DETECTORS \\\n--ctf-dict \"${CTF_DICT}\" \\\n--output-directory $CTF_DIR \\\n--metadata-output-directory ${EPN2EOS_METAFILES_DIR} \\\n--minimum-file-size \"${CTF_MINSIZE}\" \\\n--maximum-ctf-per-file \"${CTF_MAX_PER_FILE}\" \\\n| o2-dpl-run $ARGS_ALL --dds ${WORKFLOWMODE_FILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/mfasel/runEMCRawToDigitsRecoPilelineQCAlllocalCTF.sh"
        }
    ],
    "5a9964099923f4badb50b1f80311a960cba0e29fd7de3bc6ab026a460077b01d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                      # ECS Partition\nexport DDMODE=processing-disk                                       # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n#export DDMODE=processing                                            # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# Use these settings to retrieve the Workflow Repository through a hash or tag\n#export GEN_TOPO_HASH=1                                             # Fetch O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                        # Git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_ext_dpl.sh"
        }
    ],
    "f8dbb727a7affa7926c59cc1e861d961b1495d2fab34314b76e958f40c940214": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/shahoian/alice/O2DataProcessing         # Path to the O2DataProcessing repository\n\nexport EXTINPUT=1\nexport EPNSYNCMODE=1\nexport SYNCMODE=1\nexport SHMSIZE=128000000000\nexport INFOLOGGER_SEVERITY=warning\n\nexport EDJSONS_DIR=\"/home/ed/jsons\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_ext_dpl.sh"
        }
    ],
    "11d4b0466024e2720610d7fc35d116f539ae48cbe57373f83e5d3e6308869a25": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=testing/private/shahoian/workflows_dpl.desc # Topology description file to load\nexport WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: Detectors to run reconstruction for\nexport WORKFLOW_DETECTORS_QC=ALL                                     # Optional parameter for the workflow: Detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameters for the workflow: Detectors to run calibration for\nexport WORKFLOW_PARAMETERS=QC,CTF,GPU                                # Additional parameters for the workflow: Quality Control, CTF, GPU\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes to use (default is set in the description library file)\nexport NHBPERTF=128                                                  # Number of HBF per TF\nexport ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_ext_dpl.sh"
        }
    ],
    "a7a3d42ecc127e797bfc94bc2c76ede612ef9267149615cae4f1b952a5f8a5da": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"\n#export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"\"\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_proc.debugLevel=1;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_ext_dpl.sh"
        }
    ],
    "d784de85fbc7725c335c4a6953d751b237b5b14acfc432aae3525e70f36297b4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1\nexport MULTIPLICITY_FACTOR_REST=1\n\nfor wf in \"$@\"\ndo\n export GEN_TOPO_WORKFLOW_NAME=$wf\n EXT=\"xml\"\n if [ ! -z $WORKFLOWMODE ] && [ $WORKFLOWMODE == \"print\" ]; then EXT=\"sh\"; fi\n /opt/alisw/el9/GenTopo/bin/gen_topo.sh > \"$HOME/gen_topo/dpl/${GEN_TOPO_WORKFLOW_NAME}.${EXT}\"\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_ext_dpl.sh"
        }
    ],
    "faad7aaf3d320ba0e8b084249bc1f46345a373dceb97dbea31279efa78e68e04": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\n#export DDMODE=processing-disk                                        # DataDistribution mode - possible options: processing, disk, processing-disk, discard\nexport DDMODE=processing                                             # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# These settings can be used to retrieve the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Use a git hash to fetch the O2DataProcessing repository\n#export GEN_TOPO_SOURCE=v0.5                                         # Specify the git hash to use",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_test.sh"
        }
    ],
    "8f64bcb680706e051ff174184c1ea500894ff0bb50dca44cc7b3f1b138cfbada": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Set the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=$HOME/alice/O2DataProcessing                  # Path to the O2DataProcessing repository\n\nexport EXTINPUT=1\nexport EPNSYNCMODE=1\nexport SYNCMODE=0\nexport CTFINPUT=0\nexport SHMSIZE=128000000000\nexport INFOLOGGER_SEVERITY=warning\n\nexport EDJSONS_DIR=\"/home/ed/jsons\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_test.sh"
        }
    ],
    "676932f0fcef0f560acde0620b869e2168f917843027803feb9fc48a33a760cb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=testing/private/shahoian/workflows_test.desc # Path to the topology description library file\nexport WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: Detectors to process for reconstruction (comma-separated list)\nexport WORKFLOW_DETECTORS_QC=ALL                                     # Optional parameter for the workflow: Detectors to process for quality control\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameters for the workflow: Detectors to process for calibration\nexport WORKFLOW_PARAMETERS=QC,CTF,GPU                                # Additional parameters for the workflow: Quality Control, CTF, GPU\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes to use (default set in the description library file)\nexport NHBPERTF=128                                                  # Number of HBF per TF\nexport ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_test.sh"
        }
    ],
    "424cb153ba5cf7bf1fe2fb547bf7c3257f2891e45d2ff65df14a1676fc08b455": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"\n#export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"\"\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_proc.debugLevel=1;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_test.sh"
        }
    ],
    "f4cdff3c1b88711bb820fe5956f3eb512e391423e46fbd7115bd6e0b59f53b0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export EPN2EOS_METAFILES_DIR=/data/epn2eos_tool/epn2eos\n\nexport MULTIPLICITY_FACTOR_RAWDECODERS=1\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1\nexport MULTIPLICITY_FACTOR_REST=1\n\nexport WORKFLOWMODE=print\n\nfor workflow in \"$@\"\ndo\n export GEN_TOPO_WORKFLOW_NAME=$workflow\n /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo/test/${GEN_TOPO_WORKFLOW_NAME}.xml\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_test.sh"
        }
    ],
    "e81e7324416c21cc11d06b98736c5f7d32e139dc28b62afa02bc9779068093fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing                                             # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# Use these settings to fetch the Workflow Repository using a hash / tag\n#export GEN_TOPO_HASH=1                                              # Fetch O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # Git hash to fetch\n\n# Use these settings to specify a path to the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Specify path to O2DataProcessing repository\nexport GEN_TOPO_SOURCE=$HOME/alice/O2DataProcessing                  # Path to O2DataProcessing repository",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext.sh"
        }
    ],
    "f5fc81eb84b412528bcd9de4badaecc594ba85fe02e96fd4d142f9b4d2d7c64c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=testing/private/shahoian/workflows.desc # File containing the topology description to load\nexport WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: Detectors to process for reconstruction (listed by comma)\nexport WORKFLOW_DETECTORS_QC=                                        # Optional parameter for the workflow: Detectors to process for quality control\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter for the workflow: Detectors to process for calibration\nexport WORKFLOW_PARAMETERS=                                          # Additional parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes to use (default is set in the description library file)\nexport NHBPERTF=256                                                  # Number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext.sh"
        }
    ],
    "a19e73ededabcb45df6c5d3c541460668f51a05f7dac865aede68ea5dd3ecdb2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "##---------------\njq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks)  | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing) | .dataSamplingPolicies += ($s.dataSamplingPolicies))' /home/epn/odc/files/tpcQCTasks_multinode_ALL.json /home/epn/jliu/itsEPNv2.json > /home/shahoian/alice/O2DataProcessing/testing/private/shahoian/qc/qc-tpcMNAll-itsEPNv2.json\njq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks)  | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing) | .dataSamplingPolicies += ($s.dataSamplingPolicies))' /home/epn/odc/files/tpcQCTasks_multinode_ALL.json /home/epn/jliu/itsEPNv2.json /home/epn/odc/files/qc-mft-cluster.json > /home/shahoian/alice/O2DataProcessing/testing/private/shahoian/qc/qc-tpcMNAll-itsEPNv2-mftClus.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext.sh"
        }
    ],
    "cb52d92ae5ca11a248057bb17a4bde7331b3603463d1fd48ccb8bfa513e58747": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    jq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks)  | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing) | .dataSamplingPolicies += ($s.dataSamplingPolicies))' /home/epn/odc/files/tpcQCTasks_multinode_ALL.json /home/epn/odc/files/qc-mft-cluster.json > /home/shahoian/alice/O2DataProcessing/testing/private/shahoian/qc/qc-tpcMNAll-mftClus.json\njq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks)  | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing) | .dataSamplingPolicies += ($s.dataSamplingPolicies))' /home/epn/odc/files/tpcQCTasks_multinode_ALL.json /home/epn/jliu/itsEPNv2.json /home/epn/odc/files/qc-mft-cluster.json /home/fnoferin/public/tof-qc-globalrun.json > /home/shahoian/alice/O2DataProcessing/testing/private/shahoian/qc/qc-tpcMNAll-itsEPNv2-mftClus-tofglobalrun.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext.sh"
        }
    ],
    "4ca08d9ad6ae198fb2f274a093fc9d51c26d6c53793a6aab35b5bb1a0f94fa13": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    jq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks) | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing) | .dataSamplingPolicies += ($s.dataSamplingPolicies))' /home/epn/odc/files/tpcQCTasks_multinode_ALL.json /home/epn/jliu/itsEPNv2.json /home/fnoferin/public/tof-qc-globalrun.json > /home/shahoian/alice/O2DataProcessing/testing/private/shahoian/qc/qc-tpcMNAll-itsEPNv2-tofglobalrun.json\n#jq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks) | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing) | .dataSamplingPolicies += ($s.dataSamplingPolicies))' /home/epn/jliu/itsEPNv2.json /home/epn/odc/files/qc-mft-cluster.json > /home/shahoian/alice/O2DataProcessing/testing/private/shahoian/qc/qc-itsEPNv2-mftClus.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext.sh"
        }
    ],
    "b55b15f9c7297f4f8b6d804d95c774cdb28817c9190938d2821cb9761364bc81": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    jq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks)  | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing) | .dataSamplingPolicies += ($s.dataSamplingPolicies))' /home/epn/odc/files/tpcQCTasks_multinode_ALL.json /home/fnoferin/public/tof-qc-globalrun.json > /home/shahoian/alice/O2DataProcessing/testing/private/shahoian/qc/qc-tpcMNAll-tofglobalrun.json \njq -n 'reduce inputs as $s (input; .qc.tasks += ($s.qc.tasks) | .qc.checks += ($s.qc.checks)  | .qc.externalTasks += ($s.qc.externalTasks) | .qc.postprocessing += ($s.qc.postprocessing) | .dataSamplingPolicies += ($s.dataSamplingPolicies))' /home/epn/odc/files/tpcQCTasks_multinode_ALL.json /home/epn/odc/files/qc-mft-cluster.json /home/fnoferin/public/tof-qc-globalrun.json > /home/shahoian/alice/O2DataProcessing/testing/private/shahoian/qc/qc-tpcMNAll-mftClus-tofglobalrun.json",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext.sh"
        }
    ],
    "0145d93b2ea92d36a2e8d914a6667fe6f55238f3eba881b6a1802ce9379d11dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for each wf in \"$@\"\ndo\n export GEN_TOPO_WORKFLOW_NAME=$wf\n /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo/test/${GEN_TOPO_WORKFLOW_NAME}.xml\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext.sh"
        }
    ],
    "90e4355e46b3ac6504df889fe12e0644512374c6c36fd2278d2d91ffe7acfe0b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing-disk                                        # DataDistribution mode - possible options include: processing, disk, processing-disk, or discard\n#export DDMODE=processing                                             # DataDistribution mode - possible options include: processing, disk, processing-disk, or discard\n\n# You can use these settings to retrieve the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Use a git hash to fetch the O2DataProcessing repository\n#export GEN_TOPO_SOURCE=v0.5                                         # Specify the git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_PB.sh"
        }
    ],
    "6b33914dc1ea7cbfbcc7f7c6f50c02e920093ad7a01936ec2c82b8d553fbd7da": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set these variables to indicate the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                           # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/shahoian/alice/O2DataProcessing     # Path to the O2DataProcessing repository\n\nexport EXTINPUT=1\nexport EPNSYNCMODE=1\nexport SYNCMODE=1\nexport SHMSIZE=128000000000\nexport INFOLOGGER_SEVERITY=warning\n\nexport EDJSONS_DIR=\"/home/ed/jsons\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_PB.sh"
        }
    ],
    "7c01f111ef603472ac00a2435a9e6be60a752f20da6bb5ed62655ca42e440de9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=testing/private/shahoian/workflows_PB.desc # Path to the topology description library file: Pilot Beam\nexport WORKFLOW_DETECTORS=ALL                                        # Optional workflow parameter: List of detectors to process for reconstruction (comma-separated)\nexport WORKFLOW_DETECTORS_QC=ALL                                     # Optional workflow parameter: List of detectors to process for quality control\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional workflow parameter: List of detectors to process for calibration\nexport WORKFLOW_PARAMETERS=QC,CTF,GPU                                # Additional workflow parameters: Quality Control, CTF, GPU\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes (default is set in the library file description)\nexport NHBPERTF=128                                                  # Number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_PB.sh"
        }
    ],
    "2d2ddc18d9bbcd0f1675748701c2fad1d2b3c1224a9c41913a695b77ff9844c9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    set NHBPERTF=128                                                      # Number of HBF per TF\nset ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_PB.sh"
        }
    ],
    "d5204066ba7a583e634eb3c63d9d39cebbbba3b5374774fd308f3bb30a7ca5f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export MULTIPLICITY_FACTOR_RAWDECODERS=1\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1\nexport MULTIPLICITY_FACTOR_REST=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_PB.sh"
        }
    ],
    "7e91d46fbbe1bd773f60ebf839bbd0a331c47f9695bc2826f0ad4700b174ea60": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_proc.debugLevel=1;GPU_proc.memoryScalingFactor=1.5;GPU_global.synchronousProcessing=0\"\nEXPORT CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nEXPORT CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"pvertexer.nSigmaTimeCut=100;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;\"\nEXPORT MULTIPLICITY_FACTOR_PROCESS_its_tracker=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_PB.sh"
        }
    ],
    "67831f1cd61dad3838bb1f6cbc110c2e8454fe72c85c8c2de2012fbfff27b16e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export MULTIPLICITY_FACTOR_PROCESS_its_tracker=4\nexport MULTIPLICITY_FACTOR_PROCESS_its_stf_decoder=4\nexport MULTIPLICITY_FACTOR_PROCESS_mft_stf_decoder=2\nexport MULTIPLICITY_FACTOR_PROCESS_itstpc_track_matcher=2\nexport MULTIPLICITY_FACTOR_PROCESS_tof_matcher=2\nexport MULTIPLICITY_FACTOR_PROCESS_mch_data_decoder=5",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_PB.sh"
        }
    ],
    "00966034392eae2c9ff9d7736f086b3f814650254564e5288686757200a90f99": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ITS_CONFIG=\" --tracking-mode sync_misaligned \"\n#export ITS_CONFIG=\" --tracking-mode cosmics \"\n\nexport WORKFLOW_EXTRA_PROCESSING_STEPS=\"MFT_RECO,MATCH_TPCTRD,MATCH_TPCTOF\"  #,MATCH_ITSTPC,MATCH_TPCTRD,MATCH_ITSTPCTRD,MATCH_TPCTOF,MATCH_ITSTPCTOF\"\nexport WORKFLOW_DETECTORS_FLP_PROCESSING=\"TOF,FT0,FV0,FDD\"\n#export WORKFLOW_DETECTORS_MATCHING=\nexport ARGS_EXTRA_PROCESS_o2_tpcits_match_workflow=\" --ignore-bc-check \"\n\nexport ED_TRACKS=\"ITS,TPC,ITS-TPC,ITS-TPC-TOF,TPC-TOF,MFT\"\nexport ED_CLUSTERS=\"ITS,TPC,TOF,MFT\"\n\nfor wf in \"$@\"\ndo\n export GEN_TOPO_WORKFLOW_NAME=$wf\n EXT=\"xml\"   \n [ ! -z $WORKFLOWMODE ] && [ $WORKFLOWMODE == \"print\" ] && EXT=\"sh\"\n /opt/alisw/el9/GenTopo/bin/gen_topo.sh > \"$HOME/gen_topo/PB/${GEN_TOPO_WORKFLOW_NAME}.${EXT}\"\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/runTF_PB.sh"
        }
    ],
    "954be21e354f052fc8e61303a4602f717b05285440b49f0d73408b3c59061de0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\n#export DDMODE=processing-disk                                        # DataDistribution mode - possible options: processing, disk, processing-disk, discard\nexport DDMODE=processing                                             # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# Use these settings to access the Workflow Repository via a specific hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # Git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_PB.sh"
        }
    ],
    "e26da0cb4821fdbaeff5e7498d74394be6ae9924491c83008825c4ea7a9b8639": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Set path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/shahoian/alice/O2DataProcessing         # Path to the O2DataProcessing repository\n\nexport EXTINPUT=1\nexport EPNSYNCMODE=1\nexport SYNCMODE=1\nexport SHMSIZE=128000000000\nexport INFOLOGGER_SEVERITY=warning\n\nexport EDJSONS_DIR=\"/home/ed/jsons\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_PB.sh"
        }
    ],
    "3ade96652da5a2821b28feb9b5d9fa391cec94882d77cb68c9df56fac4ff20bc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=testing/private/shahoian/workflows_PB.desc # Topology description library file to be loaded: Pilot Beam\n    export WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: List of detectors to run reconstruction for (separated by commas)\n    export WORKFLOW_DETECTORS_QC=ALL                                     # Optional parameter for the workflow: List of detectors to run quality control for\n    export WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter for the workflow: List of detectors to run calibration for\n    export WORKFLOW_PARAMETERS=QC,CTF,GPU                                # Additional parameters for the workflow: Quality Control, CTF, GPU\n    export RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes to be used (default is set in the description library file)\n    export NHBPERTF=128                                                  # Number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_PB.sh"
        }
    ],
    "e51e05c424ef92a43c5c9ccf17f04d5a4429ab446fdb526d86ff641f9cecfc41": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    set NHBPERTF=128                                                      # Number of HBF per TF\nset ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_PB.sh"
        }
    ],
    "24be9705c15ecf475878ed957840a6aaf5ed20a34b83c4c76da00cd93fb839e5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT MULTIPLICITY_FACTOR_RAWDECODERS=1\nEXPORT MULTIPLICITY_FACTOR_CTFENCODERS=1\nEXPORT MULTIPLICITY_FACTOR_REST=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_PB.sh"
        }
    ],
    "70ab017ecf2ecaed4038d9005a40be2169d6e1e355bf5d0b8b85a6982dcf581a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_proc.debugLevel=1;GPU_proc.memoryScalingFactor=1.5\"\nEXPORT CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nEXPORT CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"pvertexer.nSigmaTimeCut=100;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;\"\nEXPORT MULTIPLICITY_FACTOR_PROCESS_its_tracker=4",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_PB.sh"
        }
    ],
    "9b9b9a903eda0b8beffd30818b8a5c0d6a3256404101a17617d400d5086554eb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export MULTIPLICITY_FACTOR_PROCESS_its_tracker=4\nexport MULTIPLICITY_FACTOR_PROCESS_its_stf_decoder=4\nexport MULTIPLICITY_FACTOR_PROCESS_mft_stf_decoder=2\nexport MULTIPLICITY_FACTOR_PROCESS_itstpc_track_matcher=2\nexport MULTIPLICITY_FACTOR_PROCESS_tof_matcher=2\nexport MULTIPLICITY_FACTOR_PROCESS_mch_data_decoder=5",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_PB.sh"
        }
    ],
    "1a96f8432b877c2812e5d0620b6f148844ed478aacb5ffeca6aa508072f3fa0b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ITS_CONFIG=\" --tracking-mode sync_misaligned \"\n#export ITS_CONFIG=\" --tracking-mode cosmics \"\n\nexport WORKFLOW_EXTRA_PROCESSING_STEPS=\"MFT_RECO,MATCH_TPCTRD,MATCH_TPCTOF\"  #,MATCH_ITSTPC,MATCH_TPCTRD,MATCH_ITSTPCTRD,MATCH_TPCTOF,MATCH_ITSTPCTOF\"\nexport WORKFLOW_DETECTORS_FLP_PROCESSING=\"TOF,FT0,FV0,FDD\"\n#export WORKFLOW_DETECTORS_MATCHING=\nexport ARGS_EXTRA_PROCESS_o2_tpcits_match_workflow=\" --ignore-bc-check \"\n\nfor wf in \"$@\"\ndo\n export GEN_TOPO_WORKFLOW_NAME=$wf\n EXT=\"xml\"   \n [ ! -z $WORKFLOWMODE ] && [ $WORKFLOWMODE == \"print\" ] && EXT=\"sh\"\n /opt/alisw/el9/GenTopo/bin/gen_topo.sh > \"$HOME/gen_topo/PB/${GEN_TOPO_WORKFLOW_NAME}.${EXT}\"\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_PB.sh"
        }
    ],
    "f9b9579d02dfd00cfeb1233a4951b3225f203231f3c1c70d7c90a928c5a41f9a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\n#export DDMODE=processing-disk                                        # DataDistribution mode - possible options: processing, disk, processing-disk, discard\nexport DDMODE=processing                                             # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# These settings can be used to retrieve the Workflow Repository via a specific version\n#export GEN_TOPO_HASH=1                                              # Fetch O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # Git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext_dpl.sh"
        }
    ],
    "6eaa2d3b2c69c85ec706e99c9ddb106ff3c46bf517d63b22e3eb8077e9ec1993": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define path to O2DataProcessing repository\nexport GEN_TOPO_SOURCE=$HOME/alice/O2DataProcessing                  # Path to O2DataProcessing repository\n\nexport EXTINPUT=1\nexport EPNSYNCMODE=1\nexport SYNCMODE=1\nexport SHMSIZE=128000000000\nexport INFOLOGGER_SEVERITY=warning\n\nexport EDJSONS_DIR=\"/home/ed/jsons\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext_dpl.sh"
        }
    ],
    "36aaa615c10217059b9e7820a75c2bc3f95c6a098b2702233f4301de1e00b411": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=testing/private/shahoian/workflows_dpl.desc # The file containing the topology description to be loaded\n    export WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: The detectors for which reconstruction should be performed (separated by commas)\n    export WORKFLOW_DETECTORS_QC=ALL                                     # Optional parameter for the workflow: The detectors for which quality control should be performed\n    export WORKFLOW_DETECTORS_CALIB=                                     # Optional parameters for the workflow: The detectors for which calibration should be performed\n    export WORKFLOW_PARAMETERS=QC,CTF,GPU                                # Additional parameters for the workflow: Quality control, CTF, and GPU\n    export RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes to use (the default is specified in the description library file)\n    export NHBPERTF=128                                                  # The number of HBF per TF\n    export ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext_dpl.sh"
        }
    ],
    "a48755cbe21c2f4184c355afadb64f1173b95f36ec64660b51dcd9aa52e7b6fc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ALL_EXTRA_CONFIG=\"HBFUtils.nHBFPerTF=$NHBPERTF\"\n#export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"\"\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_proc.debugLevel=1;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext_dpl.sh"
        }
    ],
    "add92d93152b59d86bd54a2636af3c451cad42b2a0700954ac0dee96efaac45b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1\nexport MULTIPLICITY_FACTOR_REST=1\n\n#[ -z $WORKFLOWMODE ] && export WORKFLOWMODE=\"dds\"\n\nfor wf in \"$@\"\ndo\n export GEN_TOPO_WORKFLOW_NAME=$wf\n EXT=\"xml\"\n [ ! -z $WORKFLOWMODE ] && [ $WORKFLOWMODE == \"print\" ] && EXT=\"sh\"\n /opt/alisw/el9/GenTopo/bin/gen_topo.sh > \"$HOME/gen_topo/dpl/${GEN_TOPO_WORKFLOW_NAME}.${EXT}\"\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/shahoian/run_ext_dpl.sh"
        }
    ],
    "2dfcd07b9e91583e7ca86e88a757d142aa7cfbdac50abd57608ac41bfbe3efd3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nARGS_ALL=\"--session default --severity $SEVERITY --shm-segment-id $NUMAID --shm-segment-size $SHMSIZE\"\nARGS_ALL+=\" --infologger-severity $SEVERITY\"\n#CTFOUT=\"/home/afurs/public/out/\"\n#CTFOUT=\"${EPN_DATA_DIR}\"\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi        # Directory for storing dictionary files\n#CTFOUT=$FILEWORKDIR\n#CTFOUT=$FILEWORKDIR\n#FILEWORKDIR=$CTFOUT\n#ARGS_ALL+=\" --monitoring-backend influxdb-unix:///tmp/telegraf.sock\"\nARGS_ALL_CONFIG=\"NameConf.mDirGRP=$FILEWORKDIR;NameConf.mDirGeom=$FILEWORKDIR;NameConf.mDirCollContext=$FILEWORKDIR;NameConf.mDirMatLUT=$FILEWORKDIR;keyval.input_dir=$FILEWORKDIR;keyval.output_dir=/dev/null\"\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=1\n# Output directory for CTF, to write to the current directory, remove `--output-dir  $CTFOUT` from o2-ctf-writer-workflow or set to `CTFOUT=\\\"\"\"\\\"`\n# The directory must exist\n# ARGS_CTF=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "a48606a89d085d04cf8b0a616cf0225dc4b302814cbff06164b4f1a56fbe0ad7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ARGS_CTF=\"--min-file-size 500000000 --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"x:FT0/RAWDATA;y:FV0/RAWDATA;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "7313b9fa45d1bc5a4d8632f60395ccde1f64b6b58903fe7e8be95ffc50fc6c85": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fv0-flp-dpl-workflow ${ARGS_ALL} --disable-root-output --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline fv0-datareader-dpl:$NTHREADS \\\n| o2-ft0-flp-dpl-workflow ${ARGS_ALL} --disable-root-output --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline ft0-datareader-dpl:$NTHREADS \\\n| o2-qc ${ARGS_ALL} --local --host epn --config json://${MYDIR}/ft0-fv0-digits-ds.json \\\n| o2-ft0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-fv0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --onlyDet FT0,FV0 --output-dir $CTF_DIR --ctf-dict-dir $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "87b5079f059068c0a3a513e9b600093952b48bcfad15aa73d4db1879a654d4db": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# | o2-qc ${ARGS_ALL} --local --host epn ---config json://${MYDIR}/ft0-digits-ds.json \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "f4edb8e61f3ff82e8e23ecbc4b6181799ab4a05569e142eb742bf38d05c61c06": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS partition\nexport DDMODE=processing-disk                                            # DataDistribution mode, with options: processing, disk, processing-disk, discard\n# Configure to retrieve the Workflow Repository using a specific hash or tag\nexport GEN_TOPO_HASH=1                                              # Use a git hash to fetch the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=v1.3                                         # Specify the git hash version to fetch",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_ft0_fv0_digits_qc_ctf.sh"
        }
    ],
    "a65c65e8bb140578176aac4f03e261a5f47307ceddd0eb2c0a77ecd4cdbb62bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set these parameters to define the path to the O2DataProcessing repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing            # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/private/afurs/workflows.desc    # Library file for loading workflow descriptions\nexport GEN_TOPO_WORKFLOW_NAME=ft0-fv0-digits-qc-ctf                     # Name of the workflow within the library\nexport WORKFLOW_DETECTORS=FT0,FV0                                      # Optional workflow parameter: List of detectors for reconstruction (comma-separated)\nexport WORKFLOW_DETECTORS_QC=FT0,FV0                                       # Optional workflow parameter: List of detectors for quality control\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional workflow parameter: List of detectors for calibration",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_ft0_fv0_digits_qc_ctf.sh"
        }
    ],
    "ba70848c1b7ae56823d0827138b30b7524f7c6508eef72b4fd8312e501c44098": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                          # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Change the number of EPN compute nodes to use (default is set in the description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_ft0_fv0_digits_qc_ctf.sh"
        }
    ],
    "a81819d3ba6cf14eaa7c45c669f201857f5339e1c89eb8374f85a3fa4f8a5263": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT MULTIPLICITY_FACTOR_RAWDECODERS=1                              # Multiplier for the raw decoders count\nEXPORT MULTIPLICITY_FACTOR_CTFENCODERS=1                              # Multiplier for the CTF encoders count\nEXPORT MULTIPLICITY_FACTOR_REST=1                                     # Multiplier for other processes count\n\nEXPORT OUTPUT_FILE_NAME=$HOME/topologies/ft0-fv0-digits-qc-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Created XML topology file $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_ft0_fv0_digits_qc_ctf.sh"
        }
    ],
    "fd58ed5f375581f5f8f125e9a62e3d02490c5c613cb414cb0e99a8f75f3b7eb9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nARGS_ALL=\"--session default --severity $SEVERITY --shm-segment-id $NUMAID --shm-segment-size $SHMSIZE\"\nARGS_ALL+=\" --infologger-severity $SEVERITY\"\n#CTFOUT=\"/home/afurs/public/out/\"\n#CTFOUT=\"${EPN_DATA_DIR}\"\nif [ -z $CTF_DIR ];                  then CTF_DIR=$FILEWORKDIR; fi        # Directory for storing dictionary files\n#CTFOUT=$FILEWORKDIR\n#CTFOUT=$FILEWORKDIR\n#FILEWORKDIR=$CTFOUT\n#ARGS_ALL+=\" --monitoring-backend influxdb-unix:///tmp/telegraf.sock\"\nARGS_ALL_CONFIG=\"NameConf.mDirGRP=$FILEWORKDIR;NameConf.mDirGeom=$FILEWORKDIR;NameConf.mDirCollContext=$FILEWORKDIR;NameConf.mDirMatLUT=$FILEWORKDIR;keyval.input_dir=$FILEWORKDIR;keyval.output_dir=/dev/null\"\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=1\n# Output directory for CTF, to write to the current directory, remove `--output-dir  $CTFOUT` from o2-ctf-writer-workflow or set to `CTFOUT=\\\"\"\"\\\"`\n# The directory must exist\n# ARGS_CTF=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/fdd-ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "58304aac47b9c85869770079ebac316c5de4437e3f5f0b198e8171d3db6e322e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ARGS_CTF=\"--min-file-size 500000000 --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"x:FT0/RAWDATA;y:FV0/RAWDATA;z:FDD/RAWDATA;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/fdd-ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "1ddeffe6edb32eaec99ad744673371cfcf4506b0a476b38c8d94ecf4c940c8bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fdd-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline fdd-datareader-dpl:$NTHREADS \\\n| o2-ft0-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline ft0-datareader-dpl:$NTHREADS \\\n| o2-fv0-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline fv0-datareader-dpl:$NTHREADS \\\n| o2-qc ${ARGS_ALL} --local --host epn --config json://${MYDIR}/fdd-ft0-fv0-digits-ds.json \\\n| o2-fdd-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ft0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-fv0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/fdd-ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "55bdc000ef8eb2e6a2cd4a47eac03c6efc7d3f0031041e4c3423456e3142c224": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| o2-fv0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --output-detectors FDD,FT0,FV0 --output-directory $CTF_DIR --dictionary-directory $FILEWORKDIR --output-format ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --data-source-file ${WORKFLOWMODE_FILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/fdd-ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "9ed81313f7aff3521b53c3450fc2ea5e2b4add38e351ba73c1977370e229938f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# | o2-qc ${ARGS_ALL} --local --host epn ---config json://${MYDIR}/ft0-digits-ds.json \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/fdd-ft0-fv0-digits-qc-ctf.sh"
        }
    ],
    "e07a517ac347bbaee7266275ffbcba7fee7d4f19527aeb954c02df419c417632": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                         # ECS Partition\nexport DDMODE=processing-disk                                           # DataDistribution mode - potential options: processing, disk, processing-disk, discard\n\n# These settings can be utilized to retrieve the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                                # Fetch O2DataProcessing repository using a specific git hash\n#export GEN_TOPO_SOURCE=v0.5                                           # The git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_fdd_ft0_fv0_ctf.sh"
        }
    ],
    "7c5164c24250482cfb7dfda8d19a74ffb08a0e31a5c856d06331eeb9dc445c6a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set these variables to define the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                                  # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                      # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/private/afurs/workflows.desc       # Specify the topology description library file to load\nexport GEN_TOPO_WORKFLOW_NAME=fdd-ft0-fv0-ctf                          # Name of the workflow within the topology description library\nexport WORKFLOW_DETECTORS=FDD,FT0,FV0                                  # Optional parameter for the workflow: Detectors to be included in the reconstruction process (comma-separated list)\nexport WORKFLOW_DETECTORS_QC=FDD,FT0,FV0                               # Optional parameter for the workflow: Detectors to be included in the quality control process\nexport WORKFLOW_DETECTORS_CALIB=                                       # Optional parameter for the workflow: Detectors to be included in the calibration process",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_fdd_ft0_fv0_ctf.sh"
        }
    ],
    "cedc9a19abf697bb51438e70d8432a271503b3f830c539692c7c3cd50f8e063e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Optionally change the number of EPN compute nodes (default is set in the description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_fdd_ft0_fv0_ctf.sh"
        }
    ],
    "3067f059ec72791167613ded4a602dc8ce9a34b4fc56ebbcc3aaee55ffa00024": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT MULTIPLICITY_FACTOR_RAWDECODERS=1                             # Multiplier for the raw decoders count\nEXPORT MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Multiplier for the CTF encoders count\nEXPORT MULTIPLICITY_FACTOR_REST=1                                    # Multiplier for other processes\n\nEXPORT OUTPUT_FILE_NAME=$HOME/topologies/fdd-ft0-fv0-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Created XML topology file $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_fdd_ft0_fv0_ctf.sh"
        }
    ],
    "c8e4ffd3df68a9ad99d4369874eaa45d27135cf58c43f9068127bfcd75751486": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nARGS_ALL=\"--session default --severity $SEVERITY --shm-segment-id $NUMAID --shm-segment-size $SHMSIZE\"\nARGS_ALL+=\" --infologger-severity $SEVERITY\"\n#CTFOUT=\"/home/afurs/public/out/\"\n#CTFOUT=\"${EPN_DATA_DIR}\"\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi        # Directory for storing dictionary files\n#CTFOUT=$FILEWORKDIR\n#CTFOUT=$FILEWORKDIR\n#FILEWORKDIR=$CTFOUT\n#ARGS_ALL+=\" --monitoring-backend influxdb-unix:///tmp/telegraf.sock\"\nARGS_ALL_CONFIG=\"NameConf.mDirGRP=$FILEWORKDIR;NameConf.mDirGeom=$FILEWORKDIR;NameConf.mDirCollContext=$FILEWORKDIR;NameConf.mDirMatLUT=$FILEWORKDIR;keyval.input_dir=$FILEWORKDIR;keyval.output_dir=/dev/null\"\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Output directory for CTF, set to the current directory or remove `--output-dir  $CTFOUT` from o2-ctf-writer-workflow\n# The directory must exist\n# ARGS_CTF=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/ft0-fv0-ctf.sh"
        }
    ],
    "5b70aa0519cff8ef02f57bb366e3dcb2d02c5428d3e6cc81e49fb3f5d0a16859": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ARGS_CTF=\"--min-file-size 500000000 --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"digft0:FT0/DIGITSBC/0;chanft0:FT0/DIGITSCH/0;digfv0:FV0/DIGITSBC/0;chanfv0:FV0/DIGITSCH/0;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/ft0-fv0-ctf.sh"
        }
    ],
    "974c205b9753a2c027703c9190906c25fc8ec83785601afd247d1d6f1e5e82ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "=document:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-ft0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-fv0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --onlyDet FT0,FV0 --output-dir $CTF_DIR --ctf-dict-dir $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE}\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/ft0-fv0-ctf.sh"
        }
    ],
    "89e527710ec6bb31c49904a252b5de2ecae8131ad39c234231e6d35e444e74fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing-disk                                            # Mode for distributing data - options include: processing, disk, processing-disk, or discard\n# Use these settings to access the Workflow Repository via a specific version identifier\nexport GEN_TOPO_HASH=1                                              # Retrieve the O2DataProcessing repository using a git hash\nexport GEN_TOPO_SOURCE=v1.3                                         # Git hash to use for the retrieval",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_fdd_ft0_fv0_digits_qc_ctf.sh"
        }
    ],
    "06f0b30c34f617d906597fdd78559942a8f4c26fdbcd3971713229cb2f78050a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the path to the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                             # Set the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing             # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/private/afurs/workflows.desc   # Specify the topology description library file to load\nexport GEN_TOPO_WORKFLOW_NAME=fdd-ft0-fv0-digits-qc-ctf                     # Name of the workflow in the topology description library\nexport WORKFLOW_DETECTORS=FDD,FT0,FV0                                      # Optional parameter for the workflow: List of detectors to run reconstruction for (separated by commas)\nexport WORKFLOW_DETECTORS_QC=FDD,FT0,FV0                                       # Optional parameter for the workflow: List of detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameters for the workflow: List of detectors to run calibration for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_fdd_ft0_fv0_digits_qc_ctf.sh"
        }
    ],
    "2e4779366d2bea707f0ad6e8796fdb924b7c5e9a8b62f90d6e89439b892df2dd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                          # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes (the default is set in the description library file)\nexport NHBPERTF=128                                                  # Specify the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_fdd_ft0_fv0_digits_qc_ctf.sh"
        }
    ],
    "2fbb780a1391ed976562ebe4aca0b3c365209075ef966820f51ffa24a4881734": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                             # Scaling factor for raw decoders\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Scaling factor for CTF encoders\nexport MULTIPLICITY_FACTOR_REST=1                                    # Scaling factor for other processes\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/fdd-ft0-fv0-digits-qc-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo XML topology $OUTPUT_FILE_NAME generated successfully\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_fdd_ft0_fv0_digits_qc_ctf.sh"
        }
    ],
    "2e81d253e62d5c8de5d3f031648531b5b54be14e0eb26c8622b1fef91bf41d27": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS partition\nexport DDMODE=processing-disk                                             # DataDistribution mode - possible options include: processing, disk, processing-disk, discard\n\n# Configure these parameters to retrieve the Workflow Repository through a hash or tag\n#export GEN_TOPO_HASH=1                                              # Use a git hash to fetch the O2DataProcessing repository\n#export GEN_TOPO_SOURCE=v0.5                                         # Specify the git hash to be used for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_ft0_fv0_ctf.sh"
        }
    ],
    "51e6c86c5c51230e946fec9153f028e0d7304d334f3f541f773ff1cde0dac600": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                  # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/private/afurs/workflows.desc    # Library file containing the topology description to load\nexport GEN_TOPO_WORKFLOW_NAME=ft0-fv0-ctf                # Name of the workflow within the topology description library\nexport WORKFLOW_DETECTORS=FT0,FV0                                        # Optional parameter for the workflow: List of detectors to perform reconstruction on (comma-separated)\nexport WORKFLOW_DETECTORS_QC=FT0,FV0                                     # Optional parameter for the workflow: List of detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameters for the workflow: List of detectors to run calibration for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_ft0_fv0_ctf.sh"
        }
    ],
    "ebb1082a1284a2ab0700b1b1ede0819958cc5230be7ba9fa77c917c7540dc217": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes (default specified in the description library file)\nexport NHBPERTF=128                                                  # Set the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_ft0_fv0_ctf.sh"
        }
    ],
    "1f8d48af335c5800e186f82be15f69d15b9cb598f4d12c3bfdfd2f9ee9328c9e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                            # Scaling factor for the number of raw decoders\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Scaling factor for the number of CTF encoders\nexport MULTIPLICITY_FACTOR_REST=1                                   # Scaling factor for other processes\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/ft0-fv0-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Successfully generated XML topology file $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/run_ft0_fv0_ctf.sh"
        }
    ],
    "8429554d0822079544599cf5edc250aebbb66417a3a7bc259bf3412b1402f370": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nARGS_ALL=\"--session default --severity $SEVERITY --shm-segment-id $NUMAID --shm-segment-size $SHMSIZE\"\nARGS_ALL+=\" --infologger-severity $SEVERITY\"\n#CTFOUT=\"/home/afurs/public/out/\"\n#CTFOUT=\"${EPN_DATA_DIR}\"\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi        # Directory for storing dictionary files\n#CTFOUT=$FILEWORKDIR\n#CTFOUT=$FILEWORKDIR\n#FILEWORKDIR=$CTFOUT\n#ARGS_ALL+=\" --monitoring-backend influxdb-unix:///tmp/telegraf.sock\"\nARGS_ALL_CONFIG=\"NameConf.mDirGRP=$FILEWORKDIR;NameConf.mDirGeom=$FILEWORKDIR;NameConf.mDirCollContext=$FILEWORKDIR;NameConf.mDirMatLUT=$FILEWORKDIR;keyval.input_dir=$FILEWORKDIR;keyval.output_dir=/dev/null\"\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Output directory for CTF, to write to the current directory, remove `--output-dir  $CTFOUT` from o2-ctf-writer-workflow or set to `CTFOUT=\\\"\"\"\\\"`\n# The directory must exist\n# ARGS_CTF=\"\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/fdd-ft0-fv0-ctf.sh"
        }
    ],
    "afb0f91f0bc0deaedcc299bf439f44a6742197840e229172cff5a07fcea00918": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ARGS_CTF=\"--min-file-size 500000000  --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"digfdd:FDD/DIGITSBC/0;chanfdd:FDD/DIGITSCH/0;digft0:FT0/DIGITSBC/0;chanft0:FT0/DIGITSCH/0;digfv0:FV0/DIGITSBC/0;chanfv0:FV0/DIGITSCH/0;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/fdd-ft0-fv0-ctf.sh"
        }
    ],
    "84acff98e4fcdacedd598feee7ac0c2c57f2de58dff273ace83e4e759e7c62ea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fdd-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ft0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-fv0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --output-detectors FDD,FT0,FV0 --output-directory $CTF_DIR --ctf-dictionary-directory $FILEWORKDIR --output-format ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --data-dispatching-service ${WORKFLOWMODE_FILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/afurs/fdd-ft0-fv0-ctf.sh"
        }
    ],
    "0e2c9128fc1328145251b5733c9436db180b89666fc9c3fb21c05ccfc0aaaecd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing                                             # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# Utilize these parameters to access the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.13                                        # Git hash to use\n\n# Use these to set a specific path to the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define path to O2DataProcessing repository\nexport GEN_TOPO_SOURCE=$HOME/alice/O2DataProcessing                  # Path to O2DataProcessing repository",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/calib/run.sh"
        }
    ],
    "5f1194b88b2b759f7a45e7e88d6c85952c1d8f5a92bab12f9d587d34fb3c9d1d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=production/standalone-calibration.desc  # The file containing the topology description library to be loaded\nexport WORKFLOW_DETECTORS=TOF                                        # Optional setting for the workflow: List of detectors to perform reconstruction on (separated by commas)\nexport WORKFLOW_DETECTORS_QC=TOF                                     # Optional setting for the workflow: List of detectors to perform quality control on\nexport WORKFLOW_DETECTORS_CALIB=TOF                                  # Optional setting for the workflow: List of detectors to perform calibration on\nexport WORKFLOW_DETECTORS_RECO=TOF                                   # Optional setting for the workflow: List of detectors to perform reconstruction on\nexport WORKFLOW_DETECTORS_FLP_PROCESSING=                            # Optional setting for the workflow: List of detectors to perform further processing on\nexport WORKFLOW_PARAMETERS=QC,CALIB                                  # Additional settings for the workflow",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/calib/run.sh"
        }
    ],
    "c17e8b278acd6f714f780039a14bb7ba3749992a01c1c61164f4965ae16d4a06": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes (default value defined in the description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF\nexport MULTIPLICITY_FACTOR_RAWDECODERS=1                             # Scale the number of raw decoders by this factor\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Scale the number of CTF encoders by this factor\nexport MULTIPLICITY_FACTOR_REST=1                                    # Scale the number of other processes by this factor",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/calib/run.sh"
        }
    ],
    "56cc61f166c2b3f970a96640bc99134f65c92b7e08f990061e80fed478eb343d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for each wf in \"$@\"\ndo\n    echo\n    echo\n    echo Handling workflow $wf\n    export GEN_TOPO_WORKFLOW_NAME=$wf\n    export WORKFLOWMODE=dds\n    /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo_calib/dplTest/${GEN_TOPO_WORKFLOW_NAME}.xml\n    # export WORKFLOWMODE=print\n    # /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $HOME/gen_topo_calib/dpl/${GEN_TOPO_WORKFLOW_NAME}.sh\n\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/private/zampolli/calib/run.sh"
        }
    ],
    "8bae66f8f7782d5bf52ec357473f661f76844e68746e5dbbac4b093e17ecc5e9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# shellcheck disable=SC1091\nsource testing/detectors/MID/mid_common.sh\n\nWORKFLOW=\"o2-dpl-raw-proxy $ARGS_ALL --dataspec \\\"$MID_RAW_PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"$MID_DPL_CHANNEL_CONFIG\\\" | \"\nWORKFLOW+=\"o2-mid-raw-to-digits-workflow $ARGS_ALL $MID_RAW_TO_DIGITS_OPTS | \"\nWORKFLOW+=\"o2-mid-calibration-workflow $ARGS_ALL | \"\nWORKFLOW+=\"o2-calibration-ccdb-populator-workflow $ARGS_ALL --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --ccdb-path=\\\"http://o2-ccdb.internal\\\" --sspec-min 0 --sspec-max 0 | \"\nWORKFLOW+=\"o2-calibration-ccdb-populator-workflow $ARGS_ALL --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --ccdb-path=\\\"${DCSCCDBSERVER:-http://alio2-cr1-flp199-ib:8083}\\\" --sspec-min 1 --sspec-max 1 --name-extension dcs | \"\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/MID/mid-calib-workflow.sh"
        }
    ],
    "19e142fe573da41488658e16a85ef71c13746a19bd8d47da6b36edb71cf694d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ \"$WORKFLOWMODE\" == \"print\" ]; then\n    echo Workflow command:\n    echo \"$WORKFLOW\" | sed \"s/| */|\\n/g\"\nelse\n    # Run the assembled command\n    WORKFLOW+=\" --$WORKFLOWMODE\"\n    eval \"$WORKFLOW\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/MID/mid-calib-workflow.sh"
        }
    ],
    "91a62eb22c9a4d963c4a4bd74aeb4d06f797fb3b42ee2669db5b79a735302a61": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# shellcheck disable=SC1091\nsource testing/detectors/MID/mid_common.sh\n\nWORKFLOW=\"o2-dpl-raw-proxy $ARGS_ALL --dataspec \\\"$MID_RAW_PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"$MID_DPL_CHANNEL_CONFIG\\\" | \"\nWORKFLOW+=\"o2-mid-raw-to-digits-workflow $ARGS_ALL $MID_RAW_TO_DIGITS_OPTS | \"\nWORKFLOW+=\"o2-mid-entropy-encoder-workflow $ARGS_ALL | \"\nWORKFLOW+=\"o2-ctf-writer-workflow $ARGS_ALL $MID_CTF_WRITER_OPTS | \"\nWORKFLOW+=\"o2-qc $ARGS_ALL --config json://$FILEWORKDIR/mid-qcmn-epn-digits.json $MID_QC_EPN_OPTS | \"\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT\"\n\nif [ \"$WORKFLOWMODE\" == \"print\" ]; then\n    echo The workflow command is:\n    echo \"$WORKFLOW\" | sed \"s/| */|\\n/g\"\nelse\n    # Execute the assembled command\n    WORKFLOW+=\" --$WORKFLOWMODE\"\n    eval \"$WORKFLOW\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/MID/mid-raw-to-ctf-qc-workflow.sh"
        }
    ],
    "afe8db67606db761d53a22673a10988036e6928090bb4713b9b798f148525142": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# shellcheck disable=SC1091\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nMID_PROXY_INSPEC_EOS=\"eos:***/INFORMATION\"\nMID_PROXY_INSPEC_DD=\"dd:FLP/DISTSUBTIMEFRAME/0\"\nMID_RAW_PROXY_INSPEC=\"A:MID/RAWDATA;$MID_PROXY_INSPEC_DD;$MID_PROXY_INSPEC_EOS\"\nMID_DIGITS_PROXY_INSPEC=\"A:MID/DATA/0;B:MID/DATAROF/0;$MID_PROXY_INSPEC_DD;$MID_PROXY_INSPEC_EOS\"\nMID_DPL_CHANNEL_CONFIG=\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1\"\nexport FILEWORKDIR=\"/home/dstocco/config\" #FIXME: this should be removed from gen_topo.sh\nMID_RAW_TO_DIGITS_OPTS=\"--feeId-config-file \\\"$FILEWORKDIR/feeId_mapper.txt\\\"\"\nMID_CTF_WRITER_OPTS=\"--output-directory \\\"$CTF_DIR\\\" --only-det \\\"MID\\\" --min-file-size 500000000 --max-ctf-per-file 10000 --meta-output-directory \\\"$EPN2EOS_METAFILES_DIR\\\"\"\nMID_EPN_QC_OPTS=\"--local --host epn\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/MID/mid_common.sh"
        }
    ],
    "822496c5cc98c1fec8798ac2aa5d21ae17031101882cdf82c44a5f025a176b80": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\ncalibration_node=\"epn007-ib:30453\"\n\nSEVERITY=warning\nsource common/getCommonArgs.sh\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nPROXY_INSPEC=\"x:TOF/CRAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nNTHREADS=2\n# Set the output directory for the CTF to the current directory if not specified or set it to an empty string `CTFOUT=\\\"\"\"\\\"`. The directory must already exist.\nCTFOUT=\"/home/fnoferin/public/out/\"\nMYDIR=\"$(dirname $(readlink -f $0))\"\nOUT_CHANNEL=\"name=downstream,method=connect,address=tcp://${calibration_node},type=push,transport=zeromq\"\nPROXY_OUTSPEC=\"dd:FLP/DISTSUBTIMEFRAME/0;dig:TOF/DIGITS;head:TOF/DIGITHEADER;row:TOF/READOUTWINDOW;patt:TOF/PATTERNS;diafreq:TOF/DIAFREQ\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TOF/tof-epn-cosmics-dig.sh"
        }
    ],
    "a469cdf8a2c95a3723196ad347ad13b7131d4900797e9965343a2bc37da75c1d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "o2-dpl-raw-proxy ${ARGS_ALL} --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n--readout-proxy \"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\" \\\n| o2-tof-reco-workflow --input-type raw --output-type digits --disable-root-output \\\n${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" \\\n--pipeline \"tof-compressed-decoder:${NTHREADS}\" \\\n| o2-qc ${ARGS_ALL} --config json://${MYDIR}/qc-full.json --local --host epn \\\n| o2-dpl-output-proxy ${ARGS_ALL} --channel-config ${OUT_CHANNEL} --dataspec ${PROXY_OUTSPEC} \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # option to export the DDS xml file instead of running",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TOF/tof-epn-cosmics-dig.sh"
        }
    ],
    "5b424a0cccb537f10d2316db54d5af0567c30e2d9d3f5ffe861de02b55addbd3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\ncalibration_node=\"epn003-ib:30453\"\n\nSEVERITY=warning\nsource common/getCommonArgs.sh\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nPROXY_INSPEC=\"x:TOF/CRAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nNTHREADS=1\n# For CTF output, to write to the current directory, you can omit `--output-dir $CTFOUT` in o2-ctf-writer-workflow or set it to `CTFOUT=\"\"`\n# Ensure the directory exists\nCTFOUT=\"/home/fnoferin/public/out/\"\nMYDIR=\"$(dirname $(readlink -f $0))\"\nOUT_CHANNEL=\"name=downstream,method=connect,address=tcp://${calibration_node},type=push,transport=zeromq\"\nPROXY_OUTSPEC=\"dd:FLP/DISTSUBTIMEFRAME/0;calclus:TOF/INFOCALCLUS;cosmics:TOF/INFOCOSMICS;trkcos:TOF/INFOTRACKCOS;trksiz:TOF/INFOTRACKSIZE\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TOF/tof-epn-cosmics.sh"
        }
    ],
    "5f5e2ca4eae65ac8a030c9d14c5b242619cb940094318d928ab9910c091346fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n--readout-proxy \"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\" \\\n| o2-tof-reco-workflow --input-type raw --output-type clusters \\\n${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" \\\n--disable-root-output --calib-cluster --cluster-time-window 10000 --cosmics \\\n--pipeline \"tof-compressed-decoder:${NTHREADS},TOFClusterer:${NTHREADS},tof-entropy-encoder:${NTHREADS}\" \\\n| o2-qc ${ARGS_ALL} --config json://${MYDIR}/qc-full.json --local --host epn \\\n| o2-dpl-output-proxy ${ARGS_ALL} --channel-config ${OUT_CHANNEL} --dataspec ${PROXY_OUTSPEC} \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # option to export DDS xml file instead of running",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TOF/tof-epn-cosmics.sh"
        }
    ],
    "50fb010b843089aee49bb2cae0c8146438decfa8bd6042a8029f9c1109d55086": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\ncalibration_node=\"epn003-ib:30453\"\n\nSEVERITY=warning\nsource common/getCommonArgs.sh\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nPROXY_INSPEC=\"x:TOF/CRAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nNTHREADS=2\n# To output the CTF to the current directory, omit `--output-dir  $CTFOUT` in o2-ctf-writer-workflow or set it to `CTFOUT=\\\"\"\"\\\"`\n# Ensure the directory exists\nCTFOUT=\"/home/fnoferin/public/out/\"\nMYDIR=\"$(dirname $(readlink -f $0))\"\nOUT_CHANNEL=\"name=downstream,method=connect,address=tcp://${calibration_node},type=push,transport=zeromq\"\nPROXY_OUTSPEC=\"dd:FLP/DISTSUBTIMEFRAME/0;dig:TOF/DIGITS;head:TOF/DIGITHEADER;row:TOF/READOUTWINDOW;patt:TOF/PATTERNS;diafreq:TOF/DIAFREQ\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TOF/tof-epn-cosmics-digNoQC.sh"
        }
    ],
    "d40e6f51c340afbfbd6b591e08822e79a5ee99ef2a2c6fc2153c9dd8c64e8602": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n--readout-proxy \"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\" \\\n| o2-tof-reco-workflow --input-type raw --output-type digits --disable-root-output \\\n${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" \\\n--pipeline \"tof-compressed-decoder:${NTHREADS}\" \\\n| o2-dpl-output-proxy ${ARGS_ALL} --channel-config ${OUT_CHANNEL} --dataspec ${PROXY_OUTSPEC} \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # alternative to run for exporting DDS xml file",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TOF/tof-epn-cosmics-digNoQC.sh"
        }
    ],
    "0eb7c5471c2354b7854d92ec0aa9f2d6bb6f374d53dc5814048553423757fc1d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\ncalibration_node=\"epn003-ib:30453\"\n\nSEVERITY=warning\nsource common/getCommonArgs.sh\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nPROXY_INSPEC=\"x:TOF/CRAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nNTHREADS=1\n# To write CTF to the current directory, you can omit `--output-dir $CTFOUT` from o2-ctf-writer-workflow or set it to `CTFOUT=\"\"`\n# The output directory must already exist\nCTFOUT=\"/home/fnoferin/public/out/\"\nMYDIR=\"$(dirname $(readlink -f $0))\"\nOUT_CHANNEL=\"name=downstream,method=connect,address=tcp://${calibration_node},type=push,transport=zeromq\"\nPROXY_OUTSPEC=\"dd:FLP/DISTSUBTIMEFRAME/0;calclus:TOF/INFOCALCLUS;cosmics:TOF/INFOCOSMICS;trkcos:TOF/INFOTRACKCOS;trksiz:TOF/INFOTRACKSIZE\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TOF/tof-epn-cosmicsNoQC.sh"
        }
    ],
    "ac7bd64eca764afa2bd9d2f75bb241201f3123ef7bd6c59dba2675611dc601ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n--readout-proxy \"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\" \\\n| o2-tof-reco-workflow --input-type raw --output-type clusters \\\n${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" \\\n--disable-root-output --calib-cluster --cluster-time-window 10000 --cosmics \\\n--pipeline \"tof-compressed-decoder:${NTHREADS},TOFClusterer:${NTHREADS},tof-entropy-encoder:${NTHREADS}\" \\\n| o2-dpl-output-proxy ${ARGS_ALL} --channel-config ${OUT_CHANNEL} --dataspec ${PROXY_OUTSPEC} \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # option to export DDS xml file instead of running",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TOF/tof-epn-cosmicsNoQC.sh"
        }
    ],
    "b543466e3efedcf013b786592cb474487f5035fadb6b5242e570d90695752273": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Load common arguments and helper functions like add_W\nsource common/setenv.sh\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\n\n# Specify input data needed by DPL (here, all RAWDATA from TRD)\nPROXY_INSPEC=\"A:TRD/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\n\n# Permit setting external options\nif [ -z $TRD_CCDB_PATH ]; then\n  TRD_CCDB_PATH=\"http://o2-ccdb.internal\"\nfi\nif [ -z $TRD_REJECTION_FACTOR ]; then\n  TRD_REJECTION_FACTOR=4\nfi\nif [ -z $TRD_N_READERS ]; then\n  TRD_N_READERS=16\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TRD/trd-noise.sh"
        }
    ],
    "49d11693e8d5a03726d20a110c747cc16e88e610d3011ad3e545c7c71559fe8c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Begin with an empty workflow\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --readout-proxy \\\"--channel-config \\\\\\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\\\\\"\\\"\" \"\" 0\nadd_W o2-trd-datareader \"--disable-root-output --every-nth-tf $TRD_REJECTION_FACTOR --pipeline trd-datareader:$TRD_N_READERS\"\nadd_W o2-calibration-trd-workflow \"--perform-noise-correction --calibration-dds-collection-index 0\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path $TRD_CCDB_PATH\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TRD/trd-noise.sh"
        }
    ],
    "8b9e11e7f3efa3615a49c2d14f9ed41f7b92ee2314193a17e46c9d2054cc1217": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Add the o2-dpl-run workflow manually, with the option to print the workflow or create a topology (default)\nWORKFLOW+=\"o2-dpl-run $GLOBALDPLOPT $ARGS_ALL\"\n[[ $WORKFLOWMODE != \"print\" ]] && WORKFLOW+=\" --${WORKFLOWMODE} ${WORKFLOWMODE_FILE:-}\"\n[[ $WORKFLOWMODE == \"print\" || \"${PRINT_WORKFLOW:-}\" == \"1\" ]] && echo \"#Workflow command:\\n\\n${WORKFLOW}\\n\" | sed -e \"s/\\\\\\\\n/\\n/g\" -e\"s/| */| \\\\\\\\\\n/g\" | eval cat $( [[ $WORKFLOWMODE == \"dds\" ]] && echo '1>&2')\nif [[ $WORKFLOWMODE != \"print\" ]]; then eval $WORKFLOW; else true; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TRD/trd-noise.sh"
        }
    ],
    "45b9372d00c5f43b8970d23913117428db3c401d995d2dd45c7363bdcb1f2921": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Source scripts for common arguments and helper functions including add_W\nsource common/setenv.sh\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\n\n# Specify input data needed by DPL (here, all RAWDATA from TRD)\nPROXY_INSPEC=\"A:TRD/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\n\n# Enable setting external options\n\n: ${TRD_N_READERS:=16}\n: ${TRD_N_ENCODER:=4}\n\n: ${EPN2EOS_METAFILES_DIR:=\"/data/epn2eos_tool/epn2eos\"}\n: ${CTF_DIR:=\"/data/tf/compressed\"}\n: ${CALIB_DIR:=\"/data/calibration\"}\n\n: ${RANS_OPT:=\"--ans-version 1.0 --ctf-dict none\"}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TRD/trd-krypton.sh"
        }
    ],
    "8492c89da18ab18dcf7845ce597bdf1624e90159964663b85276d9fd7d4a5c42": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": ":\n    : ${RANS_OPT:=\"--ans-version 1.0 --ctf-dict none\"}\n\n: ${CTF_MINSIZE:=\"10000000000\"}       # accumulate CTFs until file size is reached\n: ${CTF_MAX_PER_FILE:=\"40000\"}        # but do not exceed the specified number of CTFs per file\n: ${CTF_FREE_DISK_WAIT:=\"10\"}         # if the EPN disk space is nearly full, wait for X seconds before attempting to write again\n: ${CTF_MAX_FREE_DISK_WAIT:=\"600\"}    # if there is still insufficient disk space after this time, an error will be thrown\n: ${CTF_OUTPUT_TYPE:=\"ctf\"}\n\nCTF_CONFIG=\"--report-data-size-interval 1000\"\nCTF_CONFIG+=\" --output-dir $CTF_DIR --output-type $CTF_OUTPUT_TYPE --min-file-size $CTF_MINSIZE --max-ctf-per-file ${CTF_MAX_PER_FILE} --onlyDet TRD --meta-output-dir $EPN2EOS_METAFILES_DIR\"\nCTF_CONFIG+=\" --require-free-disk 53687091200 --wait-for-free-disk $CTF_FREE_DISK_WAIT --max-wait-for-free-disk $CTF_MAX_FREE_DISK_WAIT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TRD/trd-krypton.sh"
        }
    ],
    "312cd2566e2c58b886f6c70f0a27bbece8150d4de161440eadf96e4acf3a5f49": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Begin with an empty workflow definition\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --readout-proxy \\\"--channel-config \\\\\\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\\\\\"\\\"\" \"\" 0\nadd_W o2-trd-datareader \"--disable-root-output --pipeline trd-datareader:$TRD_N_READERS\"\nadd_W o2-trd-kr-clusterer \"--disable-root-input --meta-output-dir $EPN2EOS_METAFILES_DIR --output-dir $CALIB_DIR --autosave-interval 105000 --pipeline trd-kr-clusterer:8\"\nif workflow_has_parameter QC && has_detector_qc TRD; then\n  add_QC_from_consul \"/o2/components/qc/ANY/any/trd-full-qcmn-test\" \"--local --host epn -b\"\nfi\nif workflow_has_parameter CTF; then\n  add_W o2-trd-entropy-encoder-workflow \"$RANS_OPT --mem-factor ${TRD_ENC_MEMFACT:-1.5} --pipeline trd-entropy-encoder:$TRD_N_ENCODER\"\n  add_W o2-ctf-writer-workflow \"$CTF_CONFIG\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TRD/trd-krypton.sh"
        }
    ],
    "2b7fb43867c03c91ec0e32db42cf47858f48156df558ead1fd71f2e232986d06": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Add the o2-dpl-run workflow manually, optionally print the workflow or create a topology (default)\nWORKFLOW+=\"o2-dpl-run $GLOBALDPLOPT $ARGS_ALL\"\n[[ $WORKFLOWMODE != \"print\" ]] && WORKFLOW+=\" --${WORKFLOWMODE} ${WORKFLOWMODE_FILE:-}\"\n[[ $WORKFLOWMODE == \"print\" || \"${PRINT_WORKFLOW:-}\" == \"1\" ]] && echo \"#Workflow command:\\n\\n${WORKFLOW}\\n\" | sed -e \"s/\\\\\\\\n/\\n/g\" -e\"s/| */| \\\\\\\\\\n/g\" | eval cat $( [[ $WORKFLOWMODE == \"dds\" ]] && echo '1>&2')\nif [[ $WORKFLOWMODE != \"print\" ]]; then eval $WORKFLOW; else true; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TRD/trd-krypton.sh"
        }
    ],
    "6b6fcdbd5ec6aea652c8b063fb6700acbd4815885bd37c31bf796a7cddad386c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Import common arguments and helper functions such as add_W\nsource common/setenv.sh\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nif [ -z $CTF_DIR ]; then\n  CTF_DIR=$FILEWORKDIR\nfi  # Set the directory for storing dictionary files\n#ARGS_ALL+=\" --monitoring-backend influxdb-unix:///tmp/telegraf.sock\"\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Specify the output directory for CTF; if you want to write to the current directory, remove `--output-dir $CTFOUT` from o2-ctf-writer-workflow or set `CTFOUT=\"\"`\n# Ensure the directory exists\nARGS_CTF=\"--min-file-size 500000000 --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"x:FV0/RAWDATA;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/fv0-digits-qc-ctf.sh"
        }
    ],
    "516ff3d3d2ac33ef510fb3b90e025a31c7c727fb519e091c00cfe251b8677c58": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TODO use the add_W function from gen_topo_helper_functions.sh to assemble the workflow\n# as exemplified in https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh\no2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fv0-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline fv0-datareader-dpl:$NTHREADS \\\n| o2-fv0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-qc ${ARGS_ALL} --local --host epn --config json://${MYDIR}/fv0-digits-ds.json \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --onlyDet FV0 --output-dir $CTF_DIR --ctf-dict-dir $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # use run option to export DDS xml file instead",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/fv0-digits-qc-ctf.sh"
        }
    ],
    "5734842f2e2dd06ca1fa675a0226f77d832820b4474e8224a2795432829c189f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                         # ECS Partition\nexport DDMODE=processing-disk                                            # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# Use these settings to retrieve the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                                # Fetch O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                           # Specific git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_digits_ctf.sh"
        }
    ],
    "a392d505d9b80cc3496b33385e7fb1445a44883c019a7205849e7ba76535d8df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# To set these parameters, indicate the location of the O2DataProcessing repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                  # Directory where O2DataProcessing is located\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FV0/workflows.desc    # File in the topology description library to load\nexport GEN_TOPO_WORKFLOW_NAME=fv0-digits-ctf                # Name of the workflow within the topology description library\nexport WORKFLOW_DETECTORS=FV0                                        # Optional parameter for the workflow: List detectors for reconstruction (comma-separated)\nexport WORKFLOW_DETECTORS_QC=FV0                                     # Optional parameter for the workflow: List detectors for quality control\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter for the workflow: List detectors for calibration",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_digits_ctf.sh"
        }
    ],
    "2a86b9d81f015b1d109c1816eeb6c7a697abb93f83d92a1048d4d1a89d4626e5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Additional parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Change the number of EPN compute nodes to use (default is set in the description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_digits_ctf.sh"
        }
    ],
    "688b6848c8426d315f10cddb3489b1a5e36577d25a262e3b26b859bc71176592": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export MULTIPLICITY_FACTOR_RAWDECODERS=1                             # Scaling factor for raw decoders\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Scaling factor for CTF encoders\nexport MULTIPLICITY_FACTOR_REST=1                                    # Scaling factor for other processes\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/fv0-digits-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo XML topology $OUTPUT_FILE_NAME has been generated\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_digits_ctf.sh"
        }
    ],
    "b2cf8c78367bf1d90fec92f443ecb5fb8fbe7ca285f80e8f40011b643beedaae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nsource common/getCommonArgs.sh\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi        # Directory where to store dictionary files\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Output directory for the CTF, to write to the current directory, remove `--output-dir  $CTFOUT` from o2-ctf-writer-workflow or set to `CTFOUT=\\\"\"\"\\\"`\n# The directory must exist\nARGS_CTF=\"--min-file-size 500000000  --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"digits:FV0/DIGITSBC/0;channels:FV0/DIGITSCH/0;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/fv0-ctf.sh"
        }
    ],
    "e90eae3e6220ef5cccfdd6a549823b668f56040ff5f4e579cde20bb45179b601": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fv0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --onlyDet FV0 --output-directory $CTF_DIR --ctf-dictionary-directory $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # option to export DDS xml file instead of running",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/fv0-ctf.sh"
        }
    ],
    "f45db6e8c383efb3edf3b3ccd2c42dddc7bf1f4be186484bcb3d3642ccc6e932": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing-disk                                             # DataDistribution mode - possible options include: processing, disk, processing-disk, or discard\n\n# Utilize these parameters to access the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch the O2DataProcessing repository using a specific git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # The git hash to use for fetching the repository",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_ctf.sh"
        }
    ],
    "941fc8aa377ee79cfff72158f5783bd6a5cd0e43364254537939be60ddfc0682": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set these variables to define the path to the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                  # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FV0/workflows.desc    # Specify the topology description library file to load\nexport GEN_TOPO_WORKFLOW_NAME=fv0-ctf                # Name of the workflow in the topology description library\nexport WORKFLOW_DETECTORS=FV0                                        # Optional parameter for the workflow: Detectors to run reconstruction for (comma-separated list)\nexport WORKFLOW_DETECTORS_QC=FV0                                     # Optional parameter for the workflow: Detectors to run quality checks for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter for the workflow: Detectors to run calibration for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_ctf.sh"
        }
    ],
    "23a951bcc3d333610454530172cd306ae756bedfb7c5b5d74377f67729e20727": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Additional parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Optionally override the number of EPN compute nodes (default set in the description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_ctf.sh"
        }
    ],
    "4c697bd14fa44259d7ad59eb75972316b3f2de64279720009c6a29e31ce1ab59": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                           # Multiplier for raw decoders\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                            # Multiplier for CTF encoders\nexport MULTIPLICITY_FACTOR_REST=1                                   # Multiplier for other processes\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/fv0-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Created XML topology file $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_ctf.sh"
        }
    ],
    "79456d1ad8ba5603cf758feefedc407756ef1122f333a8d8aefdac1ce3f5a7df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nsource common/getCommonArgs.sh\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi # Directory for storing dictionary files\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# For CTF output, if writing to the current directory, remove `--output-dir $CTFOUT` from o2-ctf-writer-workflow or set it to `CTFOUT=\"\"`\n# The output directory must already exist\nARGS_CTF=\"--min-file-size 500000000 --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"x:FV0/RAWDATA;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/fv0-digits-ctf.sh"
        }
    ],
    "1cd884f827636055b6d78584c43e950c545d97c261beed4184ea574d04b8d0c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fv0-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline fv0-datareader-dpl:$NTHREADS \\\n| o2-fv0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --only-det FV0 --output-directory $CTF_DIR --ctf-dictionary-directory $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # alternative to run for exporting DDS xml file",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/fv0-digits-ctf.sh"
        }
    ],
    "c5760701723605877614fd86ae38e02b06115df923952a03b37ac649d1cc5597": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing-disk                                             # DataDistribution mode, with options: processing, disk, processing-disk, or discard\n\n# These settings can be used to retrieve the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch the O2DataProcessing repository using a specific git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # The git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_digits_qc_ctf.sh"
        }
    ],
    "6223990da5c3a416070bd8e50b735d01c9969addfbbc16906a0abf1d52a4b25e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the path to the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Set the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                  # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FV0/workflows.desc    # Library file containing the topology description to load\nexport GEN_TOPO_WORKFLOW_NAME=fv0-digits-qc-ctf                # Name of the workflow in the topology description library\nexport WORKFLOW_DETECTORS=FV0                                        # Optional parameter for the workflow: List of detectors to run reconstruction for (separated by commas)\nexport WORKFLOW_DETECTORS_QC=FV0                                     # Optional parameter for the workflow: List of detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter for the workflow: List of detectors to run calibration for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_digits_qc_ctf.sh"
        }
    ],
    "a4e3327e30ff873fc3f258211650447a1a241025f3589f7c7483aa7fd44cb6c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Additional parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Optionally change the number of EPN compute nodes (default set in description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_digits_qc_ctf.sh"
        }
    ],
    "a63a7a8943cfc3db317c61a54ff1e7e868d28f42ddfa1a9ccd4d92314f363523": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT MULTIPLICITY_FACTOR_RAWDECODERS=1                                 # Scaling factor for raw decoders\nEXPORT MULTIPLICITY_FACTOR_CTFENCODERS=1                                 # Scaling factor for CTF encoders\nEXPORT MULTIPLICITY_FACTOR_REST=1                                       # Scaling factor for other processes\n\nEXPORT OUTPUT_FILE_NAME=$HOME/topologies/fv0-digits-qc-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Generated XML topology $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FV0/run_fv0_digits_qc_ctf.sh"
        }
    ],
    "fc5e146cd5412cbc910b14404064a38693647627b315c223000b686a45a9ab2f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh\n\nexport GLOBAL_SHMSIZE=$(( 128 << 30 )) # 128 GB for the global SHMEM for the kr cluster finder\n\nif [ $NUMAGPUIDS != 0 ]; then\n  ARGS_ALL+=\" --child-driver 'numactl --membind $NUMAID --cpunodebind $NUMAID'\"\nfi\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\n\nNLANES=36\nSESSION=\"default\"\n\nARGS_FILES=\"keyval.output_dir=/dev/null\"\n\nQC_CONFIG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/tpc-krypton-qcmn\"\n#QC_CONFIG=\"/o2/components/qc/ANY/any/tpc-krypton-qcmn\"\n\nWRITER_TYPE=\"--writer-type EPN --meta-output-dir $EPN2EOS_METAFILES_DIR --output-dir $CALIB_DIR\"\n\n\nif [[ \"${TPC_KRYPTON_NO_WRITEOUT:-}\" == \"1\" ]]; then \n\tWRITER_TYPE=\"--writer-type none\"\nfi\n\n\nif [[ ! -z ${TPC_KRYPTON_LANES:-} ]]; then\n    NLANES=${TPC_KRYPTON_LANES}\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-krypton.sh"
        }
    ],
    "97a2b02d2428f528f9e36325d4b4a5ffe90898e83049c1e5c03ddb8bd79bc431": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z ${TPC_KRYPTON_LANES:-} ]]; then\n    NLANES=${TPC_KRYPTON_LANES}\nfi\n\n\n# TODO utilize the add_W function from gen_topo_helper_functions.sh to construct the workflow, similar to what is shown in https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh\n\n\n# Include a binary in the workflow command: USAGE: add_W [BINARY] [COMMAND_LINE_OPTIONS] [CONFIG_KEY_VALUES] [Add ARGS_ALL_CONFIG, optional, default = 1]",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-krypton.sh"
        }
    ],
    "52f4ab38e4f7251a3dfd7fd338958ed372b1f96dcb02ef85801d85206dda06c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-raw-to-digits-workflow \"--ignore-grp --input-spec \\\"$CALIB_INSPEC\\\" --remove-duplicates --pipeline tpc-raw-to-digits-0:20 \" \"\\\"${ARGS_FILES}\\\";TPCDigitDump.LastTimeBin=14256\"\nadd_W o2-tpc-krypton-clusterer \"${WRITER_TYPE} --lanes $NLANES --configFile=\\\"/home/wiechula/processData/inputFilesTracking/krypton/krBoxCluster.largeBox.cuts.krMap.ini\\\"\"  \"\\\"${ARGS_FILES}\\\"\"\nadd_W o2-qc \"--config $QC_CONFIG --local --host localhost\"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Command for the workflow:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the command we have put together\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-krypton.sh"
        }
    ],
    "0f68382d0d34091d1fdcb0fe76e67336c17f5a22009bb10aed97a786d8835efb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nexport SHMSIZE=$(( 128 << 30 )) #  GB for the global SHMEM # for kr cluster finder\n\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\nNLANES=36\nSESSION=\"default\"\nARGS_FILES=\"keyval.output_dir=/dev/null\"\nHOST=localhost\n\n\n\nif [[ ! -z ${TPC_KRYPTON_LANES:-} ]]; then\n    NLANES=${TPC_KRYPTON_LANES}\nfi\n\nQC_CONFIG=\"/o2/components/qc/ANY/any/tpc-krypton-raw-qcmn\"\n\nif [[ ! -z ${TPC_KRYPTON_LANES:-} ]]; then\n    NLANES=${TPC_KRYPTON_LANES}\nfi\n\nWRITER_TYPE=\"--writer-type EPN --meta-output-dir $EPN2EOS_METAFILES_DIR --output-dir $CALIB_DIR --max-tf-per-file 8000\"\n\nif [[ \"${TPC_KRYPTON_NO_WRITEOUT:-}\" == \"1\" ]]; then\n        WRITER_TYPE=\"--writer-type none\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-krypton-raw.sh"
        }
    ],
    "26556ec6e5ef1ff65e02a998cb301728751aad03815f574fec78e1734c6344ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"${TPC_KRYPTON_NO_WRITEOUT:-}\" == \"1\" ]]; then\n    WRITER_TYPE=\"--writer-type none\"\nfi\n\n\n\n# TODO use add_W function from gen_topo_helper_functions.sh to build the workflow\n# as exemplified in https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh\n\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-raw-to-digits-workflow \"--ignore-grp --input-spec \\\"$CALIB_INSPEC\\\" --remove-duplicates --pedestal-url \\\"http://o2-ccdb.internal\\\"  --pipeline tpc-raw-to-digits-0:24 \" \"\\\"${ARGS_FILES}\\\";TPCDigitDump.LastTimeBin=446\"\nadd_W o2-tpc-krypton-raw-filter \"${WRITER_TYPE} --lanes $NLANES --threshold-max 20 --time-bins-before 20\"  \"\\\"${ARGS_FILES}\\\"\"\nadd_W o2-qc \"--config $QC_CONFIG --local --host localhost\"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-krypton-raw.sh"
        }
    ],
    "5ef3d528241a3445c041dab2f27c95cc385d003c6c4768cc368e5f0dd982062f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the command we have prepared\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-krypton-raw.sh"
        }
    ],
    "5739e15b900b53d068bdaf90c8c297f94d247b55f67256aa74d36dda0b29965f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh\n\nif [ $NUMAGPUIDS != 0 ]; then\n  ARGS_ALL+=\" --child-driver 'numactl --membind $NUMAID --cpunodebind $NUMAID'\"\nfi\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\nNLANES=36\nSESSION=\"default\"\nPIPEADD=\"0\"\n\nHOST=localhost\nQC_CONFIG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/tpc-raw-qcmn\"\nQC_CONFIG_CONSUL=/o2/components/qc/ANY/any/tpc-raw-qcmn\n# TODO use the add_W function from gen_topo_helper_functions.sh to construct the workflow\n# as shown in https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-laser-raw-filter.sh"
        }
    ],
    "0b6252f9aa1d22ad16ceae97bfd8da2d5e33c2ad7e7a0a63d03b6e0cf2c4b744": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-raw-to-digits-workflow \"--ignore-grp --input-spec \\\"$CALIB_INSPEC\\\" --remove-duplicates --pipeline tpc-raw-to-digits-0:20\"\nadd_W o2-tpc-krypton-raw-filter \"tpc-raw-to-digits-0:24  --lanes $NLANES --writer-type EPN --meta-output-dir $EPN2EOS_METAFILES_DIR --output-dir $CALIB_DIR --threshold-max 20 --max-tf-per-file 8000 --time-bins-before 20 --max-time-bins 650\"\nadd_QC_from_consul \"${QC_CONFIG_CONSUL}\" \"--local --host localhost\"\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the command we have assembled\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-laser-raw-filter.sh"
        }
    ],
    "574c84081286a573b1fa89dba3644b2ecea3ccb1b2a2e52340bf5e3b5a31ba21": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh \n\nexport SHMSIZE=$(( 128 << 30 )) # 128 GB for the global SHMEM\nexport GPUMEMSIZE=$(( 24 << 30 ))\nexport HOSTMEMSIZE=$(( 5 << 30 ))\nexport GPUTYPE=\"HIP\"\n\n\nif [ $NUMAGPUIDS != 0 ]; then\n  ARGS_ALL+=\" --child-driver 'numactl --membind $NUMAID --cpunodebind $NUMAID'\"\nfi\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\n\n### Note: ENSURE the channels match address=ipc://@tf-builder-pipe-0\nHOST=localhost\nQC_CONFIG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/tpc-raw-qcmn\"\nQC_CONFIG_CONSUL=\"/o2/components/qc/ANY/any/tpc-raw-qcmn\"\nEXTRA_CONFIG=\"TPCDigitDump.NoiseThreshold=3;TPCDigitDump.LastTimeBin=600\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-pattern-generator.sh"
        }
    ],
    "e61cc8a7567702c01d44558cc6a87675f5d033794ced590e5d66a298bd1b1436": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-raw-to-digits-workflow \"--ignore-grp --input-spec \\\"$CALIB_INSPEC\\\" --remove-duplicates --pipeline tpc-raw-to-digits-0:20\" \"${EXTRA_CONFIG}\"\nadd_QC_from_consul \"${QC_CONFIG_CONSUL}\" \"--local --host localhost\"\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/TPC/tpc-pattern-generator.sh"
        }
    ],
    "bf3ae01a8f2fcac128164e9bc12639bc2fa18952d2db4321aeee748b0b32715e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Load common arguments and helper functions like add_W\nsource common/setenv.sh\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nif [ -z \"$CTF_DIR\" ]; then\n    CTF_DIR=$FILEWORKDIR\nfi  # Directory for storing dictionary files\n\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Output directory for the CTF, to write to the current directory, remove `--output-dir $CTFOUT` from o2-ctf-writer-workflow or set it to `CTFOUT=\"\"`\n# The directory must exist\nARGS_CTF=\"--min-file-size 500000000 --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"x:FT0/RAWDATA;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/ft0-digits-qc-ctf.sh"
        }
    ],
    "d57a18134052ecb2ea3394b0a68f612708c4f9ccb38e99a65626f58d351ef428": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TODO utilize the add_W function from gen_topo_helper_functions.sh to construct the workflow\n# similar to how it is done in https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh\no2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" \\\n| o2-ft0-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline ft0-datareader-dpl:$NTHREADS \\\n| o2-ft0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-qc ${ARGS_ALL} --local --host epn --config json://${MYDIR}/ft0-digits-ds.json \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --onlyDet FT0 --output-dir $CTF_DIR --ctf-dict-dir $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # use run option to export DDS xml file",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/ft0-digits-qc-ctf.sh"
        }
    ],
    "ca5db0ab0c94900802468ca4895a9d4b0cdd3b399fab4b3e27058e04e9a4aa48": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nsource common/getCommonArgs.sh\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi  # Directory for storing dictionary files\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# The output directory for CTF. If you want to write to the current directory, remove `--output-dir  $CTFOUT` from o2-ctf-writer-workflow or set `CTFOUT=\\\"\"\"\\\"`\n# The directory must exist\nARGS_CTF=\"--min-file-size 500000000  --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\n\nPROXY_INSPEC=\"digits:FT0/DIGITSBC/0;channels:FT0/DIGITSCH/0;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/ft0-ctf.sh"
        }
    ],
    "7552a1a1377c2d04fa7f026ec874d881d02679f64f6faeaa9c82c424474ec241": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-ft0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --onlyDet FT0 --output-dir $CTF_DIR --ctf-dict-dir $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # using run option to export DDS xml file",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/ft0-ctf.sh"
        }
    ],
    "a722e1ac0f08f48af6470f5ec825a5535d5c286bba8ba840e24fe9c5bf59a401": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing-disk                                             # DataDistribution mode - possible options include: processing, disk, processing-disk, discard\n\n# These parameters can be used to retrieve the Workflow Repository by specifying a hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch the O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # Specify the git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_digits_qc_ctf.sh"
        }
    ],
    "ece269bf92b6d6208189b3ddcbc6641b10f5feee220d0940bd8a368ea65449fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set these variables to define the location of the O2DataProcessing repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                  # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FT0/workflows.desc    # File containing the topology description library to load\nexport GEN_TOPO_WORKFLOW_NAME=ft0-digits-qc-ctf                # Name of the workflow within the topology description library\nexport WORKFLOW_DETECTORS=FT0                                        # Optional parameter for the workflow: List of detectors to perform reconstruction for (comma-separated)\nexport WORKFLOW_DETECTORS_QC=FT0                                     # Optional parameter for the workflow: List of detectors to perform quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter for the workflow: List of detectors to perform calibration for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_digits_qc_ctf.sh"
        }
    ],
    "15ad95748a0eb9452797c2a45e96385af6ef22e6c18583735a449c4399ee4f35": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Change the number of EPN compute nodes to use (the default is set in the description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_digits_qc_ctf.sh"
        }
    ],
    "a913a6ce5ef1bf381fc7a4448b26d9e66eb264d4d3b6d0fff1b7c8a8c7dfe033": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                           # Multiplier for the raw decoders count\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                            # Multiplier for the CTF encoders count\nexport MULTIPLICITY_FACTOR_REST=1                                   # Multiplier for other processes count\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/ft0-digits-qc-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Created XML topology file $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_digits_qc_ctf.sh"
        }
    ],
    "0ae20d0fb5d8d3eb7a218460bebb45f9ef3843b61232dc921b4eabe932225036": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                         # ECS Partition\nexport DDMODE=processing-disk                                             # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# Use these settings to retrieve the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                                 # Fetch the O2DataProcessing repository using a git hash\n#export GEN_TOPO_SOURCE=v0.5                                            # Specific git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_digits_ctf.sh"
        }
    ],
    "8280be67fb219269db076e4a4bcd2d0e08e4ee7bb6b4343ac2a6634c1153d410": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the location of the O2DataProcessing repository within your home directory\nexport GEN_TOPO_HASH=0                                               # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                  # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FT0/workflows.desc    # File in the topology description library to load\nexport GEN_TOPO_WORKFLOW_NAME=ft0-digits-ctf                # Name of the workflow within the topology description library\nexport WORKFLOW_DETECTORS=FT0                                        # Optional parameter for the workflow: List of detectors to run reconstruction for (separated by commas)\nexport WORKFLOW_DETECTORS_QC=FT0                                     # Optional parameter for the workflow: List of detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameters for the workflow: List of detectors to run calibration for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_digits_ctf.sh"
        }
    ],
    "43a2cbb876807a9bb78233a41d051baf0cf3fb02ca5409d44b1c9335e5b97804": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN computing nodes to use (default is set in the description library file)\nexport NHBPERTF=128                                                  # Number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_digits_ctf.sh"
        }
    ],
    "cf8019a31d71ad1551374160587095a785850cc3558201898727640e84189c2e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                            # Multiplier for the raw decoders quantity\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Multiplier for the CTF encoders quantity\nexport MULTIPLICITY_FACTOR_REST=1                                    # Multiplier for other processes quantity\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/ft0-digits-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Created XML topology $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_digits_ctf.sh"
        }
    ],
    "ba5714a463af15d56193f4aad9364abbd529b242d734285e725fb813a802dda1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                         # ECS Partition\nexport DDMODE=processing-disk                                            # DataDistribution mode - possible options: processing, disk, processing-disk, discard\n\n# Utilize these configurations to retrieve the Workflow Repository via a hash or tag\n# export GEN_TOPO_HASH=1                                                # Fetch O2DataProcessing repository using a git hash\n# export GEN_TOPO_SOURCE=v1.3                                           # Git hash to use for fetching",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_ctf.sh"
        }
    ],
    "e33c515ab357f890b2cbc2a2fd06974eddc2367b5de8d22f0796d8f9fb12eae6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set these variables to define the path to the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                             # Path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                 # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FT0/workflows.desc   # Specify the topology description library file to load\nexport GEN_TOPO_WORKFLOW_NAME=ft0-ctf                              # Name of the workflow in the topology description library\nexport WORKFLOW_DETECTORS=FT0                                       # Optional parameter for the workflow: List of detectors for reconstruction (separated by commas)\nexport WORKFLOW_DETECTORS_QC=FT0                                    # Optional parameter for the workflow: List of detectors for quality control\nexport WORKFLOW_DETECTORS_CALIB=\"\"                                  # Optional parameter for the workflow: List of detectors for calibration",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_ctf.sh"
        }
    ],
    "a8cfe940627ed2e77d56379ea55fec3aecf42447af6b776e57f403a3b6383234": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Change the number of EPN compute nodes (default set in description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_ctf.sh"
        }
    ],
    "7646f116875541c20f70d58bab56242a0cba85369ebe3b4c7eb0a3464f120393": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                             # Multiplier for raw decoders\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Multiplier for CTF encoders\nexport MULTIPLICITY_FACTOR_REST=1                                    # Multiplier for other processes\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/ft0-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Created XML topology file $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/run_ft0_ctf.sh"
        }
    ],
    "87e6c5e2596dc22cb76c0b3096a37fc710b97a0290d078827e58fcd07722179c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nsource common/getCommonArgs.sh\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi  # Directory for storing dictionary files\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Output directory for CTF, set to current directory if not specified, remove `--output-dir  $CTFOUT` from o2-ctf-writer-workflow or set to `CTFOUT=\\\"\"\"\\\"`\n# The directory must already exist\nARGS_CTF=\"--min-file-size 500000000  --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"x:FT0/RAWDATA;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/ft0-digits-ctf.sh"
        }
    ],
    "95aab4abf1e24f7f6cde850c38106b2907b58e6c000b6a3dbdffac5a045a87a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" \\\n| o2-ft0-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline ft0-datareader-dpl:$NTHREADS \\\n| o2-ft0-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --only-det FT0 --output-dir $CTF_DIR --ctf-dict-dir $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # use run option to export DDS xml file",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FT0/ft0-digits-ctf.sh"
        }
    ],
    "a233e24933422515332b631136deb257d303e94212872bbc2213e7a2ddb0305d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # Specify the ECS Partition\nexport DDMODE=processing-disk                                             # Set the DataDistribution mode - possible options include: processing, disk, processing-disk, or discard\n\n# Utilize these parameters to retrieve the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch the O2DataProcessing repository using a specific git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # Git hash to use for fetching the repository",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_digits_ctf.sh"
        }
    ],
    "c0a2f78b1f3119632f754aefb66ebcd936cbc53aa8bd689eb232515ba38c0746": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the path to the O2DataProcessing repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define path to O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                  # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FDD/workflows.desc    # File to load for the topology description library\nexport GEN_TOPO_WORKFLOW_NAME=fdd-digits-ctf                # Name of the workflow within the topology description library\nexport WORKFLOW_DETECTORS=FDD                                        # Optional parameter for the workflow: Detectors to run reconstruction for (comma-separated list)\nexport WORKFLOW_DETECTORS_QC=FDD                                     # Optional parameter for the workflow: Detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter for the workflow: Detectors to run calibration for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_digits_ctf.sh"
        }
    ],
    "2b0fa0e9e9efffe320bf123785dd62365fa4dfc7fcf425137beb7bfd00773f8e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Overrule the number of EPN compute nodes (the default is set in the description library file)\nexport NHBPERTF=128                                                  # Define the number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_digits_ctf.sh"
        }
    ],
    "13d162baa5fd9058a3385c47d63462c1aa4df99b2ae0bf70dc0403d2543dce45": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                            # Multiplier for the raw decoders\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Multiplier for the CTF encoders\nexport MULTIPLICITY_FACTOR_REST=1                                    # Multiplier for other processes\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/fdd-digits-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Created XML topology file $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_digits_ctf.sh"
        }
    ],
    "c61cf622272cebd5e42cc65d80448601d54c319da5d61e06d0344373b88fca87": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nsource common/getCommonArgs.sh\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi # Directory for storing dictionary files\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Specify the output directory for CTF; to output to the current directory, exclude `--output-dir  $CTFOUT` from o2-ctf-writer-workflow or set to `CTFOUT=\\\"\"\"\\\"`\n# Ensure the directory exists\nARGS_CTF=\"--min-file-size 500000000  --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"x:FDD/RAWDATA;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/fdd-digits-qc-ctf.sh"
        }
    ],
    "d0716b3eea1852754ffbd1b48d9a3b3828c4e48ac08127d0a0fecdd9dade2855": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fdd-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline fdd-datareader-dpl:$NTHREADS \\\n| o2-fdd-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-qc ${ARGS_ALL} --local --host epn --config json://${MYDIR}/fdd-digits-ds.json \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --onlyDet FDD --output-dir $CTF_DIR --ctf-dict-dir $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # alternative to run for exporting DDS xml file",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/fdd-digits-qc-ctf.sh"
        }
    ],
    "24b72ac9dfe8b1aa36345cfef3693d745ac661e916c28c261cc086d2438306ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nsource common/getCommonArgs.sh\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi  # Directory for storing dictionary files\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Directory for CTF output, set to current directory by default; remove `--output-dir $CTFOUT` from o2-ctf-writer-workflow or set to `CTFOUT=\"\"`\n# The directory must already exist\nARGS_CTF=\"--min-file-size 500000000 --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"x:FDD/RAWDATA;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/fdd-digits-ctf.sh"
        }
    ],
    "9c06ae9ad43e1faa90a22aaf4ac080f9195c76fdd332471d112bf0fd923d9f5b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fdd-flp-dpl-workflow --disable-root-output ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" --pipeline fdd-datareader-dpl:$NTHREADS \\\n| o2-fdd-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --only-det FDD --output-directory $CTF_DIR --ctf-dictionary-directory $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # option to export the DDS xml file instead of running",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/fdd-digits-ctf.sh"
        }
    ],
    "5a8d65a2e3efe56b326456e7f4b647ea7ad14fe447d48216810cc0b978f287e0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # The ECS Partition to be used\nexport DDMODE=processing-disk                                             # DataDistribution mode - available options are: processing, disk, processing-disk, and discard\n\n# Configure these parameters to retrieve the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Utilize a git hash to fetch the O2DataProcessing repository\n#export GEN_TOPO_SOURCE=v0.5                                         # Specific git hash for the repository fetch",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_ctf.sh"
        }
    ],
    "c9ed03d26ccbf93d80dd3459a745150bbcfef6c56022102dca2b33cd21b83b16": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set these variables to define the location of the O2DataProcessing repository in your home directory\nexport GEN_TOPO_HASH=0                                             # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FDD/workflows.desc  # Specify the topology description library file to be loaded\nexport GEN_TOPO_WORKFLOW_NAME=fdd-ctf                             # Name of the workflow within the library\nexport WORKFLOW_DETECTORS=FDD                                      # Optional parameter: List of detectors for reconstruction (comma-separated)\nexport WORKFLOW_DETECTORS_QC=FDD                                   # Optional parameter: List of detectors for quality control (comma-separated)\nexport WORKFLOW_DETECTORS_CALIB=\"\"                                 # Optional parameter: List of detectors for calibration (comma-separated)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_ctf.sh"
        }
    ],
    "b1cf78de628d062669dd0fa70e9c6c12406b495dd7caef8cfaa9ce58aed5a838": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Change the number of EPN compute nodes to use (default value is set in the description library file)\nexport NHBPERTF=128                                                  # Set the number of HBF per TF to 128",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_ctf.sh"
        }
    ],
    "498e70fb543817b6b99399c0c82408bfe47c3543b0001950b1988cfda78755e3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                           # Multiplier for raw decoders\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                            # Multiplier for CTF encoders\nexport MULTIPLICITY_FACTOR_REST=1                                   # Multiplier for other processes\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/fdd-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo Successfully generated XML topology file $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_ctf.sh"
        }
    ],
    "7de7c3333078b575e1494cb7dad8a774efa85bbb76d38cbf43549f5c59ab3422": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nSEVERITY=WARNING\nsource common/getCommonArgs.sh\nif [ -z $CTF_DIR ]; then CTF_DIR=$FILEWORKDIR; fi        # Directory where to store dictionary files\nCTF_DICT=\"--ctf-dict $FILEWORKDIR/ctf_dictionary.root\"\nNTHREADS=2\n# Output directory for the CTF, to write to the current directory, remove `--output-dir  $CTFOUT` from o2-ctf-writer-workflow or set to `CTFOUT=\\\"\"\"\\\"`\n# The directory must exist\nARGS_CTF=\"--min-file-size 500000000  --max-ctf-per-file 10000 --meta-output-dir /data/epn2eos_tool/epn2eos --append-det-to-period 0\"\n\nMYDIR=\"$(dirname $(readlink -f $0))\"\nPROXY_INSPEC=\"digits:FDD/DIGITSBC/0;channels:FDD/DIGITSCH/0;eos:***/INFORMATION;dd:FLP/DISTSUBTIMEFRAME/0\"\nIN_CHANNEL=\"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1'\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/fdd-ctf.sh"
        }
    ],
    "e8bb5323ac69e797bb22eed20fdba107661ddd35e661bd6d3a376420c4d0342e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2-dpl-raw-proxy ${ARGS_ALL} --readout-proxy \"${IN_CHANNEL}\" --dataspec \"${PROXY_INSPEC}\" --inject-missing-data \\\n| o2-fdd-entropy-encoder-workflow ${ARGS_ALL} --configKeyValues \"$ARGS_ALL_CONFIG;\" ${CTF_DICT} \\\n| o2-ctf-writer-workflow ${ARGS_ALL} ${ARGS_CTF} --configKeyValues \"$ARGS_ALL_CONFIG;\" --onlyDet FDD --output-dir $CTF_DIR --ctf-dict-dir $FILEWORKDIR --output-type ctf \\\n| o2-dpl-run $ARGS_ALL $GLOBALDPLOPT --dds ${WORKFLOWMODE_FILE} # using the option to export DDS xml file instead of running",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/fdd-ctf.sh"
        }
    ],
    "cfc2c442e2db6b7ee12ebd070c9735a8229515bd637420b7440648f179c2a021": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport GEN_TOPO_PARTITION=test                                       # ECS Partition\nexport DDMODE=processing-disk                                             # DataDistribution mode - possible options include: processing, disk, processing-disk, or discard\n\n# These settings can be used to obtain the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Fetch the O2DataProcessing repository using a specific git hash\n#export GEN_TOPO_SOURCE=v0.5                                         # The git hash to use for fetching the repository",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_digits_qc_ctf.sh"
        }
    ],
    "edd0b3733569d391cf2e62fdb9c006ba1861d1ae6140b9e42bd776337433de09": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set these environment variables to define the location of the O2DataProcessing repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define the path to the O2DataProcessing repository\nexport GEN_TOPO_SOURCE=/home/afurs/O2DataProcessing                  # Path to the O2DataProcessing repository\nexport GEN_TOPO_LIBRARY_FILE=testing/detectors/FDD/workflows.desc    # File to load the topology description library\nexport GEN_TOPO_WORKFLOW_NAME=fdd-digits-qc-ctf                # Name of the workflow in the topology description library\nexport WORKFLOW_DETECTORS=FDD                                        # Optional parameter: List of detectors to run reconstruction for (comma-separated)\nexport WORKFLOW_DETECTORS_QC=FDD                                     # Optional parameter: List of detectors to run quality control for\nexport WORKFLOW_DETECTORS_CALIB=                                     # Optional parameter: List of detectors to run calibration for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_digits_qc_ctf.sh"
        }
    ],
    "9b815d5235c11c84d8c212216f78f5b44faa4f5fe9fdabdf6e3eb6d8dbb8104c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=                                         # Extra parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN computational nodes (the default is set in the description library file)\nexport NHBPERTF=128                                                  # The number of HBF per TF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_digits_qc_ctf.sh"
        }
    ],
    "71b49213d4e18ecc0aa4759996e78e54d6ebc36177250afedf41c188b2108d1c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_FACTOR_RAWDECODERS=1                            # Multiplier for the raw decoders count\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Multiplier for the CTF encoders count\nexport MULTIPLICITY_FACTOR_REST=1                                    # Multiplier for other process counts\n\nexport OUTPUT_FILE_NAME=$HOME/topologies/fdd-digits-qc-ctf.xml\n\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nif [ $? == 0 ]; then\n  echo XML topology $OUTPUT_FILE_NAME generated successfully\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/testing/detectors/FDD/run_fdd_digits_qc_ctf.sh"
        }
    ],
    "1ec64ef65e176b14c6056d5f8d01087bd6e238514249a39452f3e646160ab1d3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script to define a few variables based on ALIEN_PROC_ID.\n# As multiple scripts may require these definitions, they are stored in a separate script.\n\n# Let's extract the last 9 digits (for int) and 8 digits (for int16) of ALIEN_PROC_ID to define NUMAID and shm-segment-id via O2JOBID, which are int and int16 types respectively. We will convert these values to int or int16.\nALIEN_PROC_ID_MAX_NDIGITS_INT32=9\nALIEN_PROC_ID_MAX_NDIGITS_INT16=8\nif [[ -n $ALIEN_PROC_ID ]]; then\n  echo \"ALIEN_PROC_ID for the current job is ${ALIEN_PROC_ID}\"\nelse\n  ALIEN_PROC_ID=123456789\n  echo \"ALIEN_PROC_ID was not set for the current job, setting it to ${ALIEN_PROC_ID}\"\nfi\n\nif [[ -n ${ALIEN_JDL_PACKAGES} ]] && [[ ${#ALIEN_PROC_ID} -lt ${ALIEN_PROC_ID_MAX_NDIGITS_INT32} ]]; then # we are on the grid and we expect to have the PROC_ID\n  echo \"Cannot determine O2JOBID, the job ID is too short (${ALIEN_PROC_ID}), we need at least ${ALIEN_PROC_ID_MAX_NDIGITS_INT32} digits, exiting with error\"\n  exit 2\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/common/setVarsFromALIEN_PROC_ID.sh"
        }
    ],
    "b662d02e17f882a5bbf8d77f761f8e466c2db090f82a7c97dad398bd3cb7b137": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ALIEN_PROC_ID_OFFSET_INT32=$((10#${ALIEN_PROC_ID: -${ALIEN_PROC_ID_MAX_NDIGITS_INT32}}))\necho \"ALIEN_PROC_ID_OFFSET_INT32 = $ALIEN_PROC_ID_OFFSET_INT32\"\n\nALIEN_PROC_ID_OFFSET_INT16=$((10#${ALIEN_PROC_ID: -${ALIEN_PROC_ID_MAX_NDIGITS_INT16}}))\necho \"ALIEN_PROC_ID_OFFSET_INT16 = $ALIEN_PROC_ID_OFFSET_INT16\"\n\n# we'll convert them to int32 or int16, but not to their maximum values (0x7fffffff for int32 and 0x7fff for int16)\n# instead, we'll use a smaller value to leave room for adding [0, 15] if needed (like the NUMAID), see https://github.com/AliceO2Group/O2DPG/pull/993#pullrequestreview-1393401475\nexport O2JOBID=$(((ALIEN_PROC_ID_OFFSET_INT32 & 0x7ffffff) * 16))\nexport O2JOBSHMID=$(((ALIEN_PROC_ID_OFFSET_INT16 & 0x7ff) * 16))\necho \"ALIEN_PROC_ID = $ALIEN_PROC_ID, we will set O2JOBID = $O2JOBID, SHMEMID = $O2JOBSHMID\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/common/setVarsFromALIEN_PROC_ID.sh"
        }
    ],
    "0e191283af22c552df5e0db1f0f5229a2ec6127ca4aebb71a9e488a3c71ac18e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# script to gather statistics from a job\n# $1 is the file to parse\n# $2 is the (possible) extension\n\nPVs=0\nCTFsFilesProcessedMsg=$(grep \"CTFReader stops processing,\" $1)\nnCTFsFilesOK=`echo $CTFsFilesProcessedMsg | sed 's/.*processing, \\([0-9]*\\) .*/\\1/'`\nnCTFsFilesInspected=$(grep alien_cp $1 | grep -v ALARM | grep -v non-zero | wc -l)\nnCTFsFilesFailed=$(grep \"FileFetcher: non-zero exit code [0-9]*\" $1 | wc -l)\nnCTFsProcessed=$(grep \"Read CTF\" $1 | tail -1 | sed 's/^.*Read CTF \\([0-9]*\\).*$/\\1/')\nnCTFsProcessed=$((nCTFsProcessed + 1))",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/common/getStat.sh"
        }
    ],
    "ec3e6faa2ef0a8cac79e5be52b9071dac24a6911113c912c65156475ab14f0c7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $nCTFsFilesInspected -gt 0 && $nCTFsFilesInspected != $((nCTFsFilesFailed + nCTFsFilesOK)) ]]; then\n  echo \"There was an issue with parsing the log file: The number of CTF files inspected ($nCTFsFilesInspected) does not match the sum of successfully processed ($nCTFsFilesOK) and failed ($nCTFsFilesFailed) files.\"\n  exit 8\nfi\nwhile read -r line; do\n  currentPVs=`echo $line | sed 's/^.*Found \\([0-9]*\\) PVs.*/\\1/'`\n  PVs=$((PVs + currentPVs))\ndone < <(grep \"Found\" $1 | grep \"PVs\")\n\necho CTFsFilesProcessedMsg = $CTFsFilesProcessedMsg\necho nCTFsFilesInspected = $nCTFsFilesInspected\necho nCTFsFilesOK = $nCTFsFilesOK\necho nCTFsFilesFailed = $nCTFsFilesFailed\necho nCTFsProcessed = $nCTFsProcessed\necho PVs = $PVs\n\nif [[ -n $2 ]]; then\n  echo \"1\" > ${nCTFsFilesInspected}_${nCTFsFilesOK}_${nCTFsFilesFailed}_${nCTFsProcessed}_${PVs}_${2}.stat\nfi\n\necho \"1\" > ${nCTFsFilesInspected}_${nCTFsFilesOK}_${nCTFsFilesFailed}_${nCTFsProcessed}_${PVs}.stat",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/common/getStat.sh"
        }
    ],
    "f59365f0fa721878fb321276f54b8bf0b29add9ed79e658787b845f1a8218240": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Define general arguments\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nPROXY_INSPEC=\"diagWords:TOF/DIAFREQ/0;eos:***/INFORMATION\"\n\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"$ARGS_ALL --proxy-name tof-diagn-input-proxy --dataspec ${PROXY_INSPEC} --network-interface ib0 --channel-config \\\"name=tof-diagn-input-proxy,method=bind,type=pull,rateLogging=0,transport=zeromq\\\" \"\nadd_W o2-calibration-tof-diagnostic-workflow \"--tf-per-slot 25000 --max-delay 1 ${ARGS_ALL}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-diagn-aggregator.sh"
        }
    ],
    "5560f280ae13e079cc109508709c30df1ae2f14f10581c5ecdc434e61ca52e0d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n    CCDB_POPULATOR_UPLOAD_PATH=\"http://ccdb-test.cern.ch:8080\"\nelse\n    CCDB_POPULATOR_UPLOAD_PATH=\"http://localhost:8084\"\nfi\nadd_W o2-calibration-ccdb-populator-workflow \"${ARGS_ALL} --configKeyValues ${ARGS_ALL_CONFIG} --ccdb-path=${CCDB_POPULATOR_UPLOAD_PATH} \"\n\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the command we have assembled\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-diagn-aggregator.sh"
        }
    ],
    "838ab2c0459244b4465b4cceef0d485325325fafb36bf95ec916befa19415fe9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nFILEWORKDIR=\"/home/wiechula/processData/inputFilesTracking/triggeredLaser\"\n\nPROXY_INSPEC=\"A:TPC/LASERTRACKS;B:TPC/CEDIGITS;D:TPC/CLUSREFS\"\n\nCALIB_CONFIG=\"TPCCalibPulser.FirstTimeBin=450;TPCCalibPulser.LastTimeBin=550;TPCCalibPulser.NbinsQtot=300;TPCCalibPulser.XminQtot=2;TPCCalibPulser.XmaxQtot=602;TPCCalibPulser.MinimumQtot=8;TPCCalibPulser.MinimumQmax=6;TPCCalibPulser.XminT0=450;TPCCalibPulser.XmaxT0=550;TPCCalibPulser.NbinsT0=400;output_dir=/dev/null\"\n\nCCDB_PATH=\"http://o2-ccdb.internal\"\n\nHOST=localhost\n\nQC_CONFIG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/tpc-raw-qcmn?run_type=${RUNTYPE:-}\"\n\nQC_CONFIG=\"components/qc/ANY/any/tpc-raw-qcmn\"\nmax_events=300\npublish_after=440\nmin_tracks=0\nnum_lanes=36",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-aggregator.sh"
        }
    ],
    "9eb93d675038bd2c287f1f9f9aafdf99ad6ed03ad823e4fd0d41fc9ec32e03bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "REMAPPING=\"--condition-remap \\\"file://${FILEWORKDIR}=GLO/Config/GRPECS,GLO/Config/GRPMagField,TPC/Calib/LaserTracks\\\" \"\nif [[ ! -z ${TPC_CALIB_MAX_EVENTS:-} ]]; then\n    max_events=${TPC_CALIB_MAX_EVENTS}\nfi\nif [[ ! -z ${TPC_CALIB_MIN_TRACKS:-} ]]; then\n    min_tracks=${TPC_CALIB_MIN_TRACKS}\nfi\n\nif [[ ! -z ${TPC_CALIB_PUBLISH_AFTER:-} ]]; then\n    publish_after=${TPC_CALIB_PUBLISH_AFTER}\nfi\nif [[ ! -z ${TPC_CALIB_LANES_PAD_RAW:-} ]]; then\n    num_lanes=${TPC_CALIB_LANES_PAD_RAW}\nfi\n\nEXTRA_CONFIG=\"--calib-type ce --publish-after-tfs ${publish_after} --max-events ${max_events} --lanes ${num_lanes} --check-calib-infos\"\n\nEXTRA_CONFIG_TRACKS=\"\"\n\nif [[ ${TPC_CALIB_TRACKS_PUBLISH_EOS:-} == 1 ]]; then\n    EXTRA_CONFIG_TRACKS=\"--only-publish-on-eos\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-aggregator.sh"
        }
    ],
    "2d9aa83086e216b895c608469d5a893fc203e67ad9764ff63d34edf8707fb5f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \" --proxy-name tpc-laser-input-proxy --dataspec \\\"$PROXY_INSPEC\\\" --network-interface ib0 --channel-config \\\"name=tpc-laser-input-proxy,method=bind,type=pull,rateLogging=0,transport=zeromq\\\"\" \"\" 0\nadd_W o2-tpc-calib-laser-tracks \"${REMAP} --use-filtered-tracks ${EXTRA_CONFIG_TRACKS} --min-tfs=${min_tracks} \"\nadd_W o2-tpc-calib-pad-raw \" ${EXTRA_CONFIG}\" \"${CALIB_CONFIG}\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path ${CCDB_PATH}\" \"\" 0\n#add_QC_from_apricot \"${QC_CONFIG_CONSUL}\" \"--local --host lcoalhost\"\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the command we have assembled\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-aggregator.sh"
        }
    ],
    "33bd56e3aae7c6c4d0f6b51092f747e70258fbaafca63b3e7584742631da0306": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC=\"A:EMC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\nPROXY_OUTSPEC=\"downstream:EMC/PEDDATA/0\"\n\n[[ -z $NEMCPROCPIPELINES ]] && NEMCPROCPIPELINES=30\n\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-calibration-emcal-pedestal-processor-workflow \"--pipeline PedestalProcessor:${NEMCPROCPIPELINES}\"\nadd_W o2-dpl-output-proxy \"--dataspec \\\"$PROXY_OUTSPEC\\\" --proxy-channel-name emc-pedestal-input-proxy --channel-config \\\"name=emc-pedestal-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=1\\\"\" \"\" 0\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/emc-pedestal-processing.sh"
        }
    ],
    "c5973932e17c76ffffd6e8a399fde69ba3e075c962f5f051796f2d14628b8c5b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/emc-pedestal-processing.sh"
        }
    ],
    "71ab550ba01a62265048fbedd767519a45737d200dd50f360497ddc627d7db21": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n## WORKFLOW FOR ALL ITS CALIBRATION SCANS (TODO: ADD FULL THR SCAN)\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nPROXY_INSPEC=\"A:ITS/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\nPROXY_OUTSPEC=\"tunestring:ITS/TSTR;runtype:ITS/RUNT;fittype:ITS/FITT;scantype:ITS/SCANT;chipdonestring:ITS/QCSTR;confdbv:ITS/CONFDBV;PixTypString:ITS/PIXTYP\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh"
        }
    ],
    "d348a225947e04e5cf466670164f5c32af0c7d70577555150483d497ad2e725b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\nCHIPMODBASE=5\nNDECODERS=6\nif [ $RUNTYPE_ITS == \"digital\" ]; then\n  CHIPMODBASE=10\nfi\nif [ $RUNTYPE_ITS == \"thrfull\" ]; then\n  CHIPMODBASE=20\n  NDECODERS=10\nfi\nADDITIONAL_OPTIONS_DEC=\"\"\nADDITIONAL_OPTIONS_CAL=\"\"\nif [ $RUNTYPE_ITS == \"tuningbb\" ]; then\n  ADDITIONAL_OPTIONS_CAL=\"--min-vcasn 30 --max-vcasn 130\"\nfi\nif [[ $RUNTYPE_ITS == \"tot1row\" || $RUNTYPE_ITS == \"vresetd\" ]]; then\n  ADDITIONAL_OPTIONS_CAL=\"--ninj 10\"\nfi\nif [ $RUNTYPE_ITS == \"totfullfast\" ]; then\n  ADDITIONAL_OPTIONS_CAL=\"--calculate-slope --charge-a 30 --charge-b 60 --ninj 10\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh"
        }
    ],
    "da0cd5f9f202e0e8d2f0e856b33446aa9036b17e303c84e19f8792c4a7ddb52f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--exit-transition-timeout 20 --dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,rateLogging=0,transport=shmem\\\"\" \"\" 0\nadd_W o2-itsmft-stf-decoder-workflow \"${ADDITIONAL_OPTIONS_DEC} --allow-empty-rofs --always-parse-trigger --condition-tf-per-query -1 --condition-backend \\\"http://localhost:8084\\\" --ignore-dist-stf --nthreads 1 --no-clusters --no-cluster-patterns --pipeline its-stf-decoder:${NDECODERS} --enable-calib-data --digits\"\nfor i in $(seq 0 $((CHIPMODBASE-1)))\ndo\n  add_W o2-its-threshold-calib-workflow \"-b ${ADDITIONAL_OPTIONS_CAL} --enable-single-pix-tag --ccdb-mgr-url=\\\"http://localhost:8084\\\" --nthreads 1 --chip-mod-selector $i --chip-mod-base $CHIPMODBASE --fittype derivative --output-dir \\\"/data/calibration\\\" --meta-output-dir \\\"/data/epn2eos_tool/epn2eos\\\" --meta-type \\\"calibration\\\"\" \"\" 0\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh"
        }
    ],
    "94175c4a3c24c6779a6d9969c5366a232ba2a73265e68c6d86c5ea68ac46cf38": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the workflow includes a QC parameter and the ITS detector is involved in quality control; then\n  fetch_QC_from_consul \"/o2/components/qc/ANY/any/its-qc-calibration\" \"--local --host epn -b\"\nfi\nadd_W o2-dpl-output-proxy \"--dataspec \\\"$PROXY_OUTSPEC\\\" --proxy-channel-name its-thr-input-proxy --channel-config \\\"name=its-thr-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=0\\\"\" \"\" 0\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh"
        }
    ],
    "7d26f39e1e7cf3c48722c6597d1a39147fb536fc112477ce7eacdbed49e273f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-processing.sh"
        }
    ],
    "0b070ca3537d397bce49ad37abe04c8d1762608ad816b097c89e9a5ff1ffdecc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Define general arguments\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC=\"A:MFT/RAWDATA;B:FLP/DISTSUBTIMEFRAME/0\"\nPROXY_OUTSPEC=\"downstream:MFT/DIGITS/0;downstream:MFT/DIGITSROF/0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mft-noise-processing.sh"
        }
    ],
    "525aa91247d07e4f4054e02044ce72a10ac66cfc1b586086c3a5f8ff41c06b3c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\"o2-dpl-raw-proxy ${ARGS_ALL} --dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=0\\\" | \"\nWORKFLOW+=\"o2-itsmft-stf-decoder-workflow ${ARGS_ALL} --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --runmft --digits --no-clusters --no-cluster-patterns --ignore-noise-map --nthreads 5 | \"\nWORKFLOW+=\"o2-dpl-output-proxy ${ARGS_ALL} --dataspec \\\"$PROXY_OUTSPEC\\\" --proxy-channel-name mft-noise-input-proxy --channel-config \\\"name=mft-noise-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=0\\\" | \"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo The workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mft-noise-processing.sh"
        }
    ],
    "a1632701179fe59a28accf111129d58ccbee846d97cd891fec2078a9cf3a3abf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Define general arguments\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC=\"A:MCH/RAWDATA;B:FLP/DISTSUBTIMEFRAME/0\"\nPROXY_OUTSPEC=\"downstream:MCH/PDIGITS/0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mch-badchannel-processing.sh"
        }
    ],
    "cf5131eec2dce812dbb3587f09f4b3d7b4dfc5a71db011f52f29507f0f86d228": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    PROXY_INSPEC=\"A:MCH/RAWDATA;B:FLP/DISTSUBTIMEFRAME/0\"\nPROXY_OUTSPEC=\"downstream:MCH/PDIGITS/0\"\n\nWORKFLOW=\"o2-dpl-raw-proxy ${ARGS_ALL} --dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=0\\\" | \"\nWORKFLOW+=\"o2-mch-pedestal-decoding-workflow --pipeline mch-pedestal-decoder:${MULTIPLICITY_FACTOR_RAWDECODERS} --logging-interval 10 ${ARGS_ALL} --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" | \"\nWORKFLOW+=\"o2-dpl-output-proxy ${ARGS_ALL} --dataspec \\\"$PROXY_OUTSPEC\\\" --proxy-channel-name mch-badchannel-input-proxy --channel-config \\\"name=mch-badchannel-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=0\\\" | \"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mch-badchannel-processing.sh"
        }
    ],
    "d575235adbf00dd10cedc9ecc8d486a284ef1d42402ddea2ce7c6746998c7564": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mch-badchannel-processing.sh"
        }
    ],
    "5aad557fffdb38cc7d1c4806cc63186285372003a83543394c5ddcafccd94c23": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# ------------------------------------------------------------------------\n#         ALICE HMPID detector\n# Workflow to calculate pedestals   v.3.0  = 24/08/2023\n#\n#  Additional Environment Variables:\n#     HMP_SIGMACUT : The value of sigma for the threshold cut (default=4)\n#     HMP_CCDB_REC : Whether to record into ALICE CCDB (default=False)\n#     HMP_PED_TAG :  A string to tag the pedestals (default=Latest)\n#     HMP_NODCSCCDB_REC : Whether to disable DCS CCDB recording (default=False)\n#     HMP_FILES_REC : Whether to store on files (for debug purposes only, default=False)\n#\n#   14/09/2023 - rebased\n#\n#   Auth. A.Franco  - INFN  Sez.BARI - ITALY\n# ------------------------------------------------------------------------\n\n# Set general arguments\nsource common/setenv.sh\nsource common/gen_topo_helper_functions.sh\nsource common/getCommonArgs.sh\n\n# Define the Input/Output streams\nPROXY_INSPEC=\"A:HMP/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nPROXY_OUTSPEC=\"A:HMP/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/hmp-pedestals-processing.sh"
        }
    ],
    "99b0c8470cc16f29d11e46dcea2f845a47f6cf357d9dce444f0063f3378fcfda": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set the HMP additional environment variables.\nif [ -z ${HMP_SIGMACUT+x} ];\nthen\n    HMP_SIGMACUT=\"4\"\nfi\nif [ -z ${HMP_NODCSCCDB_REC+x} ];\nthen\n    HMP_NODCSCCDB_REC=\"false\"\nelse\n    HMP_NODCSCCDB_REC=\"true\"\nfi\nif [ -z ${HMP_CCDB_REC+x} ];\nthen\n    HMP_CCDB_REC=\"false\"\nelse\n    HMP_CCDB_REC=\"true\"\nfi\nif [ -z ${HMP_FILES_REC+x} ];\nthen\n    HMP_FILES_REC=\"false\"\nelse\n    HMP_FILES_REC=\"true\"\nfi\nif [ -z ${HMP_PED_TAG+x} ];\nthen\n    HMP_PED_TAG=\"Latest\"\nfi\n\n# Define specific parameters\nSPEC_PARAM=\"\"\nif [ $HMP_NODCSCCDB_REC == 'false' ];\nthen\n  SPEC_PARAM+=\"--use-dcsccdb --dcsccdb-uri $DCSCCDBSERVER_PERS --dcsccdb-alivehours 3 \"\nfi\nif [ $HMP_CCDB_REC == 'true' ];\nthen\n  SPEC_PARAM+=\"--use-ccdb --ccdb-uri 'http://o2-ccdb.internal' \"\nfi\nif [ $HMP_FILES_REC == 'true' ];\nthen\n  SPEC_PARAM+=\"--use-files \"\nfi\n\nSPEC_PARAM+=\"--files-basepath 'HMP' \"\nSPEC_PARAM+=\"--pedestals-tag ${HMP_PED_TAG} --sigmacut ${HMP_SIGMACUT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/hmp-pedestals-processing.sh"
        }
    ],
    "20d21639e797b61642e4779478388b1705f259b748301a361c9406738c6f85c5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Here we build the workflow\n# Begin with an empty workflow\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,rateLogging=1,transport=shmem\\\"\" \"\" 0\nadd_W o2-hmpid-raw-to-pedestals-workflow \"--fast-decode $SPEC_PARAM\"\n\n# Add the o2-dpl-run workflow manually, either execute it or print the workflow (default)\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\n[[ $WORKFLOWMODE != \"print\" ]] && WORKFLOW+=\" --${WORKFLOWMODE} ${WORKFLOWMODE_FILE:-}\"\n[[ $WORKFLOWMODE == \"print\" || \"${PRINT_WORKFLOW:-}\" == \"1\" ]] && echo \"#HMPID Pedestals Calculation (v.3) workflow command:\\n\\n${WORKFLOW}\\n\" | sed -e \"s/\\\\\\\\n/\\n/g\" -e\"s/| */| \\\\\\\\\\n/g\" | eval cat $( [[ $WORKFLOWMODE == \"dds\" ]] && echo '1>&2')\nif [[ $WORKFLOWMODE != \"print\" ]]; then eval $WORKFLOW; else true; fi\n\n# -------  EOF --------",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/hmp-pedestals-processing.sh"
        }
    ],
    "dd3feff701a7b64521232473ef45b60fe922755bde21bd0c1fc72579331bd761": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# shellcheck disable=SC1091\nsource common/setenv.sh\n\n# shellcheck disable=SC1091\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC_EOS=\"eos:***/INFORMATION\"\nPROXY_INSPEC_DD=\"dd:FLP/DISTSUBTIMEFRAME/0\"\nPROXY_INSPEC=\"digits:FT0/DIGITSBC/0;channels:FT0/DIGITSCH/0;${PROXY_INSPEC_DD};${PROXY_INSPEC_EOS}\"\nPROXY_OUTSPEC=\"calib:FT0/TIME_SPECTRA/0\"\nPROXY_NAME=\"ft0-timeoffset-input-proxy\"\nWORKFLOW=\"o2-dpl-raw-proxy ${ARGS_ALL} --dataspec \\\"${PROXY_INSPEC}\\\" --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@${INRAWCHANNAME},transport=shmem,rateLogging=1\\\" | \"\nWORKFLOW+=\"o2-calibration-ft0-time-spectra-processor ${ARGS_ALL} | \"\nWORKFLOW+=\"o2-dpl-output-proxy ${ARGS_ALL} --dataspec \\\"$PROXY_OUTSPEC\\\" --proxy-channel-name ${PROXY_NAME} --channel-config \\\"name=${PROXY_NAME},method=connect,type=push,transport=zeromq,rateLogging=1\\\" | \"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/ft0-timeoffset-processing.sh"
        }
    ],
    "79eaae5cc79043e77a9d85753a38b3343a75ef107c7b3d43382d5a442f4efe7e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/ft0-timeoffset-processing.sh"
        }
    ],
    "dbdebd8874af79ca1642e2ad0d6223fbb97e69799074efc3caf17eb5ca4ac141": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC=\"A:ITS/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\n\nOUTTYPE=\"\"\nif [[ -z $USECLUSTERS ]]; then\n  PROXY_OUTSPEC=\"downstreamA:ITS/DIGITS/0;downstreamB:ITS/DIGITSROF/0\"\n  OUTTYPE=\" --no-clusters --digits \"\nelse\n  PROXY_OUTSPEC=\"downstreamA:ITS/COMPCLUSTERS/0;downstreamB:ITS/PATTERNS/0;downstreamC:ITS/CLUSTERSROF/0\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-noise-processing.sh"
        }
    ],
    "59e05db4c4053efc1e9bd9d51f5f01e1b32c752731196ca3fdee7c9b84ba900a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    [[ -z $NITSDECTHREADS ]] && NITSDECTHREADS=4\n[[ -z $NITSDECTPIPELINES ]] && NITSDECTPIPELINES=6\n  \nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-itsmft-stf-decoder-workflow \"${OUTTYPE} --nthreads ${NITSDECTHREADS} --pipeline its-stf-decoder:${NITSDECTPIPELINES} --ignore-noise-map\"\nadd_W o2-dpl-output-proxy \"--dataspec \\\"$PROXY_OUTSPEC\\\" --proxy-channel-name its-noise-input-proxy --channel-config \\\"name=its-noise-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=1\\\"\" \"\" 0\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-noise-processing.sh"
        }
    ],
    "6229d51b91e2dc48ec497c76193fa7040fee77a281f437cdee686965cccad555": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC=\"tunestring:ITS/TSTR;runtype:ITS/RUNT;fittype:ITS/FITT;scantype:ITS/SCANT;chipdonestring:ITS/QCSTR;confdbv:ITS/CONFDBV;PixTypString:ITS/PIXTYP;eos:***/INFORMATION\"\n\nCCDBPATH1=\"\"\nCCDBPATH2=\"\"\nif [ $RUNTYPE_ITS == \"tuning\" ] || [ $RUNTYPE_ITS == \"digital\" ] || [ $RUNTYPE_ITS == \"tuningbb\" ]; then\n  CCDBPATH1=\"$DCSCCDBSERVER_PERS\"\n  CCDBPATH2=\"http://o2-ccdb.internal\"\nelse\n  CCDBPATH1=\"http://o2-ccdb.internal\"\nfi\n\nif [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n  CCDBPATH1=\"http://ccdb-test.cern.ch:8080\"\n  CCDBPATH2=\"http://ccdb-test.cern.ch:8080\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-aggregator.sh"
        }
    ],
    "f48be068fc20fb40b02dd411f24131df05b737017f528b21eba17d7ae130ca18": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--exit-transition-timeout 20 --proxy-name its-thr-input-proxy --dataspec \\\"$PROXY_INSPEC\\\" --network-interface ib0 --channel-config \\\"name=its-thr-input-proxy,method=bind,type=pull,rateLogging=0,transport=zeromq\\\"\" \"\" 0\nadd_W o2-its-threshold-aggregator-workflow \"-b\" \"\" 0\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path=\\\"$CCDBPATH1\\\" --sspec-min 0 --sspec-max 0 --name-extension dcs\"\nif [ $RUNTYPE_ITS == \"digital\" ]; then\n  add_W o2-calibration-ccdb-populator-workflow \"--ccdb-path=\\\"$CCDBPATH2\\\" --sspec-min 1 --sspec-max 1\"\nfi\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-threshold-aggregator.sh"
        }
    ],
    "d20a44e490a735b113f3a645b8952386ab0e80ad1b85c24cf6bde1f1d6219b15": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh \n\nif [ $NUMAGPUIDS != 0 ]; then\n  ARGS_ALL+=\" --child-driver 'numactl --membind $NUMAID --cpunodebind $NUMAID'\"\nfi\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\nCALIB_CONFIG=\"TPCCalibPulser.FirstTimeBin=80;TPCCalibPulser.LastTimeBin=260;TPCCalibPulser.NbinsQtot=250;TPCCalibPulser.XminQtot=10;TPCCalibPulser.XmaxQtot=510;TPCCalibPulser.NbinsWidth=100;TPCCalibPulser.XminWidth=0.3;TPCCalibPulser.XmaxWidth=0.7;TPCCalibPulser.MinimumQtot=30;TPCCalibPulser.MinimumQmax=25;TPCCalibPulser.XminT0=125;TPCCalibPulser.XmaxT0=145;TPCCalibPulser.NbinsT0=800;keyval.output_dir=/dev/null\"\n\nCCDB_PATH=\"http://o2-ccdb.internal\"\n\nHOST=localhost\n\nQC_CONFIG=\"components/qc/ANY/any/tpc-pulser-calib-qcmn?run_type=${RUNTYPE:-}\"\n\nmax_events=200\npublish_after=230",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pulser.sh"
        }
    ],
    "b8b093c5f1e1523d63c55b80ddf414000014133131d347751be015aea5fd1a48": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    max_events=200\npublish_after=230\n\nif [[ ! -z ${TPC_CALIB_MAX_EVENTS:-} ]]; then\n    max_events=${TPC_CALIB_MAX_EVENTS}\nfi\n\nif [[ ! -z ${TPC_CALIB_PUBLISH_AFTER:-} ]]; then\n    publish_after=${TPC_CALIB_PUBLISH_AFTER}\nfi\n\n\n#################################################################################################################################\n\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-calib-pad-raw \"--input-spec \\\"$CALIB_INSPEC\\\" --calib-type pulser --publish-after-tfs ${publish_after} --max-events ${max_events} --lanes 36 --check-calib-infos\" \"${CALIB_CONFIG}\" \nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path \\\"http://o2-ccdb.internal\\\" \" \"\" 0\nadd_QC_from_apricot \"${QC_CONFIG}\" \"--local --host localhost\"\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pulser.sh"
        }
    ],
    "2c3418e1eb340263f111a03111fa7e84e3a4992032fd48132743ad60f03eb272": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    WORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pulser.sh"
        }
    ],
    "b1d0ac4003ac45be4d5f5f7c2f79398a99725e77063a95d76059ecc2cdbc329e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh \n\nFILEWORKDIR=\"/home/wiechula/processData/inputFilesTracking/triggeredLaser\"\n\nFILEWORKDIR2=\"/home/epn/odc/files/\"\n\n#ARGS_ALL_CONFIG+=\"NameConf.mDirGRP=$FILEWORKDIR;NameConf.mDirGeom=$FILEWORKDIR2;NameConf.mDirCollContext=$FILEWORKDIR;NameConf.mDirMatLUT=$FILEWORKDIR;keyval.input_dir=$FILEWORKDIR;keyval.output_dir=/dev/null\"\n#ARGS_ALL_CONFIG+=\"NameConf.mDirGRP=$FILEWORKDIR;NameConf.mDirGeom=$FILEWORKDIR2;NameConf.mDirCollContext=$FILEWORKDIR;NameConf.mDirMatLUT=$FILEWORKDIR\"\n\nif [ ${NUMAGPUIDS} -ne 0 ]; then\n  ARGS_ALL+=\" --child-driver 'numactl --membind $NUMAID --cpunodebind $NUMAID'\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-filter.sh"
        }
    ],
    "06ba4f8ae6b137f7deb2e5a3c99d9f8f500b8e16bba9dd7fec0182eed1a9f734": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ ${GPUTYPE} == \"HIP\" ]; then\n  if [ ${NUMAID} == 0 ] || [ ${NUMAGPUIDS} == 0 ]; then\n    export TIMESLICEOFFSET=0\n  else\n    export TIMESLICEOFFSET=${NGPUS}\n  fi\n  GPU_CONFIG_KEY+=\"GPU_proc.deviceNum=0;\"\n  GPU_CONFIG+=\" --environment ROCR_VISIBLE_DEVICES={timeslice${TIMESLICEOFFSET}}\"\n  export HSA_NO_SCRATCH_RECLAIM=1\nelse\n  GPU_CONFIG_KEY+=\"GPU_proc.deviceNum=-2;\"\nfi\n\nif [ ${GPUTYPE} != \"CPU\" ]; then\n  GPU_CONFIG_KEY+=\"GPU_proc.forceMemoryPoolSize=$GPUMEMSIZE;\"\n  if [ ${HOSTMEMSIZE} == \"0\" ]; then\n    HOSTMEMSIZE=$(( 1 << 30 ))\n  fi\nfi\nif [ ${HOSTMEMSIZE} != \"0\" ]; then\n  GPU_CONFIG_KEY+=\"GPU_proc.forceHostMemoryPoolSize=$HOSTMEMSIZE;\"\nfi\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nPROXY_OUTSPEC=\"A:TPC/LASERTRACKS;B:TPC/CEDIGITS;D:TPC/CLUSREFS\"\n\nHOST=localhost",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-filter.sh"
        }
    ],
    "d4020dd28ccbf131fc59db3902bfd4e3cbdfd5e3d01aec0ca368f2aa2a831e1f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "HOST=localhost\n\nQC_CONFIG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/tpc-laser-calib-qcmn?run_type=${RUNTYPE:-}\"\nQC_CONFIG=\"components/qc/ANY/any/tpc-laser-calib-qcmn?run_type=${RUNTYPE:-}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-filter.sh"
        }
    ],
    "ea68d266ec85739806f69ce0148ad1826e84f31b9ecad78a103d6de26021e9f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    RAWDIGIT_CONFIG=\"TPCDigitDump.NoiseThreshold=3;TPCDigitDump.LastTimeBin=600;NameConf.mDirGRP=$FILEWORKDIR;NameConf.mDirGeom=$FILEWORKDIR2;NameConf.mDirCollContext=$FILEWORKDIR;NameConf.mDirMatLUT=$FILEWORKDIR\"\nREMAP=\"--condition-remap \\\"file://${FILEWORKDIR}=GLO/Config/GRPECS,GLO/Config/GRPMagField,TPC/Calib/LaserTracks\\\" \"\nRECO_CONFIG=\"NameConf.mDirGRP=$FILEWORKDIR;\"\nRECO_CONFIG+=\"NameConf.mDirGeom=$FILEWORKDIR2;\"\nRECO_CONFIG+=\"NameConf.mDirCollContext=$FILEWORKDIR;\"\nRECO_CONFIG+=\"NameConf.mDirMatLUT=$FILEWORKDIR;\"\nRECO_CONFIG+=\"align-geom.mDetectors=none;\"\nRECO_CONFIG+=\"GPU_global.deviceType=$GPUTYPE;\"\nRECO_CONFIG+=\"GPU_proc.tpcIncreasedMinClustersPerRow=500000;\"\nRECO_CONFIG+=\"GPU_proc.ignoreNonFatalGPUErrors=1;$GPU_CONFIG_KEY;\"\nRECO_CONFIG+=\"GPU_global.tpcTriggeredMode=1;\"\nRECO_CONFIG+=\"GPU_rec_tpc.clusterError2AdditionalY=0.1;\"\nRECO_CONFIG+=\"GPU_rec_tpc.clusterError2AdditionalZ=0.15;\"\nRECO_CONFIG+=\"GPU_rec_tpc.clustersShiftTimebinsClusterizer=35;\"\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-filter.sh"
        }
    ],
    "b0661082d97f8eab2403ae0154cc46e353e966ad9acf54bf66b1560f410ee48b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "RECO_CONFIG+=\"GPU_rec_tpc.clustersShiftTimebinsClusterizer=35;\"\nRECO_CONFIG+=\"GPU_proc.memoryScalingFactor=2;\"\nRECO_CONFIG+=\"GPU_proc_param.tpcTriggerHandling=0;\"\n# loosen tolerances on tracking and selection cuts for very low laser intensities\nRECO_CONFIG+=\"GPU_rec_tpc.trackFollowingMaxRowGap=15;GPU_rec_tpc.trackFollowingMaxRowGapSeed=15;GPU_rec_tpc.minTrackdEdxMax=8;GPU_rec_tpc.adddEdxSubThresholdClusters=0;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-filter.sh"
        }
    ],
    "89d8bac7b95cc46d0048dde75c849b63ac212aad48cdf1e897109edc775a1bcf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-raw-to-digits-workflow \"--ignore-grp --input-spec \\\"$CALIB_INSPEC\\\" --remove-duplicates --pipeline tpc-raw-to-digits-0:20 --send-ce-digits \" \"${RAWDIGIT_CONFIG}\"\nadd_W o2-tpc-reco-workflow \" ${TPC_CORR_SCALING:-} --disable-ctp-lumi-request --input-type digitizer --output-type \\\"tracks,disable-writer,clusters\\\" --disable-mc --pipeline tpc-zsEncoder:20,tpc-tracker:8 ${GPU_CONFIG} ${REMAP} \" \"${RECO_CONFIG}\"\nadd_W o2-tpc-laser-track-filter \"\" \"\" 0\nadd_W o2-dpl-output-proxy \" --proxy-name tpc-laser-input-proxy --proxy-channel-name tpc-laser-input-proxy --dataspec \\\"$PROXY_OUTSPEC\\\" --channel-config \\\"name=tpc-laser-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=0\\\" \" \"\" 0\nadd_QC_from_apricot \"${QC_CONFIG}\" \"--local --host localhost\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-filter.sh"
        }
    ],
    "50ae69d017b01e9955d2a1f55d5b4bed536da79fdc44d5028ca438e6858f2260": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser-filter.sh"
        }
    ],
    "385e245518e77f9bf2b364a307adc07dd6bf5e3afe86e9da70731052580f7815": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# shellcheck disable=SC1091\nsource common/setenv.sh\n\n# shellcheck disable=SC1091\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC_EOS=\"eos:***/INFORMATION\"\nPROXY_INSPEC=\"calib:FT0/TIME_SPECTRA/0;${PROXY_INSPEC_EOS}\"\nCALIB_TIME_OFFSET_CONFIG=\"FT0CalibParam.mNExtraSlots=0\"\n\nWORKFLOW=\"o2-dpl-raw-proxy ${ARGS_ALL} --proxy-name ft0-timeoffset-input-proxy --dataspec \\\"${PROXY_INSPEC}\\\" --network-interface ib0 --channel-config \\\"name=ft0-timeoffset-input-proxy,method=bind,type=pull,rateLogging=1,transport=zeromq\\\" | \"\nWORKFLOW+=\"o2-calibration-ft0-time-offset-calib --configKeyValues \\\"${CALIB_TIME_OFFSET_CONFIG}\\\" ${ARGS_ALL} --tf-per-slot 105600 | \"\nWORKFLOW+=\"o2-calibration-ccdb-populator-workflow ${ARGS_ALL} --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --ccdb-path=\\\"http://ccdb-test.cern.ch:8080\\\" --sspec-min 1 --sspec-max 1 | \"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/ft0-timeoffset-aggregator.sh"
        }
    ],
    "caebae438ee25d69e2ae8c9e309cb1e9411bc9201fb71fbd4b9fe0eef9db22f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/ft0-timeoffset-aggregator.sh"
        }
    ],
    "e4d819eaea4bcb275caf648200d3b6a4781a3226bd933a719ea8b66ab47d2d4b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nPROXY_INSPEC=\"x:TOF/CRAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nNTHREADS=1\nPROXY_OUTSPEC=\"calclus:TOF/INFOCALCLUS;cosmics:TOF/INFOCOSMICS;trkcos:TOF/INFOTRACKCOS;trksiz:TOF/INFOTRACKSIZE\"\nMYDIR=$(dirname \"$(readlink -f $0)\"/../../testing/detectors/TOF)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-standalone-cosmic-reco-time-calib.sh"
        }
    ],
    "867e408f9daa19e191f5f0fef67f06c4150fc6a5d541858eb2fae626236aab97": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"${ARGS_ALL} --dataspec ${PROXY_INSPEC} --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=0\\\" \"\nadd_W o2-tof-reco-workflow \"--input-type raw --output-type clusters ${ARGS_ALL} --configKeyValues ${ARGS_ALL_CONFIG} --disable-root-output --calib-cluster --cluster-time-window 10000 --cosmics --pipeline \\\"tof-compressed-decoder:${NTHREADS},TOFClusterer:${NTHREADS}\\\" \"\nadd_W o2-qc \"${ARGS_ALL} --config json://${MYDIR}/qc-full.json --local --host epn \"\nadd_W o2-dpl-output-proxy \"${ARGS_ALL} --dataspec ${PROXY_OUTSPEC} --proxy-channel-name tof-time-calib-input-proxy --channel-config \\\"name=tof-time-calib-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=0\\\" \"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-standalone-cosmic-reco-time-calib.sh"
        }
    ],
    "a85aeaecb98e43dfd1a3ed327acd8559003bbab60b35bd5a60c8997911ca8288": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-standalone-cosmic-reco-time-calib.sh"
        }
    ],
    "a83d277c5fabb733a15619b30f1719b4b1adc764d45705ae0426c1e0fe88100f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh \n\nif [ $NUMAGPUIDS != 0 ]; then\n  ARGS_ALL+=\" --child-driver 'numactl --membind $NUMAID --cpunodebind $NUMAID'\"\nfi\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\nCCDB_PATH=\"http://o2-ccdb.internal\"\n\nHOST=localhost\n\n#QC_CONFIG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/tpc-pedestal-calib-qcmn\"\nQC_CONFIG=\"components/qc/ANY/any/tpc-pedestal-calib-qcmn?run_type=${RUNTYPE:-}\"\nCALIB_CONFIG=\"TPCCalibPedestal.ADCMin=20\"\n\n# ===| configuration from environment variables |===============================\nmax_events=${TPC_CALIB_MAX_EVENTS:-50}\npublish_after=${TPC_CALIB_PUBLISH_AFTER:-400}\nsendToDCS=${TPC_CALIB_SEND_TO_DCS:-1}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pedestal.sh"
        }
    ],
    "4cd32b1233546ce6ac1302954bc9747c4064168b920115b2cb92869b303954f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ===| CCDB Populator Configuration |=============================================\n# The CCDB populator for production will accept sub-specifications within this range\nCCDBPRO_SUBSPEC_MIN=0\nCCDBPRO_SUBSPEC_MAX=32767\nCCDBPATHPRO=\"http://o2-ccdb.internal\"\n\n# The CCDB populator for DCS will accept sub-specifications within this range\nCCDBDCS_SUBSPEC_MIN=32768\nCCDBDCS_SUBSPEC_MAX=65535\nCCDBPATHDCS=\"$DCSCCDBSERVER_PERS\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pedestal.sh"
        }
    ],
    "7c7b7fac8c182edb0d330cd873a2146019809955978d43b994f2c281399e65c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-calib-pad-raw \"--input-spec \\\"$CALIB_INSPEC\\\" --publish-after-tfs ${publish_after} --max-events ${max_events} --lanes 36 --send-to-dcs-ccdb $sendToDCS\" \"${CALIB_CONFIG}\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path \\\"$CCDBPATHPRO\\\"  --sspec-min $CCDBPRO_SUBSPEC_MIN --sspec-max $CCDBPRO_SUBSPEC_MAX\" \"\" 0\nif $sendToDCS -eq 1 ; then\n  add_W o2-calibration-ccdb-populator-workflow \"--ccdb-path \\\"$CCDBPATHDCS\\\"  --sspec-min $CCDBDCS_SUBSPEC_MIN --sspec-max $CCDBDCS_SUBSPEC_MAX  --name-extention dcs\" \"\" 0\nfi\nadd_QC_from_apricot \"${QC_CONFIG}\" \"--local --host localhost\"\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pedestal.sh"
        }
    ],
    "f10181edf5bc33dd2624a5144a012803784ab2ccd980d0036578693985ddec88": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    WORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pedestal.sh"
        }
    ],
    "47256c003ea3b745f7ec69d0c53f8b0237b36ce5687c9cd56740ba74744d46e9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nif [ $NUMAGPUIDS -ne 0 ]; then\n  ARGS_ALL+=\" --child-driver 'numactl --membind $NUMAID --cpunodebind $NUMAID'\"\nfi\n\nPROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0;eos:***/INFORMATION\"\n\nCALIB_CONFIG=\"TPCCalibPulser.FirstTimeBin=80;TPCCalibPulser.LastTimeBin=260;TPCCalibPulser.NbinsQtot=250;TPCCalibPulser.XminQtot=10;TPCCalibPulser.XmaxQtot=510;TPCCalibPulser.NbinsWidth=100;TPCCalibPulser.XminWidth=0.3;TPCCalibPulser.XmaxWidth=0.7;TPCCalibPulser.MinimumQtot=30;TPCCalibPulser.MinimumQmax=25;TPCCalibPulser.XminT0=125;TPCCalibPulser.XmaxT0=145;TPCCalibPulser.NbinsT0=800;keyval.output_dir=/dev/null\"\n\nCCDB_PATH=\"http://o2-ccdb.internal\"\n\nHOST=localhost",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pulser-long.sh"
        }
    ],
    "e1c0ed7b0222d9e0667503c152eff0ee32c0fbb321562fb5b1a637f56919f1cf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CCDB_PATH=\"http://o2-ccdb.internal\"\n\nHOST=localhost\n\n#QC_CONFIG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/tpc-raw-qcmn\"\nQC_CONFIG=\"components/qc/ANY/any/tpc-pulser-calib-qcmn?run_type=${RUNTYPE:-}\"\nmax_events=1000000\npublish_after=200\n\nif [[ ! -z ${TPC_CALIB_MAX_EVENTS:-} ]]; then\n    max_events=${TPC_CALIB_MAX_EVENTS}\nfi\n\nif [[ ! -z ${TPC_CALIB_PUBLISH_AFTER:-} ]]; then\n    publish_after=${TPC_CALIB_PUBLISH_AFTER}\nfi\n\nEXTRA_CONFIG=\"--calib-type pulser --reset-after-publish --publish-after-tfs ${publish_after} --max-events ${max_events} --lanes 36 --check-calib-infos\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pulser-long.sh"
        }
    ],
    "0876f1f424b5e608bba45d4464d1c9e7a64484b20b7859185325a47a21c65652": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#################################################################################################################################\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-calib-pad-raw \"--input-spec \\\"$CALIB_INSPEC\\\" --calib-type pulser --reset-after-publish --publish-after-tfs ${publish_after} --max-events ${max_events} --lanes 36 --check-calib-infos\" \nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path \\\"http://o2-ccdb.internal\\\" \" \"\" 0\nadd_QC_from_apricot \"${QC_CONFIG}\" \"--local --host localhost\"\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo The workflow command is:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pulser-long.sh"
        }
    ],
    "3d27469c8082fd590fc96b238f05fabe6a0a26fca97a98712f09acde252783e0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#o2-dpl-raw-proxy ${ARGS_ALL} --inject-missing-data \\\n#    --dataspec ${PROXY_INSPEC} \\\n#    --readout-proxy '--channel-config \"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\"' \\\n#    | o2-tpc-calib-pad-raw ${ARGS_ALL} \\\n#    --input-spec ${CALIB_INSPEC} \\\n#    --configKeyValues \"${CALIB_CONFIG}\" \\\n#    ${EXTRA_CONFIG} \\\n#    | o2-calibration-ccdb-populator-workflow ${ARGS_ALL} \\\n#    --ccdb-path ${CCDB_PATH} \\\n#    | o2-qc ${ARGS_ALL} --config ${QC_CONFIG} --local --host ${HOST} \\\n#    | o2-dpl-run ${ARGS_ALL} --dds ${WORKFLOWMODE_FILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-pulser-long.sh"
        }
    ],
    "4d512ede2409f388b84befb2c35e00358fe32550607a43d6487ba6fcb69b4fdb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\n\nINPTYPE=\"\"\n#PROXY_INSPEC=\"A:EMC/PEDDATA/0;eos:***/INFORMATION\"\nPROXY_INSPEC=\"A:EMC/PEDDATA/0\"\n\nCCDBPATH1=\"http://o2-ccdb.internal\"\nCCDBPATH2=\"$DCSCCDBSERVER_PERS\"\nif [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" || ! -z $ISTEST ]]; then\n  CCDBPATH1=\"http://ccdb-test.cern.ch:8080\"\n  CCDBPATH2=\"http://ccdb-test.cern.ch:8080\"\nfi\n\nQC_STANDALONE=0\nif [[ ! -z ${EMC_PEDQC_STANDALONE:-} ]]; then\n  QC_STANDALONE=${EMC_PEDQC_STANDALONE}\nfi\n\nQC_CONFIG=\"/o2/components/qc/ANY/any/emc-pedestal-qc\"\nQC_OPT=\nif [ $QC_STANDALONE -gt 0 ]; then\n  QC_CONFIG=\"/o2/components/qc/ANY/any/emc-pedestal-qc-standalone\"\nelse\n  QC_CONFIG=\"/o2/components/qc/ANY/any/emc-pedestal-qc\"\n  QC_OPT=\"--local --host localhost\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/emc-pedestal-aggregator.sh"
        }
    ],
    "f87609999bee634be04a756479fbb5f0c8f99b8c28a1ed84840c05a94a637fdc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--proxy-name emc-pedestal-input-proxy --dataspec \\\"$PROXY_INSPEC\\\" --network-interface ib0 --channel-config \\\"name=emc-pedestal-input-proxy,method=bind,type=pull,rateLogging=1,transport=zeromq\\\"\" \"\" 0\nadd_W o2-calibration-emcal-pedestal-calib-workflow --addRunNumber\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path=\\\"$CCDBPATH1\\\" --sspec-min 0 --sspec-max 0\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path=\\\"$CCDBPATH2\\\" --sspec-min 1 --sspec-max 1 --name-extension dcs\"\nadd_QC_from_consul \"${QC_CONFIG}\" \"${QC_OPT}\"\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo The workflow command is:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the command that has been assembled\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/emc-pedestal-aggregator.sh"
        }
    ],
    "dd61df1431508bb13ddf21e3d6e129949e8ddffea0e5d04be6d7d04c012b002a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nPROXY_INSPEC=\"A:MCH/PDIGITS/0\"\nCONSUL_ENDPOINT=\"alio2-cr1-hv-con01.cern.ch:8500\"\n\nMCH_MAX_PEDESTAL=${MCH_MAX_PEDESTAL:-500.0}\nMCH_MAX_NOISE=${MCH_MAX_NOISE:-2.0}\nMCH_MIN_ENTRIES=${MCH_MIN_ENTRIES:-100}\nMCH_MIN_FRACTION=${MCH_MIN_FRACTION:-0.5}\nMCH_END_OF_STREAM_ONLY=${MCH_END_OF_STREAM_ONLY:-true}\nBADCHANNEL_CONFIG=\"${ARGS_ALL_CONFIG};MCHBadChannelCalibratorParam.maxPed=${MCH_MAX_PEDESTAL};MCHBadChannelCalibratorParam.maxNoise=${MCH_MAX_NOISE};MCHBadChannelCalibratorParam.minRequiredNofEntriesPerChannel=${MCH_MIN_ENTRIES};MCHBadChannelCalibratorParam.minRequiredCalibratedFraction=${MCH_MIN_FRACTION};MCHBadChannelCalibratorParam.onlyAtEndOfStream=${MCH_END_OF_STREAM_ONLY};\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mch-badchannel-aggregator.sh"
        }
    ],
    "a44d0735db725f5b3705556f6bccfe412d284dee31788178610941514410aa96": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ -n \"${MCH_NTHREADS}\" ]; then\n   BADCHANNEL_CONFIG+=\"MCHBadChannelCalibratorParam.nThreads=${MCH_NTHREADS};\"\nfi\n\nMCH_LOGGING_OPT=\nif [ -n \"${MCH_LOGGING_INTERVAL}\" ]; then\n    MCH_LOGGING_OPT=\"--logging-interval ${MCH_LOGGING_INTERVAL}\"\nfi\n\nWORKFLOW=\"o2-dpl-raw-proxy $ARGS_ALL --proxy-name mch-badchannel-input-proxy --dataspec \\\"$PROXY_INSPEC\\\" --network-interface ib0 --channel-config \\\"name=mch-badchannel-input-proxy,method=bind,type=pull,rateLogging=0,transport=zeromq\\\" | \"\nWORKFLOW+=\"o2-calibration-mch-badchannel-calib-workflow $ARGS_ALL --configKeyValues \\\"$BADCHANNEL_CONFIG\\\" ${MCH_LOGGING_OPT} | \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mch-badchannel-aggregator.sh"
        }
    ],
    "a97b23c58ee4003ab65ad6156dd2fe95d3b610e8a836ab570567131cf67eb514": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ -z \"${MCH_SKIP_CCDB_UPLOAD}\" ]; then\n    WORKFLOW+=\"o2-calibration-ccdb-populator-workflow $ARGS_ALL --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --ccdb-path=\\\"http://o2-ccdb.internal\\\" --sspec-min 0 --sspec-max 0 | \"\n    WORKFLOW+=\"o2-calibration-ccdb-populator-workflow $ARGS_ALL --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --ccdb-path=\\\"$DCSCCDBSERVER_PERS\\\" --sspec-min 1 --sspec-max 1 --name-extention dcs | \"\nfi\n\nadd_QC_from_consul \"/o2/components/qc/ANY/any/mch-badchannel\" \"\"\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mch-badchannel-aggregator.sh"
        }
    ],
    "2eafd46ff92513fd72c8c010054a338af838222ad5a1d06cb2caf6eb64f39417": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Define general arguments\nsource common/getCommonArgs.sh\n\nPROXY_INSPEC=\"A:MFT/DIGITS/0;B:MFT/DIGITSROF/0\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mft-noise-aggregator.sh"
        }
    ],
    "1dea1f20f9ea07efead860bdd6a02c2f12383f2737d961833b9d3ce3070ae66b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    PROXY_INSPEC=\"A:MFT/DIGITS/0;B:MFT/DIGITSROF/0\"\n\nWORKFLOW=\"o2-dpl-raw-proxy $ARGS_ALL --proxy-name mft-noise-input-proxy --dataspec \\\"$PROXY_INSPEC\\\" --network-interface ib0 --channel-config \\\"name=mft-noise-input-proxy,method=bind,type=pull,rateLogging=0,transport=zeromq\\\" | \"\nWORKFLOW+=\"o2-calibration-mft-calib-workflow $ARGS_ALL --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --useDigits --prob-threshold 1e-5 --send-to-server DCS-CCDB --path-CCDB \\\"/MFT/Calib/NoiseMap\\\" --path-DCS \\\"/MFT/Config/NoiseMap\\\" --path-CCDB-single \\\"/MFT/Calib/NoiseMapSingle\\\" | \"\nWORKFLOW+=\"o2-calibration-ccdb-populator-workflow $ARGS_ALL --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --ccdb-path=\\\"http://o2-ccdb.internal\\\" --sspec-min 0 --sspec-max 0 | \"\nWORKFLOW+=\"o2-calibration-ccdb-populator-workflow $ARGS_ALL --configKeyValues \\\"$ARGS_ALL_CONFIG\\\" --ccdb-path=\\\"$DCSCCDBSERVER_PERS\\\" --sspec-min 1 --sspec-max 1 --name-extension dcs | \"\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mft-noise-aggregator.sh"
        }
    ],
    "bbd272083f868fa32bd95a05099ff9412d6247c211d1984a4b4a86d6f01e40bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mft-noise-aggregator.sh"
        }
    ],
    "81fa13e7fb8e851fa2d297b4fe2dc6d3695ae9e1d7c8fff4347db7ff326971d1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nPROXY_INSPEC=\"x:TOF/CRAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nNTHREADS=1\nPROXY_OUTSPEC=\"diagWords:TOF/DIAFREQ\"\nMYDIR=\"$(dirname $(readlink -f $0))/../../testing/detectors/TOF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-standalone-reco.sh"
        }
    ],
    "118de863ae315e71867d3d188a017ff62a277e5c1ef3a9f88791f846b24cee03": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"${ARGS_ALL} --dataspec ${PROXY_INSPEC} --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=0\\\" \"\nadd_W o2-tof-reco-workflow \"--input-type raw --output-type clusters ${ARGS_ALL} --configKeyValues ${ARGS_ALL_CONFIG} --disable-root-output --calib-cluster --cluster-time-window 10000 --cosmics --pipeline \\\"tof-compressed-decoder:${NTHREADS},TOFClusterer:${NTHREADS}\\\" \"\nadd_W o2-qc \"${ARGS_ALL} --config json://${MYDIR}/qc-full.json --local --host epn \"\nadd_W o2-dpl-output-proxy \"${ARGS_ALL} --dataspec ${PROXY_OUTSPEC} --proxy-channel-name tof-diagn-input-proxy --channel-config \\\"name=tof-diagn-input-proxy,method=connect,type=push,transport=zeromq,rateLogging=0\\\" \"\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-standalone-reco.sh"
        }
    ],
    "65ed0a315382b30b2525935ae34bf02db4e8c578b5b6096c2dec8d7017bc1574": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the command we've put together\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-standalone-reco.sh"
        }
    ],
    "025fc5bed6918d3fd92e22aacec47d1433109e893114da040be8ba40171816a6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\n\nINPTYPE=\"\"\nif [[ -z $USECLUSTERS ]]; then\n  PROXY_INSPEC=\"A:ITS/DIGITS/0;B:ITS/DIGITSROF/0;eos:***/INFORMATION\"\nelse\n  PROXY_INSPEC=\"A:ITS/COMPCLUSTERS/0;B:ITS/PATTERNS/0;C:ITS/CLUSTERSROF/0;eos:***/INFORMATION\"\n  INPTYPE=\" --use-clusters \"\nfi\n\nif [[ -z $NTHREADS ]]; then NTHREADS=1; fi\n\nCCDBPATH1=\"http://o2-ccdb.internal\"\nCCDBPATH2=\"$DCSCCDBSERVER_PERS\"\nif [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" || ! -z $ISTEST ]]; then\n  CCDBPATH1=\"http://ccdb-test.cern.ch:8080\"\n  CCDBPATH2=\"http://ccdb-test.cern.ch:8080\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-noise-aggregator.sh"
        }
    ],
    "5f0bad229574887aa0e234160112d6ff7a9ead5c5261be57c2a5274ad63d584e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--proxy-name its-noise-input-proxy --dataspec \\\"$PROXY_INSPEC\\\" --network-interface ib0 --channel-config \\\"name=its-noise-input-proxy,method=bind,type=pull,rateLogging=1,transport=zeromq\\\"\" \"\" 0\nadd_W o2-its-noise-calib-workflow \"--prob-threshold 1e-6 --cut-ib 1e-2 --nthreads ${NTHREADSACC} --processing-mode 1 --pipeline its-noise-calibrator:${NITSACCPIPELINES} ${INPTYPE}\"\nadd_W o2-its-noise-calib-workflow \"--validity-days 730 --prob-threshold 1e-6 --cut-ib 1e-2 --nthreads ${NTHREADSNORM} --processing-mode 2 ${INPTYPE}\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path=\\\"$CCDBPATH1\\\" --sspec-min 0 --sspec-max 0\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path=\\\"$CCDBPATH2\\\" --sspec-min 1 --sspec-max 1 --name-extension dcs\"\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-noise-aggregator.sh"
        }
    ],
    "ca3061ae4c392e87f3d1265b4d0f3083be105558a189b769d089aec548b803b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the command we have put together\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/its-noise-aggregator.sh"
        }
    ],
    "2c458e3587da059296e47528c312eeb0ca44ea2e852738d6ed1921e3ee35423f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh\n\nmax_statistics=5000\nif [[ ! -z ${PHS_MAX_STATISTICS:-} ]]; then\n  max_statistics=$PHS_MAX_STATISTICS\nfi\n\nPROXY_INSPEC=\"A:PHS/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\npush_ccdb_path=\"http://o2-ccdb.internal\"\npull_ccdb_path=\"http://o2-ccdb.internal\"\nif [[ ! -z ${PUHS_CCDB_PATH:-} ]]; then\n  push_ccdb_path=$PUHS_CCDB_PATH\nfi\n\nif [[ ! -z ${PULL_CCDB_PATH:-} ]]; then\n  pull_ccdb_path=$PULL_CCDB_PATH\nfi\n\nif [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n  push_ccdb_path=\"http://ccdb-test.cern.ch:8080\"\nfi\n\nQC_CONFIG=\"/o2/components/qc/ANY/any/phs-pedestal-qc\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/phs-pedestal.sh"
        }
    ],
    "26f5e6931a7459451be3cca9d9c8e8c281aa5fa83cceb0f42484bb590817f7ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    QC_CONFIG=\"/o2/components/qc/ANY/any/phs-pedestal-qc\"\n\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-phos-reco-workflow \"--input-type raw --output-type cells --use-pedestal --disable-root-input --disable-root-output --condition-backend ${pull_ccdb_path}\" \nadd_W o2-phos-calib-workflow \"--pedestals --statistics ${max_statistics} --force-update\"\n#add_W o2-calibration-ccdb-populator-workflow \"--ccdb-path ${push_ccdb_path}\"\nif workflow_has_parameter QC; then add_QC_from_consul \"${QC_CONFIG}\"; fi\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path ${push_ccdb_path}\"\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/phs-pedestal.sh"
        }
    ],
    "d4a9b88c06b00b7030bd92aaa105a9edd8d63dc63db78244192658949831014d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    WORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n    echo Workflow command:\n    echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n    # Execute the assembled command\n    WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n    eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/phs-pedestal.sh"
        }
    ],
    "330e7a52c40acee404a99e0e1a8a2a19c6aefee8372e2c48558beb71dc9df07c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#o2-dpl-raw-proxy $ARGS_ALL \\\n#\t\t --dataspec \"$PROXY_INSPEC\" --inject-missing-data \\\n#\t\t --readout-proxy '--channel-config \"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\"' \\\n#    | o2-phos-reco-workflow $ARGS_ALL \\\n#\t\t\t    --input-type raw  \\\n#\t\t\t    --output-type cells \\\n#\t\t\t    --apply-pedestal-correction \\\n#\t\t\t    --skip-root-input \\\n#\t\t\t    --skip-root-output \\\n#    | o2-phos-calib-workflow $ARGS_ALL \\\n#\t\t\t     --apply-pedestals \\\n#\t\t\t     --max-statistics $PHS_MAX_STATISTICS \\\n#\t\t\t     --ccdb-configuration \"NameConf.mCCDBServer=${PHS_CCDB_PATH}\" \\\n#\t\t\t     --force-update \\\n#    | o2-qc $ARGS_ALL \\\n#            --configuration $QC_CONFIG \\\n#    | o2-calibration-ccdb-populator-workflow $ARGS_ALL \\\n#\t\t\t\t\t     --ccdb-location $PHS_CCDB_PATH \\\n#    | o2-dpl-run $ARGS_ALL --dds ${WORKFLOWMODE_FILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/phs-pedestal.sh"
        }
    ],
    "3b29e82c1ee6d441e295844b26d26f3a54d2ba74d90a76b0705255dff79ac9d3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh\n\nmax_statistics=50000\nif [[ ! -z ${PHS_MAX_STATISTICS:-} ]]; then\n  max_statistics=$PHS_MAX_STATISTICS\nfi\n\nPROXY_INSPEC=\"A:PHS/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\nEXTRA_CONFIG=\" \"\n\npush_ccdb_path=\"http://o2-ccdb.internal\"\npull_ccdb_path=\"http://o2-ccdb.internal\"\nif [[ ! -z ${PUHS_CCDB_PATH:-} ]]; then\n  push_ccdb_path=$PUHS_CCDB_PATH\nfi\n\nif [[ ! -z ${PULL_CCDB_PATH:-} ]]; then\n  pull_ccdb_path=$PULL_CCDB_PATH\nfi\n\nif [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n  push_ccdb_path=\"http://ccdb-test.cern.ch:8080\"\nfi\n\nQC_CONFIG=\"/o2/components/qc/ANY/any/phs-led-qc\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/phs-led.sh"
        }
    ],
    "d25630e0e0df959751bc2896b7a751a026ca9a260fd3cca036f32c61109ec64c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    QC_CONFIG=\"/o2/components/qc/ANY/any/phs-led-qc\"\n\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-phos-reco-workflow \"--input-type raw --output-type cells --disable-root-input --disable-root-output --keepHGLG on --condition-backend ${pull_ccdb_path}\"\nadd_W o2-phos-calib-workflow \"--hglgratio on --statistics ${max_statistics} --forceupdate\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path ${push_ccdb_path}\"\nif [ \"qc\" in \"${WORKFLOW_PARAMETERS}\" ]; then\n    add_QC_from_consul \"${QC_CONFIG}\"\nfi\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n    echo Workflow command:\n    echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n    # Execute the assembled command\n    WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n    eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/phs-led.sh"
        }
    ],
    "652ea5659f90ad019ce118cfdef9e4d8648ddac850802676acd6400086e84f35": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#o2-dpl-raw-proxy $ARGS_ALL \\\n#\t\t --dataspec \"$PROXY_INSPEC\" --inject-missing-data \\\n#\t\t --readout-proxy '--channel-config \"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\"' \\\n#    | o2-phos-reco-workflow $ARGS_ALL \\\n#\t\t\t    --input-format raw  \\\n#\t\t\t    --output-format cells \\\n#\t\t\t    --disable-root-input \\\n#\t\t\t    --disable-root-output \\\n#\t\t\t    --preserveHGLG on \\\n#    | o2-phos-calib-workflow $ARGS_ALL \\\n#\t\t\t     --hglgRatio on \\\n#\t\t\t     --statistics $PHS_MAX_STATISTICS \\\n#\t\t\t     --configKeyValues \"NameConf.mCCDBServer=${PHS_CCDB_PATH}\" \\\n#\t\t\t     --forceUpdate \\\n#    | o2-qc $ARGS_ALL \\\n#            --config $QC_CONFIG \\\n#    | o2-calibration-ccdb-populator-workflow $ARGS_ALL \\\n#\t\t\t\t\t     --ccdb-location $PHS_CCDB_PATH \\\n#    | o2-dpl-run $ARGS_ALL --dds ${WORKFLOWMODE_FILE}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/phs-led.sh"
        }
    ],
    "0b00816c6c7c84e232e5a0fb91aee1aafc40011213ae0954e39cf97098874c33": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nsource common/setenv.sh\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Set general arguments\nsource common/getCommonArgs.sh\nsource common/gen_topo_helper_functions.sh\n\nPROXY_INSPEC=\"calclus:TOF/INFOCALCLUS/0;cosmics:TOF/INFOCOSMICS/0;trkcos:TOF/INFOTRACKCOS/0;trksiz:TOF/INFOTRACKSIZE/0;eos:***/INFORMATION\"\n\nWORKFLOW=\nadd_W o2-dpl-raw-proxy \"$ARGS_ALL --proxy-name tof-time-calib-input-proxy --dataspec ${PROXY_INSPEC} --network-interface ib0 --channel-config \\\"name=tof-time-calib-input-proxy,method=bind,type=pull,rateLogging=0,transport=zeromq\\\" \"\nadd_W o2-calibration-tof-calib-workflow \"--cosmics --do-channel-offset --min-entries 1000 ${ARGS_ALL} \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-time-calib-aggregator.sh"
        }
    ],
    "b2826855fc6bab1c9a6483ce13a1286dbb9f438c38e59463eb52ef3cba01aa64": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n    CCDB_POPULATOR_UPLOAD_PATH=\"http://ccdb-test.cern.ch:8080\"\nelse\n    CCDB_POPULATOR_UPLOAD_PATH=\"http://localhost:8084\"\nfi\nadd_W o2-calibration-ccdb-populator-workflow \"${ARGS_ALL} --configKeyValues ${ARGS_ALL_CONFIG} --ccdb-path=${CCDB_POPULATOR_UPLOAD_PATH} \"\n\nWORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\n\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Execute the command we have assembled\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tof-time-calib-aggregator.sh"
        }
    ],
    "6f6512c253cee43c80b2632cbd9146e854ce1af040ebe1ab634f227a53b07716": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# shellcheck disable=SC1091\n# Common environment. This script sources common/gen_topo_helper_functions.sh\nsource common/setenv.sh\n\n# Set general arguments\nsource common/getCommonArgs.sh\n\nMID_PROXY_INSPEC_EOS=\"eos:***/INFORMATION\"\nMID_PROXY_INSPEC_DD=\"dd:FLP/DISTSUBTIMEFRAME/0\"\nMID_RAW_PROXY_INSPEC=\"A:MID/RAWDATA;$MID_PROXY_INSPEC_DD;$MID_PROXY_INSPEC_EOS\"\nMID_DPL_CHANNEL_CONFIG=\"name=readout-proxy,type=pull,method=connect,address=ipc://@$INRAWCHANNAME,transport=shmem,rateLogging=1\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mid-badchannels.sh"
        }
    ],
    "2e4dc58cf2f3e89c1086b8b945303e94a0494ac31d228bc066bbb64a205fee4a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z $CTF_CONFIG ]]; then CTF_CONFIG=\"--report-data-size-interval 250\"; fi\nif [[ -z $CTF_DIR ]]; then CTF_DIR=\"$FILEWORKDIR\"; fi\nif [[ -z $CTF_MINSIZE ]]; then CTF_MINSIZE=\"2000000000\"; fi\nif [[ -z $CTF_MAX_PER_FILE ]]; then CTF_MAX_PER_FILE=\"10000\"; fi\nif [[ -z $EPN2EOS_METAFILES_DIR ]]; then EPN2EOS_METAFILES_DIR=\"/dev/null\"; fi\nCONFIG_CTF=\"--output-dir \\\"$CTF_DIR\\\" $CTF_CONFIG --output-type ctf --min-file-size ${CTF_MINSIZE} --max-ctf-per-file ${CTF_MAX_PER_FILE} --onlyDet MID $CTF_MAXDETEXT --meta-output-dir $EPN2EOS_METAFILES_DIR\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mid-badchannels.sh"
        }
    ],
    "a48552b6b7201423f33f019cbb15c5d32aac78fa017b0a773973a1e70e9fcf8a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Destination for CCDB uploads\nif [[ -z ${CCDB_POPULATOR_UPLOAD_PATH} ]]; then\n    if [[ $RUNTYPE == \"SYNTHETIC\" || \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n        CCDB_POPULATOR_UPLOAD_PATH=\"http://ccdb-test.cern.ch:8080\"\n        CCDB_POPULATOR_UPLOAD_PATH_DCS=\"$CCDB_POPULATOR_UPLOAD_PATH\"\n    else\n        CCDB_POPULATOR_UPLOAD_PATH=\"http://o2-ccdb.internal\"\n        CCDB_POPULATOR_UPLOAD_PATH_DCS=\"$DCSCCDBSERVER_PERS\"\n    fi\nfi\nif [[ \"${GEN_TOPO_VERBOSE:-}\" == \"1\" ]]; then\n    echo \"CCDB_POPULATOR_UPLOAD_PATH = $CCDB_POPULATOR_UPLOAD_PATH\" 1>&2\n    echo \"CCDB_POPULATOR_UPLOAD_PATH_DCS = $CCDB_POPULATOR_UPLOAD_PATH_DCS\" 1>&2\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mid-badchannels.sh"
        }
    ],
    "92ae02d3669532fa06fb608a61886c44cdf2e27987ab3f63f66e9c09cb854b08": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    WORKFLOW=\"\"\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$MID_RAW_PROXY_INSPEC\\\" --channel-config \\\"$MID_DPL_CHANNEL_CONFIG\\\"\" \"\" 0\nadd_W o2-mid-raw-to-digits-workflow \"\" \"\" 0\nif workflow_has_parameter CTF {\n    add_W o2-mid-entropy-encoder-workflow \"\" \"\" 0\n    add_W o2-ctf-writer-workflow \"$CONFIG_CTF\" \"\" 0\n}\nadd_W o2-mid-calibration-workflow \"\" \"\" 0\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path=\\\"$CCDB_POPULATOR_UPLOAD_PATH\\\" --sspec-min 0 --sspec-max 0\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path=\\\"$CCDB_POPULATOR_UPLOAD_PATH_DCS\\\" --sspec-min 1 --sspec-max 1 --name-extension dcs\"\nworkflow_has_parameter QC && add_QC_from_apricot \"components/qc/ANY/any/mid-calib-qcmn\" \"--local --host localhost\"\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mid-badchannels.sh"
        }
    ],
    "27dfd87947bb5e7b2a4eff6c76157fccaf3c9abadf4ed7fdd97c2f94ea6c13ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ \"$WORKFLOWMODE\" == \"print\" ]; then\n    echo Workflow command:\n    echo \"$WORKFLOW\" | sed \"s/| */|\\n/g\"\nelse\n    # Run the assembled command\n    WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n    eval \"$WORKFLOW\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/mid-badchannels.sh"
        }
    ],
    "ca8ca824fcd345f93aedb92dbda48ff6f859a9e0d0c364085174b1f1d506a204": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nsource common/setenv.sh\n\nsource common/getCommonArgs.sh\n\nsource common/gen_topo_helper_functions.sh \n\nWORKDIR=\"/home/wiechula/processData/inputFilesTracking/triggeredLaser\"\n\nWORKDIR2=\"/home/epn/odc/files/\"\n\nif [ $NUMAGPUIDS -ne 0 ]; then\n  ARGS_ALL+=\" --child-driver 'numactl --membind $NUMAID --cpunodebind $NUMAID'\"\nfi\n\nif [ $GPUTYPE = \"HIP\" ]; then\n  if [ $NUMAID = 0 ] || [ $NUMAGPUIDS -eq 0 ]; then\n    export TIMESLICEOFFSET=0\n  else\n    export TIMESLICEOFFSET=$NGPUS\n  fi\n  GPU_CONFIG_KEY+=\"GPU_proc.deviceNum=0;\"\n  GPU_CONFIG+=\" --environment ROCR_VISIBLE_DEVICES={timeslice${TIMESLICEOFFSET}}\"\n  export HSA_NO_SCRATCH_RECLAIM=1\nelse\n  GPU_CONFIG_KEY+=\"GPU_proc.deviceNum=-2;\"\nfi\n\nif [ $GPUTYPE != \"CPU\" ]; then\n  GPU_CONFIG_KEY+=\"GPU_proc.forceMemoryPoolSize=$GPUMEMSIZE;\"\n  if [ $HOSTMEMSIZE == \"0\" ]; then\n    HOSTMEMSIZE=$(( 1 << 30 ))\n  fi\nfi\nif [ $HOSTMEMSIZE != \"0\" ]; then\n  GPU_CONFIG_KEY+=\"GPU_proc.forceHostMemoryPoolSize=$HOSTMEMSIZE;\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser.sh"
        }
    ],
    "c5368681e668a7d40a3d2190e563cc4ddad034db6324bdfd9c974bf37779b9db": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "PROXY_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\nCALIB_INSPEC=\"A:TPC/RAWDATA;dd:FLP/DISTSUBTIMEFRAME/0\"\n\nCALIB_CONFIG=\"TPCCalibPulser.FirstTimeBin=450;TPCCalibPulser.LastTimeBin=550;TPCCalibPulser.NbinsQtot=250;TPCCalibPulser.XminQtot=2;TPCCalibPulser.XmaxQtot=502;TPCCalibPulser.MinimumQtot=8;TPCCalibPulser.MinimumQmax=6;TPCCalibPulser.XminT0=450;TPCCalibPulser.XmaxT0=550;TPCCalibPulser.NbinsT0=400;keyval.output_dir=/dev/null\"\n\nCCDB_PATH=\"http://o2-ccdb.internal\"\n\nHOST=localhost\n\n\nQC_CONFIG=\"consul-json://alio2-cr1-hv-con01.cern.ch:8500/o2/components/qc/ANY/any/tpc-raw-qcmn?run_type=${RUNTYPE:-}\"\nQC_CONFIG=\"components/qc/ANY/any/tpc-raw-qcmn\"\n\nmax_events=300\npublish_after=440\nmin_tracks=0\nnum_lanes=36\n\nif [[ ! -z ${TPC_CALIB_MAX_EVENTS:-} ]]; then\n    max_events=${TPC_CALIB_MAX_EVENTS}\nfi\nif [[ ! -z ${TPC_CALIB_MIN_TRACKS:-} ]]; then\n    min_tracks=${TPC_CALIB_MIN_TRACKS}\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser.sh"
        }
    ],
    "a7385807002e36cb42e81d67216c4de3c17f833d36bf255ba9f5ba8c0890d879": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z ${TPC_CALIB_PUBLISH_AFTER:-} ]]; then\n    publish_after=${TPC_CALIB_PUBLISH_AFTER}\nfi\nif [[ ! -z ${TPC_CALIB_LANES_PAD_RAW:-} ]]; then\n    num_lanes=${TPC_CALIB_LANES_PAD_RAW}\nfi\n\nEXTRA_CONFIG=\"--calib-type ce --publish-after-tfs ${publish_after} --max-events ${max_events} --lanes ${num_lanes} --check-calib-infos\"\n\nLASER_DECODER_ADD=''\n\nif [[ ! -z ${TPC_LASER_ILBZS:-} ]]; then\n    LASER_DECODER_ADD=\"--pedestal-url /home/wiechula/processData/inputFilesTracking/triggeredLaser/pedestals.openchannels.root --decoder-type 0\"\nfi\n\nEXTRA_CONFIG_TRACKS=\"\"\n\nif [[ ${TPC_CALIB_TRACKS_PUBLISH_EOS:-} == 1 ]]; then\n    EXTRA_CONFIG_TRACKS=\"--only-publish-on-eos\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser.sh"
        }
    ],
    "b1a2099012b1fda6a453bad9ef97c6d37c7a9d93084ccdaa3e01908269160555": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    RAWDIGIT_CONFIG=\"TPCDigitDump.NoiseThreshold=3;TPCDigitDump.LastTimeBin=600\"\nREMAP=\"--condition-remap \\\"file://${FILEWORKDIR}=GLO/Config/GRPECS,GLO/Config/GRPMagField,TPC/Calib/LaserTracks\\\" \"\nRECO_CONFIG=\"align-geom.mDetectors=none;GPU_global.deviceType=$GPUTYPE;GPU_proc.tpcIncreasedMinClustersPerRow=500000;GPU_proc.ignoreNonFatalGPUErrors=1;$GPU_CONFIG_KEY;GPU_global.tpcTriggeredMode=1;GPU_rec_tpc.clusterError2AdditionalY=0.1;GPU_rec_tpc.clusterError2AdditionalZ=0.15;GPU_rec_tpc.clustersShiftTimebinsClusterizer=35;\"\n# adjust tracking and selection criteria tolerances for handling very low laser intensities\nRECO_CONFIG+=\"GPU_rec_tpc.trackFollowingMaxRowGap=15;GPU_rec_tpc.trackFollowingMaxRowGapSeed=15;GPU_rec_tpc.minTrackdEdxMax=8;GPU_rec_tpc.adddEdxSubThresholdClusters=0;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser.sh"
        }
    ],
    "5732ac0553dfd68d8a022c420f46c35650566e1313f675996187803459f9a1ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW=\nadd_W o2-dpl-raw-proxy \"--dataspec \\\"$PROXY_INSPEC\\\" --inject-missing-data --channel-config \\\"name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1\\\"\" \"\" 0\nadd_W o2-tpc-raw-to-digits-workflow \"--ignore-grp --input-spec \\\"$CALIB_INSPEC\\\" --remove-duplicates --pipeline tpc-raw-to-digits-0:20 --send-ce-digits \" \"${RAWDIGIT_CONFIG}\"\nadd_W o2-tpc-reco-workflow \" --disable-ctp-lumi-request --input-type digitizer --output-type \\\"tracks,disable-writer\\\" --disable-mc --pipeline tpc-zsEncoder:20,tpc-tracker:8 ${GPU_CONFIG} ${REMAP}\" \"${RECO_CONFIG}\"\nadd_W o2-tpc-laser-track-filter \"\" \"\" 0\nadd_W o2-tpc-calib-laser-tracks \"--use-filtered-tracks ${EXTRA_CONFIG_TRACKS} --min-tfs=${min_tracks}\"\nadd_W o2-tpc-calib-pad-raw \" ${EXTRA_CONFIG}\" \"${CALIB_CONFIG}\"\nadd_W o2-calibration-ccdb-populator-workflow \"--ccdb-path ${CCDB_PATH}\" \"\" 0\nadd_QC_from_apricot \"${QC_CONFIG_CONSUL}\" \"--local --host lcoalhost\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser.sh"
        }
    ],
    "42ec66b01e6b06c5bf024502d3289c3c52a91fa3e5615cd81baeeb4bd5823f78": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    WORKFLOW+=\"o2-dpl-run ${ARGS_ALL} ${GLOBALDPLOPT}\"\nif [ $WORKFLOWMODE == \"print\" ]; then\n  echo Workflow command:\n  echo $WORKFLOW | sed \"s/| */|\\n/g\"\nelse\n  # Run the assembled command\n  WORKFLOW+=\" --$WORKFLOWMODE ${WORKFLOWMODE_FILE}\"\n  eval $WORKFLOW\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser.sh"
        }
    ],
    "5d2126d49529c07988e3c8c014ad4959523f427717bbb391171a5140db0501f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#o2-dpl-raw-proxy $ARGS_ALL --inject-missing-data \\\n#    --dataspec \"$PROXY_INSPEC\" \\\n#    --readout-proxy \"--channel-config 'name=readout-proxy,type=pull,method=connect,address=ipc://@tf-builder-pipe-0,transport=shmem,rateLogging=1'\" \\\n#    | o2-tpc-raw-to-digits-workflow $ARGS_ALL  ${LASER_DECODER_ADD}\\\n#    --input-spec \"$CALIB_INSPEC\"  \\\n#    --configKeyValues \";$ARGS_ALL_CONFIG\" \\\n#    --pipeline tpc-raw-to-digits-0:20 \\\n#    --remove-duplicates \\\n#    --send-ce-digits \\\n#    | o2-tpc-reco-workflow $ARGS_ALL \\\n#    --input-type digitizer  \\\n#    --output-type \"tracks,disable-writer\" \\\n#    --disable-mc \\\n#    --pipeline tpc-zsEncoder:20,tpc-tracker:8 \\\n#    $GPU_CONFIG \\\n#    --condition-remap \"file:///home/wiechula/processData/inputFilesTracking/triggeredLaser/=GLO/Config/GRPECS;file:///home/wiechula/processData/inputFilesTracking/triggeredLaser/=GLO/Config/GRPMagField;file:///home/wiechula/processData/inputFilesTracking/triggeredLaser=TPC/Calib/LaserTracks\" \\",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser.sh"
        }
    ],
    "672e0efd49a14fa63c44de03a07a56cceec6d9970e20c8ab219619e3c657d630": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#    --configKeyValues \"${ARGS_ALL_CONFIG};align-geom.mDetectors=none;GPU_global.deviceType=$GPUTYPE;GPU_proc.tpcIncreasedMinClustersPerRow=500000;GPU_proc.ignoreNonFatalGPUErrors=1;$GPU_CONFIG_KEY;GPU_global.tpcTriggeredMode=1;GPU_rec_tpc.clusterError2AdditionalY=0.1;GPU_rec_tpc.clusterError2AdditionalZ=0.15;GPU_rec_tpc.clustersShiftTimebinsClusterizer=35\" \\\n#    | o2-tpc-laser-track-filter $ARGS_ALL \\\n#    | o2-tpc-calib-laser-tracks  $ARGS_ALL --use-filtered-tracks ${EXTRA_CONFIG_TRACKS} --min-tfs=${min_tracks}\\\n#    | o2-tpc-calib-pad-raw ${ARGS_ALL} \\\n#    --configKeyValues ${CALIB_CONFIG} ${EXTRA_CONFIG} \\\n#    | o2-calibration-ccdb-populator-workflow  $ARGS_ALL \\\n#    --ccdb-path ${CCDB_PATH} \\\n#    | o2-qc ${ARGS_ALL} --config ${QC_CONFIG} --local --host ${HOST} \\\n#    | o2-dpl-run ${ARGS_ALL} --dds ${WORKFLOWMODE_FILE} ${GLOBALDPLOPT}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/calib/tpc-laser.sh"
        }
    ],
    "67af691b4b1ccaf177f75c2c90d9bcc4341a34f3d5b88cf352d97585b0ec3457": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\ndeclare -A mapShifts",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "c3cf8db1dcc120f41f04a3f6eeaf549d7e6b2198dd8c1b68d9281f035efbab2f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['517619']='-52'\nmapShifts['517620']='-51'\nmapShifts['517623']='-46'\nmapShifts['517677']='-53'\nmapShifts['517678']='-53'\nmapShifts['517679']='-53'\nmapShifts['517685']='-51'\nmapShifts['517690']='-49'\nmapShifts['517693']='-50'\nmapShifts['517737']='-55'\nmapShifts['517748']='-55'\nmapShifts['517751']='-54'\nmapShifts['517753']='-50'\nmapShifts['517758']='-57'\nmapShifts['517767']='-53'\nmapShifts['518541']='19'\nmapShifts['518543']='18'\nmapShifts['518546']='18'\nmapShifts['518547']='19'\nmapShifts['519041']='4'\nmapShifts['519043']='3'\nmapShifts['519045']='2'\nmapShifts['519497']='13'\nmapShifts['519498']='13'\nmapShifts['519499']='14'\nmapShifts['519502']='13'\nmapShifts['519503']='13'\nmapShifts['519504']='14'\nmapShifts['519506']='16'\nmapShifts['519507']='17'\nmapShifts['519903']='15'\nmapShifts['519904']='15'\nmapShifts['519905']='15'\nmapShifts['519906']='18'\nmapShifts['520259']='15'\nmapShifts['520294']='15'\nmapShifts['520471']='15'\nmapShifts['520472']='14'\nmapShifts['520473']='14'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "9f712eaa745e9c25759f62a61bd1ef0a9ef277ac4cbb00422b30d55e4293e9b7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['520294']='15'\nmapShifts['520471']='15'\nmapShifts['520472']='14'\nmapShifts['520473']='14'\nmapShifts['523141']='-52'\nmapShifts['523142']='45'\nmapShifts['523148']='10'\nmapShifts['523182']='11'\nmapShifts['523186']='7'\nmapShifts['523298']='10'\nmapShifts['523306']='10'\nmapShifts['523308']='8'\nmapShifts['523309']='4'\nmapShifts['523397']='5'\nmapShifts['523399']='3'\nmapShifts['523401']='0'\nmapShifts['523441']='14'\nmapShifts['523541']='16'\nmapShifts['523544']='20'\nmapShifts['523559']='10'\nmapShifts['523669']='39'\nmapShifts['523671']='44'\nmapShifts['523677']='41'\nmapShifts['523728']='7'\nmapShifts['523731']='6'\nmapShifts['523779']='1'\nmapShifts['523783']='7'\nmapShifts['523786']='8'\nmapShifts['523788']='9'\nmapShifts['523789']='9'\nmapShifts['523792']='6'\nmapShifts['523797']='8'\nmapShifts['523821']='8'\nmapShifts['523897']='49'\nmapShifts['526463']='25'\nmapShifts['526465']='20'\nmapShifts['526466']='19'\nmapShifts['526467']='19'\nmapShifts['526468']='18'\nmapShifts['526486']='12'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "c4de09c8ea4e542abe95dc9dda7d8012390a09e76048fc9249851d235ec3b070": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['526466']='19'\nmapShifts['526467']='19'\nmapShifts['526468']='18'\nmapShifts['526486']='12'\nmapShifts['526505']='18'\nmapShifts['526508']='-52'\nmapShifts['526512']='11'\nmapShifts['526525']='21'\nmapShifts['526526']='19'\nmapShifts['526528']='15'\nmapShifts['526534']='-47'\nmapShifts['526559']='19'\nmapShifts['526596']='19'\nmapShifts['526606']='20'\nmapShifts['526612']='21'\nmapShifts['526638']='75'\nmapShifts['526639']='19'\nmapShifts['526641']='20'\nmapShifts['526643']='21'\nmapShifts['526647']='20'\nmapShifts['526649']='21'\nmapShifts['526689']='86'\nmapShifts['526712']='26'\nmapShifts['526713']='22'\nmapShifts['526714']='24'\nmapShifts['526715']='22'\nmapShifts['526716']='21'\nmapShifts['526719']='22'\nmapShifts['526720']='22'\nmapShifts['526776']='19'\nmapShifts['526802']='55'\nmapShifts['526860']='12'\nmapShifts['526865']='20'\nmapShifts['526886']='18'\nmapShifts['526926']='36'\nmapShifts['526927']='35'\nmapShifts['526928']='-53'\nmapShifts['526929']='-52'\nmapShifts['526934']='-55'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "c539300efbed886f56bc8de9fe235c2e918f5c68ffdbf1fb13108b810af40e50": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['526928']='-53'\nmapShifts['526929']='-52'\nmapShifts['526934']='-55'\nmapShifts['526935']='-55'\nmapShifts['526937']='-50'\nmapShifts['526938']='17'\nmapShifts['526963']='22'\nmapShifts['526964']='17'\nmapShifts['526966']='19'\nmapShifts['526967']='15'\nmapShifts['526968']='20'\nmapShifts['527015']='20'\nmapShifts['527016']='16'\nmapShifts['527028']='18'\nmapShifts['527031']='21'\nmapShifts['527033']='19'\nmapShifts['527034']='20'\nmapShifts['527038']='20'\nmapShifts['527039']='20'\nmapShifts['527041']='18'\nmapShifts['527057']='18'\nmapShifts['527076']='20'\nmapShifts['527108']='78'\nmapShifts['527109']='17'\nmapShifts['527228']='74'\nmapShifts['527237']='18'\nmapShifts['527240']='18'\nmapShifts['527259']='18'\nmapShifts['527260']='18'\nmapShifts['527261']='18'\nmapShifts['527262']='17'\nmapShifts['527345']='58'\nmapShifts['527347']='58'\nmapShifts['527349']='18'\nmapShifts['527446']='12'\nmapShifts['527518']='19'\nmapShifts['527522']='17'\nmapShifts['527523']='13'\nmapShifts['527671']='63'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "5726e8b6758d23d2c8088a01843ce19c83a642488e03ebd458d7d59ef786b5f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['527518']='19'\nmapShifts['527522']='17'\nmapShifts['527523']='13'\nmapShifts['527671']='63'\nmapShifts['527690']='22'\nmapShifts['527694']='16'\nmapShifts['527731']='19'\nmapShifts['527734']='16'\nmapShifts['527736']='18'\nmapShifts['527777']='72'\nmapShifts['527799']='64'\nmapShifts['527821']='18'\nmapShifts['527825']='16'\nmapShifts['527826']='14'\nmapShifts['527828']='19'\nmapShifts['527848']='20'\nmapShifts['527850']='18'\nmapShifts['527852']='16'\nmapShifts['527863']='15'\nmapShifts['527864']='16'\nmapShifts['527865']='19'\nmapShifts['527869']='16'\nmapShifts['527871']='17'\nmapShifts['527895']='17'\nmapShifts['527897']='20'\nmapShifts['527898']='17'\nmapShifts['527899']='17'\nmapShifts['527902']='19'\nmapShifts['527940']='22'\nmapShifts['527963']='22'\nmapShifts['527965']='20'\nmapShifts['527966']='20'\nmapShifts['527967']='21'\nmapShifts['527976']='18'\nmapShifts['527978']='21'\nmapShifts['527979']='20'\nmapShifts['528021']='23'\nmapShifts['528026']='20'\nmapShifts['528036']='17'\nmapShifts['528093']='79'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "32686d52f6ef8b1d323a3ad187c6d3af25a13226039e481e67e6529aef8e4a5f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['528021']='23'\nmapShifts['528026']='20'\nmapShifts['528036']='17'\nmapShifts['528093']='79'\nmapShifts['528094']='20'\nmapShifts['528097']='23'\nmapShifts['528105']='18'\nmapShifts['528107']='16'\nmapShifts['528109']='20'\nmapShifts['528110']='22'\nmapShifts['528231']='9'\nmapShifts['528232']='12'\nmapShifts['528233']='19'\nmapShifts['528263']='17'\nmapShifts['528266']='18'\nmapShifts['528292']='19'\nmapShifts['528294']='19'\nmapShifts['528316']='19'\nmapShifts['528319']='19'\nmapShifts['528328']='19'\nmapShifts['528329']='20'\nmapShifts['528330']='20'\nmapShifts['528332']='17'\nmapShifts['528336']='18'\nmapShifts['528347']='15'\nmapShifts['528359']='18'\nmapShifts['528379']='18'\nmapShifts['528381']='18'\nmapShifts['528386']='18'\nmapShifts['528448']='18'\nmapShifts['528451']='18'\nmapShifts['528461']='17'\nmapShifts['528463']='35'\nmapShifts['528529']='67'\nmapShifts['528530']='67'\nmapShifts['528531']='16'\nmapShifts['528534']='17'\nmapShifts['528537']='19'\nmapShifts['528543']='18'\nmapShifts['528597']='78'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "887e764ae335b5f04523f6a6540e892ad8b3a80d13ddfad46434f623ed7eea2b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['528534']='17'\nmapShifts['528537']='19'\nmapShifts['528543']='18'\nmapShifts['528597']='78'\nmapShifts['528602']='20'\nmapShifts['528604']='14'\nmapShifts['528617']='13'\nmapShifts['528781']='111'\nmapShifts['528782']='111'\nmapShifts['528783']='111'\nmapShifts['528784']='16'\nmapShifts['528798']='18'\nmapShifts['528801']='18'\nmapShifts['528991']='84'\nmapShifts['528997']='85'\nmapShifts['529003']='84'\nmapShifts['529005']='84'\nmapShifts['529006']='81'\nmapShifts['529009']='83'\nmapShifts['529015']='81'\nmapShifts['529035']='39'\nmapShifts['529037']='79'\nmapShifts['529038']='84'\nmapShifts['529039']='82'\nmapShifts['529043']='81'\nmapShifts['529066']='71'\nmapShifts['529067']='70'\nmapShifts['529077']='26'\nmapShifts['529078']='36'\nmapShifts['529084']='24'\nmapShifts['529088']='21'\nmapShifts['529115']='12'\nmapShifts['529116']='21'\nmapShifts['529117']='20'\nmapShifts['529128']='7'\nmapShifts['529129']='17'\nmapShifts['529201']='20'\nmapShifts['529202']='20'\nmapShifts['529207']='20'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "9f0199aab0933e307d1e0e4c4a32e4149b963a48bb2a560e0644e976a014bca9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['529129']='17'\nmapShifts['529201']='20'\nmapShifts['529202']='20'\nmapShifts['529207']='20'\nmapShifts['529208']='21'\nmapShifts['529209']='17'\nmapShifts['529210']='13'\nmapShifts['529211']='18'\nmapShifts['529235']='41'\nmapShifts['529237']='18'\nmapShifts['529242']='17'\nmapShifts['529248']='16'\nmapShifts['529252']='17'\nmapShifts['529270']='15'\nmapShifts['529306']='20'\nmapShifts['529310']='18'\nmapShifts['529317']='19'\nmapShifts['529320']='19'\nmapShifts['529324']='16'\nmapShifts['529337']='19'\nmapShifts['529338']='16'\nmapShifts['529341']='17'\nmapShifts['529450']='22'\nmapShifts['529452']='21'\nmapShifts['529454']='17'\nmapShifts['529458']='17'\nmapShifts['529460']='17'\nmapShifts['529461']='12'\nmapShifts['529462']='16'\nmapShifts['529542']='31'\nmapShifts['529552']='31'\nmapShifts['529554']='25'\nmapShifts['529610']='91'\nmapShifts['529662']='10'\nmapShifts['529663']='20'\nmapShifts['529664']='18'\nmapShifts['529674']='22'\nmapShifts['529675']='16'\nmapShifts['529690']='20'\nmapShifts['529691']='13'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "d9ec28b4cd15a1525f8f3e635c944afa3c0bc39412e6c752251653339ba5bfcf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['529674']='22'\nmapShifts['529675']='16'\nmapShifts['529690']='20'\nmapShifts['529691']='13'\nmapShifts['526510']='-51'\nmapShifts['526806']='49'\nmapShifts['527967']='21'\nif [[ \"${mapShifts[$1]+x}\" ]]; then \n  SHIFTINTIMEBINS=${mapShifts[$1]}\nelse\n  echo \"TPC cluster time shift is undefined for the current run\"\n  SHIFTINTIMEBINS=0\nfi\nexport TPCCLUSTERTIMESHIFT=`echo \"scale=3; $SHIFTINTIMEBINS/-8\" | bc -l`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/ShiftMap.sh"
        }
    ],
    "7a55d602e84ded012564fb130a254e5ce504199d4104bfb02d6e7bfe0d859d5b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to configure additional environment variables\n# utilizing some settings from alien\n\n# handle flags passed to the script\n\nif [[ -z \"$ALIEN_JDL_USEGPUS\" || $ALIEN_JDL_USEGPUS != 1 ]]; then\n  export SETENV_NO_ULIMIT=1\nfi\n\n# to prevent memory issues - this step is not performed on EPNs as it might impact performance\nif [[ $ALIEN_JDL_USEGPUS != 1 ]]; then\n  export DPL_DEFAULT_PIPELINE_LENGTH=16\nfi\n\n# verify if the data is from a production run involving skimmed data\nif grep -q /skimmed/ wn.xml ; then\n  export ON_SKIMMED_DATA=1;\nfi\n\nif [[ $RUNNUMBER -lt 544772 ]]; then\n  # these runs utilized external dictionaries\n  : ${RANS_OPT:=\"--ans-version compat\"}\n  export RANS_OPT\nfi\necho \"RSRUNNUMBER = $RUNNUMBER RANS_OPT = $RANS_OPT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "e1d15b760dbce02a020867cbd5137495df3f1cbfaa13e46d76928cb9c05de016": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# IR, duration, B field, detector list\nif [[ -z $RUN_IR ]] || [[ -z $RUN_DURATION ]] || [[ -z $RUN_BFIELD ]]; then\n  echo \"In setenv_extra: time used so far = $timeUsed\"\n  timeStart=`date +%s`\n  time o2-calibration-get-run-parameters -r $RUNNUMBER\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Time taken to retrieve run parameters = $delta s\"\n  export RUN_IR=`cat IR.txt`\n  export RUN_DURATION=`cat Duration.txt`\n  export RUN_BFIELD=`cat BField.txt`\n  export RUN_DETECTOR_LIST=`cat DetList.txt`\nfi\necho -e \"\\n\"\necho \"Displaying run characteristics\"\necho \"DETECTOR LIST for current run ($RUNNUMBER) = $RUN_DETECTOR_LIST\"\necho \"DURATION for current run ($RUNNUMBER) = $RUN_DURATION\"\necho \"B FIELD for current run ($RUNNUMBER) = $RUN_BFIELD\"\necho \"IR for current run ($RUNNUMBER) = $RUN_IR\"\nif (( $(echo \"$RUN_IR <= 0\" | bc -l) )); then\n  echo \"Adjusting run IR to 1 Hz, as $RUN_IR is not valid\"\n  RUN_IR=1\nfi\necho \"BeamType = $BEAMTYPE\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "36e8fffae743482f1d10db36c0b901d7b4047771b6354b12f1f75e8ceac2d4d2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    RUN_IR=1\nfi\necho \"BeamType = $BEAMTYPE\"\necho \"PERIOD = $PERIOD\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "fea268584d6231043d595228a8a38bde2662483624292511c5d0e65be9d56408": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the BEAMTYPE is \"pO\", \"Op\", \"OO\", or \"NeNe\", then set LIGHTNUCLEI to 1; otherwise, set LIGHTNUCLEI to 0.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "1c58b791e706dbebe02686b73f457e17306aa9f657304331da986e84d392f8ea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Detector List\necho -e \"\\n\"\necho \"Displaying detector list for reconstruction\"\nif [[ -n $ALIEN_JDL_WORKFLOWDETECTORS ]]; then\n  echo \"WORKFLOW_DETECTORS derived from JDL, ALIEN_JDL_WORKFLOWDETECTORS = $ALIEN_JDL_WORKFLOWDETECTORS\"\n  export WORKFLOW_DETECTORS=$ALIEN_JDL_WORKFLOWDETECTORS\nelse\n  export WORKFLOW_DETECTORS=`echo $RUN_DETECTOR_LIST | sed 's/ /,/g'`\n  if [[ $RUNNUMBER == 528529 ]] || [[ $RUNNUMBER == 528530 ]]; then\n    # MID needs to be excluded for these runs: it was noisy and marked as bad, causing the reconstruction to fail\n    echo \"Excluding MID as RUNNUMBER is $RUNNUMBER\"\n    export WORKFLOW_DETECTORS_EXCLUDE=\"MID\"\n  fi\n  # detectors to consider excluding\n  if [[ -n $ALIEN_JDL_DETECTORSEXCLUDE ]]; then\n    echo \"DETECTORS_EXCLUDE specified in JDL, ALIEN_JDL_DETECTORSEXCLUDE = $ALIEN_JDL_DETECTORSEXCLUDE\"\n    export DETECTORS_EXCLUDE=$ALIEN_JDL_DETECTORSEXCLUDE  # utilized in async_pass.sh when running in split mode\n  fi\necho",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "8ac4b63994c028f4b29c013376285833e54b868e85eb01062eace25a1019abee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z ${WORKFLOW_DETECTORS_EXCLUDE:+x} ]]; then # no WORKFLOW_DETECTORS_EXCLUDE set or it is NULL\n  export WORKFLOW_DETECTORS_EXCLUDE=$DETECTORS_EXCLUDE\nelse\n  export WORKFLOW_DETECTORS_EXCLUDE+=\",${DETECTORS_EXCLUDE}\"\nfi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "2c249b3e573c663dbcc77729ec5d361fea9748d282c3f7f4edf7615177e0c459": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Final settings for detectors to be processed:\nWORKFLOW_DETECTORS = $WORKFLOW_DETECTORS\nWORKFLOW_DETECTORS_EXCLUDE = $WORKFLOW_DETECTORS_EXCLUDE\n\n# Custom settings for the CTF reader: we are operating on the grid and reading files remotely\necho -e \"\\nProcessing mode = ${MODE}\"\n#unset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\n\nif [[ $MODE == \"remote\" ]]; then\n  if [[ $ALIEN_JDL_REMOTEREADING != 1 ]]; then\n    echo \"Files will be copied locally: the JDL should include the \\\"nodownload\\\" option\"\n    export INPUT_FILE_COPY_CMD=\"alien_cp ?src file://?dst\"\n    export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow+=\" --remote-regex \\\"^alien:///alice/data/.+\\\"\"\n  else\n    echo \"Files will NOT be copied locally: the job agent will handle this\"\n    export INPUT_FILE_COPY_CMD=\"no-copy\"\n  fi\nfi\n\necho -e \"\\nConfiguring workflow options\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "9d75e9d71068d39573ad0a683e2f7158838792f4c13c9f9a714ff245f8e12399": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo -e \"\\nConfiguring workflow parameters\"\n\n# modifying for trigger LM_L0 correction, which was not implemented before July 2022\nif [[ $PERIOD == \"LHC22c\" ]] || [[ $PERIOD == \"LHC22d\" ]] || [[ $PERIOD == \"LHC22e\" ]] || [[ $PERIOD == \"JUN\" ]] || [[ $PERIOD == \"LHC22f\" ]] ; then\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE != \"MC\" ]]; then\n    export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow+=\" --correct-trd-trigger-offset\"\n  fi\nfi\n\n# verifying remapping requirements\nif [[ $remappingITS == 1 ]] || [[ $remappingMFT == 1 ]]; then\n  REMAPPING=\"--condition-remap \\\"http://alice-ccdb.cern.ch/RecITSMFT=\"\n  if [[ $remappingITS == 1 ]]; then\n    REMAPPING=$REMAPPING\"ITS/Calib/ClusterDictionary\"\n    if [[ $remappingMFT == 1 ]]; then\n      REMAPPING=$REMAPPING\",\"\n    fi\n  fi\n  if [[ $remappingMFT == 1 ]]; then\n    REMAPPING=$REMAPPING\"MFT/Calib/ClusterDictionary\"\n  fi\n  REMAPPING=$REMAPPING\\\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "085adb8d63a6136595db3039a81a592324766d5a99c523fc265897383df60591": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# generic remapping string\nif the environment variable ALIEN_JDL_REMAPPINGS is set, then\n  if the environment variable REMAPPING is also set, then\n    REMAPPING=\"${REMAPPING::-1};$ALIEN_JDL_REMAPPINGS\\\"\"\n  else\n    REMAPPING=\"--condition-remap \\\"$ALIEN_JDL_REMAPPINGS\\\"\"\n  fi\nfi\n\necho \"Remapping = $REMAPPING\"\n\n# additional workflow requirements, if any\nexport ADD_EXTRA_WORKFLOW=\n\n# additional parameters for CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow+=\" --allow-missing-detectors $REMAPPING\"\n\n# option to process specific TFs\nif the environment variable ALIEN_JDL_RUN_TIME_SPAN_FILE is set, then\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow+=\" --run-time-span-file $ALIEN_JDL_RUN_TIME_SPAN_FILE \"\n  # this option is relevant only if the previous one is in use\n  if the environment variable ALIEN_JDL_INVERT_IRFRAME_SELECTION is set to 1, then\n    export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow+=\" --invert-irframe-selection \"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "71f9e9c21777819f10d9d2888e12bc08e715398bb00c8248cdb66a13845e9318": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# additional settings\necho RUN = $RUNNUMBER\nif [[ $RUNNUMBER -ge 521889 ]]; then\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow+=\" --its-digits --mft-digits\"\n  export DISABLE_DIGIT_CLUSTER_INPUT=\"--digits-from-upstream\"\n  MAXBCDIFFTOMASKBIAS_ITS=\"ITSClustererParam.maxBCDiffToMaskBias=-10\"    # this explicitly disables ITS masking\n  MAXBCDIFFTOSQUASHBIAS_ITS=\"ITSClustererParam.maxBCDiffToSquashBias=10\" # this explicitly enables ITS squashing\n  MAXBCDIFFTOMASKBIAS_MFT=\"MFTClustererParam.maxBCDiffToMaskBias=-10\"    # this explicitly disables MFT masking\n  MAXBCDIFFTOSQUASHBIAS_MFT=\"MFTClustererParam.maxBCDiffToSquashBias=10\" # this explicitly enables MFT squashing\nfi\n# adjust by +1 BC for TRD(2), PHS(4), CPV(5), EMC(6), HMP(7) and by (orbitShift-1)*3564+1 BCs for ZDC, which internally resets the orbit to 1 at SOR and BC is shifted by -1 like for triggered detectors.\n# run 520403: orbitShift = 59839744 --> final shift = 213268844053",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "aa770a9c06990fd824c3497e2f5af723772ba65570cec10ad235e56c22ccb86d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run 520403: orbitShift = 59839744 --> final shift = 213268844053\n# run 520418: orbitShift = 28756480 --> final shift = 102488091157\n# The incorrect +1 offset request for ITS (0) must trigger an alarm as shifts are not supported there\nCTP_BC_SHIFT=0\nif [[ $ALIEN_JDL_LPMANCHORYEAR == \"2022\" ]]; then\n  CTP_BC_SHIFT=-294\nfi\nif [[ $RUNNUMBER -ge 538923 ]] && [[ $RUNNUMBER -le 539700 ]]; then\n  # A 3 BC offset (future direction) in CTP data has been noticed for LHC23zd - LHC23zs\n  CTP_BC_SHIFT=-3\nfi\nif [[ $PERIOD == \"LHC22s\" ]]; then\n  # CTP requested the extraction of their digits\n  add_comma_separated ADD_EXTRA_WORKFLOW \"o2-ctp-digit-writer\"\n  # set all TPC shifts to 86 BCs (= -10.75 TB) due to the jitter from bad VDrift calibration\n  TPCITSTIMEERR=\"0.3\"\n  TPCITSTIMEBIAS=\"0\"\n  if [[ $RUNNUMBER -eq 529397 ]]; then\n    ZDC_BC_SHIFT=0\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529399 ]]; then\n    ZDC_BC_SHIFT=0\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529403 ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "077e202e255c7a9bc04b18692aa2d12d19a7fd0e7818d475f52ea6c7076a7425": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ZDC_BC_SHIFT=0\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529403 ]]; then\n    ZDC_BC_SHIFT=213268844053\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529414 ]]; then\n    ZDC_BC_SHIFT=0\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529418 ]]; then\n    ZDC_BC_SHIFT=102488091157\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  else\n    ZDC_BC_SHIFT=0\n  fi\n  CTP_BC_SHIFT=-293\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE != \"MC\" ]]; then\n    export CONFIG_EXTRA_PROCESS_o2_ctf_reader_workflow+=\";TriggerOffsetsParam.customOffset[2]=1;TriggerOffsetsParam.customOffset[4]=1;TriggerOffsetsParam.customOffset[5]=1;TriggerOffsetsParam.customOffset[6]=1;TriggerOffsetsParam.customOffset[7]=1;TriggerOffsetsParam.customOffset[11]=$ZDC_BC_SHIFT\"\n  fi\n  export PVERTEXER+=\";pvertexer.dbscanDeltaT=1;pvertexer.maxMultRatDebris=1.;\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "4b18954a3a14e835e164808ad566c0856ea71dbabd76d4c5cebae4b4274786f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# also adjust ZDC for pp run 529038\nif [[ $PERIOD == \"LHC22q\" ]]; then\n  if [[ $RUNNUMBER -eq 529003 ]]; then\n    ZDC_BC_SHIFT=427744319508;\n  elif [[ $RUNNUMBER -eq 529005 ]]; then\n    ZDC_BC_SHIFT=585290682900\n  elif [[ $RUNNUMBER -eq 529006 ]]; then\n    ZDC_BC_SHIFT=1007373207060\n  elif [[ $RUNNUMBER -eq 529008 ]]; then\n    ZDC_BC_SHIFT=1379963461140\n  elif [[ $RUNNUMBER -eq 529009 ]]; then\n    ZDC_BC_SHIFT=1454804952084\n  elif [[ $RUNNUMBER -eq 529015 ]]; then\n    ZDC_BC_SHIFT=2244823203348\n  elif [[ $RUNNUMBER -eq 529037 ]]; then\n    ZDC_BC_SHIFT=256033194516\n  elif [[ $RUNNUMBER -eq 529038 ]]; then\n    ZDC_BC_SHIFT=486590350356\n  elif [[ $RUNNUMBER -eq 529039 ]]; then\n    ZDC_BC_SHIFT=1399525886484\n  elif [[ $RUNNUMBER -eq 529043 ]]; then\n    ZDC_BC_SHIFT=3079675091988\n  fi\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE != \"MC\" ]]; then\n    [[ ! -z $ZDC_BC_SHIFT ]] && export CONFIG_EXTRA_PROCESS_o2_ctf_reader_workflow+=\";TriggerOffsetsParam.customOffset[11]=$ZDC_BC_SHIFT;\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "1866d6116903f57f7e98b0ee4c57d12afbfde306e7cf3f6187db5b9605e712f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Apply BC shift to CTP IRs (if it's defined)\nif [[ $CTP_BC_SHIFT -ne 0 ]]; then\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE != \"MC\" ]]; then\n    export CONFIG_EXTRA_PROCESS_o2_ctf_reader_workflow+=\";TriggerOffsetsParam.customOffset[16]=$CTP_BC_SHIFT\"\n  fi\nfi\n\n# Adjust ITSTPC vs FT0 time\nif [[ -z $TPCCLUSTERTIMESHIFT ]]; then\n  SHIFTSCRIPT=\"$O2DPG_ROOT/DATA/production/configurations/asyncReco/ShiftMap.sh\"\n  if [[ -f \"ShiftMap.sh\" ]]; then\n    SHIFTSCRIPT=\"ShiftMap.sh\"\n  fi\n  source $SHIFTSCRIPT $RUNNUMBER\nfi\nif [[ -z $TPCCLUSTERTIMESHIFT ]]; then\n  echo \"TPC cluster time shift not set for this run\"\n  TPCCLUSTERTIMESHIFT=0\nfi\necho \"TPC cluster time will be adjusted by $TPCCLUSTERTIMESHIFT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "3c616cf8d732e4664db43c6243b9ceef575e34e9e3a95da0d69120c89df8c0c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run-dependent options\nif [[ -f \"setenv_run.sh\" ]]; then\n    source setenv_run.sh\nelse\n    echo \"************************************************************\"\n    echo No ad-hoc run-dependent settings for current asynchronous processing\n    echo \"************************************************************\"\nfi\n\necho -e \"\\nTPC vdrift:\"\n# TPC vdrift\nPERIODLETTER=${PERIOD: -1}\nVDRIFTPARAMOPTION=\nif [[ $ALIEN_JDL_LPMANCHORYEAR == \"2022\" ]] && [[ $PERIODLETTER < m ]]; then\n  echo \"In setenv_extra: time used so far = $timeUsed s\"\n  timeStart=`date +%s`\n  time root -b -q \"$O2DPG_ROOT/DATA/production/common/getTPCvdrift.C+($RUNNUMBER)\"\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Time spent to retrieve VDrift for TPC = $delta s\"\n  export VDRIFT=`cat vdrift.txt`\n  VDRIFTPARAMOPTION=\"TPCGasParam.DriftV=$VDRIFT\"\n  echo \"Setting TPC vdrift to $VDRIFT\"\nelse\n  echo \"TPC vdrift will be fetched from CCDB\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "eb3986c14cd4d052350eca11adc8e9b9ad1859582b184c5739a9466f09c52a6d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    Echo -e \"\\nConfiguration for TPC calibration:\"\n# Verify if ZDC is included in the detector list; necessary for TPC distance correction scaling in PbPb 2023\nSCALE_WITH_ZDC=1\nSCALE_WITH_FT0=1\nisZDCinDataTaking=`echo $RUN_DETECTOR_LIST | grep ZDC`\nisFT0inDataTaking=`echo $RUN_DETECTOR_LIST | grep FT0`\n[[ -z $isZDCinDataTaking ]] && SCALE_WITH_ZDC=0\n[[ -z $isFT0inDataTaking ]] && SCALE_WITH_FT0=0\n\n# If the run duration is less than 10 minutes, there is only one slot available.\n# In this case, adjust the slot length to correctly set the maximum number of processed tracks per TF\nif (( RUN_DURATION < 600 )); then\n  export CALIB_TPC_SCDCALIB_SLOTLENGTH=$RUN_DURATION\nfi\n\nif [[ $ALIEN_JDL_ENABLEMONITORING != \"0\" ]]; then\n  # include performance metrics\n  export ENABLE_METRICS=1\n  export ARGS_ALL_EXTRA+=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"\nelse\n  # disable monitoring-backend\n  export ENABLE_METRICS=0\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "f9d222c3e66736149c65f1775f75e8a893a0f2dc17139f2d9984378b6a678531": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ -z ${ALIEN_JDL_LPMANCHOREDPASSNUMBER+x} ]; then\n  ANCHORED_PASS_NUMBER=$(echo $ALIEN_JDL_LPMPASSNAME | sed 's/^apass//' | cut -c1-1)\n  echo \"using ANCHORED_PASS_NUMBER derived from pass name $ALIEN_JDL_LPMPASSNAME, ANCHORED_PASS_NUMBER=$ANCHORED_PASS_NUMBER\"\nelse\n  # variable is set, takes precedence\n  ANCHORED_PASS_NUMBER=$ALIEN_JDL_LPMANCHOREDPASSNUMBER\n  echo \"using ANCHORED_PASS_NUMBER from $ALIEN_JDL_LPMANCHOREDPASSNUMBER as defined by JDL, ANCHORED_PASS_NUMBER=$ANCHORED_PASS_NUMBER\"\nfi\n\necho \"Verifying ANCHORED_PASS_NUMBER\"\nif [ -n \"$ANCHORED_PASS_NUMBER\" ] && [ \"$ANCHORED_PASS_NUMBER\" -eq \"$ANCHORED_PASS_NUMBER\" ] 2>/dev/null; then\n  echo \"ANCHORED_PASS_NUMBER is set to $ANCHORED_PASS_NUMBER\"\nelse\n  echo \"[Warning] ANCHORED_PASS_NUMBER is undetermined\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "5b8bdf7c6738f838237578600e109ba6f091bd5fb1222fe8df5b52ff825a1677": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    #ALIGNLEVEL=0: before December 2022 alignment, 1: after December 2022 alignment\nALIGNLEVEL=1\nif [[ \"0$OLDVERSION\" == \"01\" ]] && [[ $BEAMTYPE == \"PbPb\" || $PERIOD == \"MAY\" || $PERIOD == \"JUN\" || $PERIOD == \"LHC22c\" || $PERIOD == \"LHC22d\" || $PERIOD == \"LHC22e\" || $PERIOD == \"LHC22f\" ]]; then\n  ALIGNLEVEL=0\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE == \"MC\" ]]; then\n    # extract pass number\n    ANCHORED_PASS=$ALIEN_JDL_LPMANCHOREDPASSNAME\n    ANCHORED_PASS_NUMBER=`echo $ANCHORED_PASS | sed 's/^apass//'`\n    echo \"ANCHORED_PASS_NUMBER = $ANCHORED_PASS_NUMBER\"\n    if [[ $PERIOD == \"MAY\" || $PERIOD == \"JUN\" ]] && [[ $ANCHORED_PASS_NUMBER -gt 1 ]]; then\n      ALIGNLEVEL=1\n    elif [[ $PERIOD == \"LHC22c\" || $PERIOD == \"LHC22d\" || $PERIOD == \"LHC22e\" || $PERIOD == \"LHC22f\" ]] && [[ $ANCHORED_PASS_NUMBER -gt 2 ]]; then\n      ALIGNLEVEL=1\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "1ec4e73dc232522d55617f8c24625a80ec25e32af5386fbafc6d80cdcc7c7cd2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# certain settings shared across workflows and impacting ITS-TPC alignment\n\n: ${CUT_MATCH_CHI2:=250}\nif [[ $ALIGNLEVEL == 0 ]]; then\n  ERRIB=\"9e-4\"\n  ERROB=\"1e-2\"\n  CUT_MATCH_CHI2=160\n  export ITS_CONFIG=\" --tracking-mode sync_misaligned\"\n  export ITSTPCMATCH=\"tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=$CUT_MATCH_CHI2;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nelif [[ $ALIGNLEVEL == 1 ]]; then\n  ERRIB=\"100e-8\"\n  ERROB=\"100e-8\"\n  [[ -z $TPCITSTIMEERR ]] && TPCITSTIMEERR=\"0.2\"\n  if [[ $ALIEN_JDL_LPMANCHORYEAR == \"2023\" && $BEAMTYPE == \"PbPb\" && $ANCHORED_PASS_NUMBER -lt 5 ]] || [[ $PERIOD == \"LHC24al\" ]] ; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "673541cf2c9485fdb5f9711cbf1859e7296879f2330ed5ecb7e2812e50d246be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[[ $ALIEN_JDL_LPMANCHORYEAR == \"2023\" ]] && [[ $BEAMTYPE == \"PbPb\" ]] && CUT_MATCH_CHI2=80 || CUT_MATCH_CHI2=100\nexport ITSTPCMATCH=\"tpcitsMatch.safeMarginTimeCorrErr=2.;tpcitsMatch.XMatchingRef=60.;tpcitsMatch.cutMatchingChi2=$CUT_MATCH_CHI2;;tpcitsMatch.crudeAbsDiffCut[0]=6;tpcitsMatch.crudeAbsDiffCut[1]=6;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=2.5;tpcitsMatch.crudeNSigma2Cut[0]=64;tpcitsMatch.crudeNSigma2Cut[1]=64;tpcitsMatch.crudeNSigma2Cut[2]=64;tpcitsMatch.crudeNSigma2Cut[3]=64;tpcitsMatch.crudeNSigma2Cut[4]=64;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "912d35ec8230a6a229e97e3e4a968e2f27724a89830f6200e1279374cbb54486": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ITSTPCMATCH=\"${ITSTPCMATCH};tpcitsMatch.askMinTPCRow[0]=20;tpcitsMatch.askMinTPCRow[1]=20;tpcitsMatch.askMinTPCRow[2]=20;tpcitsMatch.askMinTPCRow[3]=20;tpcitsMatch.askMinTPCRow[4]=20;tpcitsMatch.askMinTPCRow[5]=20;tpcitsMatch.askMinTPCRow[6]=20;tpcitsMatch.askMinTPCRow[7]=20;tpcitsMatch.askMinTPCRow[8]=20;tpcitsMatch.askMinTPCRow[9]=20;tpcitsMatch.askMinTPCRow[10]=20;tpcitsMatch.askMinTPCRow[12]=20;tpcitsMatch.askMinTPCRow[13]=20;tpcitsMatch.askMinTPCRow[14]=20;\"\n    export ITSTPCMATCH=\"${ITSTPCMATCH};tpcitsMatch.askMinTPCRow[15]=20;tpcitsMatch.askMinTPCRow[16]=20;tpcitsMatch.askMinTPCRow[17]=20;tpcitsMatch.askMinTPCRow[18]=20;tpcitsMatch.askMinTPCRow[19]=20;tpcitsMatch.askMinTPCRow[20]=20;tpcitsMatch.askMinTPCRow[21]=20;tpcitsMatch.askMinTPCRow[22]=20;tpcitsMatch.askMinTPCRow[23]=20;tpcitsMatch.askMinTPCRow[24]=20;tpcitsMatch.askMinTPCRow[25]=20;tpcitsMatch.askMinTPCRow[26]=20;tpcitsMatch.askMinTPCRow[27]=20;tpcitsMatch.askMinTPCRow[28]=20;tpcitsMatch.askMinTPCRow[29]=20;\"\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "82a2da14528cb9381701b6037477574415319bee93f11a835636c88c9296735c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ITSTPCMATCH=\"${ITSTPCMATCH};tpcitsMatch.askMinTPCRow[30]=20;tpcitsMatch.askMinTPCRow[31]=20;tpcitsMatch.askMinTPCRow[32]=20;tpcitsMatch.askMinTPCRow[33]=20;tpcitsMatch.askMinTPCRow[34]=20;tpcitsMatch.askMinTPCRow[35]=20;\"\n    if [[ $RUNNUMBER -ge 544512 ]] ; then\n      # runs including LHC24al with TPC IROC11 missing should use tpcitsMatch.askMinTPCRow[11]=78 except those listed\n      RUNSI11BAD=(544947 545289 545004 545060 544931 545184 545345 544963 544991 544911 545103 545086)\n      [[ $PERIOD != \"LHC24al\" ]] && APPLYS11=1 || APPLYS11=0\n      for irs11 in \"${RUNSI11BAD[@]}\" ; do\n        if [[ $RUNNUMBER == $irs11 ]] ; then\n          APPLYS11=0;\n          break;\n        fi\n      done\n    fi\n    [[ $APPLYS11 == 1 ]] && export ITSTPCMATCH=\"${ITSTPCMATCH};tpcitsMatch.askMinTPCRow[11]=78;\" || export ITSTPCMATCH=\"${ITSTPCMATCH};tpcitsMatch.askMinTPCRow[11]=20;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "167b9b41619ca7763eb0f09a691e4ca0439dbd5a3440bd980b36a30bf0e77fc5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "elif [[ $BEAMTYPE == \"PbPb\" && ( ( $ALIEN_JDL_LPMANCHORYEAR == \"2023\" && $ANCHORED_PASS_NUMBER -gt 4 ) || ( $ALIEN_JDL_LPMANCHORYEAR == \"2024\" && $ANCHORED_PASS_NUMBER -gt 1 ) ) ]] ; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "23976619e752583a0cbe8c359daf9ad918dd786081e89093254aa4317ac6ecf2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "6b9587d2c3e91d10a81c9aee3fe2d336dd4c79f1dd6be4e4f419fc9e81d733ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ITSTPCMATCH=\"${ITSTPCMATCH};tpcitsMatch.askMinTPCRow[0]=78;tpcitsMatch.askMinTPCRow[1]=78;tpcitsMatch.askMinTPCRow[2]=78;tpcitsMatch.askMinTPCRow[3]=78;tpcitsMatch.askMinTPCRow[4]=78;tpcitsMatch.askMinTPCRow[5]=78;tpcitsMatch.askMinTPCRow[6]=78;tpcitsMatch.askMinTPCRow[7]=78;tpcitsMatch.askMinTPCRow[8]=78;tpcitsMatch.askMinTPCRow[9]=78;tpcitsMatch.askMinTPCRow[10]=78;tpcitsMatch.askMinTPCRow[11]=78;tpcitsMatch.askMinTPCRow[12]=78;tpcitsMatch.askMinTPCRow[13]=78;tpcitsMatch.askMinTPCRow[14]=78;tpcitsMatch.askMinTPCRow[15]=78;tpcitsMatch.askMinTPCRow[16]=78;tpcitsMatch.askMinTPCRow[17]=78;tpcitsMatch.askMinTPCRow[18]=78;tpcitsMatch.askMinTPCRow[19]=78;tpcitsMatch.askMinTPCRow[20]=78;tpcitsMatch.askMinTPCRow[21]=78;tpcitsMatch.askMinTPCRow[22]=78;tpcitsMatch.askMinTPCRow[23]=78;tpcitsMatch.askMinTPCRow[24]=78;tpcitsMatch.askMinTPCRow[25]=78;tpcitsMatch.askMinTPCRow[26]=78;tpcitsMatch.askMinTPCRow[27]=78;tpcitsMatch.askMinTPCRow[28]=78;tpcitsMatch.askMinTPCRow[29]=78;tpcitsMatch.askMinTPC",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "6602c8862b249eba6c3f357b273b49b94e340b3189e17d1fc4e4f51785f38b3c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "nTPCRow[27]=78; tpcitsMatch.askMinTPCRow[28]=78; tpcitsMatch.askMinTPCRow[29]=78; tpcitsMatch.askMinTPCRow[30]=78; tpcitsMatch.askMinTPCRow[31]=78; tpcitsMatch.askMinTPCRow[32]=78; tpcitsMatch.askMinTPCRow[33]=78; tpcitsMatch.askMinTPCRow[34]=78; tpcitsMatch.askMinTPCRow[35]=78;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "16f39eb8e79897f07364684cfd67d99bcd3bffd1b896b80311d5aa60745d08ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "elif the BEAMTYPE is set to \"pp\" or LIGHTNUCLEI is set to \"1\", then:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "3a2918cf3eb5569a376834a33d6b925dce77ddb19fd0cf3be143499dff3b9e97": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "f4e9034d0ed31f5bcd7579370d652592448461348d66d1ac899c67ecbc9303df": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ITSTPCMATCH=\"${ITSTPCMATCH}; tpcitsMatch.askMinTPCRow[0]=78; tpcitsMatch.askMinTPCRow[1]=78; tpcitsMatch.askMinTPCRow[2]=78; tpcitsMatch.askMinTPCRow[3]=78; tpcitsMatch.askMinTPCRow[4]=78; tpcitsMatch.askMinTPCRow[5]=78; tpcitsMatch.askMinTPCRow[6]=78; tpcitsMatch.askMinTPCRow[7]=78; tpcitsMatch.askMinTPCRow[8]=78; tpcitsMatch.askMinTPCRow[9]=78; tpcitsMatch.askMinTPCRow[10]=78; tpcitsMatch.askMinTPCRow[11]=78; tpcitsMatch.askMinTPCRow[12]=78; tpcitsMatch.askMinTPCRow[13]=78; tpcitsMatch.askMinTPCRow[14]=78; tpcitsMatch.askMinTPCRow[15]=78; tpcitsMatch.askMinTPCRow[16]=78; tpcitsMatch.askMinTPCRow[17]=78; tpcitsMatch.askMinTPCRow[18]=78; tpcitsMatch.askMinTPCRow[19]=78; tpcitsMatch.askMinTPCRow[20]=78; tpcitsMatch.askMinTPCRow[21]=78; tpcitsMatch.askMinTPCRow[22]=78; tpcitsMatch.askMinTPCRow[23]=78; tpcitsMatch.askMinTPCRow[24]=78; tpcitsMatch.askMinTPCRow[25]=78; tpcitsMatch.askMinTPCRow[26]=78; tpcitsMatch.askMinTPCRow[27]=78; tpcitsMatch.askMinTPCRow[28]=78; tpcitsMatch.askMinTPCRow[29]=78; tpcitsMatch.askMinTPCRow[30]=78;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "0e7f7b0d6c415ac1ae46a165ce6cdb33b384c837d708f91df87851c240fd75b0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "nTPCRow[27]=78; tpcitsMatch.askMinTPCRow[28]=78; tpcitsMatch.askMinTPCRow[29]=78; tpcitsMatch.askMinTPCRow[30]=78; tpcitsMatch.askMinTPCRow[31]=78; tpcitsMatch.askMinTPCRow[32]=78; tpcitsMatch.askMinTPCRow[33]=78; tpcitsMatch.askMinTPCRow[34]=78; tpcitsMatch.askMinTPCRow[35]=78;",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "50461a60af5dd59f40ebb4f22fb84829790466ed6faf0def20b01c202017f24a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fi\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "f130c7f57762053c72b41286cfd0572a5012a7b0de2bfeefafeb2a8a4aa85626": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# settings to enhance the contribution of inner pad-rows\n  export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\";GPU_rec_tpc.trackletMinSharedNormFactor=1.;GPU_rec_tpc.trackletMaxSharedFraction=0.3;GPU_rec_tpc.rejectIFCLowRadiusCluster=1;\"\n  if grep extrapolationTrackingRowRange $O2_ROOT/include/GPU/GPUSettingsList.h &> /dev/null ; then\n    export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\"GPU_rec_tpc.extrapolationTrackingRowRange=100;\"\n  else\n    export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\"GPU_rec_tpc.globalTrackingRowRange=100;\"\n  fi\n\n  if [[ -n \"$ALIEN_JDL_TPCDEDXCLMASK\" ]]; then\n    CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\"GPU_rec_tpc.dEdxClusterRejectionFlagMask=$ALIEN_JDL_TPCDEDXCLMASK;\"\n  fi\n\n  if [[ -n \"$ALIEN_JDL_TPCDEDXCLMASKALT\" ]]; then\n    CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\"GPU_rec_tpc.dEdxClusterRejectionFlagMaskAlt=$ALIEN_JDL_TPCDEDXCLMASKALT;\"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "2d14b56be0bfd10cc5f586350e2b1aafe10841442b9baaf8b5c5c1ca0b733a2e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -n \"$ALIEN_JDL_TPCEDGETWOPADS\" ]]; then\n  CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\"GPU_rec_tpc.cfEdgeTwoPads=$ALIEN_JDL_TPCEDGETWOPADS;\"\nfi\n\nif [[ -n \"$ALIEN_JDL_TPCCLUSTERFILTER\" ]]; then\n  CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\"GPU_proc.tpcUseOldCPUDecoding=1;GPU_proc.tpcApplyClusterFilterOnCPU=$ALIEN_JDL_TPCCLUSTERFILTER;\"\nfi\n\nif [[ -n \"$ALIEN_JDL_TPCCHICUTOPT\" ]]; then # 0 or 1 to disable or enable (default) the chi2 cut on one-side and smoothed Kalman chi2\n  CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\"GPU_rec_tpc.mergerInterpolateRejectAlsoOnCurrentPosition=$ALIEN_JDL_TPCCHICUTOPT;\"\nfi\n\nif [[ -n \"$ALIEN_JDL_TPCCLUSEDGEREDEF\" ]]; then # if greater than 0 (float), undo the edge cluster bit for TPC clusters with a distance to the edge exceeding this value\n  CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\"GPU_rec_tpc.clustersEdgeFixDistance=$ALIEN_JDL_TPCCLUSEDGEREDEF;\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "505d187236bafd613da6a10267c6b503b675aa087d8084b9dd8c9b22650dd4a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#-------------------------------------- TPC Corrections ---------------------------------------------------\n# For TPC, we must supply:\n# 1) interaction rate information (lumi) for scaling or error calculations and potential corrections : INST_IR_FOR_TPC\n# 2) the method for scaling corrections (lumi, IDC scalers, or no scaling) : TPC_SCALING_SOURCE\n# By default, CTP is used unless otherwise specified in the JDL...\nINST_IR_FOR_TPC=${ALIEN_JDL_INSTIRFORTPC-CTP}\nTPC_SCALING_SOURCE=${ALIEN_JDL_TPCSCALINGSOURCE-IDCCCDB}\n# MEAN_IR_FOR_TPC lets us (1) change the mean IR map if it exceeds 0 or (2) disable all corrections if it's below 0\nMEAN_IR_FOR_TPC=${ALIEN_JDL_MEANIRFORTPC-}\n# An optional mean IR value can be set for the reference map\nMEAN_IR_REF_FOR_TPC=${ALIEN_JDL_MEANIRREFFORTPC-}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "39626ce4d9a3d0a9cfbfbb326ca29a1ca155ffe821ce51e2b26adec108d309f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "IF [[ $ALIEN_JDL_LPMANCHORYEAR == \"2022\" ]]; THEN\n  INST_IR_FOR_TPC=${ALIEN_JDL_INSTIRFORTPC-CTPCCDB} # by default, override inst.IR with the mean IR from CCDB and use it for scaling\n  FI\n  IF [[ $PERIOD == \"LHC22s\" ]]; THEN\n    TPC_SCALING_SOURCE=${ALIEN_JDL_TPCSCALINGSOURCE-NO_SCALING}  # in this configuration, only TPC/Calib/CorrectionMaps is applied, and it is known to be equivalent to TPC/Calib/CorrectionMapsRef for 22s;\n  ELSIF [[ $PERIOD == @(LHC22c|LHC22d|LHC22e|JUN|LHC22f) ]]; THEN\n    INST_IR_FOR_TPC=${ALIEN_JDL_INSTIRFORTPC-1} # apply scaling with a very low IR value\n  FI\n  # in MC, corrections are completely disabled\n  # note that if ALIEN_JDL_INSTIRFORTPC is set, it takes precedence\n  IF [[ $ALIEN_JDL_LPMPRODUCTIONTYPE == \"MC\" ]] && [[ $O2DPG_ENABLE_TPC_DISTORTIONS != \"ON\" ]]; THEN\n    MEAN_IR_FOR_TPC=${ALIEN_JDL_MEANIRFORTPC--1}\n  FI\n\n  DISABLE_CORRECTIONS=\n  IF [[ -n \"$ALIEN_JDL_MSHAPECORRECTION\" && $ALIEN_JDL_MSHAPECORRECTION == \"0\" ]]; THEN\n    ENABLE_MSHAPE=0\n  ELSE\n    ENABLE_MSHAPE=1\n  FI",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "ab4572f6c6320e6eed836b28740737b3d3cd761e3a6609388087a1d508831b37": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -n $MEAN_IR_FOR_TPC ]] ; then  # first check if corrections were not disabled via MEAN_IR_FOR_TPC\n  if (( $(echo \"$MEAN_IR_FOR_TPC > 0\" | bc -l) )); then # positive value overrides map mean lumi\n    echo \"Applying externally provided map mean IR for scaling, $MEAN_IR_FOR_TPC\"\n    export TPC_CORR_SCALING+=\";TPCCorrMap.lumiMean=$MEAN_IR_FOR_TPC;\" # accept mean lumy at face value\n  elif (( $(echo \"$MEAN_IR_FOR_TPC < 0\" | bc -l) )); then # negative mean lumi disables all corrections\n    echo \"Negative MEAN_IR_FOR_TPC -> all TPC corrections will be ignored\"\n    export TPC_CORR_SCALING+=\" --lumi-type 0 \"\n    export TPC_CORR_SCALING+=\";TPCCorrMap.lumiMean=$MEAN_IR_FOR_TPC;\"\n    ENABLE_MSHAPE=0\n    DISABLE_CORRECTIONS=1\n  else\n    echo \"Did not recognize MEAN_IR_FOR_TPC = $MEAN_IR_FOR_TPC\"\n    return 1\n  fi\nfi # MEAN_IR_FOR_TPC overridden",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "f0bfc696ff9493b658ff95db4e33cd9a6c264d009429d29fd8c7170fc816b345": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -n $MEAN_IR_REF_FOR_TPC ]] ; then\n    echo \"Using externally supplied map mean reference for TPC, $MEAN_IR_REF_FOR_TPC\"\n    export TPC_CORR_SCALING+=\";TPCCorrMap.lumiMeanRef=$MEAN_IR_REF_FOR_TPC\"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "fd8074e6a75187f26087d03bac2bc2456d7b5c55c2c514b733c0dc84f312c0a4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# set IR for TPC, even if it is not used for corrections scaling\nif [[ \"$INST_IR_FOR_TPC\" =~ ^-?[0-9]*\\.?[0-9]+$ ]] && (( $(echo \"$INST_IR_FOR_TPC > 0\" | bc -l) )); then # externally imposed CTP IR\n  echo \"Applying the externally specified instantaneous IR of $INST_IR_FOR_TPC Hz\"\n  export TPC_CORR_SCALING+=\";TPCCorrMap.lumiInst=$INST_IR_FOR_TPC\"\nelif [[ $INST_IR_FOR_TPC == \"CTP\" ]]; then\n  if ! has_detector CTP ; then\n    echo \"CTP Lumi is required for TPC corrections but CTP is not included in the WORKFLOW_DETECTORS=$WORKFLOW_DETECTORS\"\n    return 1\n  fi\n  echo \"Utilizing the CTP instantaneous luminal intensity stored in the data\"\nelif [[ $INST_IR_FOR_TPC == \"CTPCCDB\" ]]; then # using the CTP counters from the CCDB, extracted at the start of the script\n  echo \"Employing the CTP CCDB which provided the mean IR of the run at the beginning of the script ($RUN_IR Hz)\"\n  export TPC_CORR_SCALING+=\";TPCCorrMap.lumiInst=$RUN_IR\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "1557e3364a57565f0a971ecfd5c26363533cd11606ef876294e7b304cd19b655": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export TPC_CORR_SCALING+=\";TPCCorrMap.lumiInst=$RUN_IR\"\n  else echo \"Unknown setting for INST_IR_FOR_TPC = $INST_IR_FOR_TPC (given ALIEN_JDL_INSTIRFORTPC = $ALIEN_JDL_INSTIRFORTPC)\"\n    return 1\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "2c10158f364edefc3d527713812c0bbd752373f132bce0fad65ba9c72463708f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now define the source for the corrections\nif [[ $DISABLE_CORRECTIONS != 1 ]] ; then\n  if [[ $TPC_SCALING_SOURCE == \"NO_SCALING\" ]]; then\n    echo \"NO SCALING is requested, only TPC/Calib/CorrectionMapsV2... will be applied\"\n    export TPC_CORR_SCALING+=\" --lumi-type 0 \"\n  elif [[ $TPC_SCALING_SOURCE == \"CTP\" ]]; then\n    echo \"CTP Lumi from data will be utilized for TPC scaling\"\n    export TPC_CORR_SCALING+=\" --lumi-type 1 \"\n    if [[ $ALIEN_JDL_USEDERIVATIVESFORSCALING == \"1\" ]]; then\n      export TPC_CORR_SCALING+=\" --corrmap-lumi-mode 1 \"\n    fi\n  elif [[ $TPC_SCALING_SOURCE == \"IDCCCDB\" ]]; then\n    echo \"TPC correction using IDC from CCDB will be applied\"\n    export TPC_CORR_SCALING+=\" --lumi-type 2 \"\n    if [[ $ALIEN_JDL_USEDERIVATIVESFORSCALING == \"1\" ]]; then\n      export TPC_CORR_SCALING+=\" --corrmap-lumi-mode 1 \"\n    fi\n  else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "24feefa5953db88644963fcb409f77f4d86fe26a54969c3228c99530782f006a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export TPC_CORR_SCALING+=\" --corrmap-lumi-mode 1 \"\n      fi\n    else\n      echo \"The specified setting for TPC_SCALING_SOURCE = $TPC_SCALING_SOURCE (and ALIEN_JDL_TPCSCALINGSOURCE = $ALIEN_JDL_TPCSCALINGSOURCE) is not recognized.\"\n    fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "1d228e612a29aa9750fe68a9d1071c1fc0458d9a087a0825dc3fd6d8cff43b7c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if ! has_detector CTP ; then\n    echo \"CTP is missing from the detector list, hence disabling the CTP Lumi input request\"\n    export TPC_CORR_SCALING+=\" --disable-ctp-lumi-request \"\n  fi\n\n  if [[ $ENABLE_MSHAPE == \"1\" ]]; then\n    export TPC_CORR_SCALING+=\" --enable-M-shape-correction \"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "bc67e000415370076d1c2e51dc2abd1c2e2ff131985d0b28deac7bcc8d363974": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $ALIEN_JDL_LPMANCHORYEAR -ge 2023 ]] && [[ $BEAMTYPE == \"PbPb\" ]] ; then\n    # include extra cluster errors\n    # these values need to be squared, but the validation (0.01 and 0.0225) is still in progress\n    TPCEXTRAERR=\";GPU_rec_tpc.clusterError2AdditionalYSeeding=0.1;GPU_rec_tpc.clusterError2AdditionalZSeeding=0.15;\"\n    if [[ $SCALE_WITH_ZDC == 1 ]]; then\n      echo \"In 2023 PbPb runs with ZDC inst. lumi, using scaling factor 2.414\"\n      export TPC_CORR_SCALING+=\";TPCCorrMap.lumiInstFactor=2.414;\"\n    elif [[ $SCALE_WITH_FT0 == 1 ]]; then\n      echo \"In 2023 PbPb runs with FT0 inst. lumi, using scaling factor 135.\"\n      export TPC_CORR_SCALING+=\"TPCCorrMap.lumiInstFactor=135.;\"\n    else\n      echo \"No ZDC or FT0 data, and this is a 2023 PbPb run: cannot scale TPC distortion corrections, aborting...\"\n      return 1\n    fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "42a45456e6879351c9e8f08ec5d963c1cd29690b28395f639fde53748cbb929a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Final setting for TPC scaling is:\n  echo $TPC_CORR_SCALING\n  #-------------------------------------- TPC corrections (end)--------------------------------------------\n\n  if [[ $PERIOD != @(LHC22c|LHC22d|LHC22e|JUN|LHC22f) ]]; then\n    echo \"Setting TPCCLUSTERTIMESHIFT to 0\"\n    TPCCLUSTERTIMESHIFT=0\n  else\n    echo \"During the period $PERIOD, we must retain the correction for the TPC cluster time due to the absence of new vdrift values\"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "4b5add91643394ce9a42506f8bc190e9065c67194559a5699739848f8aa43c2d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "TRACKTUNETPCINNER=\"trackTuneParams.tpcCovInnerType=2;trackTuneParams.tpcCovInner[0]=0.05;trackTuneParams.tpcCovInner[1]=0.2;trackTuneParams.tpcCovInner[2]=0.0003;trackTuneParams.tpcCovInner[3]=0.0013;trackTuneParams.tpcCovInner[4]=0.0059300284;trackTuneParams.tpcCovInnerSlope[0]=1.4794650254467986e-08;trackTuneParams.tpcCovInnerSlope[1]=5.9178601017871944e-08;trackTuneParams.tpcCovInnerSlope[2]=8.87679015268079e-11;trackTuneParams.tpcCovInnerSlope[3]=3.846609066161676e-10;trackTuneParams.tpcCovInnerSlope[4]=1.7546539235412473e-09;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "a8ec707615f7302f503c4734da5ce5d09933adb24a42b508ab758ba9077fe11b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "TRACKTUNETPCOUTER=\"trackTuneParams.tpcCovOuterType=2;trackTuneParams.tpcCovOuter[0]=0.05;trackTuneParams.tpcCovOuter[1]=0.2;trackTuneParams.tpcCovOuter[2]=0.0003;trackTuneParams.tpcCovOuter[3]=0.0013;trackTuneParams.tpcCovOuter[4]=0.0059300284;trackTuneParams.tpcCovOuterSlope[0]=1.4794650254467986e-08;trackTuneParams.tpcCovOuterSlope[1]=5.9178601017871944e-08;trackTuneParams.tpcCovOuterSlope[2]=8.87679015268079e-11;trackTuneParams.tpcCovOuterSlope[3]=3.846609066161676e-10;trackTuneParams.tpcCovOuterSlope[4]=1.7546539235412473e-09;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "d626e740da9265b13ca0db6031e7f62922f2aa8d1da817a5029a4f74c7fa69c4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fi\n\nTRACKTUNETPC=${TPCEXTRAERR-}\n\n# combining parameters\nif [[ ! -z ${TRACKTUNETPCINNER:-} || ! -z ${TRACKTUNETPCOUTER:-} ]]; then\n    TRACKTUNETPC=\"$TRACKTUNETPC;trackTuneParams.sourceLevelTPC=true;$TRACKTUNETPCINNER;$TRACKTUNETPCOUTER\"\nfi\n\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=$ERRIB;ITSCATrackerParam.sysErrZ2[0]=$ERRIB;ITSCATrackerParam.sysErrY2[1]=$ERRIB;ITSCATrackerParam.sysErrZ2[1]=$ERRIB;ITSCATrackerParam.sysErrY2[2]=$ERRIB;ITSCATrackerParam.sysErrZ2[2]=$ERRIB;ITSCATrackerParam.sysErrY2[3]=$ERROB;ITSCATrackerParam.sysErrZ2[3]=$ERROB;ITSCATrackerParam.sysErrY2[4]=$ERROB;ITSCATrackerParam.sysErrZ2[4]=$ERROB;ITSCATrackerParam.sysErrY2[5]=$ERROB;ITSCATrackerParam.sysErrZ2[5]=$ERROB;ITSCATrackerParam.sysErrY2[6]=$ERROB;ITSCATrackerParam.sysErrZ2[6]=$ERROB;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "d37583ec9459bc4316f6d63bed724a7773e8666e9d5e5b2622e908ccd74a4f10": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Customization Options for ITS Reco Workflow\nEXTRA_ITSRECO_CONFIG=\nif [[ $BEAMTYPE == \"PbPb\" ]]; then\n  EXTRA_ITSRECO_CONFIG=\"ITSCATrackerParam.deltaRof=0;ITSVertexerParam.clusterContributorsCut=16;ITSVertexerParam.lowMultBeamDistCut=0;ITSCATrackerParam.nROFsPerIterations=12;ITSCATrackerParam.perPrimaryVertexProcessing=false;ITSCATrackerParam.fataliseUponFailure=false;ITSCATrackerParam.dropTFUponFailure=true\"\n  if [[ -z \"$ALIEN_JDL_DISABLE_UPC\" || $ALIEN_JDL_DISABLE_UPC != 1 ]]; then\n    EXTRA_ITSRECO_CONFIG+=\";ITSVertexerParam.nIterations=2;ITSCATrackerParam.doUPCIteration=true;\"\n  fi\nelif [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" ]]; then\n  EXTRA_ITSRECO_CONFIG=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2;\"\n  EXTRA_ITSRECO_CONFIG+=\";ITSCATrackerParam.startLayerMask[0]=127;ITSCATrackerParam.startLayerMask[1]=127;ITSCATrackerParam.startLayerMask[2]=127;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "63586c1ff87cad369d6bb57bc37ef8c5c39de27d3c95fd576617c59432d41dfb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    EXTRA_ITSRECO_CONFIG+=\";ITSCATrackerParam.minPtIterLgt[0]=0.05;ITSCATrackerParam.minPtIterLgt[1]=0.05;ITSCATrackerParam.minPtIterLgt[2]=0.05;ITSCATrackerParam.minPtIterLgt[3]=0.05;ITSCATrackerParam.minPtIterLgt[4]=0.05;ITSCATrackerParam.minPtIterLgt[5]=0.05;ITSCATrackerParam.minPtIterLgt[6]=0.05;ITSCATrackerParam.minPtIterLgt[7]=0.05;ITSCATrackerParam.minPtIterLgt[8]=0.05;ITSCATrackerParam.minPtIterLgt[9]=0.09;ITSCATrackerParam.minPtIterLgt[10]=0.167;ITSCATrackerParam.minPtIterLgt[11]=0.125;\"\n# this command applies the previous pp pT thresholds (replacing the default pbpb24 apass1 values)",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "38397ff1c386fb9083643cd6f0bab796aabc24e7c4ea04df670dee0018f70c7b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#  this command is used to apply legacy pp pT criteria (overwriting fixed pbpb24 apass1 parameters)\n#  EXTRA_ITSRECO_CONFIG+=\";ITSCATrackerParam.minPtIterLgt[0]=0.05;ITSCATrackerParam.minPtIterLgt[1]=0.05;ITSCATrackerParam.minPtIterLgt[2]=0.05;ITSCATrackerParam.minPtIterLgt[3]=0.05;ITSCATrackerParam.minPtIterLgt[4]=0.05;ITSCATrackerParam.minPtIterLgt[5]=0.05;ITSCATrackerParam.minPtIterLgt[6]=0.05;ITSCATrackerParam.minPtIterLgt[7]=0.05;ITSCATrackerParam.minPtIterLgt[8]=0.05;ITSCATrackerParam.minPtIterLgt[9]=0.05;ITSCATrackerParam.minPtIterLgt[10]=0.05;ITSCATrackerParam.minPtIterLgt[11]=0.05;\"\nfi\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow+=\";$MAXBCDIFFTOMASKBIAS_ITS;$MAXBCDIFFTOSQUASHBIAS_ITS;$EXTRA_ITSRECO_CONFIG;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "37d5fea4f8529d753e126718ee9e2249d8598b2a5b60ba46a30e9eb434c7d009": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# observed inconsistency in the ALIGNLEVEL between internal errors of sync_misaligned and ITSEXTRAERR\nif [[ $ALIGNLEVEL != 0 ]]; then\n export CONFIG_EXTRA_PROCESS_o2_its_reco_workflow+=\";$ITSEXTRAERR;\"\nfi\n\n# custom settings for GPU reco workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\";GPU_global.dEdxDisableResidualGainMap=1;$TRACKTUNETPC;$VDRIFTPARAMOPTION;\"\n\n[[ ! -z $TPCCLUSTERTIMESHIFT ]] && [[ $ALIEN_JDL_LPMPRODUCTIONTYPE != \"MC\" ]] && export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\";GPU_rec_tpc.clustersShiftTimebins=$TPCCLUSTERTIMESHIFT;\"\n\n# adjustments for TOF reco\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow+=\"--use-ccdb --ccdb-url-tof \\\"http://alice-ccdb.cern.ch\\\"\"\n# following changes from commit on December 4\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow+=\" --use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "e47354806fdba28f522d348f5a58d7d439947426f782675468754083bb7b88c2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for primary vertex workflow\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as per the comment from https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "57d1513f02369c15fb3841d2d50df4013c27870a7cd2a0513cd564389fb4d213": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1.;pvertexer.dbscanAdaptCoef=20.;pvertexer.timeMarginVertexTime=1.3\"\n# updated on 7 September 2022\nEXTRA_PRIMVTX_TimeMargin=\"\"\nif [[ $BEAMTYPE == \"PbPb\" || $PERIOD == \"MAY\" || $PERIOD == \"JUN\" || $PERIOD == \"LHC22*\" || $PERIOD == \"LHC23*\" ]]; then\n  EXTRA_PRIMVTX_TimeMargin=\"pvertexer.timeMarginVertexTime=1.3\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "cfefc6977084a0f819b23dc4fe83290b77489cb7e3df10ad34a4440ec02717f6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export PVERTEXER+=\";pvertexer.acceptableScale2=9;pvertexer.minScale2=2;$EXTRA_PRIMVTX_TimeMargin;\"\nif [[ $ALIGNLEVEL == 1 ]]; then\n  if [[ $BEAMTYPE == \"PbPb\" ]]; then\n    export PVERTEXER+=\";pvertexer.addTimeSigma2Debris=0.01;pvertexer.meanVertexExtraErrSelection=0.03;pvertexer.maxITSOnlyFraction=0.85;pvertexer.maxTDiffDebris=1.5;pvertexer.maxZDiffDebris=0.3;pvertexer.addZSigma2Debris=0.09;pvertexer.addTimeSigma2Debris=2.25;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1;pvertexer.maxTDiffDebrisExtra=-1;pvertexer.dbscanDeltaT=-0.55;pvertexer.maxTMAD=1;pvertexer.maxZMAD=0.04;\"\n    has_detector_reco FT0 && PVERTEX_CONFIG+=\" --validate-with-ft0 \"\n  elif [[ $BEAMTYPE == \"pp\" ]]; then\n    export PVERTEXER+=\";pvertexer.maxChi2TZDebris=40;pvertexer.maxChi2Mean=12;pvertexer.maxMultRatDebris=1;pvertexer.addTimeSigma2Debris=0.01;pvertexer.meanVertexExtraErrSelection=0.03;\"\n  elif [[ $LIGHTNUCLEI == \"1\" ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "77ad3feca5f540dd1068298445eb1d8a80988589bc46d758746f93372e5b91b7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $LIGHTNUCLEI == \"1\" ]]; then\n  export PVERTEXER+=\"pvertexer.maxChi2TZDebris=3000;pvertexer.maxTDiffDebris=0.7;pvertexer.maxZDiffDebris=0.5;pvertexer.maxMultRatDebris=0.25;pvertexer.addTimeSigma2Debris=0.2;pvertexer.addZSigma2Debris=0.2;pvertexer.maxChi2TZDebrisExtra=50;pvertexer.maxTDiffDebrisExtra=-1;pvertexer.maxZDiffDebrisExtra=0.03;pvertexer.maxMultRatDebrisExtra=0.25;pvertexer.meanVertexExtraErrSelection=0.03;pvertexer.maxITSOnlyFraction=0.8;pvertexer.meanVertexExtraErrSelection=0.03;\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "2e63b6f78086c3842b5abe2f7e724e38e71e58a55c9c47cf7416aa680f0a2b19": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# secondary vertexing\nif [[ $ALIEN_JDL_DISABLESTRTRACKING == 1 ]]; then\n  export STRTRACKING=\" --disable-strangeness-tracker \"\nfi\nif [[ $ALIEN_JDL_DISABLECASCADES == 1 ]]; then\n  export ARGS_EXTRA_PROCESS_o2_secondary_vertexing_workflow+=\" --disable-cascade-finder  \"\nfi\n# permits TPC-only usage in svertexer (default: utilize them, as in the default setting in O2 and CCDB)\nif [[ $ALIEN_JDL_DISABLETPCONLYFORV0S == 1 ]]; then\n  export CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow+=\";svertexer.mExcludeTPCtracks=true\"\nfi\n\nexport CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow+=\";$PVERTEXER;$VDRIFTPARAMOPTION;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "c1bc2add9782feae3e53dfda82705d144d6c45e7b29c977320ff5e5e708df539": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow+=\";$PVERTEXER;$VDRIFTPARAMOPTION;\"\n\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow+=\";$ITSEXTRAERR;$ITSTPCMATCH;$TRACKTUNETPC;$VDRIFTPARAMOPTION;\"\nif [ -n \"${TPCITSTIMEBIAS}\" ]; then export CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow+=\";tpcitsMatch.globalTimeBiasMUS=$TPCITSTIMEBIAS;\"\nfi\nif [ -n \"${TPCITSTIMEERR}\" ]; then export CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow+=\";tpcitsMatch.globalTimeExtraErrorMUS=$TPCITSTIMEERR;\"\nfi\n\n# enabling AfterBurner\nif has_detector FT0; then export ARGS_EXTRA_PROCESS_o2_tpcits_match_workflow+=\" --use-ft0\"\nfi\n\n# ad-hoc settings for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow+=\" --output-type matching-info,calib-info --enable-dia\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow+=\";$ITSEXTRAERR;$TRACKTUNETPC;$VDRIFTPARAMOPTION;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "8ec98fca3e6718feb8cf5b64bfa924a7537d213aef4fc5d61135bf168f7947bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $ALIEN_JDL_LPMPASSNAME == \"cpass0\" ]]; then\n   CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow+=\";MatchTOF.nsigmaTimeCut=6;\"\n  ARGS_EXTRA_PROCESS_o2_tof_reco_workflow+=\" --for-calib\"\nfi\n\n# specific settings for TRD matching\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking+=\";$ITSEXTRAERR;$TRACKTUNETPC;$VDRIFTPARAMOPTION;GPU_rec_trd.minTrackPt=0.3;\"\n\n# specific settings for FT0\nexportARGS_EXTRA_PROCESS_o2_ft0_reco_workflow+=\" --ft0-reconstructor\"\nif [[ $BEAMTYPE == \"PbPb\" ]]; then\n  export CONFIG_EXTRA_PROCESS_o2_ft0_reco_workflow+=\";FT0TimeFilterParam.mAmpLower=10;\"\nfi\n\n# specific settings for FV0\nexportARGS_EXTRA_PROCESS_o2_fv0_reco_workflow+=\" --fv0-reconstructor\"\n\n# specific settings for FDD\n#...",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "0e33ff0aa7698f98cb35eedf798f8c41a50f1682e073133916f224bf3adb23ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# customized configurations for FDD\n#...\n\n# customized configurations for MFT\nif [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" || $PERIOD == \"LHC22s\" ]]; then\n  export CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow+=\";MFTTracking.RBins=30;MFTTracking.PhiBins=120;MFTTracking.ZVtxMin=-13;MFTTracking.ZVtxMax=13;MFTTracking.MFTRadLength=0.084;$MAXBCDIFFTOMASKBIAS_MFT;$MAXBCDIFFTOSQUASHBIAS_MFT\"\nelse\n  export CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow+=\";MFTTracking.MFTRadLength=0.084;$MAXBCDIFFTOMASKBIAS_MFT;$MAXBCDIFFTOSQUASHBIAS_MFT\"\nfi\n\n# customized configurations for MCH\nif [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" ]]; then\n  export CONFIG_EXTRA_PROCESS_o2_mch_reco_workflow+=\";MCHTracking.chamberResolutionX=0.4;MCHTracking.chamberResolutionY=0.4;MCHTracking.sigmaCutForTracking=7;MCHTracking.sigmaCutForImprovement=6\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "ae50cb9e4d3e6dcea6a5bf129359db69e0125b7959a28c9cafe588f2538c48a0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Custom settings for MFT-MCH alignment\n# Defines the number of MFT-MCH match candidates to be saved in AO2Ds\n# By default, MUON_MATCHING_NCANDIDATES=0 turns off candidate storage\nif [[ -z \"${MUON_MATCHING_NCANDIDATES:-}\" ]]; then\n  MUON_MATCHING_NCANDIDATES=0 # default setting: disable candidate storage\n  if [[ $BEAMTYPE == \"pp\" || $LIGHTNUCLEI == \"1\" ]]; then MUON_MATCHING_NCANDIDATES=5; fi\n  if [[ $BEAMTYPE == \"PbPb\" ]]; then MUON_MATCHING_NCANDIDATES=20; fi\nfi\nif [[ \"x${MUON_MATCHING_NCANDIDATES}\" != \"x0\" ]]; then\n    export CONFIG_EXTRA_PROCESS_o2_globalfwd_matcher_workflow+=\";FwdMatching.saveMode=3;FwdMatching.nCandidates=${MUON_MATCHING_NCANDIDATES};\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "06217e9c05d10f51c77ac2ab2378d7d423e2edba01d023acfc580e419f1b0948": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# potentially incorporating calibration steps as performed online\n# could be improved to enable more operations simultaneously\nif [[ $ADD_CALIB == \"1\" ]]; then\n  export WORKFLOW_PARAMETERS=\"CALIB,CALIB_LOCAL_INTEGRATED_AGGREGATOR,${WORKFLOW_PARAMETERS}\"\n  export CALIB_DIR=\"./\"\n  export CALIB_TPC_SCDCALIB_SENDTRKDATA=0\n  export CALIB_PRIMVTX_MEANVTX=0\n  export CALIB_TOF_LHCPHASE=0\n  export CALIB_TOF_CHANNELOFFSETS=0\n  export CALIB_TOF_DIAGNOSTICS=0\n  export CALIB_EMC_BADCHANNELCALIB=0\n  export CALIB_EMC_TIMECALIB=0\n  export CALIB_PHS_ENERGYCALIB=0\n  export CALIB_PHS_BADMAPCALIB=0\n  export CALIB_PHS_TURNONCALIB=0\n  export CALIB_PHS_RUNBYRUNCALIB=0\n  export CALIB_PHS_L1PHASE=0\n  export CALIB_TRD_VDRIFTEXB=0\n  export CALIB_TRD_T0=0\n  export CALIB_TRD_GAIN=0\n  export CALIB_TPC_TIMEGAIN=0\n  export CALIB_TPC_RESPADGAIN=0\n  export CALIB_TPC_VDRIFTTGL=0\n  export CALIB_CPV_GAIN=0\n  export CALIB_ZDC_TDC=0\n  export CALIB_FT0_TIMEOFFSET=0\n  export CALIB_TPC_SCDCALIB=0\n  export CALIB_FT0_INTEGRATEDCURR=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "60839c1714876e81d91a41a6085e5a2f1623ee3ee4c479b2c988b7a7234a10ea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export CALIB_FT0_TIMEOFFSET=0\n    export CALIB_TPC_SCDCALIB=0\n    export CALIB_FT0_INTEGRATEDCURR=0\n    export CALIB_FV0_INTEGRATEDCURR=0\n    export CALIB_FDD_INTEGRATEDCURR=0\n    export CALIB_TOF_INTEGRATEDCURR=0\n    export CALIB_ITS_DEADMAP_TIME=0\n    export CALIB_MFT_DEADMAP_TIME=0\n    if [[ $DO_TPC_RESIDUAL_EXTRACTION == \"1\" ]]; then\n        export CALIB_TPC_SCDCALIB=1\n        export CALIB_TPC_SCDCALIB_SENDTRKDATA=1\n        export CONFIG_EXTRA_PROCESS_o2_tpc_scdcalib_interpolation_workflow+=\";scdcalib.additionalTracksMap=35000000;scdcalib.minPtNoOuterPoint=0.2;scdcalib.maxQ2Pt=5;scdcalib.minITSNClsNoOuterPoint=6;scdcalib.minITSNCls=4;scdcalib.minTPCNClsNoOuterPoint=90;scdcalib.minTOFTRDPVContributors=2\"\n        : ${TPC_RESIDUAL_TRK_SOURCES_MAP_EXTRACTION:=\"ITS-TPC\"}\n        exportARGS_EXTRA_PROCESS_o2_tpc_scdcalib_interpolation_workflow+=\" --tracking-sources-map-extraction $TPC_RESIDUAL_TRK_SOURCES_MAP_EXTRACTION\"\n        # ad-hoc settings for TPC residual extraction",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "3103ddefa10ffdf1ebd0c1cf5a64c098c2a89113cc18175a1dd25b8d63febbca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for TPC residual extraction\nexport ARGS_EXTRA_PROCESS_o2_calibration_residual_aggregator+=\" --output-type trackParams,unbinnedResid\"\nif [[ $ALIEN_JDL_DEBUGRESIDUALEXTRACTION == \"1\" ]]; then\n  export CONFIG_EXTRA_PROCESS_o2_tpc_scdcalib_interpolation_workflow+=\";scdcalib.maxTracksPerCalibSlot=-1;scdcalib.minPtNoOuterPoint=0.8;scdcalib.minTPCNClsNoOuterPoint=120\"\n  export ARGS_EXTRA_PROCESS_o2_trd_global_tracking+=\" --enable-qc\"\nfi\nexport CALIB_EMC_ASYNC_RECALIB=\"$ALIEN_JDL_DOEMCCALIB\"\nif [[ $ALIEN_JDL_DOTRDVDRIFTEXBCALIB == \"1\" ]]; then\n  export CALIB_TRD_VDRIFTEXB=\"$ALIEN_JDL_DOTRDVDRIFTEXBCALIB\"\n  export ARGS_EXTRA_PROCESS_o2_calibration_trd_workflow+=\" --enable-root-output\"\n  export ARGS_EXTRA_PROCESS_o2_trd_global_tracking+=\" --enable-qc\"\nfi\nif [[ $ALIEN_JDL_DOMEANVTXCALIB == 1 ]]; then\n  export CALIB_PRIMVTX_MEANVTX=\"$ALIEN_JDL_DOMEANVTXCALIB\"\n  export TFPERSLOTS_MEANVTX=550000 # 1 hour",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "f918a8d7f31bb525ade7b98eb3a2f0221c1f7f1aa257c6b1e2136a4927898cc7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export TFPERSLOTS_MEANVTX=550000 # equivalent to 1 hour\n    export DELAYINTFS_MEANVTX=55000  # equivalent to 10 minutes\n    export SVERTEXING_SOURCES=none # secondary vertexing is disabled\n  fi\n  if [[ $ALIEN_JDL_DOTRDGAINCALIB == 1 ]]; then\n    export CONFIG_EXTRA_PROCESS_o2_calibration_trd_workflow+=\";TRDCalibParams.minEntriesChamberGainCalib=999999999;TRDCalibParams.minEntriesTotalGainCalib=10000;TRDCalibParams.nTrackletsMinGainCalib=4\"\n    export ARGS_EXTRA_PROCESS_o2_calibration_trd_workflow+=\" --enable-root-output\"\n    export CALIB_TRD_GAIN=1\n  fi\n  # additional workflows if we need to process currents for FT0, FV0, TOF, TPC\n  if [[ -n $ALIEN_JDL_EXTRACTCURRENTS ]] ; then\n    export CALIB_FT0_INTEGRATEDCURR=$ALIEN_JDL_EXTRACTCURRENTS\n    export CALIB_FV0_INTEGRATEDCURR=$ALIEN_JDL_EXTRACTCURRENTS\n    export CALIB_FDD_INTEGRATEDCURR=$ALIEN_JDL_EXTRACTCURRENTS\n    export CALIB_TOF_INTEGRATEDCURR=$ALIEN_JDL_EXTRACTCURRENTS\n    export CALIB_ASYNC_EXTRACTTPCCURRENTS=$ALIEN_JDL_EXTRACTCURRENTS\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "796c3beef00dc7d19c838b43033fde284f870b1ca26a0498c1da7f9594d6c032": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export CALIB_ASYNC_EXTRACTTPCCURRENTS=$ALIEN_JDL_EXTRACTCURRENTS\n  fi\n  if [[ -n $ALIEN_JDL_DISABLE3DCURRENTS ]]; then\n    export CALIB_ASYNC_DISABLE3DCURRENTS=$ALIEN_JDL_DISABLE3DCURRENTS\n  fi\n\n    PARAPHRASED DOCUMENT:\n    export CALIB_ASYNC_EXTRACTTPCCURRENTS=$ALIEN_JDL_EXTRACTCURRENTS\n  fi\n  if [[ -n $ALIEN_JDL_DISABLE3DCURRENTS ]]; then\n    export CALIB_ASYNC_DISABLE3DCURRENTS=$ALIEN_JDL_DISABLE3DCURRENTS\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "0c6706ec18829b10e10ee22f224f35622af80aa196b397b7b805a80934a10d40": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# extra workflows for processing currents into time series\nif [[ -n $ALIEN_JDL_EXTRACTTIMESERIES ]] ; then\n    echo \"Adding time series extraction in setenv_extra.sh\"\n    export CALIB_ASYNC_EXTRACTTIMESERIES=$ALIEN_JDL_EXTRACTTIMESERIES\n    if [[ -n $ALIEN_JDL_ENABLEUNBINNEDTIMESERIES ]]; then\n      export CALIB_ASYNC_ENABLEUNBINNEDTIMESERIES=$ALIEN_JDL_ENABLEUNBINNEDTIMESERIES\n    fi\n    if [[ -n $ALIEN_JDL_SAMPLINGFACTORTIMESERIES ]]; then\n      export CALIB_ASYNC_SAMPLINGFACTORTIMESERIES=$ALIEN_JDL_SAMPLINGFACTORTIMESERIES\n    fi\n  fi\n  if [[ $ALIEN_JDL_DOUPLOADSLOCALLY == 1 ]]; then\n    export CCDB_POPULATOR_UPLOAD_PATH=\"file://$PWD\"\n  fi\nfi\n\n# Enabling AOD\nif [[ $ALIEN_JDL_AODOFF != \"1\" ]]; then\n  export WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "a67d35dd7a482669f6641c6be15345b3065cc52c97a28b697453e2df611cf6c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # ad-hoc settings for AOD\necho -e \"\\nNeeded for AODs:\"\necho ALIEN_JDL_LPMPRODUCTIONTAG = $ALIEN_JDL_LPMPRODUCTIONTAG\necho ALIEN_JDL_LPMPASSNAME = $ALIEN_JDL_LPMPASSNAME\n# Track QC table sampling\nif [ -n $ALIEN_JDL_TRACKQCFRACTION ]; then\n  TRACKQC_FRACTION=$ALIEN_JDL_TRACKQCFRACTION\nelse\n  if [ $ALIEN_JDL_ENABLEPERMILFULLTRACKQC == \"1\" ]; then\n    PERMIL_FULLTRACKQC=${ALIEN_JDL_PERMILFULLTRACKQC:-100}\n    INVERSE_PERMIL_FULLTRACKQC=$((1000/PERMIL_FULLTRACKQC))\n    if [ -f wn.xml ]; then\n      HASHCODE=`grep alien:// wn.xml | tr ' ' '\\n' | grep ^lfn | cut -d\\\" -f2 | head -1 | cksum | cut -d ' ' -f 1`\n    else\n      HASHCODE=`echo \"${inputarg}\" | cksum | cut -d ' ' -f 1`\n    fi\n    if [ \"$((HASHCODE%INVERSE_PERMIL_FULLTRACKQC))\" -eq \"0\" ]; then\n      TRACKQC_FRACTION=1\n    else\n      TRACKQC_FRACTION=0.1\n    fi\n  else\n    TRACKQC_FRACTION=0.1\n  fi\nfi\necho TRACKQC_FRACTION = $TRACKQC_FRACTION",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "152930cc07890ab50d16b0d345b8d31bdaeb6ebbf86730483d7bfc01370e232f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "fi\nelse\n    TRACKQC_FRACTION=0.1\nfi\nfi\necho TRACKQC_FRACTION = $TRACKQC_FRACTION\nexport ARGS_EXTRA_PROCESS_o2_aod_producer_workflow+=\" --aod-writer-maxfilesize $AOD_FILE_SIZE --lpmp-prod-tag $ALIEN_JDL_LPMPRODUCTIONTAG --reco-pass $ALIEN_JDL_LPMPASSNAME --trackqc-fraction $TRACKQC_FRACTION\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "deca05403eea6c05eb8280094764aad2fcc49558e5a76d91c8d084f3223d711d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $PERIOD == \"LHC22c\" ]] || [[ $PERIOD == \"LHC22d\" ]] || [[ $PERIOD == \"LHC22e\" ]] || [[ $PERIOD == \"JUN\" ]] || [[ $PERIOD == \"LHC22f\" ]] || [[ $PERIOD == \"LHC22m\" ]] || [[ \"$RUNNUMBER\" == @(526463|526465|526466|526467|526468|526486|526505|526508|526510|526512|526525|526526|526528|526534|526559|526596|526606|526612|526638|526639|526641|526643|526647|526649|526689|526712|526713|526714|526715|526716|526719|526720|526776|526886|526926|526927|526928|526929|526934|526935|526937|526938|526963|526964|526966|526967|526968|527015|527016|527028|527031|527033|527034|527038|527039|527041|527057|527076|527108|527109|527228|527237|527259|527260|527261|527262|527345|527347|527349|527446|527518|527523|527734) ]]; then\n  export ARGS_EXTRA_PROCESS_o2_aod_producer_workflow+=\" --ctpreadout-create 1\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "9f8293c2ad28370445ab89c23aebb7aa4a33cb55359b572b9ce7cbb0cbf13ace": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $ALIEN_JDL_THINAODS == \"1\" ]] ; then\n  export ARGS_EXTRA_PROCESS_o2_aod_producer_workflow+=\" --thin-tracks\"\nfi\n\nif [[ $ALIEN_JDL_PREPROPAGATE == \"1\" ]] ; then\n  export ARGS_EXTRA_PROCESS_o2_aod_producer_workflow+=\" --propagate-tracks --propagate-tracks-max-xiu 5\"\nfi\n\n# Enabling Quality Control\nif [[ $ALIEN_JDL_QCOFF != \"1\" ]]; then\n  export WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nfi\n\nexport QC_CONFIG_OVERRIDE+=\";qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.type=PHYSICS;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD;qc.config.Activity.beamType=$BEAMTYPE;\"\n\nexport QC_CONFIG_PARAM+=\" --local-batch=QC.root \"\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "7b20e126438f81b4dd89b597758b2e4ca413d6a3f1d272abc7cd3333d2953428": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -n $ALIEN_JDL_QCJSONFROMOUTSIDE ]]; then\n  export QC_JSON_FROM_OUTSIDE=$ALIEN_JDL_QCJSONFROMOUTSIDE\nfi\nif [[ -n $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/setenv_extra.sh"
        }
    ],
    "f0181a589daccad4559262129cc0ef954d4c04fd9ec3eea636b34f6368a3339d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script for initiating asynchronous processing\n#\n# If executed locally, you must set environment variables such as:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass4\n# export ALIEN_JDL_LPMANCHORYEAR=2021",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "1416dfdd35f7e277647364a5e2f2516b03b101d95b6bd39081eed598753ba011": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# function to run AOD merging\nrun_AOD_merging() {\n  cd $1\n  if [[ -f \"AO2D.root\" ]]; then\n    ls \"AO2D.root\" > list_$1.list\n    echo \"Examining AO2Ds with un-merged DFs in $1\"\n    timeStartCheck=`date +%s`\n    time root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n    exitcode=$?\n    timeEndCheck=`date +%s`\n    timeUsedCheck=$(( $timeEndCheck-$timeStartCheck ))\n    echo \"Duration to check unmerged AODs in dir $1 = $timeUsedCheck seconds\"\n    if [[ $exitcode -ne 0 ]]; then\n      echo \"exit code from AO2D check is \" $exitcode > validation_error.message\n      echo \"exit code from AO2D check is \" $exitcode\n      echo \"This indicates that the check for unmerged AODs in $1 failed, causing the entire processing to fail\"\n      return $exitcode\n    fi\n    if [[ -z $ALIEN_JDL_DONOTMERGEAODS ]] || [[ $ALIEN_JDL_DONOTMERGEAODS == 0 ]]; then\n      echo \"Proceeding to merge AODs from the list list_$1.list\"\n\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "748d9c6e5fc90179491b88661fa91797d825f90becfbb4866cf664b8fae8aaa9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Merging AOD from the list list_$1.list\"\n      o2-aod-merger --input list_$1.list --verbosity 1 --output AO2D_merged.root > merging.log\n      exitcode=$?\n      if [[ $exitcode -ne 0 ]]; then\n\techo \"Exit code from the process merging DFs inside AO2D for $1 is \" $exitcode > validation_error.message\n\techo \"Exit code from the process merging DFs inside AO2D for $1 is \" $exitcode\n\techo \"This indicates that the merging of DFs for $1 failed, causing the entire processing to FAIL\"\n\treturn $exitcode\n      fi\n      # now checking the merged AODs\n      echo \"Verifying AO2Ds with merged DFs in $AOD_DIR\"\n      timeStartCheckMergedAOD=`date +%s`\n      time root -l -b -q '$O2DPG_ROOT/DATA/production/common/readAO2Ds.C(\"AO2D_merged.root\")' > checkAO2D_merged.log\n      exitcode=$?\n      timeEndCheckMergedAOD=`date +%s`\n      timeUsedCheckMergedAOD=$(( $timeEndCheckMergedAOD-$timeStartCheckMergedAOD ))\n      echo \"Time taken to validate unmerged AODs in directory $1 = $timeUsedCheckMergedAOD seconds\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "44dc3dcab94efea5e030af4a8bfd615116cfa7afec3f4d587904747ee40e44f6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Time taken to verify unmerged AODs in dir $1 = $timeUsedCheckMergedAOD s\"\n    if [[ $exitcode -ne 0 ]]; then\n        echo \"exit code from AO2D in $1 with merged DFs check is \" $exitcode > validation_error.message\n        echo \"exit code from AO2D in $1 with merged DFs check is \" $exitcode\n        echo \"This indicates that the verification of merged AODs in $1 has failed, causing the entire processing to fail\"\n    else\n        echo \"All is well, replacing the initial AO2D.root file in $1 with the one containing merged DFs\"\n        mv AO2D_merged.root AO2D.root\n    fi\n    cd ..\nfi\nreturn $exitcode\n}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "9293727c5b4ce8735d7067840138a03eca59d57808ca0ff2585108a39901991f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    timeStartFullProcessing=`date +%s`\n\n# to skip positional arg parsing before the randomizing part.\nexport inputarg=\"${1}\"\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n  #echo ${1##*.}\n  #echo \"alien://${1}\" > list.list\n  #export MODE=\"remote\"\n  echo \"${1}\" > list.list\n  if [[ ! -z $ASYNC_BENCHMARK_ITERATIONS ]]; then\n    for i in `seq 1 $ASYNC_BENCHMARK_ITERATIONS`; do echo \"${1}\" >> list.list; done\n  fi\n  export MODE=\"LOCAL\"\n  shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n  if [[ $ALIEN_JDL_DOWNLOADINPUTFILES == \"1\" ]]; then\n    echo \"Input files will be downloaded by the job agent\"\n    sed -rn 's/.*file\\ name=\"(o2_ctf[^\"]*)\".*/\\1/p' $1 > list.list\n  else\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n  fi\n  export MODE=\"remote\"\n  shift\nelif [[ $1 != \"list.list\" && \"${1##*.}\" == \"list\" ]]; then\n  cp $1 list.list\n  export MODE=\"remote\"\n  shift\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "8a6a393d7af3b8fb2bc9da15841c6d9a9c9020aa9c820f850819895775d95957": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Sometimes it may be necessary to process only a portion of the input files\n#\n[ -z ${ALIEN_JDL_INPUTFILELIMIT} ] && ALIEN_JDL_INPUTFILELIMIT=$(cat list.list|wc -l)\nhead -${ALIEN_JDL_INPUTFILELIMIT} list.list > list.listtmp && mv list.listtmp list.list\necho \"Will process ${ALIEN_JDL_INPUTFILELIMIT} input files\"\n\nif [ -f list.list ]; then\n  echo \"The following list of files will be processed:\"\n  cat list.list\n  echo -e \"\\n\"\nfi\n\nPOSITIONAL=()\nwhile [ $# -gt 0 ]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "a90863e3320e9dbb289edeb653865e498710f084182d39c0faf08107291dae10": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# we overwrite these if found in the jdl\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# define the beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# set the period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\nfi\n\n# specify the pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n  export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"check the environment variables: RUNNUMBER (--> $RUNNUMBER), PERIOD (--> $PERIOD), PASS (--> $PASS), BEAMTYPE (--> $BEAMTYPE)\"\n    exit 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\nexport timeUsed=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "0c4eb9697b727e254fa4e9e4263365c9ec607b4f29b5cc751a06a3631bb87c14": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export timeUsed=0\n\n###if [[ $MODE == \"remote\" ]]; then\n    # handle specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n        echo \"No runInput_$RUNNUMBER.tgz, so we can skip this step\"\n    else\n      tar -xzvf runInput_$RUNNUMBER.tgz\n    fi\n###fi\n\n##############################\n# calibrations\nexport ADD_CALIB=0\n\nif [[ -n \"$ALIEN_JDL_DOEMCCALIB\" ]]; then\n  export ADD_CALIB=1\nfi\n\nif [[ -n \"$ALIEN_JDL_DOTPCRESIDUALEXTRACTION\" ]]; then\n  export DO_TPC_RESIDUAL_EXTRACTION=\"$ALIEN_JDL_DOTPCRESIDUALEXTRACTION\"\n  export ADD_CALIB=1\nfi\n\nif [[ -n \"$ALIEN_JDL_DOTRDVDRIFTEXBCALIB\" ]]; then\n  export ADD_CALIB=1\nfi\n\nif [[ -n \"$ALIEN_JDL_DOMEANVTXCALIB\" ]]; then\n  export ADD_CALIB=1\nfi\n\nif [[ \"$ALIEN_JDL_EXTRACTCURRENTS\" == \"1\" ]]; then\n  export ADD_CALIB=1\nfi\n\nif [[ \"$ALIEN_JDL_EXTRACTTIMESERIES\" == \"1\" ]]; then\n  export ADD_CALIB=1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "3cbddc1679cadec478cfee147a1984a6cb41c4ece5b003d3192c4ba2205eb751": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"$ALIEN_JDL_EXTRACTTIMESERIES\" == \"1\" ]]; then\n  export ADD_CALIB=1\nfi\n\n# Size of AOD file\nif [[ -n \"$ALIEN_JDL_AODFILESIZE\" ]]; then\n  export AOD_FILE_SIZE=\"$ALIEN_JDL_AODFILESIZE\"\nelse\n  export AOD_FILE_SIZE=8000\nfi\nif [[ $ADD_CALIB == 1 ]]; then\n  if [[ -z $CALIB_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Using calib-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/calib-workflow.sh .\n  else\n    echo \"Using calib-workflow.sh passed as input\"\n    cp $CALIB_WORKFLOW_FROM_OUTSIDE .\n  fi\n  if [[ -z $AGGREGATOR_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Using aggregator-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/aggregator-workflow.sh .\n  else\n    echo \"Using aggregator-workflow.sh passed as input\"\n    cp $AGGREGATOR_WORKFLOW_FROM_OUTSIDE .\n  fi\nfi\n##############################\n\necho \"Checking content of the current directory\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "81d722186eadb57bb1b0113750cfbe3a0b953600f1c5291c2d2a63ee2e707253": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Displaying the current directory's contents\"\nls -altr\n\nln -s $O2DPG_ROOT/DATA/common/gen_topo_helper_functions.sh\nsource gen_topo_helper_functions.sh || { echo \"gen_topo_helper_functions.sh failed\" && exit 5; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "8b9e541d062a9294833f46ccea62d2d9ae9c77717847bc56e79d3650d7e50836": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f \"setenv_extra.sh\" ]]; then\n  echo \"Time used so far, before setenv_extra = $timeUsed s\"\n  time source setenv_extra.sh $RUNNUMBER $BEAMTYPE || { echo \"setenv_extra.sh (local file) failed\" && exit 6; }\n  echo \"Time used so far, after setenv_extra = $timeUsed s\"\nelse\n  echo \"************************************************************************************\"\n  echo \"No custom setenv_extra settings for current async processing; utilizing the default one in O2DPG\"\n  echo \"************************************************************************************\"\n  if [[ -f $O2DPG_ROOT/DATA/production/configurations/asyncReco/setenv_extra.sh ]]; then\n    ln -s $O2DPG_ROOT/DATA/production/configurations/asyncReco/setenv_extra.sh\n    echo \"Time used so far, before setenv_extra = $timeUsed s\"\n    time source setenv_extra.sh $RUNNUMBER $BEAMTYPE || { echo \"setenv_extra.sh (O2DPG) failed\" && exit 7; }\n    echo \"Time used so far, after setenv_extra = $timeUsed s\"\n  else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "2f5866b777921d03817dadc88e9cac404a7d78feaf8a57cb287ebfb3592bbf42": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Time used so far, after setenv_extra = $timeUsed s\"\n  else\n    echo \"*********************************************************************************************************\"\n    echo \"Could not find setenv_extra in $O2DPG_ROOT/DATA/production/configurations/asyncReco/ within O2DPG\"\n    echo \"                Therefore, no special settings will be applied\"\n    echo \"*********************************************************************************************************\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "bf60cdf1d2aa8eb12d08e34e04855325d27d65f7eb4e341073b376bbba111a7f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n  echo \"Use run-workflow-on-inputlist.sh macro provided as input\"\nelse\n  echo \"Use run-workflow-on-inputlist.sh macro from O2\"\n  cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -f dpl-workflow.sh ]]; then\n  echo \"Use dpl-workflow.sh provided as input\"\nelif [[ -z $ALIEN_JDL_DPLWORKFLOWFROMOUTSIDE ]]; then\n  echo \"Use dpl-workflow.sh from O2\"\n  cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n  echo \"Use dpl-workflow.sh provided as input\"\n  cp $ALIEN_JDL_DPLWORKFLOWFROMOUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n  echo \"QC json from outside is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "d7734638a6f5314614c242943c71b3f79742f573d0857906c6e70b34ea425ef3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ln -sf $O2DPG_ROOT/DATA/common/setenv.sh\n    ln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\n    # TFDELAY and throttling\n    export TFDELAYSECONDS=40\n    if [[ -n \"$ALIEN_JDL_TFDELAYSECONDS\" ]]; then\n        TFDELAYSECONDS=\"$ALIEN_JDL_TFDELAYSECONDS\"\n    # ...otherwise, it depends on whether we have throttling\n    elif [[ -n \"$ALIEN_JDL_USETHROTTLING\" ]]; then\n        TFDELAYSECONDS=1\n        if [[ -n \"$ALIEN_JDL_NOTFDELAY\" ]]; then\n            TFDELAYSECONDS=0\n        fi\n        export TIMEFRAME_RATE_LIMIT=1\n    fi\n\n    if [[ ! -z \"$ALIEN_JDL_SHMSIZE\" ]]; then export SHMSIZE=$ALIEN_JDL_SHMSIZE; else if [[ -z \"$SHMSIZE\" ]]; then export SHMSIZE=$(( 16 << 30 )); fi; fi\n    if [[ ! -z \"$ALIEN_JDL_DDSHMSIZE\" ]]; then export DDSHMSIZE=$ALIEN_JDL_DDSHMSIZE; else if [[ -z \"$DDSHMSIZE\" ]]; then export DDSHMSIZE=$(( 32 << 10 )); fi; fi\n\n    # root output is enabled for only a certain percentage of cases\n    # retaining AO2D.root QC.root o2calib_tof.root mchtracks.root mchclusters.root",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "ee03ec58f4e16be8eca205c9bc948bd46ea9598ee108853a6ca4aa78e4011c05": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "SET_ROOT_OUTPUT=\"ENABLE_ROOT_OUTPUT_o2_mch_reco_workflow= ENABLE_ROOT_OUTPUT_o2_muon_tracks_matcher_workflow= ENABLE_ROOT_OUTPUT_o2_aod_producer_workflow= ENABLE_ROOT_OUTPUT_o2_qc= \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "9b1eb5fd7af8ea34f3179a268399a58f61f55ffddb1877025337a8320bb06bc8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if the environment variable $ALIEN_JDL_LPMCPASSMODE is set and not equal to -1, or if $ALIEN_JDL_KEEPTOFMATCHOUTPUT is 1, then:\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_tof_matcher_workflow= \"\n\nif $ALIEN_JDL_DOEMCCALIB is 1, then:\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_emcal_emc_offline_calib_workflow= \"\n\nif $DO_TPC_RESIDUAL_EXTRACTION is 1, then:\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_calibration_residual_aggregator= \"\n\nif $ALIEN_JDL_DOTRDVDRIFTEXBCALIB is 1, then:\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_trd_global_tracking= \"\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_calibration_trd_workflow= \"\n\nif $ALIEN_JDL_DOMEANVTXCALIB is 1, then:\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_primary_vertexing_workflow= \"\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_tfidinfo_writer_workflow= \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "38c135f6d3cf9c503b225e64b41ea57594d17bd9a43972de873a329070264b9c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# to add extra output to always keep\nif [[ -n \"$ALIEN_JDL_EXTRAENABLEROOTOUTPUT\" ]]; then\n  OLD_IFS=$IFS\n  IFS=','\n  for element in $ALIEN_JDL_EXTRAENABLEROOTOUTPUT; do\n    SETTING_ROOT_OUTPUT+=\" ENABLE_ROOT_OUTPUT_$element=\"\n  done\n  IFS=$OLD_IFS\nfi\n\n# to specify which extra output to always keep\nif [[ -n \"$ALIEN_JDL_ENABLEROOTOUTPUT\" ]]; then\n  OLD_IFS=$IFS\n  IFS=','\n  SETTING_ROOT_OUTPUT=\n  for element in $ALIEN_JDL_ENABLEROOTOUTPUT; do\n    SETTING_ROOT_OUTPUT+=\" ENABLE_ROOT_OUTPUT_$element=\"\n  done\n  IFS=$OLD_IFS\nfi\n\nkeep=0\n\nif [[ -n $ALIEN_JDL_INPUTTYPE ]] && [[ \"$ALIEN_JDL_INPUTTYPE\" == \"TFs\" ]]; then\n  export WORKFLOW_PARAMETERS=CTF\n  INPUT_TYPE=TF\n  if [[ $RUNNUMBER -lt 523141 ]]; then\n    export TPC_CONVERT_LINKZS_TO_RAW=1\n  fi\nelse\n  INPUT_TYPE=CTF\nfi\n\n# enabling time reporting\nif [[ -n $ALIEN_JDL_DPLREPORTPROCESSING ]]; then\n  export DPL_REPORT_PROCESSING=$ALIEN_JDL_DPLREPORTPROCESSING\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "682a80eaf8f553e25f22a23302a58d16f55ac635190a2fca7e402dfc45c24bc2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# determining file retention\nif [[ -n $ALIEN_JDL_PACKAGES ]]; then # if the environment variable ALIEN_JDL_PACKAGES is set, indicating grid operation\n  # JDL may specify the permille to retain; otherwise, we default to 2\n  if [[ -n \"$ALIEN_JDL_NKEEP\" ]]; then export NKEEP=$ALIEN_JDL_NKEEP; else NKEEP=2; fi\n\n  KEEPRATIO=0\n  (( $NKEEP > 0 )) && KEEPRATIO=$((1000/NKEEP))\n  echo \"Configured to retain ${NKEEP} permil of intermediate files\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "419aec503574567a3d4eb43f1f4be9ebd0717d8a1868879521bc72c379efe96e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f wn.xml ]]; then\n    grep alien:// wn.xml | tr ' ' '\\n' | grep ^lfn | cut -d\\\" -f2 > tmp.tmp\nelse\n    echo \"${inputarg}\" > tmp.tmp\nfi\nwhile read -r INPUT_FILE && (( $KEEPRATIO > 0 )); do\n    SUBJOBIDX=$(grep -B1 $INPUT_FILE CTFs.xml | head -n1 | cut -d\\\" -f2)\n    echo \"INPUT_FILE                              : $INPUT_FILE\"\n    echo \"Index of INPUT_FILE in collection       : $SUBJOBIDX\"\n    echo \"Number of subjobs for current masterjob : $ALIEN_JDL_SUBJOBCOUNT\"\n    # if there aren't enough subjobs, we'll force to keep the first one\n    if [[ \"$ALIEN_JDL_SUBJOBCOUNT\" -le \"$KEEPRATIO\" && \"$SUBJOBIDX\" -eq 1 ]]; then\n      echo -e \"**** NOT ENOUGH SUBJOBS TO SAMPLE, WE WILL FORCE TO KEEP THE OUTPUT ****\"\n      keep=1\n      break\n    else\n      if [[ \"$((SUBJOBIDX%KEEPRATIO))\" -eq \"0\" ]]; then\n        keep=1\n        break\n      fi\n    fi\ndone < tmp.tmp\nif [[ $keep -eq 1 ]]; then\n    echo \"Intermediate files WILL BE KEPT\";\nelse\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "186314cf416e7b976a0bc6c67ae9bac6324468134cbe776ca3bd5d7068b30d71": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "done < tmp.tmp\n  if [[ $keep -eq 1 ]]; then\n    echo \"Intermediate files WILL BE RETAINED\";\n  else\n    echo \"Intermediate files WILL BE RETAINED ONLY FOR SELECT WORKFLOWS\";\n  fi\nelse\n  # in LOCAL mode, by default all intermediate files are retained\n  echo -e \"\\n\\n**** RUNNING IN LOCAL MODE ****\"\n  if [[ \"$DO_NOT_KEEP_OUTPUT_IN_LOCAL\" -eq 1 ]]; then\n    echo -e \"**** DO_NOT_KEEP_OUTPUT_IN_LOCAL IS ENABLED, NOT SETTING keep=0, NOT ENFORCING FULL ROOT OUTPUT ****\\n\\n\"\n    keep=0;\n  else\n    echo -e \"**** ALL ROOT OUTPUT FILES WILL BE KEPT ****\";\n    echo -e \"**** TO REMOVE ROOT OUTPUT FOR PERFORMANCE STUDIES OR SIMILAR, SET THE ENV VAR DO_NOT_KEEP_OUTPUT_IN_LOCAL ****\\n\\n\"\n    keep=1\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "2c3e39a794a357bb1b6e4a290c0fc3a6f2fd54d1d1e443cae6ae3ddec6c33673": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $keep -eq 1 ]]; then\n  SETTING_ROOT_OUTPUT+=\"DISABLE_ROOT_OUTPUT=0\";\nfi\necho \"SETTING_ROOT_OUTPUT = $SETTING_ROOT_OUTPUT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "ffa84324e0747c8535387f557d3835f340e3e40d1476225c34ab04f82a73a86b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -n \"$ALIEN_JDL_USEGPUS\" && $ALIEN_JDL_USEGPUS != 0 ]] ; then\n  echo \"Enabling GPUs\"\n  [[ -z ${GPUTYPE:-} ]] && export GPUTYPE=\"HIP\"\n  [[ -z ${GPUMEMSIZE:-} ]] && export GPUMEMSIZE=$((25 << 30))\n  if \"0$ASYNC_PASS_NO_OPTIMIZED_DEFAULTS\" != \"01\" ; then\n    if \"ALIEN_JDL_USEFULLNUMADOMAIN\" == 0 ; then\n      if $keep -eq 0 ; then\n        if $ALIEN_JDL_UNOPTIMIZEDGPUSETTINGS != 1 ; then\n          export OPTIMIZED_PARALLEL_ASYNC=pp_1gpu  # sets the multiplicities to optimized defaults for this configuration (1 job with 1 gpu on EPNs)\n          export OPTIMIZED_PARALLEL_ASYNC_AUTO_SHM_LIMIT=1\n        else\n          # forcing multiplicities to be 1\n          export MULTIPLICITY_PROCESS_tof_matcher=1\n          export MULTIPLICITY_PROCESS_mch_cluster_finder=1\n          export MULTIPLICITY_PROCESS_tpc_entropy_decoder=1\n          export MULTIPLICITY_PROCESS_itstpc_track_matcher=1\n          export MULTIPLICITY_PROCESS_its_tracker=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "5cb350784cf4350545d09aa6a3dbb590aae2c627ca76bfe5e70bd2165bcb1fff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export MULTIPLICITY_PROCESS_its_tracker=1\n          export OMP_NUM_THREADS=4\n          export TIMEFRAME_RATE_LIMIT=8\n          export SHMSIZE=30000000000\n        fi\n      else\n        export TIMEFRAME_RATE_LIMIT=4\n        export SHMSIZE=30000000000\n      fi\n    else\n      if [[ $BEAMTYPE == \"pp\" ]]; then\n        export OPTIMIZED_PARALLEL_ASYNC=pp_4gpu # sets the multiplicities to optimized defaults for this configuration (1 Numa, pp)\n        export OPTIMIZED_PARALLEL_ASYNC_AUTO_SHM_LIMIT=1\n      else  # PbPb\n        export OPTIMIZED_PARALLEL_ASYNC=PbPb_4gpu # sets the multiplicities to optimized defaults for this configuration (1 Numa, PbPb)\n        export OPTIMIZED_PARALLEL_ASYNC_AUTO_SHM_LIMIT=1\n      fi\n    fi\n  fi\nelse\n  # David, Oct 13th\n  # the optimized settings for the 8 core GRID queue without GPU are\n  # (overwriting the values above)\n  #\n  if [[ \"0$ASYNC_PASS_NO_OPTIMIZED_DEFAULTS\" != \"01\" ]]; then\n    if [[ \"$ALIEN_JDL_EPNFULLNUMACPUONLY\" != 1 ]]; then\n\nPARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "2a265f0205243606169886834dcfcb20d650561e2eba1095560204711543f173": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"$ALIEN_JDL_EPNFULLNUMACPUONLY\" != 1 ]]; then\n  if [[ $BEAMTYPE == \"pp\" ]]; then\n    if (( $(echo \"$RUN_IR > 800000\" | bc -l) )); then\n      export TIMEFRAME_RATE_LIMIT=1\n    elif (( $(echo \"$RUN_IR < 50000\" | bc -l) )); then\n      export TIMEFRAME_RATE_LIMIT=6\n    else\n      export TIMEFRAME_RATE_LIMIT=3\n    fi\n    export OPTIMIZED_PARALLEL_ASYNC=pp_8cpu # sets the multiplicities to optimized defaults for this configuration (grid)\n    export SHMSIZE=16000000000\n  else # PbPb\n    export TIMEFRAME_RATE_LIMIT=2\n    export OPTIMIZED_PARALLEL_ASYNC=pp_8cpu\n    export SHMSIZE=16000000000\n    export SVERTEX_THREADS=5\n  fi\nelse\n  export OPTIMIZED_PARALLEL_ASYNC=pp_64cpu # to use EPNs with full NUMA domain but without GPUs\n  export OPTIMIZED_PARALLEL_ASYNC_AUTO_SHM_LIMIT=1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "4b77ccba4cd176215fc1df3c31a424305610c69d5b694016d450ee2c2c9e6bec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ECHO \"[INFO (async_pass.sh)] The environment variables were configured as follows: TFDELAYSECONDS ${TFDELAYSECONDS}, TIMEFRAME_RATE_LIMIT ${TIMEFRAME_RATE_LIMIT}, and OPTIMIZED_PARALLEL_ASYNC ${OPTIMIZED_PARALLEL_ASYNC:-NONE}\"\n\nIF $NTIMEFRAMES IS EMPTY, SET NTIMEFRAMES TO -1\n\n# Now let's define O2JOBID and SHMEMID\nO2JOBIDSCRIPT=\"$O2DPG_ROOT/DATA/production/common/setVarsFromALIEN_PROC_ID.sh\"\nIF \"setVarsFromALIEN_PROC_ID.sh\" EXISTS, THEN O2JOBIDSCRIPT=\"setVarsFromALIEN_PROC_ID.sh\"\nSOURCE $O2JOBIDSCRIPT\n\nSTATSCRIPT=\"$O2DPG_ROOT/DATA/production/common/getStat.sh\"\nIF \"getStat.sh\" EXISTS, THEN STATSCRIPT=\"getStat.sh\"\n\n# Exclude certain detectors from quality checks\nWORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT=${ALIEN_JDL_WORKFLOWDETECTORSEXCLUDEQC:-}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "f251da6313b2722e34b9dc596e6d2f35b2493f39f635585918f792480e3579b5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# reco and matching\n# print workflow\nif [[ $ALIEN_JDL_SSPLITWF != \"1\" ]]; then\n  env $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS_EXCLUDE_QC=$WORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list > workflowconfig.log\n  # execute it\n  if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n    timeStart=`date +%s`\n    time env $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS_EXCLUDE_QC=$WORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n    exitcode=$?\n    timeEnd=`date +%s`\n    timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n    delta=$(( $timeEnd-$timeStart ))\n    echo \"Time taken to run the workflow = $delta s\"\n    echo \"exitcode = $exitcode\"\n    if [[ $exitcode -ne 0 ]]; then\n      echo \"exit code from processing is \" $exitcode > validation_error.message\n      echo \"exit code from processing is \" $exitcode",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "7eea824fdd3c2ac07ca73d731d134ddcc56890935cf7d05a9c37e1aa853dec76": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"exit code from processing is \" $exitcode\n    exit $exitcode\n    fi\n    mv latest.log latest_reco_1.log\n    $STATSCRIPT latest_reco_1.log\n    exitcode=$?\n    echo \"exit code is $exitcode\"\n    if [[ $exitcode -ne 0 ]]; then\n      echo \"exit code from processing is \" $exitcode > validation_error.message\n      echo \"exit code from processing is \" $exitcode\n      exit $exitcode\n    fi\n  fi\nelse\n  # running the workflow in split mode\n  echo \"We will run the workflow in SPLIT mode!\"\n  echo \"ALIEN_JDL_STARTSPLITSTEP = $ALIEN_JDL_STARTSPLITSTEP\"\n  echo \"ALIEN_JDL_SSPLITSTEP = $ALIEN_JDL_SSPLITSTEP\"\n  WORKFLOW_PARAMETERS_START=$WORKFLOW_PARAMETERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "cb62396e6a57b54f5cffbdc980f7c6ae92e53a7b043ecb2429a2eaf9c931d745": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if ([[ -z \"$ALIEN_JDL_STARTSPLITSTEP\" ]] && [[ -z \"$ALIEN_JDL_SSPLITSTEP\" ]]) || [[ \"$ALIEN_JDL_SSPLITSTEP\" -eq 1 ]] || ( [[ -n $ALIEN_JDL_STARTSPLITSTEP ]] && [[ \"$ALIEN_JDL_STARTSPLITSTEP\" -le 1 ]]) || [[ \"$ALIEN_JDL_SSPLITSTEP\" == \"all\" ]]; then\n    # 1. TPC decoding + reconstruction\n    echo \"Step 1) Decoding and reconstructing TPC+CTP\"\n    echo \"Step 1) Decoding and reconstructing TPC+CTP\" > workflowconfig.log\n    for i in AOD QC CALIB CALIB_LOCAL_INTEGRATED_AGGREGATOR; do\n      export WORKFLOW_PARAMETERS=$(echo $WORKFLOW_PARAMETERS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\"'$'\"//\" -e \"s/^$i\"'$'\"//\")\n    done\n    env DISABLE_ROOT_OUTPUT=0 IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=TPC,CTP WORKFLOW_DETECTORS_MATCHING= ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list >> workflowconfig.log\n    # execute it\n    if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n      timeStart=`date +%s`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "e4d9a5e8b3a410b7611d1bed8ef46673bddcaa8d53dc1b6ae2a29a3ccc9b61ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the workflow\nif [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n  timeStart=`date +%s`\n  time env DISABLE_ROOT_OUTPUT=0 IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=TPC,CTP WORKFLOW_DETECTORS_MATCHING= ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n  exitcode=$?\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Time spent in executing the workflow, Step 1 = $delta s\"\n  echo \"exitcode = $exitcode\"\n  if [[ $exitcode -ne 0 ]]; then\n    echo \"exit code from Step 1 of processing is \" $exitcode > validation_error.message\n    echo \"exit code from Step 1 of processing is \" $exitcode\n    exit $exitcode\n  fi\n  mv latest.log latest_reco_1.log\n  if [[ -f performanceMetrics.json ]]; then\n    mv performanceMetrics.json performanceMetrics_1.json\n  fi\n  $STATSCRIPT latest_reco_1.log reco_1\n  exitcode=$?",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "2052026600088b4a17f7164706774fb5cf4732c31d33b095114ad8acbcaa6bae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "fi\n      $STATSCRIPT latest_reco_1.log reco_1\n      exitcode=$?\n      if [[ $exitcode -ne 0 ]]; then\n        echo \"exit code from processing is \" $exitcode > validation_error.message\n        echo \"exit code from processing is \" $exitcode\n        exit $exitcode\n      fi\n    fi\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "872dc9ba0f5bea692dac5b4f3cb368230f2464be2a01dafe8bb936330a1c2a59": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if ([[ -z \"$ALIEN_JDL_STARTSPLITSTEP\" ]] && [[ -z \"$ALIEN_JDL_SSPLITSTEP\" ]]) || [[ \"$ALIEN_JDL_SSPLITSTEP\" -eq 2 ]] || ( [[ -n $ALIEN_JDL_STARTSPLITSTEP ]] && [[ \"$ALIEN_JDL_STARTSPLITSTEP\" -le 2 ]]) || [[ \"$ALIEN_JDL_SSPLITSTEP\" == \"all\" ]]; then\n    # 2. the other detectors decoding + reco\n    WORKFLOW_PARAMETERS=$WORKFLOW_PARAMETERS_START\n    echo \"Step 2) Decoding and reconstructing ALL-TPC\"\n    echo -e \"\\nStep 2) Decoding and reconstructing ALL-TPC\" >> workflowconfig.log\n    for i in AOD QC CALIB CALIB_LOCAL_INTEGRATED_AGGREGATOR; do\n      export WORKFLOW_PARAMETERS=$(echo $WORKFLOW_PARAMETERS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\"'$'\"//\" -e \"s/^$i\"'$'\"//\")\n    done\n    env DISABLE_ROOT_OUTPUT=0 IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_EXCLUDE=TPC,$DETECTORS_EXCLUDE WORKFLOW_DETECTORS_MATCHING= ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list >> workflowconfig.log\n    # execute the command",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "5cf2bd898e46885f68f4c3fc3ec536cb69d918bfa968fc6e15e505691905d87b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the process\nif [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n  timeStart=`date +%s`\n  time env DISABLE_ROOT_OUTPUT=0 IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_EXCLUDE=TPC,$DETECTORS_EXCLUDE WORKFLOW_DETECTORS_MATCHING= ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n  exitcode=$?\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Duration of the workflow execution, Step 2 = $delta s\"\n  echo \"exitcode = $exitcode\"\n  if [[ $exitcode -ne 0 ]]; then\n    echo \"exit code from Step 2 of processing is \" $exitcode > validation_error.message\n    echo \"exit code from Step 2 of processing is \" $exitcode\n    exit $exitcode\n  fi\n  mv latest.log latest_reco_2.log\n  if [[ -f performanceMetrics.json ]]; then\n    mv performanceMetrics.json performanceMetrics_2.json\n  fi\n  $STATSCRIPT latest_reco_2.log reco_2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "4f3621b15de47e1b9598ee8c5637762a1c660724b6a8cea7fbcd05b27c33d660": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  $STATSCRIPT latest_reco_2.log reco_2\n  exitcode=$?\n  if [[ $exitcode -ne 0 ]]; then\n    echo \"exit code from processing is \" $exitcode > validation_error.message\n    echo \"exit code from processing is \" $exitcode\n    exit $exitcode\n  fi\n  # now, let's compare with the previous step\n  if [[ -f latest_reco_1.log ]]; then\n    nCTFsFilesInspected_step1=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/\\(^[0-9]*\\)_.*/\\1/'`\n    nCTFsFilesOK_step1=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/^[0-9]*_\\([0-9]*\\)_.*/\\1/'`\n    nCTFsFilesFailed_step1=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/^[0-9]*_[0-9]*_\\([0-9]*\\)_.*/\\1/'`\n    nCTFsProcessed_step1=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/^[0-9]*_[0-9]*_[0-9]*_\\([0-9]*\\).*/\\1/'`\n    nCTFsFilesInspected_step2=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_2.stat | sed 's/\\(^[0-9]*\\)_.*/\\1/'`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "f3a0fe4073c51be03e856b8f28aa1f7771fb533be6d86c00fad89e4ec12415b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    nCTFsFilesOK_step2=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/^[0-9]*_\\([0-9]*\\)_.*/\\1/'`\n    nCTFsFilesFailed_step2=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_2.stat | sed 's/^[0-9]*_[0-9]*_\\([0-9]*\\)_.*/\\1/'`\n    nCTFsProcessed_step2=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_2.stat | sed 's/^[0-9]*_[0-9]*_[0-9]*_\\([0-9]*\\).*/\\1/'`\n    if [[ $nCTFsFilesInspected_step1 != $nCTFsFilesInspected_step2 ]] || [[ $nCTFsFilesFailed_step1 != $nCTFsFilesFailed_step2 ]] || [[ $nCTFsFilesOK_step1 != $nCTFsFilesOK_step2 ]] || [[ $nCTFsProcessed_step1 != $nCTFsProcessed_step2 ]]; then\n      echo \"Discrepancy in the number of CTF files or single CTFs between step 1 and step 2:\"\n      echo \"nCTFsFilesInspected_step1 = $nCTFsFilesInspected_step1, nCTFsFilesInspected_step2 = $nCTFsFilesInspected_step2\"\n      echo \"nCTFsFilesOK_step1 = $nCTFsFilesOK_step1, nCTFsFilesOK_step2 = $nCTFsFilesOK_step2\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "a75bdfe88b54542d473156a75a2ad938fd59348d605a8480b9223e7b5709161b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"nCTFsFilesOK_step1 = $nCTFsFilesOK_step1, nCTFsFilesOK_step2 = $nCTFsFilesOK_step2\"\n    echo \"nCTFsFilesFailed_step1 = $nCTFsFilesFailed_step1, nCTFsFilesFailed_step2 = $nCTFsFilesFailed_step2\"\n    echo \"nCTFsProcessed_step1 = $nCTFsProcessed_step1, nCTFsProcessed_step2 = $nCTFsProcessed_step2\"\n    echo \"Inconsistency between step 1 and step 2 in terms of number of CTFs (files or single CTFs) found:\" > validation_error.message\n    echo \"nCTFsFilesInspected_step1 = $nCTFsFilesInspected_step1, nCTFsFilesInspected_step2 = $nCTFsFilesInspected_step2\" > validation_error.message\n    echo \"nCTFsFilesOK_step1 = $nCTFsFilesOK_step1, nCTFsFilesOK_step2 = $nCTFsFilesOK_step2\" > validation_error.message\n    echo \"nCTFsProcessed_step1 = $nCTFsProcessed_step1, nCTFsProcessed_step2 = $nCTFsProcessed_step2\" > validation_error.message\n    exit 255\n  fi\nfi\nfi\nfi\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "2ed3a01cda167dd93bc05d8151d3f44eddd72bb8ad1a484e55b2aaa0fe19f531": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if ([[ -z \"$ALIEN_JDL_STARTSPLITSTEP\" ]] && [[ -z \"$ALIEN_JDL_SSPLITSTEP\" ]]) || [[ \"$ALIEN_JDL_SSPLITSTEP\" -eq 3 ]] || ( [[ -n $ALIEN_JDL_STARTSPLITSTEP ]] && [[ \"$ALIEN_JDL_STARTSPLITSTEP\" -le 3 ]]) || [[ \"$ALIEN_JDL_SSPLITSTEP\" == \"all\" ]]; then\n    # 3. matching, calibration, AOD, potentially QC\n    WORKFLOW_PARAMETERS=$WORKFLOW_PARAMETERS_START\n    if [[ \"$ALIEN_JDL_KEEPQCSEPARATE\" == \"1\" ]]; then\n      echo \"QC will be run as the final step, thus it will be excluded from step 3\"\n      for i in QC; do\n\texport WORKFLOW_PARAMETERS=$(echo $WORKFLOW_PARAMETERS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\"'$'\"//\" -e \"s/^$i\"'$'\"//\")\n      done\n    fi\n    echo \"WORKFLOW_PARAMETERS=$WORKFLOW_PARAMETERS\"\n    echo \"Step 3) matching, calibration, AOD, potentially QC\"\n    echo -e \"\\nStep 3) matching, calibration, AOD, potentially QC\" >> workflowconfig.log\n    export ALIEN_JDL_PROCESSITSDEADMAP=  # disable ITS dead map calibration, if requested, it was already performed in step 2",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "508b9abfddf8048622e7a5926c6bb0278167e5631dc2e733c34093dec139484b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export ALIEN_JDL_PROCESSMFTDEADMAP=  # disable MFT dead map calibration, if it was requested, it was already performed in step 2\n    # The rate limiting for the time frame follows the same settings as in a full workflow, unless specified otherwise in the JDL\n    export TIMEFRAME_RATE_LIMIT=${ALIEN_JDL_TIMEFRAMERATELIMITSSPLITWF:-${TIMEFRAME_RATE_LIMIT}}\n    echo \"Excluding detectors $DETECTORS_EXCLUDE\"\n    if [[ $ALIEN_JDL_USEREADERDELAY == 1 ]]; then\n      # Introducing a delay means disabling rate limiting\n      TIMEFRAME_RATE_LIMIT=0\n      READER_DELAY=${ALIEN_JDL_READERDELAY:-30}\n      export ARGS_EXTRA_PROCESS_o2_global_track_cluster_reader+=\" --reader-delay $READER_DELAY \"\n    fi\n    echo \"Additional arguments are $ARGS_EXTRA_PROCESS_o2_global_track_cluster_reader\"\n    WORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT+=\",CPV\"\n    READ_TRACKS=\"ALLSINGLE\"\n    READ_CLUSTERS=\"ALLSINGLE\"\n    if [[ \"$ALIEN_JDL_KEEPQCSEPARATE\" == \"1\" ]]; then\n      STEP_3_ROOT_OUTPUT=\"DISABLE_ROOT_OUTPUT=0\"\n    else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "a97e043285c54215ecb0c2a26a588b82840daf4fad028f68190b940f26f03dab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    STEP_3_ROOT_OUTPUT=\"DISABLE_ROOT_OUTPUT=0\"\n    else\n      STEP_3_ROOT_OUTPUT=$SETTING_ROOT_OUTPUT\n    fi\n    env $STEP_3_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_EXCLUDE=$DETECTORS_EXCLUDE WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$READ_TRACKS WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$READ_CLUSTERS WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS=HMP WORKFLOW_DETECTORS_EXCLUDE_QC=$WORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT,$DETECTORS_EXCLUDE ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list >> workflowconfig.log\n    # execute the command\n    if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n      timeStart=`date +%s`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "c63345d2c31903e63c61716418b2ff8cf35d82931f184c59997680f2bbbed04f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the process\nif [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n  timeStart=`date +%s`\n  time env $STEP_3_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_EXCLUDE=$DETECTORS_EXCLUDE WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$READ_TRACKS WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$READ_CLUSTERS WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS=HMP WORKFLOW_DETECTORS_EXCLUDE_QC=$WORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT,$DETECTORS_EXCLUDE ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n  exitcode=$?\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Duration of workflow execution, Step 3 = $delta seconds\"\n  echo \"exitcode = $exitcode\"\n  if [[ $exitcode -ne 0 ]]; then\n    echo \"exit code from Step 3 of processing is \" $exitcode > validation_error.message\n    echo \"exit code from Step 3 of processing is \" $exitcode",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "6402a13d36dddbb9719914c36971abd1a123222ff9c39b475cad734746f31d75": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"exit code from Step 3 of processing is \" $exitcode\nexit $exitcode\nfi\nmv latest.log latest_reco_3.log\nif [[ -f performanceMetrics.json ]]; then\n  mv performanceMetrics.json performanceMetrics_3.json\nfi\nfi\nif [[ \"$ALIEN_JDL_KEEPQCSEPARATE\" == \"1\" ]]; then\n  if ([[ -z \"$ALIEN_JDL_STARTSPLITSTEP\" ]] && [[ -z \"$ALIEN_JDL_SSPLITSTEP\" ]] || [[ \"$ALIEN_JDL_SSPLITSTEP\" -eq 4 ]] || ( [[ -n $ALIEN_JDL_STARTSPLITSTEP ]] && [[ \"$ALIEN_JDL_STARTSPLITSTEP\" -le 4 ]] ) || [[ \"$ALIEN_JDL_SSPLITSTEP\" == \"all\" ]]); then\n    # 4. QC\n    WORKFLOW_PARAMETERS=\"QC\"\n    echo \"WORKFLOW_PARAMETERS=$WORKFLOW_PARAMETERS\"\n    echo \"Step 4) QC\"\n    echo -e \"\\nStep 4) QC\" >> workflowconfig.log\n    echo \"Excluding detectors $DETECTORS_EXCLUDE\"\n    echo \"The rate limiting will remain the same as in step 3: TIMEFRAME_RATE_LIMIT = ${TIMEFRAME_RATE_LIMIT}\"\n    READ_TRACKS=\"ALL\"\n    READ_CLUSTERS=\"ALL\"\n    export GLOBAL_READER_NEEDS_PV=\"1\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "09aa9c8a714c54b86167d02dc4133992003ecb5c2c2c66e7dfae8d9bc6a6edae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    READ_TRACKS=\"ALL\"\n    READ_CLUSTERS=\"ALL\"\n    export GLOBAL_READER_NEEDS_PV=\"1\"\n    export GLOBAL_READER_NEEDS_SV=\"0\"\n    export SVERTEXING_SOURCES=\"none\"\n    WORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT+=\",CPV\"\n    echo \"QC_JSON_FROM_OUTSIDE = $QC_JSON_FROM_OUTSIDE\"\n    env $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_EXCLUDE=$DETECTORS_EXCLUDE WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$READ_TRACKS WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$READ_CLUSTERS WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS= WORKFLOW_DETECTORS_EXCLUDE_QC=$WORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT,$DETECTORS_EXCLUDE ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list >> workflowconfig.log\n    # run the workflow\n    if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n        timeStart=`date +%s`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "a448c79846b9f5700332ce0682cfeaae14118f926a39177f3c3e970820129f39": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute the workflow\n  if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n    timeStart=`date +%s`\n    time env $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_EXCLUDE=$DETECTORS_EXCLUDE WORKFLOW_DETECTORS_USE_GLOBAL_READER_TRACKS=$READ_TRACKS WORKFLOW_DETECTORS_USE_GLOBAL_READER_CLUSTERS=$READ_CLUSTERS WORKFLOW_DETECTORS_EXCLUDE_GLOBAL_READER_TRACKS= WORKFLOW_DETECTORS_EXCLUDE_QC=$WORKFLOW_DETECTORS_EXCLUDE_QC_SCRIPT,$DETECTORS_EXCLUDE ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n    exitcode=$?\n    timeEnd=`date +%s`\n    timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n    delta=$(( $timeEnd-$timeStart ))\n    echo \"Time spent in executing the workflow, Step 4 = $delta s\"\n    echo \"exitcode = $exitcode\"\n    if [[ $exitcode -ne 0 ]]; then\n      echo \"exit code from Step 4 of processing is \" $exitcode > validation_error.message",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "12cb0403bdf9282b133bc75e18176571688f406663372b0c503e8e1e2630f842": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"exit code from Step 4 of processing is \" $exitcode > validation_error.message\n    echo \"exit code from Step 4 of processing is \" $exitcode\n    exit $exitcode\n  fi\n  mv latest.log latest_reco_4.log\n  if [[ -f performanceMetrics.json ]]; then\n    mv performanceMetrics.json performanceMetrics_4.json\n  fi\nfi\nfi\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "d67eed6d87a5030f2e2b67bac83e7d94053e2e12894b7ada1b23e4dfc4d7be5c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now extract all performance metrics\nif [[ $ALIEN_JDL_EXTRACTMETRICS == \"1\" ]]; then\n  IFS=$'\\n'\n  timeStart=`date +%s`\n  for perfMetricsFiles in performanceMetrics.json performanceMetrics_1.json performanceMetrics_2.json performanceMetrics_3.json performanceMetrics_4.json ; do\n    suffix=`echo $perfMetricsFiles | sed 's/performanceMetrics\\(.*\\).json/\\1/'`\n    if [[ -f \"performanceMetrics.json\" ]]; then\n      for workflow in `grep ': {' $perfMetricsFiles`; do\n        strippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n        cat $perfMetricsFiles | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics${suffix}.json\n      done\n    fi\n  done\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Time spent in splitting the metrics files = $delta s\"\nfi\n\nif [[ $ALIEN_JDL_AODOFF != 1 ]]; then\n  # flag to possibly enable Analysis QC\n  [[ -z ${ALIEN_JDL_RUNANALYSISQC+x} ]] && ALIEN_JDL_RUNANALYSISQC=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "f696889dd97a7851f8dd234fe573ee3d74b32fce0831022e9c6c971d85f0b5af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# merging the latest AOD file if it is below a certain size; the threshold is set at 80% of the expected file size\nAOD_LIST_COUNT=`find . -name AO2D.root | wc -w`\nAOD_LIST=`find . -name AO2D.root`\nif [[ -n $ALIEN_JDL_MINALLOWEDAODPERCENTSIZE ]]; then\n  MIN_ALLOWED_AOD_PERCENT_SIZE=$ALIEN_JDL_MINALLOWEDAODPERCENTSIZE\nelse\n  MIN_ALLOWED_AOD_PERCENT_SIZE=20\nfi\nif [[ $AOD_LIST_COUNT -ge 2 ]]; then\n  AOD_LAST=`find . -name AO2D.root | sort | tail -1`\n  CURRENT_SIZE=`wc -c $AOD_LAST | awk '{print $1}'`\n  echo \"current size of the latest AOD file = $CURRENT_SIZE\"\n  PERCENT=`echo \"scale=2; $CURRENT_SIZE/($AOD_FILE_SIZE*10^6)*100\" | bc -l`\n  echo \"percentage relative to AOD_FILE_SIZE (= $AOD_FILE_SIZE) = $PERCENT\"\n  if (( $(echo \"$PERCENT < $MIN_ALLOWED_AOD_PERCENT_SIZE\" | bc -l) )); then\n    AOD_LAST_BUT_ONE=`find . -name AO2D.root | sort | tail -2 | head -1`\n    echo \"The latest AOD file is too small, merging it with the previous file $AOD_LAST_BUT_ONE\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "cbcd3db8dc0e9dd862a8754907e22defaea66cef3b0ba28415684e33edb818f2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"The most recent AOD file is too small, merging it with the previous one $AOD_LAST_BUT_ONE\"\n      ls $PWD/$AOD_LAST > listAOD.list\n      ls $PWD/$AOD_LAST_BUT_ONE >> listAOD.list\n      echo \"List of files for the merge operation:\"\n      cat listAOD.list\n      mkdir tmpAOD\n      cd tmpAOD\n      ln -s ../listAOD.list .\n      timeStart=`date +%s`\n      time o2-aod-merger --input listAOD.list > merging_lastAOD.log\n      exitcode=$?\n      timeEnd=`date +%s`\n      timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n      delta=$(( $timeEnd-$timeStart ))\n      echo \"Time spent on merging the last AOD files to achieve a satisfactory size = $delta seconds\"\n      echo \"exitcode = $exitcode\"\n      if [[ $exitcode -ne 0 ]]; then\n        echo \"exit code from aod-merger for the latest file is \" $exitcode > validation_error.message\n        echo \"exit code from aod-merger for the latest file is \" $exitcode\n        exit $exitcode\n     fi\n      MERGED_SIZE=`wc -c AO2D.root | awk '{print $1}'`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "95be710bfd5c2f5b8ab3e03519d620e47f59e4d53ddb5146031dc49825d95ebf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "exit $exitcode\nfi\nMERGED_SIZE=`wc -c AO2D.root | awk '{print $1}'`\necho \"Size of merged file: $MERGED_SIZE\"\ncd ..\nAOD_DIR_TO_BE_REMOVED=\"$(echo $AOD_LAST | sed -e 's/AO2D.root//')\"\nAOD_DIR_TO_BE_UPDATED=\"$(echo $AOD_LAST_BUT_ONE | sed -e 's/AO2D.root//')\"\necho \"We will delete $AOD_DIR_TO_BE_REMOVED and update $AOD_DIR_TO_BE_UPDATED\"\nrm -rf $AOD_DIR_TO_BE_REMOVED\nmv tmpAOD/AO2D.root $AOD_DIR_TO_BE_UPDATED/.\nrm -rf tmpAOD\nfi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "615d2c3c0b454551c63438d1b2afcce86eae0f98fa72e71fa850c4db422fd6bf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# currently verifying all AO2D files and executing the analysis quality control\n# re-acquiring the list of AOD files, in case it has changed following the merging above\nAOD_LIST_COUNT=`find . -name AO2D.root | wc -w`\nAOD_LIST=`find . -name AO2D.root`\nMAX_POOL_SIZE=${ALIEN_JDL_CPUCORES-8}\nif [[ -n $ALIEN_JDL_MAXPOOLSIZEAODMERGING ]]; then\n  MAX_POOL_SIZE=$ALIEN_JDL_MAXPOOLSIZEAODMERGING\nfi\necho \"The maximum number of parallel AOD mergers will be $MAX_POOL_SIZE\"\nJOB_LIST=job-list.txt\nif [[ -f $JOB_LIST ]]; then\n  rm $JOB_LIST\nfi\ntimeStart=`date +%s`\ntimeUsedCheck=0\ntimeUsedMerge=0\ntimeUsedCheckMergedAOD=0\ntimeUsedAnalysisQC=0\n# preparing the list of AODs to be merged internally\nfor (( i = 1; i <=$AOD_LIST_COUNT; i++)); do\n  AOD_FILE=`echo $AOD_LIST | cut -d' ' -f$i`\n  AOD_DIR=`dirname $AOD_FILE | sed -e 's|./||'`\n  echo \"$AOD_DIR\" >> $JOB_LIST\ndone\n# initiating the parallel merging process\ntimeStartMerge=`date +%s`\narr=()\naods=()\nmergedok=()\ni=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "40528e3c543bb65e37b19ef1bdfaa75d1c96612a5f34f313c619bd25b18c4f6b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    timeStartMerge=`date +%s`\n  arr=()\n  aods=()\n  mergedok=()\n  i=0\n  while IFS= read -r line; do\n    while [[ $CURRENT_POOL_SIZE -ge $MAX_POOL_SIZE ]]; do\n      CURRENT_POOL_SIZE=`jobs -r | wc -l`\n      sleep 1\n    done\n    run_AOD_merging $line &\n    arr[$i]=$!\n    aods[$i]=$line\n    i=$((i+1))\n    CURRENT_POOL_SIZE=`jobs -r | wc -l`\n  done < $JOB_LIST\n  # gathering the exit codes from the merging processes\n  for i in \"${!arr[@]}\"; do\n    wait ${arr[$i]}\n    exitcode=$?\n    if [[ $exitcode -ne 0 ]]; then\n      echo \"The exit code from the process check+merging+check_mergedAODs for ${aods[$i]} is \" $exitcode > validation_error.message\n      echo \"The exit code from the process check+merging+check_mergedAODs for ${aods[$i]} is \" $exitcode\n      echo \"This indicates that the process check+merging+check_mergedAODs for ${aods[$i]} has failed, leading to the entire processing to fail\"\n      exit $exitcode\n      mergedok[$((10#${aods[$i]}))]=0\n    else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "681e1b348a56692c882a14138ec4d9e2fd3427f939e47b84145c23cd02323496": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "exit $exitcode\nmergedok[$((10#${aods[$i]}))]=0\nelse\n  echo \"The merging of DFs within the AO2D for ${aods[$i]} was successful\"\n  mergedok[$((10#${aods[$i]}))]=1\nfi\ndone\ntimeEndMerge=`date +%s`\ntimeUsedMerge=$(( $timeUsedMerge+$timeEndMerge-$timeStartMerge ))\necho \"--> Total time used for checking and merging AODs = $timeUsedMerge s\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "b6747ed24fe39438c1e127b33d4b9f9f1453d09b90e1b68610f634e2beb02411": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# initiating analysis quality control if specified\nif [[ $ALIEN_JDL_RUNANALYSISQC == 1 ]]; then\n  for (( i = 1; i <=$AOD_LIST_COUNT; i++)); do\n    AOD_FILE=`echo $AOD_LIST | cut -d' ' -f$i`\n    AOD_DIR=`dirname $AOD_FILE | sed -e 's|./||'`\n    cd $AOD_DIR\n    timeStartAnalysisQC=`date +%s`\n    # constructing the analysis workflow\n    time ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py -f AO2D.root\n    # executing it\n    time ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -k -f workflow_analysis_test.json > analysisQC.log\n    exitcode=$?\n    timeEndAnalysisQC=`date +%s`\n    timeUsedAnalysisQC=$(( $timeUsedAnalysisQC+$timeEndAnalysisQC-$timeStartAnalysisQC ))\n    echo \"exitcode = $exitcode\"\n    if [[ $exitcode -ne 0 ]]; then\n      echo \"exit code from Analysis QC is \" $exitcode > validation_error.message\n      echo \"exit code from Analysis QC is \" $exitcode\n      exit $exitcode\n    fi\n    if [[ -f \"Analysis/MergedAnalyses/AnalysisResults.root\" ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "a4d46f5583757fa010c6ea22793cd43ea1090c2696f47455a88ad0d2b3b6c382": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n      if [[ -f \"Analysis/MergedAnalyses/AnalysisResults.root\" ]]; then\n        mv \"Analysis/MergedAnalyses/AnalysisResults.root\" .\n      else\n        echo \"No file 'Analysis/MergedAnalyses/AnalysisResults.root' found! Please check analysis quality control.\"\n      fi\n      if ls Analysis/*/*.log 1> /dev/null 2>&1; then\n        mv Analysis/*/*.log .\n      fi\n      cd ..\n    done\n    echo \"Time spent in AnalysisQC = $timeUsedAnalysisQC s\"\n  else\n    echo \"Analysis quality control will not be run, as ALIEN_JDL_RUNANALYSISQC = $ALIEN_JDL_RUNANALYSISQC\"\n    echo \"No timing reported for Analysis quality control, since it was not run\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "cd550929bfa56759f9516c4579f74d3e454da0c2c73eb55888a330a174351b65": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    timeEndFullProcessing=`date +%s`\ntimeUsedFullProcessing=$(( $timeEndFullProcessing-$timeStartFullProcessing ))\n\necho \"Total processing time = $timeUsedFullProcessing s\"\n\nif [[ $ALIEN_JDL_QCOFF != 1 ]]; then\n  # copying the QC json file here\n  if [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\n  else\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n      echo \"copying the latest file from ${GEN_TOPO_WORKDIR}/json_cache\"\n      QC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n      echo \"No QC files found, possibly QC was not executed\"\n    fi\n  fi\n  if [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncReco/async_pass.sh"
        }
    ],
    "e32c964139375e60515300bc4479183b81c855ab302d17718d4a710d91c7a839": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Exit immediately if any command in a pipeline fails\nset -o pipefail\n\nif [[ -z \"$NHBPERTF\" ]]; then  # attempt to derive from JDL variables\n  NHBPERTF=32\n  if [[ ! -z \"$ALIEN_JDL_NHBPERTF\" ]] && [[ \"$ALIEN_JDL_NHBPERTF\" != 0 ]]; then\n    NHBPERTF=$ALIEN_JDL_NHBPERTF\n    echo \"Set NHBF per TF to $NHBPERTF based on ALIEN_JDL_NHBPERTF\"\n  elif [[ ! -z \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    [[ \"$ALIEN_JDL_LPMRUNNUMBER\" -lt 534125 ]] && NHBPERTF=128 || NHBPERTF=32\n    echo \"Set NHBF per TF to $NHBPERTF based on ALIEN_JDL_LPMRUNNUMBER=$ALIEN_JDL_LPMRUNNUMBER\"\n  else\n    echo \"Set NHBF per TF to $NHBPERTF as default\"\n  fi\nelse\n  echo \"Set NHBF per TF to $NHBPERTF as explicitly requested\"\nfi\nexport NHBPERTF",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "8ceda48a695bd85bbe400f4e296ca85dc0af71b68870a9b2b47f28763afd3214": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ---------------------------------------------------------------------------------------------------------------------\n# Determine the script's directory and load common settings (use zsh if available, e.g., on Mac; otherwise, use `readlink -f` as a fallback)\n: ${GEN_TOPO_MYDIR:=\"$O2DPG_ROOT/DATA/production\"}\nsource $GEN_TOPO_MYDIR/gen_topo_helper_functions.sh || { echo \"gen_topo_helper_functions.sh failed\" 1>&2 && exit 1; }\nsource $GEN_TOPO_MYDIR/setenv.sh || { echo \"setenv.sh failed\" 1>&2 && exit 1; }\n\n: ${CTF_MINSIZE:=\"2000000000\"}                    # accumulate CTFs until the file size reaches this limit\n: ${CTF_MAX_PER_FILE:=\"1000000\"}                  # but do not exceed this number of CTFs per file\n\nTIMEFRAME_RATE_LIMIT=2\n: ${NUMAID:=\"0\"}",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "519751c4f6e08e80eb6c8d480b724ff724090c0fc3e5fd42c366f45c2a6312cf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "TIMEFRAME_RATE_LIMIT=2\n: ${NUMAID:=\"0\"}\n\nif [[ ${ALIEN_JDL_CPUCORES:-} == 8 ]] || [[ ${ALIEN_JDL_CPUCORES:-} == 16 ]]; then # 16 is used for jobs on EPNs\n  export MULTIPLICITY_PROCESS_tpc_entropy_decoder=3\n  export MULTIPLICITY_PROCESS_tpc_entropy_encoder=3\n  SHMSIZE=16000000000\n  TIMEFRAME_RATE_LIMIT=3\nfi\n\nif [[ ! -z \"$ALIEN_JDL_SHMSIZE\" ]]; then export SHMSIZE=$ALIEN_JDL_SHMSIZE; fi\nif [[ ! -z \"$ALIEN_JDL_MULTIPLICITYPROCESSTPCENTROPYDECODER\" ]]; then export MULTIPLICITY_PROCESS_tpc_entropy_decoder=$ALIEN_JDL_MULTIPLICITYPROCESSTPCENTROPYDECODER; fi\nif [[ ! -z \"$ALIEN_JDL_MULTIPLICITYPROCESSTPCENTROPYENCODER\" ]]; then export MULTIPLICITY_PROCESS_tpc_entropy_encoder=$ALIEN_JDL_MULTIPLICITYPROCESSTPCENTROPYENCODER; fi\n\n\n# Set general arguments\nsource $GEN_TOPO_MYDIR/getCommonArgs.sh || { echo \"getCommonArgs.sh failed\" 1>&2 && exit 1; }\n\n[[ -z ${SHM_MANAGER_SHMID:-} ]] && ( [[ ${EXTINPUT:-} == 1 ]] || [[ ${NUMAGPUIDS:-} != 0 ]] ) && ARGS_ALL+=\" --no-cleanup\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "24891b069796afe40611883e377f095f2833660fb320701253af02ab3ca05069": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# let's configure O2JOBID and SHMEMID\nO2JOBIDscript=\"$O2DPG_ROOT/DATA/production/common/setVarsFromALIEN_PROC_ID.sh\"\nif [[ -f \"setVarsFromALIEN_PROC_ID.sh\" ]]; then\n  O2JOBIDscript=\"setVarsFromALIEN_PROC_ID.sh\"\nfi\nsource $O2JOBIDscript\n\nif [[ ! -z ${TIMEFRAME_RATE_LIMIT:-} && ${TIMEFRAME_RATE_LIMIT:-} != 0 ]]; then\n  ARGS_ALL+=\" --timeframes-rate-limit $TIMEFRAME_RATE_LIMIT --timeframes-rate-limit-ipcid ${O2JOBID:-$NUMAID}\"\nfi\n\nif [[ ! -z ${TIMEFRAME_SHM_LIMIT:-} ]]; then\n  ARGS_ALL+=\" --timeframes-shm-limit $TIMEFRAME_SHM_LIMIT\"\nfi\n\n{ source $O2DPG_ROOT/DATA/production/workflow-multiplicities.sh; [[ $? != 0 ]] && echo \"workflow-multiplicities.sh failed\" 1>&2 && exit 1; }\n\n# entropy encoding/decoding mode, '' is equivalent to '--ans-version compat' (compatible with data before 09/2023),\n# use '--ans-version 1.0 --ctf-dict none' for the new per-TF dictionary mode\n: ${RANS_OPT:=\"--ans-version 1.0 --ctf-dict none\"}\n\nWORKFLOW= # Ensure the workflow is initialized as an empty string",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "a0ae75a61c85e5d2b990973e4db18ce9b7b35f8184453c7206e62dadde76ed7b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    WORKFLOW= # Ensure the workflow starts with no existing data\n\nPOSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -f|--irframes-selection)\n      IRFRAMES=\"$2\"\n      shift\n      shift\n      ;;\n    -c|--ctfs-list)\n      CTFLIST=$2\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\nif [[ -z ${IRFRAMES:-} ]] || [[ -z ${CTFLIST:-} ]] ; then\n  echo \"Usage: ${0##*/} -f <IRFramesFile> -c <CTFsList>\"\n  exit 1  \nfi\n\n[[ \"0${ALLOW_MISSING_DET:-}\" == \"00\" ]] && ALLOW_MISSING_DET= || ALLOW_MISSING_DET=\"--allow-missing-detectors\"\n[[ \"0${SKIP_SKIMMED_OUT_TF:-}\" == \"00\" ]] && SKIP_SKIMMED_OUT_TF= || SKIP_SKIMMED_OUT_TF=\"--skip-skimmed-out-tf\"\n\n: ${DEF_MARGIN_BWD:=55}                           # default backward margin to compensate for time misalignments\n: ${DEF_MARGIN_FWD:=55}                           # default forward margin to compensate for time misalignments",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "c914dd887a50c5eb8e324bc3a3d36cb65bf408244236035ef4777b14347be18c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z ${NO_ITSMFT_MASKING:-} ]] ; then\n  has_detector_ctf ITS && export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --its-digits\"\n  has_detector_ctf MFT && export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --mft-digits\"\nfi\n\nadd_W o2-ctf-reader-workflow \"--ctf-data-subspec 1 --ir-frames-files $IRFRAMES $SKIP_SKIMMED_OUT_TF --ctf-input $CTFLIST ${INPUT_FILE_COPY_CMD+--copy-cmd} ${INPUT_FILE_COPY_CMD} --onlyDet $WORKFLOW_DETECTORS $ALLOW_MISSING_DET --pipeline $(get_N tpc-entropy-decoder TPC REST 1 TPCENTDEC)\" \"HBFUtils.nHBFPerTF=$NHBPERTF\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "b403e851d1c9e17feb6538e7417e75d6471ae40b679cfffb3902fe5a27a64157": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z ${NO_ITSMFT_MASKING:-} ]] ; then\n  if has_detector_ctf ITS ; then\n    add_W o2-its-reco-workflow \"--digits-from-upstream --disable-mc --disable-tracking --disable-root-output --pipeline $(get_N its-tracker ITS REST 1 ITSTRK)\" \"ITSClustererParam.maxBCDiffToMaskBias=10;\"\n  fi\n  if has_detector_ctf MFT ; then\n    add_W o2-mft-reco-workflow \"--digits-from-upstream --disable-mc --disable-tracking --disable-root-output --pipeline $(get_N mft-tracker MFT REST 1 MFTTRK)\" \"MFTClustererParam.maxBCDiffToMaskBias=10;\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "071ee12fb794f080732277a68f174365b82c7a8dabb1f927dec32778e1215dd4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detector_ctf ITS && add_W o2-itsmft-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${ITS_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${ITS_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${ITS_ENC_MEMFACT:-1.5} --pipeline $(get_N its-entropy-encoder ITS CTF 1)\"\nhas_detector_ctf MFT && add_W o2-itsmft-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${MFT_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${MFT_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${MFT_ENC_MEMFACT:-1.5} --runmft true --pipeline $(get_N mft-entropy-encoder MFT CTF 1)\"\nhas_detector_ctf TPC && add_W o2-tpc-reco-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${TPC_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${TPC_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${TPC_ENC_MEMFACT:-1.} --input-type compressed-clusters-flat --output-type encoded-clusters,disable-writer --pipeline $(get_N tpc-entropy-encoder TPC CTF 1 TPCENT)\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "5ba778f0e82b4db32ea7d20c5748fc1f492a8c5997a6fa5864bcb9f241c3dde5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detector_ctf TRD && add_W o2-trd-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${TRD_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${TRD_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${TRD_ENC_MEMFACT:-1.5} --pipeline $(get_N trd-entropy-encoder TRD CTF 1 TRDENT)\"\nhas_detector_ctf TOF && add_W o2-tof-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${TOF_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${TOF_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${TOF_ENC_MEMFACT:-1.5} --pipeline $(get_N tof-entropy-encoder TOF CTF 1)\"\nhas_detector_ctf FT0 && add_W o2-ft0-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${FT0_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${FT0_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${FT0_ENC_MEMFACT:-1.5} --pipeline $(get_N ft0-entropy-encoder FT0 CTF 1)\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "92d4c37a09561bb7cc9d0791454b7e2948e782801627f45eb71fc8e73efdcfe5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detector_ctf FV0 && add_W o2-fv0-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${FV0_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${FV0_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${FV0_ENC_MEMFACT:-1.5} --pipeline $(get_N fv0-entropy-encoder FV0 CTF 1)\"\nhas_detector_ctf FDD && add_W o2-fdd-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${FDD_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${FDD_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${FDD_ENC_MEMFACT:-1.5} --pipeline $(get_N fdd-entropy-encoder FDD CTF 1)\"\nhas_detector_ctf MID && add_W o2-mid-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${MID_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${MID_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${MID_ENC_MEMFACT:-1.5} --pipeline $(get_N mid-entropy-encoder MID CTF 1)\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "73b8db5a2ac45b8b0a05e7d6a2e8e5869fc7b56e87d76dc28fb40241f209f9d5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detector_ctf MCH && add_W o2-mch-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${MCH_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${MCH_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${MCH_ENC_MEMFACT:-1.5} --pipeline $(get_N mch-entropy-encoder MCH CTF 1)\"\nhas_detector_ctf PHS && add_W o2-phos-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${PHS_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${PHS_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${PHS_ENC_MEMFACT:-1.5} --pipeline $(get_N phos-entropy-encoder PHS CTF 1)\"\nhas_detector_ctf CPV && add_W o2-cpv-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${CPV_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${CPV_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${CPV_ENC_MEMFACT:-1.5} --pipeline $(get_N cpv-entropy-encoder CPV CTF 1)\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "514b0fb7eb22941d1e340c20814abd925b65b06d8edf1443245bb2230eac3434": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detector_ctf EMC && add_W o2-emcal-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${EMC_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${EMC_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${EMC_ENC_MEMFACT:-1.5} --pipeline $(get_N emcal-entropy-encoder EMC CTF 1)\"\nhas_detector_ctf ZDC && add_W o2-zdc-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${ZDC_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${ZDC_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${ZDC_ENC_MEMFACT:-1.5} --pipeline $(get_N zdc-entropy-encoder ZDC CTF 1)\"\nhas_detector_ctf HMP && add_W o2-hmpid-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${HMP_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${HMP_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${HMP_ENC_MEMFACT:-1.5} --pipeline $(get_N hmpid-entropy-encoder HMP CTF 1)\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "487d8b87ddef92e1f82ff9f3b3ce75370a640fa908d56bba63d4e475217aced8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "has_detector_ctf CTP && include_W o2-ctp-entropy-encoder-workflow \"$RANS_OPT --select-ir-frames --irframe-margin-bwd ${CTP_MARGIN_BWD:-$DEF_MARGIN_BWD} --irframe-margin-fwd ${CTP_MARGIN_FWD:-$DEF_MARGIN_FWD} --mem-factor ${CTP_ENC_MEMFACT:-1.5} --pipeline $(get_N its-entropy-encoder CTP CTF 1)\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "dcf25c98e2432ba4154db397165a192cec7c777b3d95f1161739c6838e8eec53": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "add_W o2-ctf-writer-workflow \"--output-dir $CTF_DIR --min-file-size ${CTF_MINSIZE} --max-ctf-per-file ${CTF_MAX_PER_FILE} --onlyDet $WORKFLOW_DETECTORS_CTF $CTF_MAXDETEXT\"\n\n# ---------------------------------------------------------------------------------------------------------------------\n# DPL run binary\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL $GLOBALDPLOPT -b --run\"\n\nPRINT_WORKFLOW=1\n[[ ${WORKFLOWMODE:-} == \"print\" || \"0${PRINT_WORKFLOW:-}\" == \"01\" ]] && echo \"#Workflow command:\\n\\n${WORKFLOW}\\n\" | sed -e \"s/\\\\\\\\n/\\n/g\" -e\"s/| */| \\\\\\\\\\n/g\" | eval cat $( [[ ${WORKFLOWMODE:-} == \"dds\" ]] && echo '1>&2')\nif [[ ${WORKFLOWMODE:-} != \"print\" ]]; then eval $WORKFLOW; else true; fi\n\n# Generate a log file with the count of skimmed CTFs. This step indicates that the processing was successful.\nls -l o2_ctf*.root | wc -l > nSkimmedCTFs.log",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/CTFSkimming/ctf-skim-workflow.sh"
        }
    ],
    "a3b24a02fd2b10d72b5fbed1ca69ba129b261814aca71af51b5cd9c3f149559f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nTIMEFRAMESPERJOB=${ALIEN_JDL_TIMEFRAMESPERJOB-100000}\nif [[ -f timeBins.log ]]; then\n  rm timeBins.log\nfi\n\n# generating list of files\nsed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 | sort -u > o2currents_tpc.txt\n\n# proceeding to extract timBins.log\n\nif [[ ! -f prepareBins.C ]]; then\n  echo \"Fetching prepareBins.C from O2DPG\"\n  cp $O2DPG_ROOT/DATA/production/configurations/asyncCalib/prepareBins.C .\nelse\n  echo \"Using prepareBins.C from the input files\"\nfi\nroot -b -q \"prepareBins.C+(\\\"o2currents_tpc.txt\\\", $TIMEFRAMESPERJOB)\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/defineTimeBinsForCurrents.sh"
        }
    ],
    "e21b432a580778dc3a510ee8dead5e2183460b2e66c7d6cfca072d3d9f7d1b5d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script to aggregate TPC currents\n\n# First, we generate a list of files from the collection\nsed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 | sort -u > o2currents_tpc.txt\n\n# Additional variables\nARGS_ALL=\"-b --shm-segment-size 16000000000\"\nSTART_TF=$2\nEND_TF=$3\n\n# Sourcing necessary functions\n[[ -f gen_topo_helper_functions.sh ]] && rm gen_topo_helper_functions.sh\nln -s $O2DPG_ROOT/DATA/common/gen_topo_helper_functions.sh\nsource gen_topo_helper_functions.sh\n\n# Initializing an empty workflow\nWORKFLOW=\n\n# Executing the workflow\nadd_W o2-tpc-integrate-cluster-reader-workflow \"--time-lanes 10 --tpc-currents-infiles o2currents_tpc.txt --firstTF $START_TF --lastTF $END_TF\" \"\"\nadd_W o2-tpc-merge-integrate-cluster-workflow \"--dump-calib-data --meta-output-dir none --process-3D-currents true --nthreads 8 --enableWritingPadStatusMap true --max-delay 1 -b\" \"\"\n\nWORKFLOW+=\"o2-dpl-run $ARGS_ALL\"\n\necho \"#Workflow command:\\n\\n${WORKFLOW}\\n\" | sed -e \"s/\\\\\\\\n/\\n/g\" -e\"s/| */| \\\\\\\\\\n/g\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/mergeCurrents.sh"
        }
    ],
    "bf841d1b9dfe4e1f7f20c3b5c16dfa2875ec207998a00f613e867e9c57dc2404": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"#Workflow command:\\n\\n${WORKFLOW}\\n\" | sed -e \"s/\\\\\\\\n/\\n/g\" -e\"s/| */| \\\\\\\\\\n/g\"\n\necho \"mergeCurrents.sh : Beginning the process\"\n\necho | eval $WORKFLOW\n\nexitcode=$?\n\necho \"mergeCurrents.sh : Workflow completed\"\n\nexit $exitcode",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/mergeCurrents.sh"
        }
    ],
    "f6ee49d9e4364351968d9dd60ec804bdc049932052937c7ed6541217f9708cc3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# The script generates correction maps for a list of input files.\n# It requires two input parameters:\n# - the xml collection of the o2tpc_residuals*.root files produced for a single run\n# - the pattern of the calibration interval obtained from the 'createJobList.sh' macro.\n# The script produces two output files:\n# - TPCDebugVoxRes*.root, containing the tree of extracted residuals\n# - TPCFastTransform*.root, containing the spline object for reconstruction.\n\n# ===| input parameters & output file names  |==================================\ninputCollection=$1\nmergePattern=$2\nfilePattern=\"o2tpc_residuals_${mergePattern}\\.root\"\n\n# This could be used for the old file format\nif [[ $ALIEN_JDL_OLDFILENAME == \"1\" ]]; then\n  filePattern=\"o2tpc_residuals${mergePattern}.*\\.root\"\nfi\n\n# The job processes all files\nif [[ \"$mergePattern\" == \"all\" ]]; then\n  filePattern=\".*\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/createCorrectionMap.sh"
        }
    ],
    "0cfce358beda6f3c4d678ee1c57a4f991a77ce16dffd94dfe702c097542c9bda": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# job is over all files\nif [[ \"$mergePattern\" == \"all\" ]]; then\n  filePattern=\".*\"\nfi\n\nfileList=inputFileList.txt\nvoxResOutFile=TPCDebugVoxRes_${mergePattern}.root\nsplineOutFile=TPCFastTransform_${mergePattern}.root\n\n[[ -z \"${ALIEN_JDL_MAPKNOTSY}\" ]] && ALIEN_JDL_MAPKNOTSY=10\n[[ -z \"${ALIEN_JDL_MAPKNOTSZ}\" ]] && ALIEN_JDL_MAPKNOTSZ=20\n\n# ===| create input list |=====================================================\nsed -rn 's|.*turl=\"([^\"]*)\".*|\\1|p' $inputCollection | grep \"$filePattern\" | sort -n > ${fileList}\n\ndeclare -i nLines=$(wc -l ${fileList} | awk '{print $1}')\nif [[ $nLines -eq 0 ]]; then\n  echo \"ERROR: Could not locate lines matching '${mergePattern}' in file '${inputCollection}'. Cannot proceed with SCD correction.\"\n  exit\nfi\necho \"Processing residuals for $nLines input files\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/createCorrectionMap.sh"
        }
    ],
    "253219f9e5e70817f2823b75e37eb668a8078fc1d6afed120480a77740201c42": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ===| create tree with residuals |=============================================\ncmd=\"root.exe -q -x -l -n $O2_ROOT/share/macro/staticMapCreator.C+'(\\\"${fileList}\\\", ${ALIEN_JDL_LPMRUNNUMBER}, \\\"${voxResOutFile}\\\")' &> residuals.log\"\necho \"executing: '$cmd'\"\nif [[ $ALIEN_JDL_DONTEXTRACTTPCCALIB != \"1\" ]]; then\n  eval $cmd\n  if [[ ! -s ${voxResOutFile} ]]; then\n    echo \"ERROR: Output file '${voxResOutFile}' was not generated or is empty. Cannot proceed with SCD correction.\"\n    exit\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/createCorrectionMap.sh"
        }
    ],
    "e7d7a5c1c7f383fb2771fc288458a18da8cb4e09d847c7e1ccdba0556366d189": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ===| create spline object |===================================================\ncmd=\"root.exe -q -x -l -n $O2_ROOT/share/macro/TPCFastTransformInit.C'(\\\"${voxResOutFile}\\\", \\\"${splineOutFile}\\\")' &> splines.log\"\nif [[ $(grep 'TPCFastTransformInit(' $O2_ROOT/share/macro/TPCFastTransformInit.C) =~ nKnots ]]; then\n  cmd=\"root.exe -q -x -l -n $O2_ROOT/share/macro/TPCFastTransformInit.C'(${ALIEN_JDL_MAPKNOTSY}, ${ALIEN_JDL_MAPKNOTSZ}, \\\"${voxResOutFile}\\\", \\\"${splineOutFile}\\\")' &> splines.log\"\nfi\necho \"executing: '$cmd'\"\nif [[ $ALIEN_JDL_DONTEXTRACTTPCCALIB != \"1\" ]]; then\n  eval $cmd\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/createCorrectionMap.sh"
        }
    ],
    "62898cec4b1193e1e0801d9527d6b35eb5dce6498baadd5b4bdc6f514620ce74": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Generate a list for submitting jobs to create the TPC SCD correction map.\n# The script expects an input parameter of the xml collection of the o2tpc_residuals*.root file\n# generated for a specific run.\n# It produces an output file with one line per job to be submitted, including the parameters\n# to be passed to each job.\n\n\n# ===| input parameters |=======================================================\ninputCollection=$1\n\n# ===| timebin log file |=======================================================\nTIMEBINLOGFILENAME=timeBins.log\n\n# ===| output file creation |===================================================\nsed -rn 's|.*turl=\"([^\"]*)\".*|\\1|;s|.*o2tpc_residuals_([0-9_]+)\\.root|\\1 0 0|p' $inputCollection | sort -u > $TIMEBINLOGFILENAME",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/createJobList.sh"
        }
    ],
    "b9dafdcc4327c7eb114012dfe695fa114431263c2707d51934909a0533d009c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This section could apply for the legacy file format\nif [[ $ALIEN_JDL_OLDFILENAME == \"1\" ]]; then\n  sed -rn 's|.*turl=\"([^\"]*)\".*|\\1|;s|.*/o2tpc_residuals([0-9]{7})[0-9]+\\.root|\\1 0 0|p' $inputCollection | sort -u > $TIMEBINLOGFILENAME\nfi\n\n# ===| sanity check |===========================================================\nlocal nLines=$(wc -l $TIMEBINLOGFILENAME | awk '{print $1}')\n\nif [[ $nLines -eq 0 ]]; then\n  echo \"ERROR: Issue encountered while generating the list for job submission\"\nelse\n  # Include a line for the complete run\n  #echo \"all 0 0\" >> $TIMEBINLOGFILENAME\n  echo \"Number of jobs to submit for SCD map creation: $nLines\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/asyncCalib/createJobList.sh"
        }
    ],
    "c816487c0853f08a833a22f6d61fbb9a92e02966a3becde322ae51d95c967f34": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_DETECTORS_CTF=\"EMC\"\nexport WORKFLOW_DETECTORS=\"EMC\"\nexport ARGS_EXTRA_PROCESS_o2_emcal_reco_workflow=\" --fitmethod=standard \"\nexport ARGS_EXTRA_PROCESS_o2_raw_tf_reader_workflow=\" --raw-only-det all \"\nexport EXTRA_WORKFLOW=\" o2-emcal-standalone-aod-producer-workflow --aod-writer-keep dangling --aod-writer-resfile \\\"AO2D\\\" --aod-writer-resmode UPDATE \"\n\n# Activating Quality Control\nexport WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nexport GEN_TOPO_WORKDIR=\"./\"\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values \\\"qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD\\\"\"\nexport GEN_TOPO_WORKDIR=\"./\"\nexport QC_JSON_FROM_OUTSIDE=\"$O2DPG_ROOT/DATA/production/configurations/$YEAR/ctf_recreation/emc-qc.json\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/setenv_extra_ctf_recreation_emcal.sh"
        }
    ],
    "20f534278abfa2c49a0688e2ac80ce8724c59be31cb9a392e5f229816da20f7a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $QC_JSON_FROM_OUTSIDE != \"\" ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/setenv_extra_ctf_recreation_emcal.sh"
        }
    ],
    "8504d27be8493199c47b2c71afc0659c8cebbd68110bfbb9ced38b762a99768d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export WORKFLOW_DETECTORS_FLP_PROCESSING=\"TOF\"\nexport WORKFLOW_DETECTORS=\"ITS,TPC,TRD,TOF\" \nexport WORKFLOW_DETECTORS_CTF=\"ITS,TPC,TRD,TOF\" \nexport ARGS_EXTRA_PROCESS_o2_trd_datareader=\"--fixsm1617\"\nexport ARGS_EXTRA_PROCESS_o2_raw_tf_reader_workflow=\"--max-cached-tf 1\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/setenv_extra_ctf_recreation_centralBarrel.sh"
        }
    ],
    "f621fc0aa2fff33acf4a94541f98bcb67f3cdd02fdcdba1b34c41c87c873bdb2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export WORKFLOW_DETECTORS_CTF=\"ITS,MFT,MCH,MID\"\nexport WORKFLOW_DETECTORS=\"ITS,MFT,MCH,MID\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/setenv_extra_ctf_recreation_muon.sh"
        }
    ],
    "f92148da04254ab512d84cc573a40b86464c169e75708e9db052240ab67326ee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script to initiate async processing\n#\n# If running locally, you must export variables like:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass3\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n# export ALIEN_JDL_DETCONFIG=centralBarrel [muon, cpv, emcal, phos]\n\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi\n\nPOSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -dc|--detector-config)  \n      export DETCONFIG=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      export BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/ctf_recreation.sh"
        }
    ],
    "0421ddfd33b0ffc95b908365a9a2bc6a0e4f78155aa043eb54de498d7cd608ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# we will overwrite these variables if they are found in the jdl\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n# for the year\nif [[ -n \"$ALIEN_JDL_LPMANCHORYEAR\" ]]; then\n    export YEAR=\"$ALIEN_JDL_LPMANCHORYEAR\"\nfi\n# for the period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\nfi\n# for the beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n# for the pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/ctf_recreation.sh"
        }
    ],
    "20c75194bbf2909ac6264bcad3105382e6f1491db3573878e5eba421a42cd7ba": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configuration settings to be applied\n# If the \"-dc\" or \"--detector-config\" option is provided, this takes precedence over all other methods;\n# If \"$DETCONFIG\" is explicitly set, it has the second-highest priority;\n# The final option is to derive it from the JDL.\nif [[ -z \"$DETCONFIG\" ]]; then\n    if [[ -z \"$ALIEN_JDL_DETCONFIG\" ]]; then\n\techo \"no detector configuration set, exiting\"\n\texit 4\n    else\n\tDETCONFIG=\"$ALIEN_JDL_DETCONFIG\"\n    fi\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $YEAR ]] || [[ -z $PERIOD ]] || [[ -z $DETCONFIG ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"verify the required environment variables: RUNNUMBER (--> $RUNNUMBER), YEAR (--> $YEAR), PERIOD (--> $PERIOD), DETCONFIG (--> $DETCONFIG), BEAMTYPE (--> $BEAMTYPE), PASS (--> $PASS)\"\n    exit 3\nfi\n\necho \"processing run $RUNNUMBER, from year $YEAR and period $PERIOD with beamtype $BEAMTYPE, pass $PASS. The detector configuration will be $DETCONFIG\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/ctf_recreation.sh"
        }
    ],
    "e686cb4617381829821655301c8163f5482eead051c21b565895e4afe5a6622a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "###if [[ $MODE == \"remote\" ]]; then \n# common archive\nif [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, exiting\"\n\texit 2\nfi\n# run specific archive\nif [[ $DETCONFIG == \"muon\" ]] || [[ $DETCONFIG == \"centralBarrel\" ]]; then\n\tif [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\t    echo \"runInput_$RUNNUMBER.tgz not found, exiting\"\n\t    exit 2\n\telse\n\t    tar -xzvf runInput_$RUNNUMBER.tgz\n\tfi\nfi\ntar -xzvf commonInput.tgz\n\n###fi\n\necho \"Displaying current directory contents\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/ctf_recreation.sh"
        }
    ],
    "1c33254300d88a7dd9b46086d3d5e3196006284d3e8e30066905ecf00fb6342c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=CTF\nif [[ -f \"setenv_extra_ctf_recreation_$DETCONFIG.sh\" ]]; then\n    source setenv_extra_ctf_recreation_$DETCONFIG.sh \nelse\n    echo \"************************************************************************************\"\n    echo \"No specific ad-hoc setenv_extra_ctf_recreation_$DETCONFIG settings for current asynchronous processing; utilizing the default one from O2DPG\"\n    echo \"************************************************************************************\"\n    if [[ -f $O2DPG_ROOT/DATA/production/configurations/$YEAR/ctf_recreation/setenv_extra_ctf_recreation_$DETCONFIG.sh ]]; then\n\tln -s $O2DPG_ROOT/DATA/production/configurations/$YEAR/ctf_recreation/setenv_extra_ctf_recreation_$DETCONFIG.sh\n\tsource setenv_extra_ctf_recreation_$DETCONFIG.sh\n    else\n\techo \"*********************************************************************************************************\"\n\techo \"No setenv_extra_ctf_recreation_$DETCONFIG for $ALIEN_JDL_LPMANCHORYEAR in O2DPG\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/ctf_recreation.sh"
        }
    ],
    "c2401dfe82fe7906e166f82c551624059347510518c8342fcb226f0477329d83": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"No setenv_extra_ctf_recreation_$DETCONFIG defined for $ALIEN_JDL_LPMANCHORYEAR in O2DPG\"\n    echo \"                The processing cannot proceed\"\n    echo \"*********************************************************************************************************\"\n    exit 5\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/ctf_recreation.sh"
        }
    ],
    "40b1391b7fbdb4a357cbeca661f9e7b8494095209979124e9916cfb0f5ea232f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Use run-workflow-on-inputlist.sh macro provided as input\"\nelse\n    echo \"Use run-workflow-on-inputlist.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Use dpl-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Use dpl-workflow.sh passed as input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\nexport TFDELAY=0.1\nif [[ $DETCONFIG == \"centralBarrel\" ]]; then\n    export TFDELAY=10\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/ctf_recreation.sh"
        }
    ],
    "1b3315e26b109a4cf5f6e0b2ee775b8f55f8e1bb97ebb4c8ecfde58535bf8528": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export TFDELAY=0.1\nif [[ $DETCONFIG == \"centralBarrel\" ]]; then\n    export TFDELAY=10\nfi\n\n# display the workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=print SYNCMODE=1 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 TPC_CONVERT_LINKZS_TO_RAW=1 ./run-workflow-on-inputlist.sh TF list.list > workflowconfig.log\n# execute the workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=run   SYNCMODE=1 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 TPC_CONVERT_LINKZS_TO_RAW=1 ./run-workflow-on-inputlist.sh TF list.list",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/ctf_recreation.sh"
        }
    ],
    "88b2ef2d3633a4edf87d64785e63288514c6fa7f9338688fa94bdea5f24df30b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export WORKFLOW_DETECTORS_CTF=\"CPV\"\nexport WORKFLOW_DETECTORS=\"CPV\"\nexportARGS_EXTRA_PROCESS_o2_raw_tf_reader_workflow=\" --raw-only-det all \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/setenv_extra_ctf_recreation_cpv.sh"
        }
    ],
    "6881b51fab97111ee38905225266bc5fe681c78c4e4a0b513be4686427f17a9c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT WORKFLOW_DETECTORS_CTF=\"PHS\"\nEXPORT WORKFLOW_DETECTORS=\"PHS\"\nEXPORT ARGS_EXTRA_PROCESS_o2_raw_tf_reader_workflow=\" --raw-only-det all \"\nEXPORT ARGS_EXTRA_PROCESS_o2_phos_reco_workflow=\" --fitmethod semigaus \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/ctf_recreation/setenv_extra_ctf_recreation_phos.sh"
        }
    ],
    "a92fd56f8b11f36ab3e87fbb63a42296ce58a5ce9d23dedfc1e01edb905cbae5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to configure additional environment variables\n# inheriting some configurations from alien\n\n# handle flags provided to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# define list of detectors\nexport WORKFLOW_DETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT\n\n# custom settings for CTF reader: operating on the grid and accessing remote files\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"--remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi\n# additional custom settings for CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "e1b42d0c2a49fb54057692c7e357ceaf4c3f42ce24a98712da9069908a2c93ee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run-dependent configurations\nif the file \"setenv_run.sh\" exists, then\n    source setenv_run.sh \nelse\n    echo \"************************************************************\"\n    echo No specific run-dependent settings for current asynchronous processing\n    echo \"************************************************************\"\nfi\n\n# disable monitoring-backend\nexport ENABLE_METRICS=1\n\n# include performance metrics\n#export ARGS_ALL_EXTRA=\" --resources-monitoring 10 --resources-monitoring-dump-interval 10\"\nexport ARGS_ALL_EXTRA=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "bd14c4de4afc5940a5647e909976d77b184ca0672e8cc073775b0cfc473a7367": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# settings shared among various workflows\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2;\"\n\nexport MFT_STROBELGT=\"MFTAlpideParam.roFrameLengthInBC=198\"\n\n# specific options for the ITS reconstruction workflow\nexport ITS_CONFIG=\" --tracking-mode sync_misaligned\"\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "424920cbcc0f93f73681ad0a1287f603f86cd043bb19581aa5aaf88f30a476ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Custom settings for GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"$VDRIFT;GPU_global.dEdxUseFullGainMap=1;GPU_global.dEdxDisableResidualGainMap=1\"\n\n# Custom settings for TOF reconstruction\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb --ccdb-url-tof \\\"http://alice-ccdb.cern.ch\\\"\"\n# as of a commit on December 4\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "59f48c50da2d224a28c4e5cde9fba457f797c0e4ce9be235292c61ccb7bd9bf9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for primary vertex processing\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as per note https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "d66401fa30f099a6cb5175c7c7add377341c900f5ba42bb1c967af78dfbc1c49": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1.;pvertexer.dbscanAdaptCoef=20.\"\nEXPORT SVTX=\"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "331eea5a300c6422753c43440c3db6abd541244dcb062f5f98f68f6317079501": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"$VDRIFT;$PVERTEXER;$MFT_STROBELGT\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow=\"$SVTX\"\n\n# customized parameters for ITS-TPC matching\nexport ITSTPCMATCH=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow=\"$VDRIFT;$ITSEXTRAERR;$ITSTPCMATCH\"\n\n# customized parameters for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"--output-type matching-info,calib-info --enable-dia\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow=\"$VDRIFT;$ITSEXTRAERR\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "67498e3a65fc0f0af8addf91e5994f5b09ee8a741b78672dc9087116f6b70083": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# custom configurations for TRD global tracking\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking=\"$VDRIFT;$ITSEXTRAERR\"\n\n# custom configurations for FT0\nexport ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow=\"--ft0-reconstructor\"\n\n# custom configurations for FV0\nexport ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow=\"--fv0-reconstructor\"\n\n# custom configurations for FDD\n#...\n\n# custom configurations for MFT \nexport CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow=\"$MFT_STROBELGT;MFTTracking.forceZeroField=true;MFTTracking.FullClusterScan=true;MFTTracking.LTFclsRCut=0.2;\"\nexport ARGS_EXTRA_PROCESS_o2_mft_reco_workflow=\" --run-assessment \"\n\n# enabling AOD\nexport WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\n\n# custom configurations for AOD\n#...",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "5020137683aacedea72f885055c8cda67301771b17f30caf142ffda29e3a0d09": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for AOD\n#...\n\n# Activating Quality Control\nexport WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values \\\"qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD\\\"\"\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/setenv_extra.sh"
        }
    ],
    "e0ac7e0d3d5a6db2457e535c67527630655eedbdd953110f36303bea3758ecf5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script to execute asynchronous processing\n#\n# If running locally, you must export variables like:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass4\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "24bdd72d33f5fa0223df47b7922513db274d8b10b9e874bc5f84d65c7308e571": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\n# if positional arguments were found in the jdl, we overwrite the variables\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# for beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# for period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\nfi\n\n# for pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "e4e6d4bb913ce6df68480a71cde25a21d5cb7b035bb96cc0ba5be328705eb069": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"Verify the required environment variables: RUNNUMBER (--> $RUNNUMBER), PERIOD (--> $PERIOD), PASS (--> $PASS), BEAMTYPE (--> $BEAMTYPE)\"\n    exit 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\n###if [[ $MODE == \"remote\" ]]; then \n    # common archive\n    if [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, exiting\"\n\texit 2\n    fi\n    # run specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"runInput_$RUNNUMBER.tgz not found, exiting\"\n\texit 2\n    fi\n    tar -xzvf commonInput.tgz\n    tar -xzvf runInput_$RUNNUMBER.tgz\n###fi\n\necho \"Listing the current directory content\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "8eaf8921ab5444dc5d7a58320644416c35d1fffec8f814d2ce9c7b69e30beb5d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f \"setenv_extra.sh\" ]]; then\n    source setenv_extra.sh $RUNNUMBER $BEAMTYPE\nelse\n    echo \"************************************************************************************\"\n    echo \"No ad-hoc setenv_extra settings for current async processing; using the default one in O2DPG\"\n    echo \"************************************************************************************\"\n    if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh ]]; then\n\tln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh\n\tsource setenv_extra.sh $RUNNUMBER $BEAMTYPE\n    else\n\techo \"*********************************************************************************************************\"\n\techo \"No setenv_extra for $ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME in O2DPG\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "a0da541d7b814fd02743934aab0c17bc2946c01cbf731f2125c17442fee0a14c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "No specific settings will be applied\n\techo \"*********************************************************************************************************\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "ba48d56c019c14323d653119fe7bfabcbfa7c0090a38d2a6b0249e8892e345e4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Use run-workflow-on-inputlist.sh macro provided as input\"\nelse\n    echo \"Use run-workflow-on-inputlist.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Use dpl-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Use dpl-workflow.sh passed as input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    echo \"QC json from outside is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "4270069612da8a64e2a67cb308f890e3ea0cf5edfcd440b219b100a595794d50": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\n# reconstruction and matching\n# display workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=print DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list > workflowconfig.log\n# execute the workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=run DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list \n\n# subsequently, extract all performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "e21add775d35d80f5fe10da2bef9ac9971d93c4f51f8a6027265334675d271aa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now verifying AO2D file\nif [[ -f \"AO2D.root\" ]]; then\n    root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n    exitcode=$?\n    if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from AO2D check is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D check is \" $exitcode\n\texit $exitcode\n    fi\n    ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py --merged-task -f AO2D.root\n    ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow_analysis_test.json > analysisQC.log\n    if [[ -f \"Analysis/MergedAnalyses/AnalysisResults.root\" ]]; then\n\tmv Analysis/MergedAnalyses/AnalysisResults.root .\n    else\n\techo \"No Analysis/MergedAnalyses/AnalysisResults.root found! check analysis QC\"\n    fi\n    if ls Analysis/*/*.log 1> /dev/null 2>&1; then\n\tmv Analysis/*/*.log .\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "be5a67b289b772afe704d0cc80f3f87c2ba3db80b89eabd7a10e73e5b91e335b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# copying the QC json file here\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\nelse\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n\techo \"copying the most recent file from ${GEN_TOPO_WORKDIR}/json_cache\"\n\tQC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n\techo \"No QC files detected, likely QC was not executed\"\n    fi\nfi\nif [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass5/async_pass.sh"
        }
    ],
    "4314f45a8e9823b34b78e538a7b9fe9ea5a5a6e77c67cd37a6caa54c1da5579d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script for defining additional environment variables\n# utilizing settings from alien\n\n# handling flags provided to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# detector list\nexport WORKFLOW_DETECTORS=ITS,TPC,TOF,TRD,FV0,FT0,FDD,MID,MFT\n\n# custom configurations for CTF reader: operation on the grid, reading files from a remote location\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"--remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi\n# additional custom settings for CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "7fc83cc00ab79bfddcba0c8cdb7c9edcd04b939c993015350bd5eb7be7533266": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# options dependent on the run\nif [[ -f \"setenv_run.sh\" ]]; then\n    source setenv_run.sh \nelse\n    echo \"************************************************************\"\n    echo No specific run-dependent configurations for current asynchronous processing\n    echo \"************************************************************\"\nfi\n\n# to improve logging\nexport DDS_SESSION_ID=foo\n\n# disable monitoring backend\nexport ENABLE_METRICS=1\n\n# include performance metrics\nexport ARGS_ALL_EXTRA=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "7eda6093448f9c2d61e90f2ed4f3bd605d84fe8006ceb1f5645b2f49d52e756c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# shared parameters across workflows\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2;\"\n\nexport MFT_STROBELGT=\"MFTAlpideParam.roFrameLengthInBC=198\"\n\n# specific settings for the ITS reconstruction workflow\nexport ITS_CONFIG=\" --tracking-mode sync_misaligned\"\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "3c2f160a3a7e4af15099cac05dbda262dde5d83503351f1db7f8cd36942984bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc configuration for GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"$VDRIFT;GPU_global.gainCalibFile=GainMap_2021-12-15_krypton_0.5T.v2.root;GPU_global.dEdxSplineTopologyCorrFile=splines_for_dedx_3D_scaled_Threshold_3.5.root;GPU_global.dEdxCorrFile=calibdEdx.${RUNNUMBER}.root\"\n\n# ad-hoc adjustments for TOF reconstruction\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb --ccdb-url-tof \\\"http://alice-ccdb.cern.ch\\\"\"\n# effective from a commit on December 4th\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "90e538f9ab07422c7ba7c497669e78304f6301e3ec654dee9287ec3f8906ab8c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# custom settings for primary vertex processing\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as per comment https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "98e9fbc0548b538cf63264d3c921ab1a5b6c70cba37c302df94b4d799b716b5b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT SETTINGS AS FOLLOWS: \"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1.;pvertexer.dbscanAdaptCoef=20.\"\nEXPORT SETTINGS AS FOLLOWS: \"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "b8629d746331aca6874420c204650bb284217c7e3392f3ed6ca2d78fe39b03bf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"$VDRIFT;$PVERTEXER;$MFT_STROBELGT\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow=\"$SVTX\"\n\n# customized settings for ITS-TPC matching\nexport ITSTPCMATCH=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow=\"$VDRIFT;$ITSEXTRAERR;$ITSTPCMATCH\"\n\n# customized settings for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"--output-type matching-info\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow=\"$VDRIFT;$ITSEXTRAERR\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "299961fe96126a67dfb5b1905db3548064cbfb2cfdf2d5ed3041d1e55db1195a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# customized parameters for TRD matching\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking=\"$VDRIFT;$ITSEXTRAERR\"\n\n# customized parameters for FT0\nexport ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow=\"--ft0-reconstructor\"\n\n# customized parameters for FV0\nexport ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow=\"--fv0-reconstructor\"\n\n# customized parameters for FDD\n#...\n\n# customized parameters for MFT \nexport CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow=\"$MFT_STROBELGT\"\n\nEnabling AOD creation\nexport WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\n\n# customized parameters for AOD\n#...\n\nEnabling QC monitoring\nexport WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values \\\"qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD\\\"\"\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "36139a4f775165a233313add8b4f079f991915213ffcd13b391643f51268e996": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/setenv_extra.sh"
        }
    ],
    "0d2e0c472efa5830ec1c693aeb94b8d3f63951a058332a14ccb7d6054b6f38ac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script to initiate asynchronous processing.\n#\n# If running locally, you must set environment variables such as:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass3\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "75c9c4d02477eaa124296e7266a1e91206d5dc90a4d42141d0530e9153c9ebd2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\n# subsequently, we overwrite the variables if they are present in the jdl\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\nfi\n\n# pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "8f23e0330f4facf3435706f11b7bda11139c4bfee3a7f97c1bfd962a9665741d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"verify that the required environment variables RUNNUMBER (--> $RUNNUMBER), PERIOD (--> $PERIOD), PASS (--> $PASS), and BEAMTYPE (--> $BEAMTYPE) are set\"\n    return 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "aabe4c895ec0f324497c16f14114525ffe9aa52450e21cd14e757783fdaede9e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "###if [[ $MODE == \"remote\" ]]; then \n# common archive\nif [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, exiting\"\n\treturn 2\nfi\n# run specific archive\nif [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"runInput_$RUNNUMBER.tgz not found, exiting\"\n\treturn 2\nfi\nif [[ ! -f TPC_calibdEdx.211216.tgz ]]; then\n\techo \"TPC_calibdEdx.211216.tgz not found, exiting\"\n\treturn 2\nfi\ntar -xzvf commonInput.tgz\nln -s o2sim_geometry.root o2sim_geometry-aligned.root\ntar -xzvf runInput_$RUNNUMBER.tgz\ntar -xzvf TPC_calibdEdx.211216.tgz\nmv calibdEdx.pol/*.* .\nif [[ ! -f calibdEdx.$RUNNUMBER.root ]]; then\n\techo \"calibdEdx.$RUNNUMBER.root not found, exiting\"\n\treturn 2\nfi\nif [[ ! -f splines_for_dedx_3D_scaled_Threshold_3.5.root ]]; then\n\techo \"splines_for_dedx_3D_scaled_Threshold_3.5.root not found, exiting\"\n\treturn 2\nfi\nif [[ ! -f GainMap_2021-12-15_krypton_0.5T.v2.root ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "a4abe00a2157e9ced05c2756017f4da314eca1c9c68eb91c721e540ebb9aae9a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    return 2\n    fi\n    if [[ ! -f GainMap_2021-12-15_krypton_0.5T.v2.root ]]; then\n\techo \"GainMap_2021-12-15_krypton_0.5T.v2.root\"\n\treturn 2\n    fi\n###fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "2987e356ea923c6047d0c3f22f23b1a95e93cf0419409616e0592ffddf98e19a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Displaying the contents of the current directory\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "924bca470948df4dc6093cfbbd7d289c7eac8f931e2fe2fa476372b536ffdc79": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f \"setenv_extra.sh\" ]]; then\n    source setenv_extra.sh $RUNNUMBER $BEAMTYPE\nelse\n    echo \"************************************************************************************\"\n    echo \"No customized setenv_extra settings for current asynchronous processing; using the default one in O2DPG\"\n    echo \"************************************************************************************\"\n    if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh ]]; then\n\tln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh\n\tsource setenv_extra.sh $RUNNUMBER $BEAMTYPE\n    else\n\techo \"*********************************************************************************************************\"\n\techo \"No setenv_extra for $ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME in O2DPG\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "88cb39d2a806730a6cbefc4f28303dffd616feb1fc716c46177cf7cc06438d01": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"                No specific settings will be applied\"\n\techo \"*********************************************************************************************************\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "95e436573212ef46c3c7f6d5a997ce4d57728931f22011d97353da62161f643d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Use the run-workflow-on-inputlist.sh macro provided as input\"\nelse\n    echo \"Use the run-workflow-on-inputlist.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Use the dpl-workflow.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Use the dpl-workflow.sh macro provided as input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    echo \"QC JSON from outside is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "1a3ad25f8c30facaf30035227b55efebb42675d5e690c401a40aea9bab144852": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ln -sf $O2DPG_ROOT/DATA/common/setenv.sh\n\n# processing and matching\n# display workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=print DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list > workflowconfig.log\n# execute it\nIS_SIMULATED_DATA=0 WORKFLOWMODE=run DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list\n\n# subsequently, extract all performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "dc614c33717e1675b9ec14f60e5360cd2ca6767f47a005e7f034a1eba52fa858": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# initiating AO2D file validation\nif [[ -f \"AO2D.root\" ]]; then\n    root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n    exitcode=$?\n    if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from AO2D check is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D check is \" $exitcode\n\texit $exitcode\n    fi\nfi\n\n# handling the QC JSON file\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\nelse\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n\techo \"copying the most recent file from ${GEN_TOPO_WORKDIR}/json_cache\"\n\tQC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n\techo \"No QC files detected, possibly due to lack of a QC run\"\n    fi\nfi\nif [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3/async_pass.sh"
        }
    ],
    "c29e6e118722bdd48ac060a6b3e5d3633e8cf074edfb727609351727e518d855": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to define additional environment variables\n# utilizing some configurations from the alien system\n\n# handling flags that are passed to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# list of detectors\nexport WORKFLOW_DETECTORS=ITS,TPC,TOF,TRD,FV0,FT0,FDD,MID,MFT\n\n# specific settings for the CTF reader: we are on the grid, reading files from a remote location\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"--remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi\n# additional settings for the CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "7dab861de970b23ae851564e18641aa34a4c442638277f2d18f232706752c42d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run-specific settings\nif [ -f \"setenv_run.sh\" ]; then\n    source setenv_run.sh \nelse\n    echo \"************************************************************\"\n    echo No custom run-specific configurations for current asynchronous processing\n    echo \"************************************************************\"\nfi\n\n# improve logging\nexport DDS_SESSION_ID=foo\n\n# disable monitoring-backend\nexport ENABLE_METRICS=1\n\n# include performance metrics\n#export ARGS_ALL_EXTRA=\" --resources-monitoring 10 --resources-monitoring-dump-interval 10\"\nexport ARGS_ALL_EXTRA=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "a7a18c8288d0f741d1f92b57cd78ea9450e3528dda34759d12296b29347af8be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# shared settings across workflows\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2;\"\n\nexport MFT_STROBELGT=\"MFTAlpideParam.roFrameLengthInBC=198\"\n\n# specific configurations for the ITS reconstruction workflow\nexport ITS_CONFIG=\" --tracking-mode sync_misaligned\"\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2\"\n\n# customized options for the GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"$VDRIFT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "59a4ae24f213a3f08ab104ef7b18ee47d4de27ec67a572132f99501252ff78c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Custom configurations for GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"$VDRIFT\"\n\n# Specific settings for TOF reconstruction\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb --ccdb-url-tof \\\"http://alice-ccdb.cern.ch\\\"\"\n# as of changes made on December 4\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "d019d4b2932fec3198acd76a8200dab36992b1d70c165d751fe293bc5c24258e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc options for primary vertex workflow\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as per the discussion in https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "73dc52303327753259e58ea4de831c0613a2d95c493b48d95384510150955562": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT SETTINGS INCLUDE: \"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1.;pvertexer.dbscanAdaptCoef=20.\"\nEXPORT SETTINGS ALSO SET \"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "64631c197abd47e1e9cd977a5d7bfe82b5d39455c568dd0527501aa54f1ea78a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"$VDRIFT;$PVERTEXER;$MFT_STROBELGT\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow=\"$SVTX\"\n\n# custom settings for ITSTPC matching\nexport ITSTPCMATCH=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow=\"$VDRIFT;$ITSEXTRAERR;$ITSTPCMATCH\"\n\n# custom settings for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"--output-type matching-info\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow=\"$VDRIFT;$ITSEXTRAERR\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "4a488f9b7aab34cce3c09f89d222d6effceb57c2fcf1e6239e22f739e3c06e96": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Custom configurations for TRD matching\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking=\"$VDRIFT;$ITSEXTRAERR\"\n\n# Custom configurations for FT0\nexport ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow=\"--ft0-reconstructor\"\n\n# Custom configurations for FV0\nexport ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow=\"--fv0-reconstructor\"\n\n# Custom configurations for FDD\n#...\n\n# Custom configurations for MFT \nexport CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow=\"$MFT_STROBELGT\"\n\nEnabling AOD\nexport WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\n\n# Custom configurations for AOD\n#...\n\nEnabling QC\nexport WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values \\\"qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD\\\"\"\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "372657dac1f15693249c1a4431b8cda8eb5aa7f250af15fb08ad7627fa1175aa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/setenv_extra.sh"
        }
    ],
    "48baa0fb3e08e4bd912fb7f4cbbaee06e1ff0ce88794fde7bde58f5821db3108": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script for initiating asynchronous processing\n#\n# When executed locally, you must set environment variables such as:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass3\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/async_pass.sh"
        }
    ],
    "4bb39086b6b07580e01eb66d674dfd1ecb3cc6064713779f573302246875f899": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\n# we now override these with values from the jdl if they are present\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\nfi\n\n# pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/async_pass.sh"
        }
    ],
    "3315570c6f70eaa6292d50c93046e08383dd5fffde81ecfc4c6c2fd1ad28e8ce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"Verify the required environment variables: RUNNUMBER (--> $RUNNUMBER), PERIOD (--> $PERIOD), PASS (--> $PASS), BEAMTYPE (--> $BEAMTYPE)\"\n    return 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\n###if [[ $MODE == \"remote\" ]]; then \n    # common archive\n    if [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, returning\"\n\treturn 2\n    fi\n    # run specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"runInput_$RUNNUMBER.tgz not found, returning\"\n\treturn 2\n    fi\n    tar -xzvf commonInput.tgz\n    ln -s o2sim_geometry.root o2sim_geometry-aligned.root\n    tar -xzvf runInput_$RUNNUMBER.tgz\n###fi\n\necho \"Listing current directory content\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/async_pass.sh"
        }
    ],
    "5db3166740484abdcf34609a316e07315dee1c6cd5f8eef6206353fdddaa3d91": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f \"setenv_extra.sh\" ]]; then\n    source setenv_extra.sh $RUNNUMBER $BEAMTYPE\nelse\n    echo \"************************************************************************************\"\n    echo \"No specific setenv_extra settings for the current async processing; utilizing the default one from O2DPG\"\n    echo \"************************************************************************************\"\n    if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh ]]; then\n\tln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh\n\tsource setenv_extra.sh $RUNNUMBER $BEAMTYPE\n    else\n\techo \"*********************************************************************************************************\"\n\techo \"No setenv_extra for $ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME found in O2DPG\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/async_pass.sh"
        }
    ],
    "fe547eb1351f62b2188d111f0f10f504fc7aef3770078d1d2a37f0c9e6f6cf17": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"                No special settings will be applied\"\n\techo \"*********************************************************************************************************\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/async_pass.sh"
        }
    ],
    "1fb7f52ed93e9ca4ae146b5667fe37b1affef6edbb1b18e18b46fc741df44cae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Proceed with run-workflow-on-inputlist.sh macro provided as input\"\nelse\n    echo \"Use run-workflow-on-inputlist.sh macro from the O2 package\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Use dpl-workflow.sh from the O2 package\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Proceed with dpl-workflow.sh provided as input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    echo \"External QC json file is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/async_pass.sh"
        }
    ],
    "116aa0dea892ffb6899880f07c5b99314b23a6ec9c49402187e0ada07ffaaeaa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ln -sf $O2DPG_ROOT/DATA/common/setenv.sh\n\n# processing and matching\n# display workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=print DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list > workflowconfig.log\n# execute the workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=run DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list \n\n# subsequently, extract all performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/async_pass.sh"
        }
    ],
    "49ae26333499576b7d4612fe66b836e4b2d20799f75ecc54c89f04addcecdcd8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now checking the AO2D file\nif [[ -f \"AO2D.root\" ]]; then\n    root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n    exitcode=$?\n    if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from AO2D check is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D check is \" $exitcode\n\texit $exitcode\n    fi\nfi\n\n# copying the QC JSON file here\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\nelse\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n\techo \"copying the most recent file from ${GEN_TOPO_WORKDIR}/json_cache\"\n\tQC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n\techo \"No QC files found, possibly QC was not executed\"\n    fi\nfi\nif [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass3_zerofield/async_pass.sh"
        }
    ],
    "a26658d041989ebbd805d5d9f51fef2416123b421d7f69ea016bf378ca3b8d3f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to set additional environment variables\n# inheriting some configurations from alien\n\n# handling flags passed to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# detector list\nexport WORKFLOW_DETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT\n\n# specific settings for the CTF reader: we are on the grid, and the files are accessed remotely\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"--remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi\n# further specific settings for the CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "5b22021c88e8005016f0a8f2a858fc21694370ebe2852dbc95396d3a278af3e5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run-specific configurations\nif [[ -f \"setenv_run.sh\" ]]; then\n    source setenv_run.sh \nelse\n    echo \"************************************************************\"\n    echo No specific run-dependent settings for current asynchronous processing\n    echo \"************************************************************\"\nfi\n\n# disable monitoring-backend\nexport ENABLE_METRICS=1\n\n# include performance metrics\n#export ARGS_ALL_EXTRA=\" --resources-monitoring 10 --resources-monitoring-dump-interval 10\"\nexport ARGS_ALL_EXTRA=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "216d8c5a3df44e707d9730f89add35d169cc44e7c8fe3a262aa00006f301af27": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# shared settings across multiple workflows\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2;\"\n\nexport MFT_STROBELGT=\"MFTAlpideParam.roFrameLengthInBC=198\"\n\n# specific options for the ITS reconstruction workflow\nexport ITS_CONFIG=\" --tracking-mode sync_misaligned\"\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "0c6511b37bd6b956d7378ee2ead8b717da0f483ed98a6ff77980ab86556f0615": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc parameters for GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"$VDRIFT;GPU_global.dEdxUseFullGainMap=1;GPU_global.dEdxDisableResidualGainMap=1\"\n\n# ad-hoc configurations for TOF reconstruction\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb --ccdb-url-tof \\\"http://alice-ccdb.cern.ch\\\"\"\n# effective from the commit on December 4\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "39ed1ba16cb91c9ad38836e59f57e61a543f8bc7c988f637a88d727d631ef93c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# custom settings for primary vertex workflow\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as per comment on https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "5a163efe9823a5ea06f60d15a4bb4d7a8389dd7229686e9f6039f79182ca8303": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1.;pvertexer.dbscanAdaptCoef=20.\"\nexport SVTX=\"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "b090908fe9a78d7f71ee9c38094457d1097f117509ea209cd639f7b7e2d07582": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"$VDRIFT;$PVERTEXER;$MFT_STROBELGT\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow=\"$SVTX\"\n\n# customized parameters for ITSTPC matching\nexport ITSTPCMATCH=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow=\"$VDRIFT;$ITSEXTRAERR;$ITSTPCMATCH\"\n\n# customized parameters for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"--output-type matching-info,calib-info --enable-dia\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow=\"$VDRIFT;$ITSEXTRAERR\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "ccedf75982e830cb181bb19cac749592a467c5e8d25889fa88e8709b8226e139": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Custom configurations for TRD matching\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking=\"$VDRIFT;$ITSEXTRAERR\"\n\n# Custom configurations for FT0\nexport ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow=\"--ft0-reconstructor\"\n\n# Custom configurations for FV0\nexport ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow=\"--fv0-reconstructor\"\n\n# Custom configurations for FDD\n#...\n\n# Custom configurations for MFT \nexport CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow=\"$MFT_STROBELGT;MFTTracking.forceZeroField=true;MFTTracking.FullClusterScan=true;MFTTracking.LTFclsRCut=0.2;\"\nexport ARGS_EXTRA_PROCESS_o2_mft_reco_workflow=\" --run-assessment \"\n\n# Enabling AOD\nexport WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\n\n# Custom configurations for AOD\n#...",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "c0d181e0469a0c57028edd9f975cddf09c6f322dd6d8681137aad8c151d952ee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for AOD\n#...\n\n# Enabling Quality Control\nexport WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values \\\"qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD\\\"\"\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/setenv_extra.sh"
        }
    ],
    "836270d14fc5ea56299471199ffdf3190564b1b76b6a79a8118f441c405e0c20": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script for initiating asynchronous processing\n#\n# If running locally, ensure you export variables like:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass4\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "3beeed9acbad57973b2da043d1b6d053898d80a88b521ca6510071f6a89904af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\n# then we replace the values if they are present in the jdl\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\nfi\n\n# pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "6b187aa32eabb6765c3f800f479aba2e09168959959989b286fa1ec5777898f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"Verify the required environment variables: RUNNUMBER (--> $RUNNUMBER), PERIOD (--> $PERIOD), PASS (--> $PASS), BEAMTYPE (--> $BEAMTYPE)\"\n    exit 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\n###if [[ $MODE == \"remote\" ]]; then \n    # common archive\n    if [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, exiting\"\n\texit 2\n    fi\n    # run specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"runInput_$RUNNUMBER.tgz not found, exiting\"\n\texit 2\n    fi\n    tar -xzvf commonInput.tgz\n    tar -xzvf runInput_$RUNNUMBER.tgz\n###fi\n\necho \"Listing current directory content\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "bd3ee28cc0d7f68c26261e3216ea7a7bc3c10860f9c5f6dff0f76526f1181933": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [[ -f \"setenv_extra.sh\" ]]; then\n        source setenv_extra.sh $RUNNUMBER $BEAMTYPE\n    else\n        echo \"************************************************************************************\"\n        echo \"No ad-hoc setenv_extra settings for current asynchronous processing; using the default one in O2DPG\"\n        echo \"************************************************************************************\"\n        if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh ]]; then\n            ln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh\n            source setenv_extra.sh $RUNNUMBER $BEAMTYPE\n        else\n            echo \"*********************************************************************************************************\"\n            echo \"No setenv_extra for $ALIEN_JDL_LPMANCHORYEAR/$ALIEN_JDL_LPMPRODUCTIONTAG/$ALIEN_JDL_LPMPASSNAME in O2DPG\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "a0bee9ac071a22007ac917be2a5ef113955032abb9ded552857afbba579b5795": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"                No special settings will be applied\"\n\techo \"*********************************************************************************************************\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "1f44b2db5fb67b69be319b623a4662140a51cb54011db32f7f817f2ede737d19": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Use the run-workflow-on-inputlist.sh macro provided as input\"\nelse\n    echo \"Use the run-workflow-on-inputlist.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Use dpl-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Use the dpl-workflow.sh macro provided as input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    echo \"QC json from outside is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "89557ee66f771879ad622029b5e6934a373355d3de67245fa030462cc038baef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\n# reconstruction and matching\n# display workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=print DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list > workflowconfig.log\n# execute the workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=run DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list \n\n# now extract all performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "cd6c95f1126a46878fb1803b19302248de23c8909cd0013992f48884ec1679d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now checking AO2D file\nif [ -f \"AO2D.root\" ]; then\n    root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n    exitcode=$?\n    if [ $exitcode -ne 0 ]; then\n\techo \"exit code from AO2D check is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D check is \" $exitcode\n\texit $exitcode\n    fi\n    ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py --merged-task -f AO2D.root\n    ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow_analysis_test.json > analysisQC.log\n    if [ -f \"Analysis/MergedAnalyses/AnalysisResults.root\" ]; then\n\tmv Analysis/MergedAnalyses/AnalysisResults.root .\n    else\n\techo \"No Analysis/MergedAnalyses/AnalysisResults.root found! check analysis QC\"\n    fi\n    if ls Analysis/*/*.log 1> /dev/null 2>&1; then\n\tmv Analysis/*/*.log .\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "217bc210d2010fc38e423e0c7ed811f8962945e5c48ed4c3ff63580c7ec67a6a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# copying the QC json file here\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\nelse\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n\techo \"copying the most recent file from ${GEN_TOPO_WORKDIR}/json_cache\"\n\tQC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n\techo \"No QC files detected, possibly due to QC not being run\"\n    fi\nfi\nif [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2021/OCT/apass4/async_pass.sh"
        }
    ],
    "9359c701e62cced0e29b27d99cc0fd592e80bbac7437ec7b8776774de68e0cdd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to configure additional environment variables\n# some parameters are imported from alien\n\n# handling process flags provided to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# to prevent memory issues\nexport DPL_DEFAULT_PIPELINE_LENGTH=16\n\n# list of detectors\nexport WORKFLOW_DETECTORS=ITS,TPC,TOF,TRD\n\n# customized settings for CTF reader: we are on the grid and accessing files remotely\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"--remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/setenv_extra.sh"
        }
    ],
    "6349b2c4be3eb90271f492731ff8b958ea2a4c6bb2661a8a1b5d5c11ca414152": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# additional custom settings for CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors $REMAPPING\"\necho RUN = $RUNNUMBER\nif [[ $RUNNUMBER -ge 521889 ]]; then\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --its-digits --mft-digits\"\n  export DISABLE_DIGIT_CLUSTER_INPUT=\"--digits-from-upstream\"\n  MAXBCDIFFTOMASKBIAS_ITS=\"ITSClustererParam.maxBCDiffToMaskBias=10\"\n  MAXBCDIFFTOMASKBIAS_MFT=\"MFTClustererParam.maxBCDiffToMaskBias=10\"\nfi\n\n# disable the monitoring-backend\nexport ENABLE_METRICS=1\n\n# include performance metrics\n#export ARGS_ALL_EXTRA=\" --resources-monitoring 10 --resources-monitoring-dump-interval 10\"\nexport ARGS_ALL_EXTRA=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/setenv_extra.sh"
        }
    ],
    "429d89776e423fd51ba8374525e719111f8603cd5fdb75780d21a44b4a823171": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# shared settings across multiple workflows\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2;\"\n\n# custom parameters for the ITS reconstruction workflow\nexport ITS_CONFIG=\" --tracking-mode sync_misaligned\"\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2;$MAXBCDIFFTOMASKBIAS_ITS\"\n\n# specific configurations for the GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_global.dEdxDisableResidualGainMap=1;$VDRIFTPARAMOPTION;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/setenv_extra.sh"
        }
    ],
    "e914fb1926d76af3d1551953219a49e29d9c5f9b51ade18a97104bc7c15633ed": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for TOF reconstruction\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb --ccdb-url-tof \\\"https://alice-ccdb.cern.ch\\\"\"\n# effective from the commit on December 4\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb\"\n\n# ad-hoc parameters for primary vertex workflow\nexport PVERTEXER=\"pvertexer.maxChi2TZDebris=10;pvertexer.acceptableScale2=9;pvertexer.minScale2=2;\"\n\n# secondary vertexing parameters\nexport SVTX=\"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"\n\nexport CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"$PVERTEXER;$VDRIFTPARAMOPTION;pvertexer.meanVertexExtraErrConstraint=0.3\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow=\"$SVTX\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/setenv_extra.sh"
        }
    ],
    "f003c45578c50152a2835da5669d58c67c8ee44e2b49643c3dafa2925b70473b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# customized parameters for TPC-ITS alignment\nexport ITSTPCMATCH=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow=\"$ITSEXTRAERR;$ITSTPCMATCH;$VDRIFTPARAMOPTION;\"\n# enabling AfterBurner\nif [[ $WORKFLOW_DETECTORS =~ (^|,)\"FT0\"(,|$) ]] ; then\n  export ARGS_EXTRA_PROCESS_o2_tpcits_match_workflow=\"--use-ft0\"\nfi\n\n# customized settings for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"--output-type matching-info,calib-info --enable-dia\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow=\"$ITSEXTRAERR;$VDRIFTPARAMOPTION;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/setenv_extra.sh"
        }
    ],
    "91268b224e24f63ca9c5e2b85da81247e367713f75f5c26b43df1ed97965eeb0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for TRD matching\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking=\"$ITSEXTRAERR;$VDRIFTPARAMOPTION;\"\n\n# configuration to store only contributors in the association container for the primary vertex output\nexport VERTEX_TRACK_MATCHING_SOURCES=none",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/setenv_extra.sh"
        }
    ],
    "5c6d127034db93ca408066e500126b1d681b2f5020acf91e87a152b1ff254312": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script to execute asynchronous processing\n#\n# For local execution, you may need to export variables like:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass4\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n\n# To bypass positional argument parsing before randomizing.\ninputarg=\"${1}\"\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi\n\n# Sometimes it's necessary to iterate over a subset of input files\n#\n[ -z ${ALIEN_JDL_INPUTFILELIMIT} ] && ALIEN_JDL_INPUTFILELIMIT=$(cat list.list|wc -l)\nhead -${ALIEN_JDL_INPUTFILELIMIT} list.list > list.listtmp && mv list.listtmp list.list\necho \"Will process ${ALIEN_JDL_INPUTFILELIMIT} input files\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "c4d5c738a1217bb8c62d3e7e3223740d17dc96c264375cea5ee648108ef14497": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\n# then we update these variables if they were found in the jdl\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# for the beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# for the period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\n    if [[ -n \"$ALIEN_JDL_O2DPGPATH\" ]]; then\n      export O2DPGPATH=\"$ALIEN_JDL_O2DPGPATH\"\n    else\n      export O2DPGPATH=\"$PERIOD\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "b488cd83bc95c36178917f12d2c0888fad4cb12c8920573d222492ddf4d0aa39": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"verify the necessary environment variables: RUNNUMBER (--> $RUNNUMBER), PERIOD (--> $PERIOD), PASS (--> $PASS), BEAMTYPE (--> $BEAMTYPE)\"\n    exit 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "bca4cce8cc3749a98f321b4e99f67d5f505c4b1e5ad1f80ffed78a1436dd91f5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\n###if [[ $MODE == \"remote\" ]]; then\n    # common archive\n    if [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, exiting\"\n\texit 2\n    fi\n    tar -xzvf commonInput.tgz\n    SELECTSETTINGSSCRIPT=\"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/selectSettings.sh\"\n    if [[ -f \"selectSettings.sh\" ]]; then\n      SELECTSETTINGSSCRIPT=\"selectSettings.sh\"\n    fi\n    source $SELECTSETTINGSSCRIPT\n    # run specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"runInput_$RUNNUMBER.tgz not found, we hope it's not necessary\"\n    else\n      tar -xzvf runInput_$RUNNUMBER.tgz\n    fi\n###fi\n\necho \"Reviewing current directory contents\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "c3268fbff9acfd840bb5f7e525161928e7e0c5b3f1be8797aa07d2b86616c48e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [[ -f \"setenv_extra.sh\" ]]; then\n    source setenv_extra.sh $RUNNUMBER $BEAMTYPE\nelse\n    echo \"************************************************************************************\"\n    echo \"No custom setenv_extra settings for current async processing; using the default one in O2DPG\"\n    echo \"************************************************************************************\"\n    if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/extractCalib/setenv_extra.sh ]]; then\n\tln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/extractCalib/setenv_extra.sh\n\tsource setenv_extra.sh $RUNNUMBER $BEAMTYPE\n    else\n\techo \"*********************************************************************************************************\"\n\techo \"No setenv_extra for $ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME in O2DPG\"\n\techo \"                No special settings will be applied\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "51ad572e159b443964f686b0f1eec766e685d9f1f3cee820c64b7d344481ef72": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "No specific settings will be applied\n\techo \"*********************************************************************************************************\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "9e4f870f0ec3b6b09a29da769156fba746f3acc0b0c338eefc34a5797bfc2e14": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Use run-workflow-on-inputlist.sh macro provided as input\"\nelse\n    echo \"Use run-workflow-on-inputlist.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Use dpl-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Use dpl-workflow.sh passed as input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    echo \"QC json from outside is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\n# TFDELAY and throttling settings\nexport TFDELAYSECONDS=40\nif [[ -n \"$ALIEN_JDL_TFDELAYSECONDS\" ]]; then\n  TFDELAYSECONDS=\"$ALIEN_JDL_TFDELAYSECONDS\"\n# ...otherwise, it depends on whether we have throttling enabled\nelif [[ -n \"$ALIEN_JDL_USETHROTTLING\" ]]; then\n  TFDELAYSECONDS=8\n  export TIMEFRAME_RATE_LIMIT=1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "611cbb0bf5694bca645f031970a3c59051be2dd95efc07607749d16887ca22d4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z \"$ALIEN_JDL_SHMSIZE\" ]]; then export SHMSIZE=$ALIEN_JDL_SHMSIZE; else export SHMSIZE=$(( 16 << 30 )) if [[ -z \"$SHMSIZE\" ]]; fi\nif [[ ! -z \"$ALIEN_JDL_DDSHMSIZE\" ]]; then export DDSHMSIZE=$ALIEN_JDL_DDSHMSIZE; else export DDSHMSIZE=$(( 32 << 10 )) if [[ -z \"$DDSHMSIZE\" ]]; fi\n\n# root output is activated in specific scenarios\n# maintaining AO2D.root, QC.root, o2calib_tof.root, mchtracks.root, and mchclusters.root\n\nSETTING_ROOT_OUTPUT=\"ENABLE_ROOT_OUTPUT_o2_primary_vertexing_workflow= ENABLE_ROOT_OUTPUT_o2_tfidinfo_writer_workflow= \"\n\nif [[ -n $ALIEN_INPUT_TYPE ]] && [[ \"$ALIEN_INPUT_TYPE\" == \"TFs\" ]]; then\n  export WORKFLOW_PARAMETERS=CTF\n  INPUT_TYPE=TF\n  if [[ $RUNNUMBER -lt 523141 ]]; then\n    export TPC_CONVERT_LINKZS_TO_RAW=1\n  fi\nelse\n  INPUT_TYPE=CTF\nfi\n\nkeep=0\n\nif [[ $keep -eq 1 ]]; then\n  SETTING_ROOT_OUTPUT+=\"DISABLE_ROOT_OUTPUT=0\";\nfi\necho \"SETTING_ROOT_OUTPUT = $SETTING_ROOT_OUTPUT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "733833641924c7446c0a7652b55f29a52c619afa60d8c69d7070e2b82550d76f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Enabling GPUs\nif [[ -n \"$ALIEN_JDL_USEGPUS\" ]]; then\n  echo \"Enabling GPUs\"\n  export GPUTYPE=\"HIP\"\n  export GPUMEMSIZE=$((25 << 30))\n  if [[ $keep -eq 0 ]]; then\n    export MULTIPLICITY_PROCESS_tof_matcher=2\n    export MULTIPLICITY_PROCESS_mch_cluster_finder=3\n    export MULTIPLICITY_PROCESS_tpc_entropy_decoder=2\n    export MULTIPLICITY_PROCESS_itstpc_track_matcher=3\n    export MULTIPLICITY_PROCESS_its_tracker=2\n  fi\n  export SHMSIZE=20000000000\n  export SHMTHROW=0\n  export TIMEFRAME_RATE_LIMIT=8\n  export OMP_NUM_THREADS=8\nelse\n  # David, October 13th\n  # the optimized settings for the 8-core GRID queue without GPU are\n  # (overwriting the values above)\n  #\n  export TIMEFRAME_RATE_LIMIT=3\n  export OMP_NUM_THREADS=5\n  export SHMSIZE=16000000000\nfi\n\necho \"[INFO (async_pass.sh)] envvars were set to TFDELAYSECONDS ${TFDELAYSECONDS} TIMEFRAME_RATE_LIMIT ${TIMEFRAME_RATE_LIMIT}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "1440ed808e21df002971b03f08dc11b4594511bd4581b1b6c31a463d26442a35": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# documentation for reconstruction and matching\n# display workflow\nenv $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS NTIMEFRAMES=-1 ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list > workflowconfig.log\n# execute\nenv $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS NTIMEFRAMES=-1 ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n\n# subsequently, extract all performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/extractCalib/async_pass.sh"
        }
    ],
    "1d03ed203ba9b9f291a4d2622ad0b49a482128b4d4753f17b56aa38ef33366ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nDETSTOREPACK=\"FT0,FV0,FDD\"\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi\n\n# customized configuration for CTF reader\necho -e \"\\n*** mode = ${MODE} ***\\n\"\nCTFREADEROPT=\nif [[ $MODE == \"remote\" ]]; then\n  CTFREADEROPT=\" --copy-cmd no-copy \"\nfi\n\nTIMEFRAME_RATE_LIMIT=500\nGLOBALDPLOPT=\"--timeframes-rate-limit $TIMEFRAME_RATE_LIMIT --timeframes-rate-limit-ipcid 0\"\n\nWORKFLOW=\"o2-ctf-reader-workflow $CTFREADEROPT --ctf-input list.list --onlyDet $DETSTOREPACK --allow-missing-detectors $GLOBALDPLOPT | o2-ctf-writer-workflow --onlyDet $DETSTOREPACK --min-file-size 2000000000 $GLOBALDPLOPT -b\"\n\necho \"Printing workflow:\"\necho -e \"$WORKFLOW \\n\"\n\necho $WORKFLOW | bash",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/repackCTFs/repackCTFs.sh"
        }
    ],
    "19c8be824404b57df83ba29693ee7d605d510b2242227980d65eb38b2f26e45a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# default value\nGRPMAG=o2sim_grp_b5m_128HB.root\n\nif [[ $RUNNUMBER -le 518547 ]]; then\n  # default B GRP until run 518547\n  GRPMAG=o2sim_grp_b5m_128HB.root\nfi\n\n# LHC22e: runs from 519041 to 520099\nif [[ $RUNNUMBER -ge 519041 ]] && [[ $RUNNUMBER -le 520099 ]]; then\n  # +30kA/+6kA\n  GRPMAG=o2sim_grp_b5p_128HB.root\nfi\n\n# LHC22f: runs from 520143 to 520473\nif [[ $RUNNUMBER -ge 520143 ]] && [[ $RUNNUMBER -le 520473 ]]; then\n  # +30kA/+6kA\n  GRPMAG=o2sim_grp_b5p_128HB.root\nfi\n\n# LHC22g: runs from 520474 to 520477\nif [[ $RUNNUMBER -ge 520474 ]] && [[ $RUNNUMBER -le 520477 ]]; then\n  # +12kA/+6kA\n  GRPMAG=o2sim_grp_b2p_128HB.root\nfi\n\n# LHC22h: runs from 520495 to 520509\nif [[ $RUNNUMBER -ge 520495 ]] && [[ $RUNNUMBER -le 520509 ]]; then\n  # 0kA/0kA\n  GRPMAG=o2sim_grp_b0_128HB.root\nfi\n\n# LHC22i: runs from 520529 to 520542\nif [[ $RUNNUMBER -ge 520529 ]] && [[ $RUNNUMBER -le 520542 ]]; then\n  # -12kA/-6kA\n  GRPMAG=o2sim_grp_b2m_128HB.root\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/selectSettings.sh"
        }
    ],
    "b76f9adf5d32641a9f08e41efe727a4b4e0e92f6ade1e1ba5b0ec634954d6854": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# LHC22j: 520543 - 521150\nif [[ $RUNNUMBER -ge 520543 ]] && [[ $RUNNUMBER -le 521150 ]]; then\n  # -30kA/-6kA\n  GRPMAG=o2sim_grp_b5m_128HB.root\nfi\n\n# LHC22m: 521326 - 521907\nif [[ $RUNNUMBER -ge 521326 ]]; then\n  # -30kA/-6kA\n  GRPMAG=o2sim_grp_b5m_128HB.root\nfi\n\necho \"GRP B field = $GRPMAG\"\n\nln -s $GRPMAG o2sim_grp.root",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/selectSettings.sh"
        }
    ],
    "7f6fe1569bc94699e97646ee152633ee322126ee5129cee83c9c92d42de5ec25": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nline=$(grep $1 $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/ctf2epn.txt)\necho \"line found in file = $line\"\nif [[ -z $line ]]; then\n  echo \"CTF file not found in the list, no remapping needed\"\n  export remappingITS=0\n  export remappingMFT=0\n  echo \"remappingITS = $remappingITS, remappingMFT = $remappingMFT\"\nelse\n  epn=$(echo $line | cut -d' ' -f1)\n  start=$(echo $line | cut -d' ' -f2)\n  echo \"epn = $epn\"\n  echo \"start of CTF data = $start\"\n\n  lineTimes=$(grep ${epn} $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/goodITSMFT_fixed.txt)\n  echo \"lineTimes = $lineTimes\"\n  goodITS=$(echo $lineTimes | cut -d' ' -f2)\n  echo \"goodITS = $goodITS\"\n  goodMFT=$(echo $lineTimes | sed 's/^[0-9][0-9][0-9] \\(2022-[0-9]*-[0-9]*-[0-9]*-[0-9]*-[0-9]*\\) \\(2022-[0-9]*-[0-9]*-[0-9]*-[0-9]*-[0-9]*\\)/\\2/')\n  echo \"goodMFT = $goodMFT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/parse.sh"
        }
    ],
    "398d5e4bd2440811f9c83667a764d49e68e61f8e3c3d270afcc830d9241de2b3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    startmonth=`echo $start | cut -d'-' -f2`\n  startday=`echo $start | cut -d'-' -f3`\n  starthour=`echo $start | cut -d'-' -f4`\n  startminute=`echo $start | cut -d'-' -f5`\n  startsecond=`echo $start | cut -d'-' -f6`\n\n  goodITSmonth=`echo $goodITS | cut -d'-' -f2`\n  goodITSday=`echo $goodITS | cut -d'-' -f3`\n  goodITShour=`echo $goodITS | cut -d'-' -f4`\n  goodITSminute=`echo $goodITS | cut -d'-' -f5`\n  goodITSsecond=`echo $goodITS | cut -d'-' -f6`\n\n  goodMFTmonth=`echo $goodMFT | cut -d'-' -f2`\n  goodMFTday=`echo $goodMFT | cut -d'-' -f3`\n  goodMFThour=`echo $goodMFT | cut -d'-' -f4`\n  goodMFTminute=`echo $goodMFT | cut -d'-' -f5`\n  goodMFTsecond=`echo $goodMFT | cut -d'-' -f6`\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/parse.sh"
        }
    ],
    "5773c4c654971c89aef0e200176d8f9739370cbe4d27b644455ceadb285abf8f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "display \"good ITS: month = $goodITSmonth, day = $goodITSday, hour = $goodITShour, minute = $goodITSminute, seconds = $goodITSsecond\"\n    display \"good MFT: month = $goodMFTmonth, day = $goodMFTday, hour = $goodMFThour, minute = $goodMFTminute, seconds = $goodMFTsecond\"\n    display \"checking: month = $startmonth, day = $startday, hour = $starthour, minute = $startminute, seconds = $startsecond\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/parse.sh"
        }
    ],
    "5a1b0d1e478ada4842e36b93e841d8c2e7b049325e6bcfbd1b8d9d0d2963b72e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# check for ITS\nif [[ $startmonth < $goodITSmonth ]]; then\n  echo \"month initiates remappingITS\"\n  remappingITS=1\nelif [[ $startmonth == $goodITSmonth ]]; then\n  if [[ $startday < $goodITSday ]]; then\n    echo \"day initiates remappingITS\"\n    remappingITS=1\n  elif [[ $startday == $goodITSday ]]; then\n    if [[ $starthour < $goodITShour ]]; then\n      echo \"hour initiates remappingITS\"\n      remappingITS=1\n    elif [[ $starthour == $goodITShour ]]; then\n      if [[ $startminute < $goodITSminute ]]; then\n        echo \"minute initiates remappingITS\"\n        remappingITS=1\n      elif [[ $startminute == $goodITSminute ]]; then\n        if [[ $startsecond -le $goodITSsecond ]]; then\n          echo \"second initiates remappingITS\"\n          remappingITS=1\n        else\n          echo \"month, day, hour, and minute would initiate remapping for ITS, but seconds exceed the threshold for triggering remapping\"\n        fi\n      else\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/parse.sh"
        }
    ],
    "bb574e2358890c942f27108d33e84b52900b1fceb21b5628bf2db6b58825e500": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "else\n  echo \"month, day, hour would trigger remapping, but the minutes exceed the necessary threshold for ITS remapping\"\nfi\nelse\n  echo \"month, day would trigger remapping, but the hours exceed the necessary threshold for ITS remapping\"\nfi\nelse\n  echo \"month would trigger remapping, but the days exceed the necessary threshold for ITS remapping\"\nfi\nelse\n  echo \"the start month is later than the threshold needed to trigger remapping for ITS\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/parse.sh"
        }
    ],
    "873c16db99cbb29a9a577f1d4793da7d2b39b7b6ad42b05f79005fad949ad965": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  if [[ $startmonth < $goodMFTmonth ]]; then\n    echo \"month triggers remappingMFT\"\n    remappingMFT=1\n  elif [[ $startmonth == $goodMFTmonth ]]; then\n    if [[ $startday < $goodMFTday ]]; then\n      echo \"day triggers remappingMFT\"\n      remappingMFT=1\n    elif [[ $startday == $goodMFTday ]]; then\n      if [[ $starthour < $goodMFThour ]]; then\n\techo \"hour triggers remappingMFT\"\n\tremappingMFT=1\n      elif [[ $starthour == $goodMFThour ]]; then\n\tif [[ $startminute < $goodMFTminute ]]; then\n\t  echo \"minute triggers remappingMFT\"\n\t  remappingMFT=1\n\telif [[ $startminute == $goodMFTminute ]]; then\n\t  if [[ $startsecond -le $goodMFTsecond ]]; then\n\t    echo \"second triggers remappingMFT\"\n\t    remappingMFT=1\n\t  else\n\t    echo \"month, day, hour, and minute would trigger remapping, but seconds are larger than the threshold needed for remapping MFT\"\n\t  fi\n\telse",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/parse.sh"
        }
    ],
    "d7b4c046dcb97bdba095573ea7fb01b5cc0fc6b2118ed44ca8940a7ac1dacf3e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fi\n\telse\n\t  echo \"month, day, hour would trigger remapping, but minutes exceed the threshold for MFT remapping\"\n\tfi\n      else\n\techo \"month, day would trigger remapping, but hours exceed the threshold for MFT remapping\"\n      fi\n    else\n      echo \"month, would trigger remapping, but days exceed the threshold for MFT remapping\"\n    fi\n  else \n    echo \"start month is later than the threshold needed for MFT remapping\"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/parse.sh"
        }
    ],
    "7c22a55f66f9753d49c4dc2cfcb4c8cadc9d4d60cd0060d3b1e9de384e3e709e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"start = $start, ITS is good = $goodITS, MFT is good = $goodMFT, ITS remapping = $remappingITS, MFT remapping = $remappingMFT\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/parse.sh"
        }
    ],
    "a32fb6b1ea8d622117389524845e823ffea77e48ebe3f9c0d3a65803f13bade8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to define additional environment variables\n# utilizing some configurations from the alien system\n\n# handling the flags that are passed to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# to prevent memory problems\nexport DPL_DEFAULT_PIPELINE_LENGTH=16\n\n# specifying the detector list\nexport WORKFLOW_DETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,HMP,EMC,PHS,CPV\n\n# custom settings for the CTF reader: we are on the grid, and we access files remotely\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"--remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "6b8740d4d5964e6715e35cae0d8d6f59d84fa95487489d99236c26f00569a1a4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verifying remapping process\nif [[ $remappingITS == 1 ]] || [[ $remappingMFT == 1 ]]; then\n  REMAPPING=\"--condition-remap \\\"http://alice-ccdb.cern.ch/RecITSMFT=\"\n  if [[ $remappingITS == 1 ]]; then\n    REMAPPING=$REMAPPING\"ITS/Calib/ClusterDictionary\"\n    if [[ $remappingMFT == 1 ]]; then\n      REMAPPING=$REMAPPING\",\"\n    fi\n  fi\n  if [[ $remappingMFT == 1 ]]; then\n    REMAPPING=$REMAPPING\"MFT/Calib/ClusterDictionary\"\n  fi\n  REMAPPING=$REMAPPING\\\"\nfi\n\necho remapping = $REMAPPING\n\n# additional settings for CTF reader\nexportARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors $REMAPPING\"\n\n# run-specific options\nif [[ -f \"setenv_run.sh\" ]]; then\n    source setenv_run.sh \nelse\n    echo \"************************************************************\"\n    echo No run-specific ad-hoc settings for current asynchronous processing\n    echo \"************************************************************\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "85964697ab7b386854f8c6d8bddd1b7602ffd315455e3547b416823dd9ca0995": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TPC vdrift\nCCDB_TPC_VDRIFT=\"http://ccdb-test.cern.ch:8080\"\nif [[ $RUNNUMBER -ge 518737 ]]; then\n  CCDB_TPC_VDRIFT=\"http://alice-ccdb.cern.ch\"\nfi\necho \"CCDB for TPC Vdrift = $CCDB_TPC_VDRIFT\"\nroot -b -q \"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/getTPCvdrift.C+($RUNNUMBER, \\\"$CCDB_TPC_VDRIFT\\\" )\"\nexport VDRIFT=`cat vdrift.txt`\n\n# remove monitoring-backend\nexport ENABLE_METRICS=1\n\n# add performance metrics\n#export ARGS_ALL_EXTRA=\" --resources-monitoring 10 --resources-monitoring-dump-interval 10\"\nexport ARGS_ALL_EXTRA=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "a6e123de1d3d869a33ec19d533050e38d3727ce33739e306eb628d579ec956cc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# common settings across workflows\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2;\"\n\nexport MFT_STROBELGT=\"MFTAlpideParam.roFrameLengthInBC=198\"\n\n# custom options for the ITS reconstruction workflow\nexport ITS_CONFIG=\" --tracking-mode sync_misaligned\"\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "4c20f9a9ac26106e383a1fcdff026088b56f8eb2fc91be307c115a84a2a529bd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc options for GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"TPCGasParam.DriftV=$VDRIFT;GPU_global.dEdxDisableResidualGainMap=1\"\n\n# ad-hoc settings for TOF reconstruction\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb --ccdb-url-tof \\\"http://alice-ccdb.cern.ch\\\"\"\n# effective since commit on December 4\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "db8ffbe741a4f4735215be9ec4deb23267e4604da536ffb5bca6072ba5a9afdc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for primary vertex workflow\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as per the comment from https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "7d0e7700a4b713ac0ee01b55117c3a212575d0bdc02fdf7402b3560146ad55e8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1.;pvertexer.dbscanAdaptCoef=20.\"\nexport SVTX=\"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "aa7f6f3330742a25838264a25ecb8d50dea8606c11ea6eb2d829772249ddfd4d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"TPCGasParam.DriftV=$VDRIFT;$PVERTEXER;$MFT_STROBELGT\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow=\"$SVTX\"\n\n# custom settings for ITS-TPC matching\nexport ITSTPCMATCH=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow=\"TPCGasParam.DriftV=$VDRIFT;$ITSEXTRAERR;$ITSTPCMATCH\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "fd7221b395c59309b7e42dca754c34b7d437183e351ea05f6390b15d6ebf0fad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc configurations for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"--output-type matching-info,calib-info --enable-dia\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow=\"TPCGasParam.DriftV=$VDRIFT;$ITSEXTRAERR\"\n\n# ad-hoc configurations for TRD matching\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking=\"TPCGasParam.DriftV=$VDRIFT;$ITSEXTRAERR\"\n\n# ad-hoc configurations for FT0\nexport ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow=\"--ft0-reconstructor\"\n\n# ad-hoc configurations for FV0\nexport ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow=\"--fv0-reconstructor\"\n\n# ad-hoc configurations for FDD\n#...\n\n# ad-hoc configurations for MFT\nexport CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow=\"$MFT_STROBELGT;MFTTracking.forceZeroField=true;MFTTracking.FullClusterScan=true;MFTTracking.LTFclsRCut=0.2;\"\nexport ARGS_EXTRA_PROCESS_o2_mft_reco_workflow=\" --run-assessment \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "e32a997e8fcfd34ad821c1b34493f207f8c09a3f3b2e86aea513d9df5a593a18": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# customized parameters for MCH\nexport CONFIG_EXTRA_PROCESS_o2_mch_reco_workflow=\"MCHClustering.lowestPadCharge=15;MCHTracking.chamberResolutionX=0.4;MCHTracking.chamberResolutionY=0.4;MCHTracking.sigmaCutForTracking=7;MCHTracking.sigmaCutForImprovement=6;MCHDigitFilter.timeOffset=126\"\n\n# activation of AOD\nexport WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\n\n# customized parameters for AOD\n#...\n\n# activation of QC\nexport WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values \\\"qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD\\\"\"\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/setenv_extra.sh"
        }
    ],
    "5e9b89c19fc4e4eabfe96b76f13ea8abea36b3a58efe0f42d56fb83bd5440010": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script for initiating asynchronous processing\n#\n# For local execution, you must set environment variables such as:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass4\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "83cce4fd7bf4814f988e7ca1059028d16ec002984dfa067a56cc1729efbf23f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\n# we will override these with values from the jdl if they exist\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "04085fc9f9425a8abb9d997daee523e799056d633ff5b062eab11bec195c086f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\n    export O2DPGPATH=\"$PERIOD\"\n    ( [[ $ALIEN_JDL_LPMPRODUCTIONTAG == MAY ]] || [[ $ALIEN_JDL_LPMPRODUCTIONTAG == JUN ]] || [[ $ALIEN_JDL_LPMPRODUCTIONTAG == LHC22c ]] || [[ $ALIEN_JDL_LPMPRODUCTIONTAG == LHC22d ]] || [[ $ALIEN_JDL_LPMPRODUCTIONTAG == LHC22e ]] ) && O2DPGPATH=\"MayJunePilotBeam\"\nfi\n\n# pass\nif [[ -n \"$ALIEN_JDL_O2DPGPASSPATH\" ]]; then\n  export PASS=\"$ALIEN_JDL_O2DPGPASSPATH\"\nelse\n  if [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\n  fi\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"verify the required environment variables: RUNNUMBER (currently $RUNNUMBER), PERIOD (currently $PERIOD), PASS (currently $PASS), and BEAMTYPE (currently $BEAMTYPE)\"\n    exit 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "778c21209cadb6f65a571adeb645f5a2a668543fc186c162224ee25a28b8af67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\n###if [[ $MODE == \"remote\" ]]; then \n    # common archive\n    if [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, exiting\"\n\texit 2\n    fi\n    tar -xzvf commonInput.tgz\n    SELECTSETTINGSSCRIPT=\"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/selectSettings.sh\"\n    if [[ -f \"selectSettings.sh\" ]]; then\n      SELECTSETTINGSSCRIPT=\"selectSettings.sh\"\n    fi\n    source $SELECTSETTINGSSCRIPT\n    # run specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"runInput_$RUNNUMBER.tgz not found, hopefully we won't need it\"\n    else \n      tar -xzvf runInput_$RUNNUMBER.tgz\n    fi\n###fi\n\necho \"Listing current directory content\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "9b4dcfc8b38494da31df864b1081762dc0fd9a29b6c9a76020fc8a7f1c1ac0af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Verifying the content of the current directory\"\nls -altr \n\n# determining if Cluster Dictionaries should be remapped for ITS and MFT\n# required only up to run 517224 (subsequent runs are already mapped in ctf2epn, not relevant for async reco)\nPARSESCRIPT=\"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/parse.sh\"\nif [[ -f \"parse.sh\" ]]; then\n  PARSESCRIPT=\"parse.sh\"\nfi\nif [[ $RUNNUMBER -le 517224 ]]; then\n  source $PARSESCRIPT `cat list.list`\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "3a6ab8995943992a1f297ff77687c195a6472a1fff96ce1b91f906dd75071e6c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f \"setenv_extra.sh\" ]]; then\n    source setenv_extra.sh $RUNNUMBER $BEAMTYPE\nelse\n    echo \"************************************************************************************\"\n    echo \"No ad-hoc setenv_extra settings for current async processing; using the default one in O2DPG\"\n    echo \"************************************************************************************\"\n    if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh ]]; then\n\tln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh\n\tsource setenv_extra.sh $RUNNUMBER $BEAMTYPE\n    else\n\techo \"*********************************************************************************************************\"\n\techo \"No setenv_extra for $ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME in O2DPG\"\n\techo \"                No special settings will be applied\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "5b264327f9e89b75989c548ed0e9d9025a8b2a67b39203377d2065b42fae3866": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"                No specific settings will be applied\"\n\techo \"*********************************************************************************************************\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "d81ab872f64175c9593676c9acb1ba1f040a8e7b0ca1619985ac80af2d31f4be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Use the run-workflow-on-inputlist.sh macro provided as input\"\nelse\n    echo \"Use the run-workflow-on-inputlist.sh macro from the O2 package\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Use the dpl-workflow.sh macro from the O2 package\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Use the dpl-workflow.sh macro provided as input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    echo \"QC JSON from outside is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "f78203deacbd3d67f93491182019377f378a811518a03d5cea501618706254bc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\n# reconstruction and matching\n# display workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=print DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list > workflowconfig.log\n# execute the process\nIS_SIMULATED_DATA=0 WORKFLOWMODE=run DISABLE_ROOT_OUTPUT=\"\" TFDELAY=40 NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list\n\n# now extract all performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\nfi\n\n# toggle for potential Analysis QC\n[[ -z ${ALIEN_JDL_RUNANALYSISQC+x} ]] && ALIEN_JDL_RUNANALYSISQC=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "57c1c04de3b16dd5a233a456fe90f15453bce09c16f5c57d123fc39f86922078": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now verifying the AO2D file\nif [[ -f \"AO2D.root\" ]]; then\n    root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n    exitcode=$?\n    if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from AO2D verification is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D verification is \" $exitcode\n\texit $exitcode\n    fi\n    if [[ $ALIEN_JDL_RUNANALYSISQC == 1 ]]; then \n      ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py --merged-task -f AO2D.root\n      ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow_analysis_test.json > analysisQC.log\n      if [[ -f \"Analysis/MergedAnalyses/AnalysisResults.root\" ]]; then\n\tmv Analysis/MergedAnalyses/AnalysisResults.root .\n      else\n\techo \"No Analysis/MergedAnalyses/AnalysisResults.root found! check analysis QC\"\n      fi\n      if ls Analysis/*/*.log 1> /dev/null 2>&1; then\n\tmv Analysis/*/*.log .\n      fi\n    else\n      echo \"Analysis QC will not be run, ALIEN_JDL_RUNANALYSISQC = $ALIEN_JDL_RUNANALYSISQC\"\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "cba92966cc4a6073059a6b907f98962bb053e5292d78870568d84d65b6b7a60b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Analysis QC will not be executed, as ALIEN_JDL_RUNANALYSISQC = $ALIEN_JDL_RUNANALYSISQC\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "2b3109aac72ba2e2a68289c9ebf531f8804e6b5b5978dc4095830aa71baac57d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# transferring the QC json file to the current directory\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\nelse\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n\techo \"transferring the most recent file from ${GEN_TOPO_WORKDIR}/json_cache\"\n\tQC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n\techo \"No QC files detected, possibly QC was not executed\"\n    fi\nfi\nif [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass1/async_pass.sh"
        }
    ],
    "c7761793256e0597dbca8f7fd4893403841e5aeb5c9d06f26226b52de383da39": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# default file\nGRPMAG=o2sim_grp_b5m_128HB.root\n\nif [[ $RUNNUMBER -le 518547 ]]; then\n  # use default B GRP until run 518547\n  GRPMAG=o2sim_grp_b5m_128HB.root\nfi\n\n# LHC22e: runs 519041 to 520099\nif [[ $RUNNUMBER -ge 519041 ]] && [[ $RUNNUMBER -le 520099 ]]; then\n  # with +30kA/+6kA\n  GRPMAG=o2sim_grp_b5p_128HB.root\nfi\n\n# LHC22f: runs 520143 to 520473\nif [[ $RUNNUMBER -ge 520143 ]] && [[ $RUNNUMBER -le 520473 ]]; then\n  # with +30kA/+6kA\n  GRPMAG=o2sim_grp_b5p_128HB.root\nfi\n\n# LHC22g: runs 520474 to 520477\nif [[ $RUNNUMBER -ge 520474 ]] && [[ $RUNNUMBER -le 520477 ]]; then\n  # with +12kA/+6kA\n  GRPMAG=o2sim_grp_b2p_128HB.root\nfi\n\n# LHC22h: runs 520495 to 520509\nif [[ $RUNNUMBER -ge 520495 ]] && [[ $RUNNUMBER -le 520509 ]]; then\n  # 0kA/0kA\n  GRPMAG=o2sim_grp_b0_128HB.root\nfi\n\n# LHC22i: runs 520529 to 520542\nif [[ $RUNNUMBER -ge 520529 ]] && [[ $RUNNUMBER -le 520542 ]]; then\n  # with -12kA/-6kA\n  GRPMAG=o2sim_grp_b2m_128HB.root\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/selectSettings.sh"
        }
    ],
    "f6db785d6973ab07f07066ff453bcef79dbdae109b77c7374c5a40777f38d418": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# LHC22j: 520543 - 521150\nif [[ $RUNNUMBER -ge 520543 ]] && [[ $RUNNUMBER -le 521150 ]]; then\n  # -30kA/-6kA\n  GRPMAG=o2sim_grp_b5m_128HB.root\nfi\n\n# LHC22m: 521326 - 521907\nif [[ $RUNNUMBER -ge 521326 ]] && [[ $RUNNUMBER -le 525582 ]]; then\n  # -30kA/-6kA\n  GRPMAG=o2sim_grp_b5m_128HB.root\nfi\n\n# LHC22n: from 525583\nif [[ $RUNNUMBER -ge 525583 ]]; then\n  # +30kA/+6kA\n  GRPMAG=o2sim_grp_b5p_128HB.root\nfi\n\necho \"GRP B field = $GRPMAG\"\n\nln -s $GRPMAG o2sim_grp.root",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/selectSettings.sh"
        }
    ],
    "6aade370e2e8c8c1ef352c4fd4d2a336607be0e597f59d9f53a4f463391592f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nline=`grep $1 $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/ctf2epn.txt`\necho \"line found in file = $line\"\nif [[ -z $line ]]; then\n  echo \"CTF file not listed, no remapping required\"\n  export remappingITS=0\n  export remappingMFT=0\n  echo \"remappingITS = $remappingITS, remappingMFT = $remappingMFT\"\nelse\n  epn=`echo $line | cut -d' ' -f1`\n  start=`echo $line | cut -d' ' -f2`\n  echo \"epn = $epn\"\n  echo \"start of CTF data = $start\"\n\n  lineTimes=`grep ${epn} $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/goodITSMFT_fixed.txt`\n  echo lineTimes = $lineTimes\n  goodITS=`echo $lineTimes | cut -d' ' -f2`\n  echo goodITS = $goodITS\n  goodMFT=`echo $lineTimes | sed 's/^[0-9][0-9][0-9] \\(2022-[0-9]*-[0-9]*-[0-9]*-[0-9]*-[0-9]*\\) \\(2022-[0-9]*-[0-9]*-[0-9]*-[0-9]*-[0-9]*\\)/\\2/'`\n  echo goodMFT = $goodMFT",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/parse.sh"
        }
    ],
    "14408386524533f222614631fa7530f69b7d721f9b4564520b6cf2914838136b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    startmonth=`echo $start | cut -d'-' -f2`\n  startday=`echo $start | cut -d'-' -f3`\n  starthour=`echo $start | cut -d'-' -f4`\n  startminute=`echo $start | cut -d'-' -f5`\n  startsecond=`echo $start | cut -d'-' -f6`\n\n  goodITSmonth=`echo $goodITS | cut -d'-' -f2`\n  goodITSday=`echo $goodITS | cut -d'-' -f3`\n  goodITShour=`echo $goodITS | cut -d'-' -f4`\n  goodITSminute=`echo $goodITS | cut -d'-' -f5`\n  goodITSsecond=`echo $goodITS | cut -d'-' -f6`\n\n  goodMFTmonth=`echo $goodMFT | cut -d'-' -f2`\n  goodMFTday=`echo $goodMFT | cut -d'-' -f3`\n  goodMFThour=`echo $goodMFT | cut -d'-' -f4`\n  goodMFTminute=`echo $goodMFT | cut -d'-' -f5`\n  goodMFTsecond=`echo $goodMFT | cut -d'-' -f6`\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/parse.sh"
        }
    ],
    "d6822708625c368e730f57eea9d1c9e9e81989b10029d66e6a446153324e9823": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Display \"good ITS: month = $goodITSmonth, day = $goodITSday, hour = $goodITShour, minute = $goodITSminute, seconds = $goodITSsecond\"\n  Display \"good MFT: month = $goodMFTmonth, day = $goodMFTday, hour = $goodMFThour, minute = $goodMFTminute, seconds = $goodMFTsecond\"\n  Display \"checking: month = $startmonth, day = $startday, hour = $starthour, minute = $startminute, seconds = $startsecond\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/parse.sh"
        }
    ],
    "4f8cfeab4c8b6fb0b8faa0932ce820034d2deaaee30defdb88839d17d88509ce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# check for ITS\nif [[ $startmonth < $goodITSmonth ]]; then\n  echo \"month triggers remappingITS\"\n  remappingITS=1\nelif [[ $startmonth == $goodITSmonth ]]; then\n  if [[ $startday < $goodITSday ]]; then\n    echo \"day triggers remappingITS\"\n    remappingITS=1\n  elif [[ $startday == $goodITSday ]]; then\n    if [[ $starthour < $goodITShour ]]; then\n      echo \"hour triggers remappingITS\"\n      remappingITS=1\n    elif [[ $starthour == $goodITShour ]]; then\n      if [[ $startminute < $goodITSminute ]]; then\n        echo \"minute triggers remappingITS\"\n        remappingITS=1\n      elif [[ $startminute == $goodITSminute ]]; then\n        if [[ $startsecond -le $goodITSsecond ]]; then\n          echo \"second triggers remappingITS\"\n          remappingITS=1\n        else\n          echo \"month, day, hour, and minute conditions would trigger remapping, but the seconds are greater than the threshold for ITS remapping\"\n        fi\n      else\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/parse.sh"
        }
    ],
    "73d13d664d0f95761889aba4f618a26e8ade94938104b0324e078eecfb665fb0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "else\n  echo \"month, day, hour would require remapping, but minutes exceed the threshold for ITS remapping\"\nfi\nelse\n  echo \"month, day would require remapping, but hours exceed the threshold for ITS remapping\"\nfi\nelse\n  echo \"month would require remapping, but days exceed the threshold for ITS remapping\"\nfi\nelse\n  echo \"start month is later than the threshold needed for ITS remapping\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/parse.sh"
        }
    ],
    "cb73d8169961d8b88bee8d999c7fba29bafcee4fc6fb713e3dd5196c53d6bf41": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verify MFT condition\nif [[ $startmonth < $goodMFTmonth ]]; then\n  echo \"month initiates MFT remapping\"\n  remappingMFT=1\nelif [[ $startmonth == $goodMFTmonth ]]; then\n  if [[ $startday < $goodMFTday ]]; then\n    echo \"day triggers MFT remapping\"\n    remappingMFT=1\n  elif [[ $startday == $goodMFTday ]]; then\n    if [[ $starthour < $goodMFThour ]]; then\n      echo \"hour triggers MFT remapping\"\n      remappingMFT=1\n    elif [[ $starthour == $goodMFThour ]]; then\n      if [[ $startminute < $goodMFTminute ]]; then\n        echo \"minute triggers MFT remapping\"\n        remappingMFT=1\n      elif [[ $startminute == $goodMFTminute ]]; then\n        if [[ $startsecond -le $goodMFTsecond ]]; then\n          echo \"second triggers MFT remapping\"\n          remappingMFT=1\n        else\n          echo \"month, day, hour, minute would initiate MFT remapping, but seconds exceed the threshold for MFT remapping\"\n        fi\n      else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/parse.sh"
        }
    ],
    "30419aecd0bd292829577678bef66b6846e254bbb00e0c10a767632174d7b798": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "else\n  echo \"month, day, hour would trigger remapping, but minutes exceed the threshold for MFT remapping\"\nfi\nelse\n  echo \"month, day would trigger remapping, but hours exceed the threshold for MFT remapping\"\nfi\nelse\n  echo \"month would trigger remapping, but days exceed the threshold for MFT remapping\"\nfi\nelse\n  echo \"start month is later than the threshold required for MFT remapping\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/parse.sh"
        }
    ],
    "68d1b43c14cdb3cf9c898d2e2183e6b2f76002e0deed504fdd7fbca3ecd7d2eb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"start = $start, validITS = $goodITS, validMFT = $goodMFT, remappingITS = $remappingITS, remappingMFT = $remappingMFT\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/parse.sh"
        }
    ],
    "9c1e37a82811f19ffe3219b08095aec7ba593cb715351bba6d876c51265aa6fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to define additional environment variables\n# using some configurations from alien\n\n# handling flags provided to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# to prevent memory issues\nexport DPL_DEFAULT_PIPELINE_LENGTH=16\n\n# list of detectors\nexport WORKFLOW_DETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,EMC,PHS,CPV,HMP,ZDC\n\n# customized settings for CTF reader: we're on the grid, so the files are accessed remotely\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"--remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "e693d85bbe4440806962bef89ca8a06eea9dc9f39758e6ab7e29f7984383a179": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verification of remapping process\nif [[ $remappingITS == 1 ]] || [[ $remappingMFT == 1 ]]; then\n  REMAPPING=\"--condition-remap \\\"https://alice-ccdb.cern.ch/RecITSMFT=\"\n  if [[ $remappingITS == 1 ]]; then\n    REMAPPING=$REMAPPING\"ITS/Calib/ClusterDictionary\"\n    if [[ $remappingMFT == 1 ]]; then\n      REMAPPING=$REMAPPING\",\"\n    fi\n  fi\n  if [[ $remappingMFT == 1 ]]; then\n    REMAPPING=$REMAPPING\"MFT/Calib/ClusterDictionary\"\n  fi\n  REMAPPING=$REMAPPING\\\"\nfi\n\necho remapping = $REMAPPING",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "33d595ad9b05fe48ca3e5462e58f2332f55b5dfcb017decb7225dab601846bb4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo remapping = $REMAPPING\n\n# additional custom settings for the CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors $REMAPPING\"\necho RUN = $RUNNUMBER\nif [[ $RUNNUMBER -ge 521889 ]]; then\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --its-digits --mft-digits\"\n  export DISABLE_DIGIT_CLUSTER_INPUT=\"--digits-from-upstream\"\n  MAXBCDIFFTOMASKBIAS_ITS=\"ITSClustererParam.maxBCDiffToMaskBias=10\"\n  MAXBCDIFFTOMASKBIAS_MFT=\"MFTClustererParam.maxBCDiffToMaskBias=10\"\nfi\n\n# run-specific options\nif [[ -f \"setenv_run.sh\" ]]; then\n    source setenv_run.sh \nelse\n    echo \"************************************************************\"\n    echo No ad-hoc run-specific settings for current asynchronous processing\n    echo \"************************************************************\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "03182bdca9d39e3535b1e352e574abd4ae11948c93924a866dd6d15a43dcbf58": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TPC vdrift\nPERIODLETTER=${PERIOD: -1}\nVDRIFTPARAMOPTION=\nif [[ $PERIODLETTER < m ]] || [[ $ALIEN_JDL_LPMPRODUCTIONTAG == MAY ]] || [[ $ALIEN_JDL_LPMPRODUCTIONTAG == JUN ]]; then\n  root -b -q \"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/getTPCvdrift.C+($RUNNUMBER)\"\n  export VDRIFT=`cat vdrift.txt`\n  VDRIFTPARAMOPTION=\"TPCGasParam.DriftV=$VDRIFT\"\n  echo \"Setting the TPC vdrift to $VDRIFT\"\nelse\n  echo \"TPC vdrift will be obtained from the CCDB\"\nfi\n\n# remove monitoring-backend\nexport ENABLE_METRICS=1\n\n# add performance metrics\n#export ARGS_ALL_EXTRA=\" --resources-monitoring 10 --resources-monitoring-dump-interval 10\"\nexport ARGS_ALL_EXTRA=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "b65bc311c2909cc57f9636fa91aa014ba3f5bd8b509fa18e5be8b6c03d94cb8a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# common settings across workflows\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2;\"\n\n# specific options for the ITS reconstruction process\nexport ITS_CONFIG=\" --tracking-mode sync_misaligned\"\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2;$MAXBCDIFFTOMASKBIAS_ITS\"\n\n# specific options for the GPU reconstruction process\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"GPU_global.dEdxDisableResidualGainMap=1;$VDRIFTPARAMOPTION;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "e9d453dc6c5723e2e1d4481834802bf9ab0a666438f50126a7a930393b79bb85": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for TOF reconstruction\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb --ccdb-url-tof \\\"https://alice-ccdb.cern.ch\\\"\"\n# as of changes on December 4\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "984198a7834a88d518e863a0e7b7c0712fbc85555dc8de25a809cf3ff4004058": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for the primary vertex workflow\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as per the comment on https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "d8fd9531abcb68da1c8501cb9853cc690d349c87da8277f9f994bc347b60bcd6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2;pvertexer.nSigmaTimeTrack=4;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3;pvertexer.addTimeSigma2Debris=1;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1;pvertexer.dbscanAdaptCoef=20;pvertexer.timeMarginVertexTime=1.3\"\n# updated on 7 Sept 2022\nexport PVERTEXER=\"pvertexer.maxChi2TZDebris=10;pvertexer.acceptableScale2=9;pvertexer.minScale2=2;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "7e6f277b8cc42ab53c710a6404e8a3da79fc0f2e447c04c35867fd107b9aebaf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# secondary vertexing\nexport SVTX=\"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"\n\nexport CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"$PVERTEXER;$VDRIFTPARAMOPTION;\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow=\"$SVTX\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "bf9efbf33a224eb7b277d6008ea8ab2d16d644016e681cdefdb6f21157ebd54f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# customized parameters for its-tpc alignment\nexport ITSTPCMATCH=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow=\"$ITSEXTRAERR;$ITSTPCMATCH;$VDRIFTPARAMOPTION;\"\n# activation of AfterBurner\nif [[ $WORKFLOW_DETECTORS =~ (^|,)\"FT0\"(,|$) ]] ; then\n  export ARGS_EXTRA_PROCESS_o2_tpcits_match_workflow=\"--use-ft0\"\nfi\n\n# customized settings for TOF alignment\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"--output-type matching-info,calib-info --enable-dia\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow=\"$ITSEXTRAERR;$VDRIFTPARAMOPTION;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "fa9ca4b457631f38a12ba8329a61a3ff0a0c3dca280b18ae5dcf98883da6d204": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc configurations for TRD global tracking\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking=\"$ITSEXTRAERR;$VDRIFTPARAMOPTION;\"\n\n# ad-hoc configurations for FT0\nexport ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow=\"--ft0-reconstructor\"\n\n# ad-hoc configurations for FV0\nexport ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow=\"--fv0-reconstructor\"\n\n# ad-hoc configurations for FDD\n#...\n\n# ad-hoc configurations for MFT\nexport CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow=\"MFTTracking.forceZeroField=false;MFTTracking.FullClusterScan=false;$MAXBCDIFFTOMASKBIAS_MFT\"\n\n# ad-hoc configurations for MCH\nexport CONFIG_EXTRA_PROCESS_o2_mch_reco_workflow=\"MCHClustering.lowestPadCharge=15;MCHTracking.chamberResolutionX=0.4;MCHTracking.chamberResolutionY=0.4;MCHTracking.sigmaCutForTracking=7;MCHTracking.sigmaCutForImprovement=6;MCHDigitFilter.timeOffset=126\"\n\n# Enabling AOD\nexport WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\n\n# ad-hoc configurations for AOD\n#...",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "98a9d7b9f6254ac453bece4ac41e88d9967333b381d290f6414c17e5576de1f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Custom settings for AOD\n#...\n\n# Activating Quality Control\nexport WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values \\\"qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD\\\"\"\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/setenv_extra.sh"
        }
    ],
    "7840f4a10633a6b8b080673ac7a80538ff3ef5764c6f70bbfce90abd30c21613": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script for initiating asynchronous processing\n#\n# If running locally, ensure to set environment variables like:\n#\n# ALIEN_JDL_LPMRUNNUMBER=505673\n# ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# ALIEN_JDL_LPMPASSNAME=apass4\n# ALIEN_JDL_LPMANCHORYEAR=2021\n\n# To bypass positional argument parsing before the randomizing stage.\ninputarg=\"${1}\"\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "c98f56db89c8e0da4159a68313b3e635252975fac2c82afe0f9b6f93f3e7fbc3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\n# if positional arguments for run number are found in the JDL, we override the existing ones\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# for the beam type, we check if it is defined in the JDL and update if necessary\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# for the period, we check if it is provided in the JDL and update accordingly, also setting the O2DPGPATH if applicable\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\n    if [[ -n \"$ALIEN_JDL_O2DPGPATH\" ]]; then\n      export O2DPGPATH=\"$ALIEN_JDL_O2DPGPATH\"\n    else\n      export O2DPGPATH=\"$PERIOD\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "c6b7b9d1845ed4d08fb980bddc4e9fa181fa03dfcf2674a22770aab8d07df04a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# pass\nif [[ -n \"$ALIEN_JDL_O2DPGPASSPATH\" ]]; then\n  export PASS=\"$ALIEN_JDL_O2DPGPASSPATH\"\nelif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n  export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"verify the required environment variables: RUNNUMBER (--> $RUNNUMBER), PERIOD (--> $PERIOD), PASS (--> $PASS), BEAMTYPE (--> $BEAMTYPE)\"\n    exit 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "fe752b0db5c83bbe91858a0dd5c54a3343f235253bb1b3cd72b57f51b2c5a80b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\n###if [[ $MODE == \"remote\" ]]; then\n    # common archive\n    if [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, exiting\"\n\texit 2\n    fi\n    tar -xzvf commonInput.tgz\n    SELECTSETTINGSSCRIPT=\"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/selectSettings.sh\"\n    if [[ -f \"selectSettings.sh\" ]]; then\n      SELECTSETTINGSSCRIPT=\"selectSettings.sh\"\n    fi\n    source $SELECTSETTINGSSCRIPT\n    # run specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"runInput_$RUNNUMBER.tgz not found, we hope we don't need it\"\n    else\n      tar -xzvf runInput_$RUNNUMBER.tgz\n    fi\n###fi\n\necho \"Listing the current directory content\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "068620014f3b64e47d3dbc41650b714a308e2cf0ba68a2c37dd7044e022d75fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Displaying the current directory's contents\"\nls -altr\n\n# determine if the Cluster Dictionaries for ITS and MFT should be remapped\n# this is necessary only up to run 517224 (subsequent runs are mapped in ctf2epn but are not for async reco)\nPARSESCRIPT=\"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/parse.sh\"\nif [[ -f \"parse.sh\" ]]; then\n  PARSESCRIPT=\"parse.sh\"\nfi\nif [[ $RUNNUMBER -le 517224 ]]; then\n  source $PARSESCRIPT `cat list.list`\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "971b28a05c7ac0d005299f9afb56a98a0d3bce8cd5dbd8784494fbd42bea59e9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f \"setenv_extra.sh\" ]]; then\n    source setenv_extra.sh $RUNNUMBER $BEAMTYPE\nelse\n    echo \"************************************************************************************\"\n    echo \"No ad-hoc setenv_extra settings for current async processing; using the default one in O2DPG\"\n    echo \"************************************************************************************\"\n    if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh ]]; then\n\tln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh\n\tsource setenv_extra.sh $RUNNUMBER $BEAMTYPE\n    else\n\techo \"*********************************************************************************************************\"\n\techo \"No setenv_extra for $ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME in O2DPG\"\n\techo \"                No special settings will be applied\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "392710e8dfe8c88c94b9359244e83516c12ee2ba47168a21e7491c8a44540600": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "No specific settings will be applied\n\techo \"*********************************************************************************************************\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "6591a1fecee241c008fed97d3d76fbb78084e44998014ee3c94f2fcf261eaa8c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Utilize the run-workflow-on-inputlist.sh macro provided as an input\"\nelse\n    echo \"Utilize the run-workflow-on-inputlist.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Use the dpl-workflow.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Use the dpl-workflow.sh macro provided as an input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    echo \"QC JSON from outside is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\n# TFDELAY and throttling\nexport TFDELAYSECONDS=40\nif [[ -n \"$ALIEN_JDL_TFDELAYSECONDS\" ]]; then\n  TFDELAYSECONDS=\"$ALIEN_JDL_TFDELAYSECONDS\"\n# ...otherwise, it depends on whether we have throttling\nelif [[ -n \"$ALIEN_JDL_USETHROTTLING\" ]]; then\n  TFDELAYSECONDS=8\n  export TIMEFRAME_RATE_LIMIT=1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "df044eb0c45e32aae44cb87fc54292f917cfb65b3fa672a4dc67288785b9fa48": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z \"$ALIEN_JDL_SHMSIZE\" ]]; then export SHMSIZE=$ALIEN_JDL_SHMSIZE; else export SHMSIZE=$(( 16 << 30 )) if [[ -z \"$SHMSIZE\" ]]; fi\nif [[ ! -z \"$ALIEN_JDL_DDSHMSIZE\" ]]; then export DDSHMSIZE=$ALIEN_JDL_DDSHMSIZE; else export DDSHMSIZE=$(( 32 << 10 )) if [[ -z \"$DDSHMSIZE\" ]]; fi\n\n# root output is enabled only for certain cases\n# keeping AO2D.root QC.root o2calib_tof.root mchtracks.root mchclusters.root\n\nSETTING_ROOT_OUTPUT=\"ENABLE_ROOT_OUTPUT_o2_mch_reco_workflow= ENABLE_ROOT_OUTPUT_o2_tof_matcher_workflow= ENABLE_ROOT_OUTPUT_o2_aod_producer_workflow= ENABLE_ROOT_OUTPUT_o2_qc= \"\n\n# to include additional output to always retain\nif [[ -n \"$ALIEN_EXTRA_ENABLE_ROOT_OUTPUT\" ]]; then\n  OLD_IFS=$IFS\n  IFS=','\n  for token in $ALIEN_EXTRA_ENABLE_ROOT_OUTPUT; do\n    SETTING_ROOT_OUTPUT+=\" ENABLE_ROOT_OUTPUT_$token\"\n  done\n  IFS=$OLD_IFS\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "79f5967e1a0f2d39bf9d02a57287417693b1bd26704206e6bd1874be18228ae3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # to determine which additional output to retain consistently\nif [[ -n \"$ALIEN_ENABLE_ROOT_OUTPUT\" ]]; then\n  OLD_IFS=$IFS\n  IFS=','\n  SETTING_ROOT_OUTPUT=\n  for token in $ALIEN_ENABLE_ROOT_OUTPUT; do\n    SETTING_ROOT_OUTPUT+=\" ENABLE_ROOT_OUTPUT_$token\"\n  done\n  IFS=$OLD_IFS\nfi\n\nkeep=0\n\nif [[ -n $ALIEN_INPUT_TYPE ]] && [[ \"$ALIEN_INPUT_TYPE\" == \"TFs\" ]]; then\n  export WORKFLOW_PARAMETERS=CTF\n  INPUT_TYPE=TF\n  if [[ $RUNNUMBER -lt 523141 ]]; then\n    export TPC_CONVERT_LINKZS_TO_RAW=1\n  fi\nelse\n  INPUT_TYPE=CTF\nfi\n\nif [[ -n $ALIEN_JDL_PACKAGES ]]; then # if this environment variable is set, it indicates grid execution\n  # JDL can specify the keep ratio; otherwise, we use 2\n  if [[ ! -z \"$ALIEN_JDL_NKEEP\" ]]; then export NKEEP=$ALIEN_JDL_NKEEP; else NKEEP=2; fi\n\n  KEEPRATIO=0\n  (( $NKEEP > 0 )) && KEEPRATIO=$((1000/NKEEP))\n  echo \"Configured to preserve ${NKEEP} permil of intermediate output\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "71281087be256a9a7c88e476bb6debd86c41aae66a9b339fc7fd1b0d00f4c7f1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [[ -f wn.xml ]]; then\n    grep alien:// wn.xml | tr ' ' '\\n' | grep ^lfn | cut -d\\\" -f2 > tmp.tmp\n  else\n    echo \"${inputarg}\" > tmp.tmp\n  fi\n  while read -r INPUT_FILE && (( $KEEPRATIO > 0 )); do\n    SUBJOBIDX=$(grep -B1 $INPUT_FILE CTFs.xml | head -n1 | cut -d\\\" -f2)\n    echo \"Path to the input file                   : $INPUT_FILE\"\n    echo \"Index of the input file in the collection: $SUBJOBIDX\"\n    echo \"Total number of subjobs for the masterjob: $ALIEN_JDL_SUBJOBCOUNT\"\n    # if we don't have sufficient subjobs, we'll keep the first one anyway\n    if [[ \"$ALIEN_JDL_SUBJOBCOUNT\" -le \"$KEEPRATIO\" && \"$SUBJOBIDX\" -eq 1 ]]; then\n      echo -e \"**** INSUFFICIENT SUBJOBS TO SAMPLE, WE WILL FORCE TO KEEP THE OUTPUT ****\"\n      keep=1\n      break\n    else\n      if [[ \"$((SUBJOBIDX%KEEPRATIO))\" -eq \"0\" ]]; then\n\tkeep=1\n\tbreak\n      fi\n    fi\n  done < tmp.tmp\n  if [[ $keep -eq 1 ]]; then\n    echo \"Intermediate files WILL BE KEPT\";\n  else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "4ca4f04e6e939395f6b96d0cbf0eb73c87b5e9c7a4bbf27f38ddf1a276f3fc4e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "done < tmp.tmp\nif [[ $keep -eq 1 ]]; then\n  echo \"Intermediate files WILL BE KEPT\";\nelse\n  echo \"Intermediate files WILL BE KEPT ONLY FOR SOME WORKFLOWS\";\nfi\nelse\n  # in LOCAL mode, by default all intermediate files are kept\n  echo -e \"\\n\\n**** RUNNING IN LOCAL MODE ****\"\n  keep=1\n  if [[ \"$DO_NOT_KEEP_OUTPUT_IN_LOCAL\" -eq 1 ]]; then\n    echo -e \"**** ONLY SOME WORKFLOWS WILL HAVE THE ROOT OUTPUT SAVED ****\\n\\n\"\n    keep=0;\n  else\n    echo -e \"**** ALL ROOT OUTPUT FILES ARE KEPT ****\";\n    echo -e \"**** TO REMOVE ROOT OUTPUT FILES FOR PERFORMANCE STUDIES OR SIMILAR, SET THE ENV VAR DO_NOT_KEEP_OUTPUT_IN_LOCAL ****\\n\\n\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "1ad04a5a5137c7eabff7b797e6c16d94646da575f9f9dcd3ad476dc4174d300f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $keep -eq 1 ]]; then\n  SETTING_ROOT_OUTPUT+=\"DISABLE_ROOT_OUTPUT=0\";\nfi\necho \"SETTING_ROOT_OUTPUT = $SETTING_ROOT_OUTPUT\"\n\n# Enabling GPUs\nif [[ -n \"$ALIEN_JDL_USEGPUS\" ]]; then\n  echo \"Enabling GPUs\"\n  export GPUTYPE=\"HIP\"\n  export GPUMEMSIZE=$((25 << 30))\n  if [[ $keep -eq 0 ]]; then\n    export MULTIPLICITY_PROCESS_tof_matcher=2\n    export MULTIPLICITY_PROCESS_mch_cluster_finder=3\n    export MULTIPLICITY_PROCESS_tpc_entropy_decoder=2\n    export MULTIPLICITY_PROCESS_itstpc_track_matcher=3\n    export MULTIPLICITY_PROCESS_its_tracker=2\n    export TIMEFRAME_RATE_LIMIT=8\n  else\n    export TIMEFRAME_RATE_LIMIT=4\n  fi\n  export SHMSIZE=20000000000\n  export SHMTHROW=0\n  export OMP_NUM_THREADS=8\nelse\n  # David, October 13th\n  # the optimized settings for the 8-core GRID queue without GPU are\n  # (overwriting the values above)\n  #\n  export TIMEFRAME_RATE_LIMIT=3\n  export OMP_NUM_THREADS=5\n  export SHMSIZE=16000000000\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "f99eabb6faa2323eb7499828b5ec0d83fcf635bc9dd503f8423970d9016615ee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "[INFO (async_pass.sh)] The environment variables were configured as TFDELAYSECONDS ${TFDELAYSECONDS} and TIMEFRAME_RATE_LIMIT ${TIMEFRAME_RATE_LIMIT}\"\n\n# reconstruction and matching\n# display the workflow\nenv $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS NTIMEFRAMES=-1 ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list > workflowconfig.log\n# execute the workflow\nenv $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS NTIMEFRAMES=-1 ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n\n# subsequently, extract all performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\nfi\n\n# option to potentially activate Analysis QC\n[[ -z ${ALIEN_JDL_RUNANALYSISQC+x} ]] && ALIEN_JDL_RUNANALYSISQC=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "16b6fecde0c5e729c97dc88714f57a315d8d44f13890ac62e5bf3f1e1595216f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now checking AO2D file\nif [[ -f \"AO2D.root\" ]]; then\n    root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n    exitcode=$?\n    if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from AO2D check is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D check is \" $exitcode\n\texit $exitcode\n    fi\n    if [[ $ALIEN_JDL_RUNANALYSISQC == 1 ]]; then\n      ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py -f AO2D.root\n      ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -k -f workflow_analysis_test.json > analysisQC.log\n      if [[ -f \"Analysis/MergedAnalyses/AnalysisResults.root\" ]]; then\n\tmv Analysis/MergedAnalyses/AnalysisResults.root .\n      else\n\techo \"No Analysis/MergedAnalyses/AnalysisResults.root found! check analysis QC\"\n      fi\n      if ls Analysis/*/*.log 1> /dev/null 2>&1; then\n\tmv Analysis/*/*.log .\n      fi\n    else\n      echo \"Analysis QC will not be run, ALIEN_JDL_RUNANALYSISQC = $ALIEN_JDL_RUNANALYSISQC\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "b0321f85f81749329a48fec52c51fa7d2355f7e9c4d13e64ceaca76d9045b7d2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# transferring the QC json file here\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\nelse\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n\techo \"transferring the most recent file from ${GEN_TOPO_WORKDIR}/json_cache\"\n\tQC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n\techo \"No QC files detected, possibly QC was not executed\"\n    fi\nfi\nif [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/MayJunePilotBeam/apass2/async_pass.sh"
        }
    ],
    "8cb6617c2714400b1ffacd391aaaecc02cc82bb7761c8153d637928ed314124e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\ndeclare -A mapShifts",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "747ac586272f17eee4a85eced995766c6110c01d5ea5882d96418469fdf1c38c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['517619']='-52'\nmapShifts['517620']='-51'\nmapShifts['517623']='-46'\nmapShifts['517677']='-53'\nmapShifts['517678']='-53'\nmapShifts['517679']='-53'\nmapShifts['517685']='-51'\nmapShifts['517690']='-49'\nmapShifts['517693']='-50'\nmapShifts['517737']='-55'\nmapShifts['517748']='-55'\nmapShifts['517751']='-54'\nmapShifts['517753']='-50'\nmapShifts['517758']='-57'\nmapShifts['517767']='-53'\nmapShifts['518541']='19'\nmapShifts['518543']='18'\nmapShifts['518546']='18'\nmapShifts['518547']='19'\nmapShifts['519041']='4'\nmapShifts['519043']='3'\nmapShifts['519045']='2'\nmapShifts['519497']='13'\nmapShifts['519498']='13'\nmapShifts['519499']='14'\nmapShifts['519502']='13'\nmapShifts['519503']='13'\nmapShifts['519504']='14'\nmapShifts['519506']='16'\nmapShifts['519507']='17'\nmapShifts['519903']='15'\nmapShifts['519904']='15'\nmapShifts['519905']='15'\nmapShifts['519906']='18'\nmapShifts['520259']='15'\nmapShifts['520294']='15'\nmapShifts['520471']='15'\nmapShifts['520472']='14'\nmapShifts['520473']='14'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "e2fd97e44f3e7dd44532635b025e2f21b7f8d11cea544c474401fcd46e754949": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['520294']='15'\nmapShifts['520471']='15'\nmapShifts['520472']='14'\nmapShifts['520473']='14'\nmapShifts['523141']='-52'\nmapShifts['523142']='45'\nmapShifts['523148']='10'\nmapShifts['523182']='11'\nmapShifts['523186']='7'\nmapShifts['523298']='10'\nmapShifts['523306']='10'\nmapShifts['523308']='8'\nmapShifts['523309']='4'\nmapShifts['523397']='5'\nmapShifts['523399']='3'\nmapShifts['523401']='0'\nmapShifts['523441']='14'\nmapShifts['523541']='16'\nmapShifts['523544']='20'\nmapShifts['523559']='10'\nmapShifts['523669']='39'\nmapShifts['523671']='44'\nmapShifts['523677']='41'\nmapShifts['523728']='7'\nmapShifts['523731']='6'\nmapShifts['523779']='1'\nmapShifts['523783']='7'\nmapShifts['523786']='8'\nmapShifts['523788']='9'\nmapShifts['523789']='9'\nmapShifts['523792']='6'\nmapShifts['523797']='8'\nmapShifts['523821']='8'\nmapShifts['523897']='49'\nmapShifts['526463']='25'\nmapShifts['526465']='20'\nmapShifts['526466']='19'\nmapShifts['526467']='19'\nmapShifts['526468']='18'\nmapShifts['526486']='12'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "5fe439326d4ef7c4ae8e755eecb1b81f832acfdec803c942162074ad15f33a9d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['526466']='19'\nmapShifts['526467']='19'\nmapShifts['526468']='18'\nmapShifts['526486']='12'\nmapShifts['526505']='18'\nmapShifts['526508']='-52'\nmapShifts['526512']='11'\nmapShifts['526525']='21'\nmapShifts['526526']='19'\nmapShifts['526528']='15'\nmapShifts['526534']='-47'\nmapShifts['526559']='19'\nmapShifts['526596']='19'\nmapShifts['526606']='20'\nmapShifts['526612']='21'\nmapShifts['526638']='75'\nmapShifts['526639']='19'\nmapShifts['526641']='20'\nmapShifts['526643']='21'\nmapShifts['526647']='20'\nmapShifts['526649']='21'\nmapShifts['526689']='86'\nmapShifts['526712']='26'\nmapShifts['526713']='22'\nmapShifts['526714']='24'\nmapShifts['526715']='22'\nmapShifts['526716']='21'\nmapShifts['526719']='22'\nmapShifts['526720']='22'\nmapShifts['526776']='19'\nmapShifts['526802']='55'\nmapShifts['526860']='12'\nmapShifts['526865']='20'\nmapShifts['526886']='18'\nmapShifts['526926']='36'\nmapShifts['526927']='35'\nmapShifts['526928']='-53'\nmapShifts['526929']='-52'\nmapShifts['526934']='-55'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "d3b6332f084b05dfde0dcd457bf9d3a74385a8f56009e76c072dfad5b8b918e6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['526928'] = '-53'\nmapShifts['526929'] = '-52'\nmapShifts['526934'] = '-55'\nmapShifts['526935'] = '-55'\nmapShifts['526937'] = '-50'\nmapShifts['526938'] = '17'\nmapShifts['526963'] = '22'\nmapShifts['526964'] = '17'\nmapShifts['526966'] = '19'\nmapShifts['526967'] = '15'\nmapShifts['526968'] = '20'\nmapShifts['527015'] = '20'\nmapShifts['527016'] = '16'\nmapShifts['527028'] = '18'\nmapShifts['527031'] = '21'\nmapShifts['527033'] = '19'\nmapShifts['527034'] = '20'\nmapShifts['527038'] = '20'\nmapShifts['527039'] = '20'\nmapShifts['527041'] = '18'\nmapShifts['527057'] = '18'\nmapShifts['527076'] = '20'\nmapShifts['527108'] = '78'\nmapShifts['527109'] = '17'\nmapShifts['527228'] = '74'\nmapShifts['527237'] = '18'\nmapShifts['527240'] = '18'\nmapShifts['527259'] = '18'\nmapShifts['527260'] = '18'\nmapShifts['527261'] = '18'\nmapShifts['527262'] = '17'\nmapShifts['527345'] = '58'\nmapShifts['527347'] = '58'\nmapShifts['527349'] = '18'\nmapShifts['527446'] = '12'\nmapShifts['527518'] = '19'\nmapShifts['527522'] = '17'\nmapShifts['527523'] = '13'\nmapShifts['527671'] = '63'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "196f48c9c8d4ff72ce69c5c98f7a4b9bb6ca70abad13032cfb7e784df9d2ee18": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['527518']='19'\nmapShifts['527522']='17'\nmapShifts['527523']='13'\nmapShifts['527671']='63'\nmapShifts['527690']='22'\nmapShifts['527694']='16'\nmapShifts['527731']='19'\nmapShifts['527734']='16'\nmapShifts['527736']='18'\nmapShifts['527777']='72'\nmapShifts['527799']='64'\nmapShifts['527821']='18'\nmapShifts['527825']='16'\nmapShifts['527826']='14'\nmapShifts['527828']='19'\nmapShifts['527848']='20'\nmapShifts['527850']='18'\nmapShifts['527852']='16'\nmapShifts['527863']='15'\nmapShifts['527864']='16'\nmapShifts['527865']='19'\nmapShifts['527869']='16'\nmapShifts['527871']='17'\nmapShifts['527895']='17'\nmapShifts['527897']='20'\nmapShifts['527898']='17'\nmapShifts['527899']='17'\nmapShifts['527902']='19'\nmapShifts['527940']='22'\nmapShifts['527963']='22'\nmapShifts['527965']='20'\nmapShifts['527966']='20'\nmapShifts['527967']='21'\nmapShifts['527976']='18'\nmapShifts['527978']='21'\nmapShifts['527979']='20'\nmapShifts['528021']='23'\nmapShifts['528026']='20'\nmapShifts['528036']='17'\nmapShifts['528093']='79'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "207c99a4d9cb30ede94001fdcae9ff01c76b3477fce19711b25fb0b8ba82c24d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['528021'] = '23'\nmapShifts['528026'] = '20'\nmapShifts['528036'] = '17'\nmapShifts['528093'] = '79'\nmapShifts['528094'] = '20'\nmapShifts['528097'] = '23'\nmapShifts['528105'] = '18'\nmapShifts['528107'] = '16'\nmapShifts['528109'] = '20'\nmapShifts['528110'] = '22'\nmapShifts['528231'] = '9'\nmapShifts['528232'] = '12'\nmapShifts['528233'] = '19'\nmapShifts['528263'] = '17'\nmapShifts['528266'] = '18'\nmapShifts['528292'] = '19'\nmapShifts['528294'] = '19'\nmapShifts['528316'] = '19'\nmapShifts['528319'] = '19'\nmapShifts['528328'] = '19'\nmapShifts['528329'] = '20'\nmapShifts['528330'] = '20'\nmapShifts['528332'] = '17'\nmapShifts['528336'] = '18'\nmapShifts['528347'] = '15'\nmapShifts['528359'] = '18'\nmapShifts['528379'] = '18'\nmapShifts['528381'] = '18'\nmapShifts['528386'] = '18'\nmapShifts['528448'] = '18'\nmapShifts['528451'] = '18'\nmapShifts['528461'] = '17'\nmapShifts['528463'] = '35'\nmapShifts['528529'] = '67'\nmapShifts['528530'] = '67'\nmapShifts['528531'] = '16'\nmapShifts['528534'] = '17'\nmapShifts['528537'] = '19'\nmapShifts['528543'] = '18'\nmapShifts['528597'] = '78'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "ecbbab7ec4dedb62750b4ee3f82accc7bf1f12aa02d18652ddefa1a77b71250a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['528534']='17'\nmapShifts['528537']='19'\nmapShifts['528543']='18'\nmapShifts['528597']='78'\nmapShifts['528602']='20'\nmapShifts['528604']='14'\nmapShifts['528617']='13'\nmapShifts['528781']='111'\nmapShifts['528782']='111'\nmapShifts['528783']='111'\nmapShifts['528784']='16'\nmapShifts['528798']='18'\nmapShifts['528801']='18'\nmapShifts['528991']='84'\nmapShifts['528997']='85'\nmapShifts['529003']='84'\nmapShifts['529005']='84'\nmapShifts['529006']='81'\nmapShifts['529009']='83'\nmapShifts['529015']='81'\nmapShifts['529035']='39'\nmapShifts['529037']='79'\nmapShifts['529038']='84'\nmapShifts['529039']='82'\nmapShifts['529043']='81'\nmapShifts['529066']='71'\nmapShifts['529067']='70'\nmapShifts['529077']='26'\nmapShifts['529078']='36'\nmapShifts['529084']='24'\nmapShifts['529088']='21'\nmapShifts['529115']='12'\nmapShifts['529116']='21'\nmapShifts['529117']='20'\nmapShifts['529128']='7'\nmapShifts['529129']='17'\nmapShifts['529201']='20'\nmapShifts['529202']='20'\nmapShifts['529207']='20'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "7426f42468abe5462ff49d9ce01a635c6d85521b21c6f2f9a84ff7b82f74e692": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mapShifts['529129']='17'\nmapShifts['529201']='20'\nmapShifts['529202']='20'\nmapShifts['529207']='20'\nmapShifts['529208']='21'\nmapShifts['529209']='17'\nmapShifts['529210']='13'\nmapShifts['529211']='18'\nmapShifts['529235']='41'\nmapShifts['529237']='18'\nmapShifts['529242']='17'\nmapShifts['529248']='16'\nmapShifts['529252']='17'\nmapShifts['529270']='15'\nmapShifts['529306']='20'\nmapShifts['529310']='18'\nmapShifts['529317']='19'\nmapShifts['529320']='19'\nmapShifts['529324']='16'\nmapShifts['529337']='19'\nmapShifts['529338']='16'\nmapShifts['529341']='17'\nmapShifts['529450']='22'\nmapShifts['529452']='21'\nmapShifts['529454']='17'\nmapShifts['529458']='17'\nmapShifts['529460']='17'\nmapShifts['529461']='12'\nmapShifts['529462']='16'\nmapShifts['529542']='31'\nmapShifts['529552']='31'\nmapShifts['529554']='25'\nmapShifts['529610']='91'\nmapShifts['529662']='10'\nmapShifts['529663']='20'\nmapShifts['529664']='18'\nmapShifts['529674']='22'\nmapShifts['529675']='16'\nmapShifts['529690']='20'\nmapShifts['529691']='13'",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "ab191ebd019e62f8c5c8af7e44e8e9efbf6ec6f18827680843b88b17d50220af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    mapShifts['529674']='22'\nmapShifts['529675']='16'\nmapShifts['529690']='20'\nmapShifts['529691']='13'\nmapShifts['526510']='-51'\nmapShifts['526806']='49'\nmapShifts['527967']='21'\nif [[ \"${mapShifts[$1]+x}\" ]]; then \n  SHIFTINTIMEBINS=${mapShifts[$1]}\nelse\n  echo \"TPC cluster time shift is not defined for the current run\"\n  SHIFTINTIMEBINS=0\nfi\nexport TPCCLUSTERTIMESHIFT=`echo \"scale=3; $SHIFTINTIMEBINS/-8\" | bc -l`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/ShiftMap.sh"
        }
    ],
    "5c360b987f047a9b66134d6edad2898830fc657a9d6a94f0c19b3deb5ee25a08": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to configure additional environment variables\n# utilizing settings from alien\n\n# handling flags provided to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# to prevent memory issues\nexport DPL_DEFAULT_PIPELINE_LENGTH=16\n\n# defining detector list\nif [[ -n $ALIEN_JDL_WORKFLOWDETECTORS ]]; then\n  export WORKFLOW_DETECTORS=$ALIEN_JDL_WORKFLOWDETECTORS\nelse\n  export WORKFLOW_DETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,EMC,PHS,CPV,HMP,ZDC,CTP\n  if [[ $RUNNUMBER == 528529 ]] || [[ $RUNNUMBER == 528530 ]]; then\n    # excluding MID for these runs due to noise and declared bad status, which causes reconstruction to fail\n    export WORKFLOW_DETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MFT,MCH,TRD,EMC,PHS,CPV,HMP,ZDC,CTP\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "6d85cdb8fb30138d3155b24951ce5b78ed6fabcd64b55052b2bcba9f0e85d9d1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # custom settings for CTF reader: we are on the grid, reading files remotely\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi\n\n# adapting for trigger LM_L0 correction, which was introduced after July 2022\nif [[ $PERIOD == \"LHC22c\" ]] || [[ $PERIOD == \"LHC22d\" ]] || [[ $PERIOD == \"LHC22e\" ]] || [[ $PERIOD == \"LHC22f\" ]] ; then\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE != \"MC\" ]]; then\n    export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --correct-trd-trigger-offset\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "9afe16dbdebbdc835bf1e6afb0948332ba3a9f0e3db575ddfebf8c03ee238918": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verifying remapping\nif [[ $remappingITS == 1 ]] || [[ $remappingMFT == 1 ]]; then\n  REMAPPING=\"--condition-remap \\\"http://alice-ccdb.cern.ch/RecITSMFT=\"\n  if [[ $remappingITS == 1 ]]; then\n    REMAPPING=$REMAPPING\"ITS/Calib/ClusterDictionary\"\n    if [[ $remappingMFT == 1 ]]; then\n      REMAPPING=$REMAPPING\",\"\n    fi\n  fi\n  if [[ $remappingMFT == 1 ]]; then\n    REMAPPING=$REMAPPING\"MFT/Calib/ClusterDictionary\"\n  fi\n  REMAPPING=$REMAPPING\\\"\nfi\n\necho remapping = $REMAPPING\necho \"BeamType = $BEAMTYPE\"\necho \"PERIOD = $PERIOD\"\n\n# required for additional workflow\nexport ADD_EXTRA_WORKFLOW=",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "12cf301c297a3e86c2515e73640655679e231a12bfbd4a9261ef7746cce4ed2f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# other ad-hoc settings for CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors $REMAPPING\"\necho RUN = $RUNNUMBER\nif [[ $RUNNUMBER -ge 521889 ]]; then\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --its-digits --mft-digits\"\n  export DISABLE_DIGIT_CLUSTER_INPUT=\"--digits-from-upstream\"\n  ITSClustererParam.maxBCDiffToMaskBias=10\n  MFTClustererParam.maxBCDiffToMaskBias=10\nfi\n# the ZDC needs a shift by +1 BC for TRD (2), PHS (4), CPV (5), EMC (6), and HMP (7), and an additional shift by (orbitShift-1)*3564+1 BCs due to its internal orbit reset at SOR, where BC is shifted by -1 like for triggered detectors.\n# for run 520403, with orbitShift = 59839744, the final shift is 213268844053.\n# for run 520418, with orbitShift = 28756480, the final shift is 102488091157.\n# a \"+1\" offset request for ITS (0) should trigger an alarm as orbit shifts are not supported there.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "95cc3711f2b9ecdeca91595f006276d6dcf820dacb0e11a5c5d946f557690bdd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The \"wrong\" +1 offset request for ITS (0) must trigger an alarm as shifts are not supported there.\nCTP_BC_SHIFT=0\nif [[ $ALIEN_JDL_LPMANCHORYEAR == \"2022\" ]]; then\n  CTP_BC_SHIFT=-294\nfi\nif [[ $RUNNUMBER -ge 538923 ]] && [[ $RUNNUMBER -le 539700 ]]; then\n  # A 3 BC offset (future direction) in CTP data was noted for LHC23zd - LHC23zs.\n  CTP_BC_SHIFT=-3\nfi\nif [[ $PERIOD == \"LHC22s\" ]]; then\n  # CTP requested to extract their digits.\n  add_comma_separated ADD_EXTRA_WORKFLOW \"o2-ctp-digit-writer\"\n  # All TPC shifts are set to 86 BCs (= -10.75 TB) due to jitter from bad VDrift calibration.\n  TPCITSTIMEERR=\"0.3\"\n  TPCITSTIMEBIAS=\"0\"\n  if [[ $RUNNUMBER -eq 529397 ]]; then\n    ZDC_BC_SHIFT=0\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529399 ]]; then\n    ZDC_BC_SHIFT=0\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529403 ]]; then\n    ZDC_BC_SHIFT=213268844053\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529414 ]]; then\n    ZDC_BC_SHIFT=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "f1f113b95dad5d77119a7a8527f4d29c1d45f197feba6448bef75fa51e0a4cd8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529414 ]]; then\n    ZDC_BC_SHIFT=0\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  elif [[ $RUNNUMBER -eq 529418 ]]; then\n    ZDC_BC_SHIFT=102488091157\n    TPCCLUSTERTIMESHIFT=\"-10.75\"\n  else\n    ZDC_BC_SHIFT=0\n  fi\n  CTP_BC_SHIFT=-293\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE != \"MC\" ]]; then\n    export CONFIG_EXTRA_PROCESS_o2_ctf_reader_workflow+=\";TriggerOffsetsParam.customOffset[2]=1;TriggerOffsetsParam.customOffset[4]=1;TriggerOffsetsParam.customOffset[5]=1;TriggerOffsetsParam.customOffset[6]=1;TriggerOffsetsParam.customOffset[7]=1;TriggerOffsetsParam.customOffset[11]=$ZDC_BC_SHIFT\"\n  fi\n  export PVERTEXER+=\";pvertexer.dbscanDeltaT=1;pvertexer.maxMultRatDebris=1.\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "b060504803a180327b0b1e31871591c72774b45d666a192ce3d908816b5d694f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\nif the current period is LHC22q, then check the run number:\n- for run 529003, set ZDC_BC_SHIFT to 427744319508;\n- for run 529005, set ZDC_BC_SHIFT to 585290682900;\n- for run 529006, set ZDC_BC_SHIFT to 1007373207060;\n- for run 529008, set ZDC_BC_SHIFT to 1379963461140;\n- for run 529009, set ZDC_BC_SHIFT to 1454804952084;\n- for run 529015, set ZDC_BC_SHIFT to 2244823203348;\n- for run 529037, set ZDC_BC_SHIFT to 256033194516;\n- for run 529038, set ZDC_BC_SHIFT to 486590350356;\n- for run 529039, set ZDC_BC_SHIFT to 1399525886484;\n- for run 529043, set ZDC_BC_SHIFT to 3079675091988.\nif the alien JDL LPMPRODUCTIONTYPE is not \"MC\", and ZDC_BC_SHIFT is set, then add the configuration to the o2_ctf_reader_workflow with the custom offset for ZDC.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "1bdbfa67d22e3113aae2ccef0e7aed762a40ad5d6eb72f42ccd0dcbee33f3ed9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Apply BC shift to CTP IRs (when defined)\nif [[ $CTP_BC_SHIFT -ne 0 ]]; then\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE != \"MC\" ]]; then\n    export CONFIG_EXTRA_PROCESS_o2_ctf_reader_workflow+=\";TriggerOffsetsParam.customOffset[16]=$CTP_BC_SHIFT\"\n  fi\nfi\n\n# Time shift between ITSTPC and FT0\nif [[ -z $TPCCLUSTERTIMESHIFT ]]; then\n  SHIFTSCRIPT=\"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$PASS/ShiftMap.sh\"\n  if [[ -f \"ShiftMap.sh\" ]]; then\n    SHIFTSCRIPT=\"ShiftMap.sh\"\n  fi\n  source $SHIFTSCRIPT $RUNNUMBER\nfi\nif [[ -z $TPCCLUSTERTIMESHIFT ]]; then\n  echo \"TPC cluster time shift not set for the current run\"\n  TPCCLUSTERTIMESHIFT=0\nfi\necho \"TPC cluster time will be adjusted by $TPCCLUSTERTIMESHIFT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "0251c2294fc1d363ead4451fa000a44c1623cc404e95c314f54fd9b3fafad1a4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# run-specific settings\nif [ -f \"setenv_run.sh\" ]; then\n    source setenv_run.sh\nelse\n    echo \"************************************************************\"\n    echo No specific run-dependent configurations for current asynchronous processing\n    echo \"************************************************************\"\nfi\n\n# TPC vdrift\nPERIODLETTER=${PERIOD: -1}\nVDRIFTPARAMOPTION=\nif [ $PERIODLETTER \\< m ]; then\n  echo \"In setenv_extra: time elapsed so far = $timeUsed s\"\n  timeStart=`date +%s`\n  time root -b -q \"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$PASS/getTPCvdrift.C+($RUNNUMBER)\"\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Time taken to retrieve VDrift for TPC = $delta s\"\n  export VDRIFT=`cat vdrift.txt`\n  VDRIFTPARAMOPTION=\"TPCGasParam.DriftV=$VDRIFT\"\n  echo \"Configured TPC vdrift to $VDRIFT\"\nelse\n  echo \"TPC vdrift will be obtained from CCDB\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "ad5f21548782ba7c67df8a7bf4366d70c5c39fed78ecf881cdab400863c076b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# IR\nif [[ -z $RUN_IR ]] || [[ -z $RUN_DURATION ]]; then\n  cp $O2DPG_ROOT/DATA/production/common/getIRandDuration.C ./\n  echo \"In setenv_extra: time used so far = $timeUsed\"\n  timeStart=`date +%s`\n  time root -b -q \"getIRandDuration.C+($RUNNUMBER)\"\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Time spent in obtaining IR and run duration = $delta seconds\"\n  export RUN_IR=`cat IR.txt`\n  export RUN_DURATION=`cat Duration.txt`\nfi\necho \"IR for current run ($RUNNUMBER) = $RUN_IR\"\necho \"Duration of current run ($RUNNUMBER) = $RUN_DURATION\"\n\n# For runs shorter than 10 minutes, a single slot is used.\n# In this scenario, the slot length needs to be adjusted to\n# properly set the maximum number of processed tracks per TF\nif (( RUN_DURATION < 600 )); then\n  export CALIB_TPC_SCDCALIB_SLOTLENGTH=$RUN_DURATION\nfi\n\necho \"BeamType = $BEAMTYPE\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "16c9a0703a6a97cc70507b31a469bb4f56ac08061bb70eb8d13e3bffdbcb42c6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"BeamType = $BEAMTYPE\"\n\nif [[ $ALIEN_JDL_ENABLEMONITORING == \"1\" ]]; then\n  # include performance metrics\n  export ENABLE_METRICS=1\n  exportARGS_ALL_EXTRA=\"$ARGS_ALL_EXTRA --resources-monitoring 50 --resources-monitoring-dump-interval 50\"\nelse\n  # disable monitoring-backend\n  export ENABLE_METRICS=0\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "be2352920089011e2f13034c40f900eda33380dcf6baecc1f279308830f64531": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#ALIGNLEVEL=0: before December 2022 alignment, 1: after December 2022 alignment\nALIGNLEVEL=1\nif [[ \"0$OLDVERSION\" == \"01\" ]] && [[ $BEAMTYPE == \"PbPb\" || $PERIOD == \"MAY\" || $PERIOD == \"JUN\" || $PERIOD == \"LHC22c\" || $PERIOD == \"LHC22d\" || $PERIOD == \"LHC22e\" || $PERIOD == \"LHC22f\" ]]; then\n  ALIGNLEVEL=0\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE == \"MC\" ]]; then\n    # extract pass number\n    ANCHORED_PASS=$ALIEN_JDL_LPMANCHOREPASSNAME\n    ANCHORED_PASS_NUMBER=`echo $ANCHORED_PASS | sed 's/^apass//'`\n    echo \"ANCHORED_PASS_NUMBER = $ANCHORED_PASS_NUMBER\"\n    if [[ $PERIOD == \"MAY\" || $PERIOD == \"JUN\" ]] && [[ $ANCHORED_PASS_NUMBER -gt 1 ]]; then\n      ALIGNLEVEL=1\n    elif [[ $PERIOD == \"LHC22c\" || $PERIOD == \"LHC22d\" || $PERIOD == \"LHC22e\" || $PERIOD == \"LHC22f\" ]] && [[ $ANCHORED_PASS_NUMBER -gt 2 ]]; then\n      ALIGNLEVEL=1\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "677ac396d4ba4cd6e6261f06d0ac24f2691abdf112c1091eb9bae417fa4cb0d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Common settings across workflows influencing ITS-TPC matching\n\nCUT_MATCH_CHI2=250\nif [[ $ALIGNLEVEL == 0 ]]; then\n  ERRIB=\"9e-4\"\n  ERROB=\"1e-2\"\n  CUT_MATCH_CHI2=160\n  export ITS_CONFIG=\" --tracking-mode sync_misaligned\"\n  export ITSTPCMATCH=\"tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=$CUT_MATCH_CHI2;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nelif [[ $ALIGNLEVEL == 1 ]]; then\n  ERRIB=\"100e-8\"\n  ERROB=\"100e-8\"\n  [[ -z $TPCITSTIMEERR ]] && TPCITSTIMEERR=\"0.2\"\n  [[ -z $ITS_CONFIG || \"$ITS_CONFIG\" != *\"--tracking-mode\"* ]] && export ITS_CONFIG+=\" --tracking-mode async\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "6b49745bb6e163af8e998e06a52afb08bdf3dfd4d3ed164e213040f1a8aa7e95": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This is to adjust for TPC track biases resulting from distortions: increment the covariance matrix diagonal at the TPC inner boundary, and correct parameters.\n\nif [[ $PERIOD == \"LHC22m\" || $PERIOD == \"LHC22p\" ]]; then # B-, ~500 kHZ\n  TRACKTUNEPARAMSDATAONLY=\"trackTuneParams.useTPCInnerCorr=true;trackTuneParams.tpcParInner[0]=2.32e-01;trackTuneParams.tpcParInner[1]=0.;trackTuneParams.tpcParInner[2]=-0.0138;trackTuneParams.tpcParInner[3]=0.;trackTuneParams.tpcParInner[4]=0.08\"\n  if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE == \"MC\" ]]; then\n    # disabling debiasing for MC\n    TRACKTUNEPARAMSDATAONLY=\"\"\n  fi\n  TRACKTUNETPCINNER=\"$TRACKTUNEPARAMSDATAONLY;trackTuneParams.sourceLevelTPC=true;trackTuneParams.tpcCovInnerType=1;trackTuneParams.tpcCovInner[0]=0.25;trackTuneParams.tpcCovInner[2]=2.25e-4;trackTuneParams.tpcCovInner[3]=2.25e-4;trackTuneParams.tpcCovInner[4]=0.0256;\"\n  CUT_MATCH_CHI2=60",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "160876d92776935042fa5ad92e6079cbbfbd69156382ab03ed2d315bb65ddcd1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    CUT_MATCH_CHI2=60\n  elif [[ $PERIOD == \"LHC22n\" || $PERIOD == \"LHC22o\" || $PERIOD == \"LHC22r\" || $PERIOD == \"LHC22t\" ]]; then # B+, ~500 kHZ, currently, invert corrections tailored for LHC22m (B-)\n    TRACKTUNEPARAMSDATAONLY=\"trackTuneParams.useTPCInnerCorr=true;trackTuneParams.tpcParInner[0]=-0.232;trackTuneParams.tpcParInner[1]=0.;trackTuneParams.tpcParInner[2]=0.0138;trackTuneParams.tpcParInner[3]=0.;trackTuneParams.tpcParInner[4]=0.08\"\n    if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE == \"MC\" ]]; then\n      # removing debiasing for MC\n      TRACKTUNEPARAMSDATAONLY=\"\"\n    fi\n    TRACKTUNETPCINNER=\"$TRACKTUNEPARAMSDATAONLY;trackTuneParams.sourceLevelTPC=true;trackTuneParams.tpcCovInnerType=1;trackTuneParams.tpcCovInner[0]=0.25;trackTuneParams.tpcCovInner[2]=0.000225;trackTuneParams.tpcCovInner[3]=0.000225;trackTuneParams.tpcCovInner[4]=0.0256;\"\n    CUT_MATCH_CHI2=60\n    #\n    # these are periods of low rate that need debiasing exclusively against static distortions",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "12b942c3323ada3a06557a675473bded9849ce23dd1c89450d75c374b0d2dec5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# These are low rate periods that require debiasing only for static distortions.\n  elif [[ $PERIOD == \"LHC22e\" || $PERIOD == \"LHC22f\" || $PERIOD == \"LHC22q\" || $PERIOD == \"LHC22s\" ]]; then # B+, low rate, at the moment do not unbias but expand the covariance matrix (this expansion is skipped if the alien JDL variable ALIEN_JDL_NOEXTRAERR22Q is set).\n    TRACKTUNEPARAMSDATAONLY=\"trackTuneParams.useTPCInnerCorr=true;trackTuneParams.tpcParInner[0]=-5e-02;trackTuneParams.tpcParInner[1]=0.;trackTuneParams.tpcParInner[2]=0.0033;trackTuneParams.tpcParInner[3]=0.;trackTuneParams.tpcParInner[4]=0.02\"\n    if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE == \"MC\" ]]; then\n      # disabling debiasing for MC\n      TRACKTUNEPARAMSDATAONLY=\"\"\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "7b08c6a1ae2e9808ae25487e61a7be8c9856d4d0c7a49c11cd048ec145c1df21": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# unsetting debiasing for MC\n      TRACKTUNEPARAMSDATAONLY=\"\"\n    fi\n    TRACKTUNETPCINNER=\"$TRACKTUNEPARAMSDATAONLY;trackTuneParams.sourceLevelTPC=true;trackTuneParams.tpcCovInnerType=1;trackTuneParams.tpcCovInner[0]=0.025;trackTuneParams.tpcCovInner[2]=0.0002;trackTuneParams.tpcCovInner[3]=0.0002;trackTuneParams.tpcCovInner[4]=0.002;\"\n    CUT_MATCH_CHI2=60\n  elif [[ $PERIOD == \"LHC22c\" || $PERIOD == \"LHC22d\" ]]; then # B-, low rate, at the moment do not unbias but expand cov matrix (the expansion is not done if there is the alien JDL var ALIEN_JDL_NOEXTRAERR22Q)\n    TRACKTUNEPARAMSDATAONLY=\"trackTuneParams.useTPCInnerCorr=true;trackTuneParams.tpcParInner[0]=0.05;trackTuneParams.tpcParInner[1]=0.;trackTuneParams.tpcParInner[2]=-0.0033;trackTuneParams.tpcParInner[3]=0.;trackTuneParams.tpcParInner[4]=0.02\"\n    if [[ $ALIEN_JDL_LPMPRODUCTIONTYPE == \"MC\" ]]; then\n      # unsetting debiasing for MC\n      TRACKTUNEPARAMSDATAONLY=\"\"\n    fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "9f54a62a5ebfdfbbb85f03bafafefee13c04d5f0c9c9261d03a65e70994129ff": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# unsetting debiasing for MC\n      TRACKTUNEPARAMSDATAONLY=\"\"\n    fi\n    TRACKTUNETPCINNER=\"$TRACKTUNEPARAMSDATAONLY;trackTuneParams.sourceLevelTPC=true;trackTuneParams.tpcCovInnerType=1;trackTuneParams.tpcCovInner[0]=0.025;trackTuneParams.tpcCovInner[2]=0.0002;trackTuneParams.tpcCovInner[3]=0.0002;trackTuneParams.tpcCovInner[4]=0.002;\"\n    CUT_MATCH_CHI2=60\n  fi\n  export ITSTPCMATCH=\"tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=$CUT_MATCH_CHI2;;tpcitsMatch.crudeAbsDiffCut[0]=6;tpcitsMatch.crudeAbsDiffCut[1]=6;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=5;tpcitsMatch.crudeNSigma2Cut[0]=100;tpcitsMatch.crudeNSigma2Cut[1]=100;tpcitsMatch.crudeNSigma2Cut[2]=100;tpcitsMatch.crudeNSigma2Cut[3]=100;tpcitsMatch.crudeNSigma2Cut[4]=100;\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "3f058c027e8a2ff8a4c3f8ff7fd19edeb3fa4008cde984d91052a31e9da56d92": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=$ERRIB;ITSCATrackerParam.sysErrZ2[0]=$ERRIB;ITSCATrackerParam.sysErrY2[1]=$ERRIB;ITSCATrackerParam.sysErrZ2[1]=$ERRIB;ITSCATrackerParam.sysErrY2[2]=$ERRIB;ITSCATrackerParam.sysErrZ2[2]=$ERRIB;ITSCATrackerParam.sysErrY2[3]=$ERROB;ITSCATrackerParam.sysErrZ2[3]=$ERROB;ITSCATrackerParam.sysErrY2[4]=$ERROB;ITSCATrackerParam.sysErrZ2[4]=$ERROB;ITSCATrackerParam.sysErrY2[5]=$ERROB;ITSCATrackerParam.sysErrZ2[5]=$ERROB;ITSCATrackerParam.sysErrY2[6]=$ERROB;ITSCATrackerParam.sysErrZ2[6]=$ERROB;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "39aed3ab99f0196db1bc0da4883451b8a1d605763f08d0a51a418aced06a89c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Custom configurations for ITS reconstruction workflow\nEXTRA_ITSRECO_CONFIG=\nif [[ $BEAMTYPE == \"PbPb\" ]]; then\n  EXTRA_ITSRECO_CONFIG=\"ITSCATrackerParam.trackletsPerClusterLimit=5.;ITSCATrackerParam.cellsPerClusterLimit=5.;ITSVertexerParam.clusterContributorsCut=16;\"\nelif [[ $BEAMTYPE == \"pp\" ]]; then\n  EXTRA_ITSRECO_CONFIG=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2;\"\nfi\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow+=\";$MAXBCDIFFTOMASKBIAS_ITS;$EXTRA_ITSRECO_CONFIG;\"\n\n# There was a discrepancy in the internal errors between the internal errors of sync_misaligned and ITSEXTRAERR at ALIGNLEVEL other than 0\nif [[ $ALIGNLEVEL != 0 ]]; then\n export CONFIG_EXTRA_PROCESS_o2_its_reco_workflow+=\";$ITSEXTRAERR;\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "7b5e225f27542c6709998fca34e77b247a6b25c6ce4763c7f08ea0bd6a5a1bfc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Custom settings for GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\";GPU_global.dEdxDisableResidualGainMap=1;$VDRIFTPARAMOPTION;$TRACKTUNETPCINNER;\"\nif [[ $ALIEN_JDL_LPMPRODUCTIONTYPE == \"MC\" ]]; then\n  export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\";GPU_global.dEdxDisableResidualGain=1\"\nfi\n[[ ! -z $TPCCLUSTERTIMESHIFT ]] && export CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow+=\";GPU_rec_tpc.clustersShiftTimebins=$TPCCLUSTERTIMESHIFT;\"\n\n# Specific configurations for TOF reconstruction\n# export ARGS_EXTRA_PROCESS_o2_tof_reco_workflow+=\"--use-ccdb --ccdb-url-tof \\\"http://alice-ccdb.cern.ch\\\"\"\n# effective from a commit on December 4th\nexport ARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"$ARGS_EXTRA_PROCESS_o2_tof_reco_workflow --use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "b165683bb3349b418af9e9f6bdff495f8865c25cce2067c258668a6f33fa89d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for primary vertex workflow\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as noted in https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "ca2587e3a29c2183815c5be3108fa108ad355e9fbe269353f13d0eb1e093e749": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1.;pvertexer.dbscanAdaptCoef=20.;pvertexer.timeMarginVertexTime=1.3\"\n# updated on 7 Sept 2022\nEXTRA_PRIMVTX_TimeMargin=\"\"\nif [[ $BEAMTYPE == \"PbPb\" || $PERIOD == \"MAY\" || $PERIOD == \"JUN\" || $PERIOD == LHC22* ]]; then\n  EXTRA_PRIMVTX_TimeMargin=\"pvertexer.timeMarginVertexTime=1.3\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "8de720f830e597f99af7c86dc3576306a931d5e0a21ae14b5cb2a74faa1707e8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export PVERTEXER+=\";pvertexer.acceptableScale2=9;pvertexer.minScale2=2;$EXTRA_PRIMVTX_TimeMargin;\"\nif [[ $ALIGNLEVEL == 1 ]]; then\n  if [[ $BEAMTYPE == \"pp\" ]]; then\n    export PVERTEXER+=\";pvertexer.maxChi2TZDebris=40;pvertexer.maxChi2Mean=12;pvertexer.maxMultRatDebris=1.;pvertexer.addTimeSigma2Debris=0.01;pvertexer.meanVertexExtraErrSelection=0.03;\"\n  elif [[ $BEAMTYPE == \"PbPb\" ]]; then\n    # at the moment placeholder\n    export PVERTEXER+=\";pvertexer.maxChi2Mean=12;pvertexer.addTimeSigma2Debris=0.01;pvertexer.meanVertexExtraErrSelection=0.03;\"\n  fi\nfi\n\n# secondary vertexing\nexport SVTX=\"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"\n\nexport CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow+=\";$PVERTEXER;$VDRIFTPARAMOPTION;\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow+=\";$SVTX\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "6fd6a9c96f6a07d2066976d8c12075075eeba0dc5f96e412000758732d9e63a0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORT CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow+=\";$ITSEXTRAERR;$ITSTPCMATCH;$VDRIFTPARAMOPTION;$TRACKTUNETPCINNER;\"\n[[ ! -z \"${TPCITSTIMEBIAS}\" ]] && export CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow+=\";tpcitsMatch.globalTimeBiasMUS=$TPCITSTIMEBIAS;\"\n[[ ! -z \"${TPCITSTIMEERR}\" ]] && export CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow+=\";tpcitsMatch.globalTimeExtraErrorMUS=$TPCITSTIMEERR;\"\n\n# enabling AfterBurner\nhas_detector FT0 && export ARGS_EXTRA_PROCESS_o2_tpcits_match_workflow=\"$ARGS_EXTRA_PROCESS_o2_tpcits_match_workflow --use-ft0\"\n\n# specific settings for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"$ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow --output-type matching-info,calib-info --enable-dia\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow+=\";$ITSEXTRAERR;$VDRIFTPARAMOPTION;$TRACKTUNETPCINNER;\"\n\n# custom settings for TRD matching\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking+=\";$ITSEXTRAERR;$VDRIFTPARAMOPTION;$TRACKTUNETPCINNER;\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "8b351318b2e6d5dca90747986a80e8fb713f2be80e98fd2415ea4a908898624b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for FT0\nexport ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow=\"$ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow --ft0-reconstructor\"\n\n# ad-hoc settings for FV0\nexport ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow=\"$ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow --fv0-reconstructor\"\n\n# ad-hoc settings for FDD\n#...\n\n# ad-hoc settings for MFT\nif the BEAMTYPE is \"pp\" or the PERIOD is \"LHC22s\", then\n  export CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow+=\"MFTTracking.RBins=30;MFTTracking.PhiBins=120;MFTTracking.ZVtxMin=-13;MFTTracking.ZVtxMax=13;MFTTracking.MFTRadLength=0.084;$MAXBCDIFFTOMASKBIAS_MFT\"\nelse\n  export CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow+=\"MFTTracking.MFTRadLength=0.084;$MAXBCDIFFTOMASKBIAS_MFT\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "71c872b1572eb4be8954f584fa075cc10ef1e0f3fdd03033941c310c55c1d107": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for MCH\nif [[ $BEAMTYPE == \"pp\" ]]; then\n  export CONFIG_EXTRA_PROCESS_o2_mch_reco_workflow+=\";MCHClustering.lowestPadCharge=15;MCHTracking.chamberResolutionX=0.4;MCHTracking.chamberResolutionY=0.4;MCHTracking.sigmaCutForTracking=7;MCHTracking.sigmaCutForImprovement=6;MCHDigitFilter.timeOffset=126\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "f4f97637b38eb2bdea4c335630e427d0b9e3d62f9ee1304537b70b5e309449a8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# potentially incorporating calibration procedures as implemented online\n# could be improved to enable more processes simultaneously\nif [[ $ADD_CALIB == \"1\" ]]; then\n  export WORKFLOW_PARAMETERS=\"CALIB,CALIB_LOCAL_INTEGRATED_AGGREGATOR,${WORKFLOW_PARAMETERS}\"\n  export CALIB_DIR=\"./\"\n  export CALIB_TPC_SCDCALIB_SENDTRKDATA=0\n  export CALIB_PRIMVTX_MEANVTX=0\n  export CALIB_TOF_LHCPHASE=0\n  export CALIB_TOF_CHANNELOFFSETS=0\n  export CALIB_TOF_DIAGNOSTICS=0\n  export CALIB_EMC_BADCHANNELCALIB=0\n  export CALIB_EMC_TIMECALIB=0\n  export CALIB_PHS_ENERGYCALIB=0\n  export CALIB_PHS_BADMAPCALIB=0\n  export CALIB_PHS_TURNONCALIB=0\n  export CALIB_PHS_RUNBYRUNCALIB=0\n  export CALIB_PHS_L1PHASE=0\n  export CALIB_TRD_VDRIFTEXB=0\n  export CALIB_TPC_TIMEGAIN=0\n  export CALIB_TPC_RESPADGAIN=0\n  export CALIB_TPC_VDRIFTTGL=0\n  export CALIB_CPV_GAIN=0\n  export CALIB_ZDC_TDC=0\n  export CALIB_FT0_TIMEOFFSET=0\n  export CALIB_TPC_SCDCALIB=0\n  if [[ $DO_TPC_RESIDUAL_EXTRACTION == \"1\" ]]; then\n    export CALIB_TPC_SCDCALIB=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "1c81444757ad6c2ce0f443b943bc6737f365f7c704f982593a63aa16d4d031cd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $DO_TPC_RESIDUAL_EXTRACTION == \"1\" ]]; then\n    export CALIB_TPC_SCDCALIB=1\n    export CALIB_TPC_SCDCALIB_SENDTRKDATA=1\n    export ARGS_EXTRA_PROCESS_o2_tpc_scdcalib_interpolation_workflow=\"$ARGS_EXTRA_PROCESS_o2_tpc_scdcalib_interpolation_workflow --process-seeds --enable-itsonly --tracking-sources ITS,TPC,TRD,TOF,ITS-TPC,ITS-TPC-TRD,ITS-TPC-TRD-TOF\"\n    # customized settings for TPC residual extraction\n    export ARGS_EXTRA_PROCESS_o2_calibration_residual_aggregator=\"$ARGS_EXTRA_PROCESS_o2_calibration_residual_aggregator --output-type trackParams,unbinnedResid\"\n    if [[ $ALIEN_JDL_DEBUGRESIDUALEXTRACTION == \"1\" ]]; then\n      export CONFIG_EXTRA_PROCESS_o2_tpc_scdcalib_interpolation_workflow+=\";scdcalib.maxTracksPerCalibSlot=-1;scdcalib.minPtNoOuterPoint=0.8;scdcalib.minTPCNClsNoOuterPoint=120\"\n      export ARGS_EXTRA_PROCESS_o2_trd_global_tracking+=\"$ARGS_EXTRA_PROCESS_o2_trd_global_tracking --enable-qc\"\n    fi\n  fi\n  export CALIB_EMC_ASYNC_RECALIB=\"$ALIEN_JDL_DOEMCCALIB\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "7fadefef2865affd05dc485b49e0ee542ba65830d20c00056e80b9fb9139860c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "fi\n  export CALIB_EMC_ASYNC_RECALIB=\"$ALIEN_JDL_DOEMCCALIB\"\n  if [[ $ALIEN_JDL_DOTRDVDRIFTEXBCALIB == \"1\" ]]; then\n    export CALIB_TRD_VDRIFTEXB=\"$ALIEN_JDL_DOTRDVDRIFTEXBCALIB\"\n    export ARGS_EXTRA_PROCESS_o2_calibration_trd_workflow=\"$ARGS_EXTRA_PROCESS_o2_calibration_trd_workflow --enable-root-output\"\n    export ARGS_EXTRA_PROCESS_o2_trd_global_tracking=\"$ARGS_EXTRA_PROCESS_o2_trd_global_tracking --enable-qc\"\n  fi\n  if [[ $ALIEN_JDL_DOMEANVTXCALIB == 1 ]]; then\n    export CALIB_PRIMVTX_MEANVTX=\"$ALIEN_JDL_DOMEANVTXCALIB\"\n    export TFPERSLOTS_MEANVTX=550000 # 1 hour\n    export DELAYINTFS_MEANVTX=55000  # 10 minutes\n    export SVERTEXING_SOURCES=none # disable secondary vertexing\n  fi\n  if [[ $ALIEN_JDL_DOUPLOADSLOCALLY == 1 ]]; then\n    export CCDB_POPULATOR_UPLOAD_PATH=\"file://$PWD\"\n  fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "9ada06fb50270c87ebbad1046a98f6bb6a3a34ce0be1fa8c92ebb65543346906": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# extra workflows in case we need to process currents for FT0, FV0, TOF, or TPC\nif [[ $ALIEN_JDL_EXTRACTCURRENTS == 1 ]]; then\n  if [[ -z \"${WORKFLOW_DETECTORS_RECO+x}\" ]] || [[ \"0$WORKFLOW_DETECTORS_RECO\" == \"0ALL\" ]]; then export WORKFLOW_DETECTORS_RECO=$WORKFLOW_DETECTORS; fi\n  if has_detector_reco FT0; then add_comma_separated ADD_EXTRA_WORKFLOW \"o2-ft0-integrate-cluster-workflow\"; fi\n  if has_detector_reco FV0; then add_comma_separated ADD_EXTRA_WORKFLOW \"o2-fv0-integrate-cluster-workflow\"; fi\n  if has_detector_reco TOF; then add_comma_separated ADD_EXTRA_WORKFLOW \"o2-tof-integrate-cluster-workflow\"; fi\n  if [[ $ALIEN_JDL_DISABLE3DCURRENTS != 1 ]]; then\n    export ARGS_EXTRA_PROCESS_o2_tpc_integrate_cluster_workflow=\"$ARGS_EXTRA_PROCESS_o2_tpc_integrate_cluster_workflow--process-3D-currents --nSlicesTF 1\"\n  fi\n  if has_detector_reco TPC; then add_comma_separated ADD_EXTRA_WORKFLOW \"o2-tpc-integrate-cluster-workflow\"; fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "741eb0e1d584bed5c838ee3f5fec81c131275f3eea9738f094dbe44f9c5eb29b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # Activating AOD\nif [[ $ALIEN_JDL_AODOFF -ne 1 ]]; then\n  export WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "9efb4001deaca9a3b427e8ab387e10429ab6e6b63cdecf6bcd6fd24b5f4b2e94": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# custom configurations for AOD\nexport ARGS_EXTRA_PROCESS_o2_aod_producer_workflow=\"$ARGS_EXTRA_PROCESS_o2_aod_producer_workflow --aod-writer-maxfilesize $AOD_FILE_SIZE\"\nif [[ $PERIOD == \"LHC22c\" ]] || [[ $PERIOD == \"LHC22d\" ]] || [[ $PERIOD == \"LHC22e\" ]] || [[ $PERIOD == \"LHC22f\" ]] || [[ $PERIOD == \"LHC22m\" ]] || [[ \"$RUNNUMBER\" =~ (526463|526465|526466|526467|526468|526486|526505|526508|526510|526512|526525|526526|526528|526534|526559|526596|526606|526612|526638|526639|526641|526643|526647|526649|526689|526712|526713|526714|526715|526716|526719|526720|526776|526886|526926|526927|526928|526929|526934|526935|526937|526938|526963|526964|526966|526967|526968|527015|527016|527028|527031|527033|527034|527038|527039|527041|527057|527076|527108|527109|527228|527237|527259|527260|527261|527262|527345|527347|527349|527446|527518|527523|527734) ]] ; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "122693f00e0a947d3a743eca6049441ce34b6c7cd202b0c17b3d97a87ef702c7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPORTARGS_EXTRA_PROCESS_o2_aod_producer_workflow=\"$ARGS_EXTRA_PROCESS_o2_aod_producer_workflow --aod-producer-workflow \\\"--ctpreadout-create 1\\\"\"\nFI",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "498cdbe52df8cbbd2047adbd3b1b063d646d63e2de7ed070608814b982c6746b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Activating QC\nif [[ $ALIEN_JDL_QCOFF != \"1\" ]]; then\n  export WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nfi\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values \\\"qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD\\\"\"\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/setenv_extra.sh"
        }
    ],
    "2255e379573bd3b666d30d7b3eeeb838b90b16d76820fe20137a19c70fa13a54": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script for initiating asynchronous processing\n#\n# If running locally, ensure to export variables such as:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass4\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n\n# Function to execute AOD merging\nrun_AOD_merging() {\n  o2-aod-merger --input list_$1.list --output $1/AO2D_merged.root > $1/merging.log\n  exitcode=$?\n  return $exitcode\n}\n\n# To bypass positional argument parsing before the randomization step.\ninputarg=\"${1}\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "3fe0d58cb12ca98523131d40f6b663c5bcbe7b8439a52d56de65b0c03294ba1e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# to skip positional arg parsing before the randomizing part.\ninputarg=\"${1}\"\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    echo \"${1}\" > list.list\n    if [[ ! -z $ASYNC_BENCHMARK_ITERATIONS ]]; then\n      for i in `seq 1 $ASYNC_BENCHMARK_ITERATIONS`; do echo \"${1}\" >> list.list; done\n    fi\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nelif [[ $1 != \"list.list\" && \"${1##*.}\" == \"list\" ]]; then\n    cp $1 list.list\n    export MODE=\"remote\"\n    shift\nfi\n\nif [[ -f list.list ]]; then\n  echo \"The following files will be processed:\"\n  cat list.list\n  echo -e \"\\n\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "1427747b52c2d61499516fc5e25c8bc99865444aa205704d51217560db172fb9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n      POSITIONAL+=(\"$1\")\n      shift\n      ;;\n  esac\ndone\n\n# now we overwrite the variables if they are found in the jdl\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\n    if [[ -n \"$ALIEN_JDL_O2DPGPATH\" ]]; then\n      export O2DPGPATH=\"$ALIEN_JDL_O2DPGPATH\"\n    else\n      export O2DPGPATH=\"$PERIOD\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "14892b4f89df962cc4c72bbbfbe5f24395b59f532495ecff336fd52ff8ab7e36": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# pass\nif [[ -n \"$ALIEN_JDL_O2DPGPASSPATH\" ]]; then\n  export PASS=\"$ALIEN_JDL_O2DPGPASSPATH\"\nelif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n  export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"verify the presence of the required environment variables: RUNNUMBER (--> $RUNNUMBER), PERIOD (--> $PERIOD), PASS (--> $PASS), BEAMTYPE (--> $BEAMTYPE)\"\n    exit 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\nexport timeUsed=0\n\n###if [[ $MODE == \"remote\" ]]; then\n    # run specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"There is no runInput_$RUNNUMBER.tgz file, so we can assume it's not needed\"\n    else\n      tar -xzvf runInput_$RUNNUMBER.tgz\n    fi\n###fi\n\n##############################\n# calibrations\nexport ADD_CALIB=0\n\nif [[ -n \"$ALIEN_JDL_DOEMCCALIB\" ]]; then\n  export ADD_CALIB=1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "3471c44cad78d454c62325bdc3136f1dc8c389c96d8293023ff4816aa09e0500": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -n \"$ALIEN_JDL_DOEMCCALIB\" ]]; then\n  export ADD_CALIB=1\nfi\n\nif [[ -n \"$ALIEN_JDL_DOTPCRESIDUALEXTRACTION\" ]]; then\n  export DO_TPC_RESIDUAL_EXTRACTION=\"$ALIEN_JDL_DOTPCRESIDUALEXTRACTION\"\n  export ADD_CALIB=1\nfi\n\nif [[ -n \"$ALIEN_JDL_DOTRDVDRIFTEXBCALIB\" ]]; then\n  export ADD_CALIB=1\nfi\n\nif [[ -n \"$ALIEN_JDL_DOMEANVTXCALIB\" ]]; then\n  export ADD_CALIB=1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "ae759fa31bae764d790618fcfabcf8baf50697505f4496cfe160cbd21d87bd96": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -n \"$ALIEN_JDL_DOMEANVTXCALIB\" ]]; then\n  export ADD_CALIB=1\nfi\n\n# AOD file size\nif [[ -n \"$ALIEN_JDL_AODFILESIZE\" ]]; then\n  export AOD_FILE_SIZE=\"$ALIEN_JDL_AODFILESIZE\"\nelse\n  export AOD_FILE_SIZE=8000\nfi\nif [[ $ADD_CALIB == 1 ]]; then\n  if [[ -z $CALIB_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Using calib-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/calib-workflow.sh .\n  else\n    echo \"Using calib-workflow.sh provided as input\"\n    cp $CALIB_WORKFLOW_FROM_OUTSIDE .\n  fi\n  if [[ -z $AGGREGATOR_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Using aggregator-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/aggregator-workflow.sh .\n  else\n    echo \"Using aggregator-workflow.sh provided as input\"\n    cp $AGGREGATOR_WORKFLOW_FROM_OUTSIDE .\n  fi\nfi\n##############################\n\necho \"Listing current directory contents\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "287bbad1d18e378de4f5fcd7041e08e69c5d0ce6ff906ea6c1f0f283135c987d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Displaying content of the current directory\"\nls -altr\n\nln -s $O2DPG_ROOT/DATA/common/gen_topo_helper_functions.sh\nsource gen_topo_helper_functions.sh || { echo \"gen_topo_helper_functions.sh failed\" && exit 5; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "5ffc07f86c38a7a4bd39c55ca2386dce16722287311089ead59e53e0a9336afe": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f \"setenv_extra.sh\" ]]; then\n  echo \"Time used so far, before setenv_extra = $timeUsed s\"\n  time source setenv_extra.sh $RUNNUMBER $BEAMTYPE || { echo \"setenv_extra.sh (local file) failed\" && exit 6; }\n  echo \"Time used so far, after setenv_extra = $timeUsed s\"\nelse\n  echo \"************************************************************************************\"\n  echo \"No specific setenv_extra configurations for this async processing; utilizing the default one in O2DPG\"\n  echo \"************************************************************************************\"\n  if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$PASS/setenv_extra.sh ]]; then\n    ln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$PASS/setenv_extra.sh\n    echo \"Time used so far, before setenv_extra = $timeUsed s\"\n    time source setenv_extra.sh $RUNNUMBER $BEAMTYPE || { echo \"setenv_extra.sh (O2DPG) failed\" && exit 7; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "54c15c8d0186cf8b67fb2a8666ff6959b80632a3ee113302273a864d96ee9ef9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Time used so far, after setenv_extra = $timeUsed s\"\n  else\n    echo \"*********************************************************************************************************\"\n    echo \"No setenv_extra for $ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$PASS in O2DPG\"\n    echo \"                No special settings will be applied\"\n    echo \"*********************************************************************************************************\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "707d62ef39d03c547919b9dd990c1db3dc8bf8c29e8033d05939c95ae3c51304": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f run-workflow-on-inputlist.sh ]]; then\n  echo \"Use run-workflow-on-inputlist.sh macro provided as input\"\nelse\n  echo \"Use run-workflow-on-inputlist.sh macro from O2\"\n  cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n  echo \"Use dpl-workflow.sh from O2\"\n  cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n  echo \"Use dpl-workflow.sh passed as input\"\n  cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n  echo \"QC json from outside is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\n# TFDELAY and throttling\nexport TFDELAYSECONDS=40\nif [[ -n \"$ALIEN_JDL_TFDELAYSECONDS\" ]]; then\n  TFDELAYSECONDS=\"$ALIEN_JDL_TFDELAYSECONDS\"\n# ...otherwise, it depends on whether throttling is in use\nelif [[ -n \"$ALIEN_JDL_USETHROTTLING\" ]]; then\n  TFDELAYSECONDS=1\n  export TIMEFRAME_RATE_LIMIT=1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "27a281cbeb043423b158cf3e1b4ffb58ea79f679a0434b97029167e82bd3fd2b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z \"$ALIEN_JDL_SHMSIZE\" ]]; then export SHMSIZE=$ALIEN_JDL_SHMSIZE; else export SHMSIZE=$(( 16 << 30 )) if [[ -z \"$SHMSIZE\" ]]; fi\nif [[ ! -z \"$ALIEN_JDL_DDSHMSIZE\" ]]; then export DDSHMSIZE=$ALIEN_JDL_DDSHMSIZE; else export DDSHMSIZE=$(( 32 << 10 )); fi\n\n# root output is enabled in some cases only\n# the files AO2D.root, QC.root, o2calib_tof.root, mchtracks.root, and mchclusters.root are kept.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "d6a58077e6a51acf296df0b1ba4c9c3e3a40d2e318080f1e27605b4829ee3ccd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    SETTING_ROOT_OUTPUT=\"ENABLE_ROOT_OUTPUT_o2_mch_reco_workflow= ENABLE_ROOT_OUTPUT_o2_muon_tracks_matcher_workflow= ENABLE_ROOT_OUTPUT_o2_aod_producer_workflow= ENABLE_ROOT_OUTPUT_o2_qc= \"\nif [[ $ALIEN_JDL_DOEMCCALIB == \"1\" ]]; then\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_emcal_emc_offline_calib_workflow= \"\nfi\nif [[ $DO_TPC_RESIDUAL_EXTRACTION == \"1\" ]]; then\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_calibration_residual_aggregator= \"\nfi\nif [[ $ALIEN_JDL_DOTRDVDRIFTEXBCALIB == \"1\" ]]; then\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_trd_global_tracking= \"\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_calibration_trd_workflow= \"\nfi\nif [[ $ALIEN_JDL_DOMEANVTXCALIB == \"1\" ]]; then\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_primary_vertexing_workflow= \"\n  SETTING_ROOT_OUTPUT+=\"ENABLE_ROOT_OUTPUT_o2_tfidinfo_writer_workflow= \"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "3dd79729d67f49a24cb39ef3efef34b61e53ef684d93c36be4863ff2e90c7086": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# to append extra output to always retain\nif [[ -n \"$ALIEN_JDL_EXTRAENABLEROOTOUTPUT\" ]]; then\n  OLD_IFS=$IFS\n  IFS=','\n  for token in $ALIEN_JDL_EXTRAENABLEROOTOUTPUT; do\n    SETTING_ROOT_OUTPUT+=\" ENABLE_ROOT_OUTPUT_$token=\"\n  done\n  IFS=$OLD_IFS\nfi\n\n# to specify extra output to always retain\nif [[ -n \"$ALIEN_JDL_ENABLEROOTOUTPUT\" ]]; then\n  OLD_IFS=$IFS\n  IFS=','\n  SETTING_ROOT_OUTPUT=\n  for token in $ALIEN_JDL_ENABLEROOTOUTPUT; do\n    SETTING_ROOT_OUTPUT+=\" ENABLE_ROOT_OUTPUT_$token=\"\n  done\n  IFS=$OLD_IFS\nfi\n\nkeep=0\n\nif [[ -n $ALIEN_JDL_INPUTTYPE ]] && [[ \"$ALIEN_JDL_INPUTTYPE\" == \"TFs\" ]]; then\n  export WORKFLOW_PARAMETERS=CTF\n  INPUT_TYPE=TF\n  if [[ $RUNNUMBER -lt 523141 ]]; then\n    export TPC_CONVERT_LINKZS_TO_RAW=1\n  fi\nelse\n  INPUT_TYPE=CTF\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "cd2f6c58bb9b44c8682e781b20ddf172a4fb491dc2a9af076e6596dc53b1e8e6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -n $ALIEN_JDL_PACKAGES ]]; then # if this environment variable is set, it indicates grid operation\n  # JDL can define the permille to retain; otherwise, we use 2 by default\n  if [[ ! -z \"$ALIEN_JDL_NKEEP\" ]]; then export NKEEP=$ALIEN_JDL_NKEEP; else NKEEP=2; fi\n\n  KEEPRATIO=0\n  (( $NKEEP > 0 )) && KEEPRATIO=$((1000/NKEEP))\n  echo \"Configured to save ${NKEEP} permil of intermediate outputs\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "11323f2d5691bb0ae82b2efbb0650e12e27947a701bb66214b61cf324fa957c0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [[ -f wn.xml ]]; then\n    grep alien:// wn.xml | tr ' ' '\\n' | grep ^lfn | cut -d\\\" -f2 > tmp.tmp\n  else\n    echo \"${inputarg}\" > tmp.tmp\n  fi\n  while read -r INPUT_FILE && (( $KEEPRATIO > 0 )); do\n    SUBJOBIDX=$(grep -B1 $INPUT_FILE CTFs.xml | head -n1 | cut -d\\\" -f2)\n    echo \"INPUT_FILE                              : $INPUT_FILE\"\n    echo \"Index of INPUT_FILE in collection       : $SUBJOBIDX\"\n    echo \"Total number of subjobs for current job : $ALIEN_JDL_SUBJOBCOUNT\"\n    # if there aren't enough subjobs, we force to keep the first one\n    if [[ \"$ALIEN_JDL_SUBJOBCOUNT\" -le \"$KEEPRATIO\" && \"$SUBJOBIDX\" -eq 1 ]]; then\n      echo -e \"**** NOT ENOUGH SUBJOBS TO SAMPLE, WE WILL FORCE TO KEEP THE OUTPUT ****\"\n      keep=1\n      break\n    else\n      if [[ \"$((SUBJOBIDX%KEEPRATIO))\" -eq \"0\" ]]; then\n\tkeep=1\n\tbreak\n      fi\n    fi\n  done < tmp.tmp\n  if [[ $keep -eq 1 ]]; then\n    echo \"Intermediate files WILL BE KEPT\";\n  else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "8fed47b389c641a2835501d85c9debf475802f46e343433d31321b31d898011d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "done < tmp.tmp\nif [[ $keep -eq 1 ]]; then\n  echo \"Intermediate files WILL BE KEPT\";\nelse\n  echo \"Intermediate files WILL BE KEPT ONLY FOR SOME WORKFLOWS\";\nfi\nelse\n  # in LOCAL mode, by default we keep all intermediate files\n  echo -e \"\\n\\n**** RUNNING IN LOCAL MODE ****\"\n  keep=1\n  if [[ \"$DO_NOT_KEEP_OUTPUT_IN_LOCAL\" -eq 1 ]]; then\n    echo -e \"**** ONLY SOME WORKFLOWS WILL HAVE THE ROOT OUTPUT SAVED ****\\n\\n\"\n    keep=0;\n  else\n    echo -e \"**** WE KEEP ALL ROOT OUTPUT ****\";\n    echo -e \"**** IF YOU WANT TO REMOVE ROOT OUTPUT FILES FOR PERFORMANCE STUDIES OR SIMILAR, PLEASE SET THE ENV VAR DO_NOT_KEEP_OUTPUT_IN_LOCAL ****\\n\\n\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "74aadb17a95bdc82be446dd90d2cf88ca393ccaa54e6d07e4b9f0cc9d15fca0f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $keep -eq 1 ]]; then\n  SETTING_ROOT_OUTPUT+=\"DISABLE_ROOT_OUTPUT=0\";\nfi\necho \"SETTING_ROOT_OUTPUT = $SETTING_ROOT_OUTPUT\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "c9f75bccea544d9abfd9a329baa7af1669c404060fa30c946c6a9b17a85db191": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\nif [[ -n \"$ALIEN_JDL_USEGPUS\" && $ALIEN_JDL_USEGPUS -ne 0 ]]; then\n  echo \"Enabling GPUs\"\n  export GPUTYPE=\"HIP\"\n  export GPUMEMSIZE=$((25 << 30))\n  if [[ \"0$ASYNC_PASS_NO_OPTIMIZED_DEFAULTS\" != \"01\" ]]; then\n    if [[ $keep -eq 0 ]]; then\n      if [[ $ALIEN_JDL_UNOPTIMIZEDGPUSETTINGS -ne 1 ]]; then\n\texport MULTIPLICITY_PROCESS_tof_matcher=2\n\texport MULTIPLICITY_PROCESS_mch_cluster_finder=3\n\texport MULTIPLICITY_PROCESS_tpc_entropy_decoder=2\n\texport MULTIPLICITY_PROCESS_itstpc_track_matcher=3\n\texport MULTIPLICITY_PROCESS_its_tracker=2\n      else\n\t# setting multiplicities to 1\n\texport MULTIPLICITY_PROCESS_tof_matcher=1\n\texport MULTIPLICITY_PROCESS_mch_cluster_finder=1\n\texport MULTIPLICITY_PROCESS_tpc_entropy_decoder=1\n\texport MULTIPLICITY_PROCESS_itstpc_track_matcher=1\n\texport MULTIPLICITY_PROCESS_its_tracker=1\n      fi\n      export TIMEFRAME_RATE_LIMIT=8\n    else\n      export TIMEFRAME_RATE_LIMIT=4\n    fi\n    if [[ $ALIEN_JDL_UNOPTIMIZEDGPUSETTINGS -ne 1 ]]; then\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "f61e83c5639b17a20cb8f74e34b15344fb6ba595fe899a93b164d9d510c849b5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $ALIEN_JDL_UNOPTIMIZEDGPUSETTINGS != 1 ]]; then\n  export OMP_NUM_THREADS=8\nelse\n  export OMP_NUM_THREADS=4\nfi\nexport SHMSIZE=30000000000\nelse\n  # David, October 13th\n  # the optimized settings for the 8-core GRID queue without GPU are\n  # (overwriting the previous settings)\n  #\n  if [[ \"0$ASYNC_PASS_NO_OPTIMIZED_DEFAULTS\" != \"01\" ]]; then\n    export TIMEFRAME_RATE_LIMIT=3\n    if (( $(echo \"$RUN_IR > 800000\" | bc -l) )); then\n      export TIMEFRAME_RATE_LIMIT=1\n    elif (( $(echo \"$RUN_IR < 50000\" | bc -l) )); then\n      export TIMEFRAME_RATE_LIMIT=6\n    fi\n    export OMP_NUM_THREADS=6\n    export SHMSIZE=16000000000\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "125e56c4fa204038bea896dbb0946c760dbf2766cd37f272a2b7e1d68e8ebef7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ECHO \"[INFO (async_pass.sh)] environment variables were configured as TFDELAYSECONDS ${TFDELAYSECONDS} and TIMEFRAME_RATE_LIMIT ${TIMEFRAME_RATE_LIMIT}\"\n\nIF[\"$NTIMEFRAMES\" == \"\" ]; THEN\n  export NTIMEFRAMES=-1\nfi\n\n# let's define O2JOBID and SHMEMID\nO2JOBIDscript=\"$O2DPG_ROOT/DATA/production/common/setVarsFromALIEN_PROC_ID.sh\"\nif [ -f \"setVarsFromALIEN_PROC_ID.sh\" ]; then\n  O2JOBIDscript=\"setVarsFromALIEN_PROC_ID.sh\"\nfi\nsource $O2JOBIDscript\n\nSTATSCRIPT=\"$O2DPG_ROOT/DATA/production/common/getStat.sh\"\nif [ -f \"getStat.sh\" ]; then\n  STATSCRIPT=\"getStat.sh\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "d968b3394c2cb2506e42962fe0139ade532b259c1f0788c40acfa589dcc43ebe": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# reconstruction and matching\n# display workflow\nif [[ $ALIEN_JDL_SPLITWF != \"1\" ]]; then\n  env $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list > workflowconfig.log\n  # execute\n  if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n    timeStart=`date +%s`\n    time env $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n    timeEnd=`date +%s`\n    timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n    delta=$(( $timeEnd-$timeStart ))    \n    exitcode=$?\n    echo \"Time taken for workflow execution = $delta seconds\"\n    echo \"exit code from processing = $exitcode\"\n    if [[ $exitcode -ne 0 ]]; then\n      echo \"exit code from processing is \" $exitcode > validation_error.message\n      echo \"exit code from processing is \" $exitcode\n      exit $exitcode\n    fi\n    mv latest.log latest_reco_1.log\n    ./$STATSCRIPT latest_reco_1.log\n  fi\nelse\n  # executing the workflow in split mode",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "b859a010557e82fdc1c8a01270d56e84ed88f5bcc28f115720fd1634a7216e8e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ./$STATSCRIPT latest_reco_1.log\n  fi\nelse\n  # executing the workflow in split mode\n  echo \"The workflow will be executed in SPLIT mode!\"\n  WORKFLOW_PARAMETERS_START=$WORKFLOW_PARAMETERS",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "c2dc3b0c3ecbfced8f4cca629ac4e8762ce0ca0b8d13546a51241dd74199b7a8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"$ALIEN_JDL_SPLITSTEP\" ]] || [[ \"$ALIEN_JDL_SPLITSTEP\" -eq 1 ]] || ( [[ -n $ALIEN_JDL_STARTSPLITSTEP ]] && [[ \"$ALIEN_JDL_STARTSPLITSTEP\" -le 1 ]]) || [[ \"$ALIEN_JDL_SPLITSTEP\" -eq \"all\" ]]; then\n    # 1. TPC decoding + reconstruction\n    echo \"Step 1) Decoding and reconstructing TPC\"\n    echo \"Step 1) Decoding and reconstructing TPC\" > workflowconfig.log\n    for i in AOD QC CALIB CALIB_LOCAL_INTEGRATED_AGGREGATOR; do\n      export WORKFLOW_PARAMETERS=$(echo $WORKFLOW_PARAMETERS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\"'$'\"//\" -e \"s/^$i\"'$'\"//\")\n    done\n    env DISABLE_ROOT_OUTPUT=0 IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=TPC WORKFLOW_DETECTORS_MATCHING= ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list >> workflowconfig.log\n    # execute the workflow\n    if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n      timeStart=`date +%s`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "6397c965efb2a5b4f014dec6ee7f2cd19b154e8d7ac0f93fccdcb9cbe0c97041": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the workflow\nif [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n  timeStart=`date +%s`\n  time env DISABLE_ROOT_OUTPUT=0 IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=TPC WORKFLOW_DETECTORS_MATCHING= ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  exitcode=$?\n  echo \"Time taken to run the workflow, Step 1 = $delta s\"\n  exitcode=$?\n  echo \"exitcode = $exitcode\"\n  if [[ $exitcode -ne 0 ]]; then\n    echo \"exit code from Step 1 of processing is \" $exitcode > validation_error.message\n    echo \"exit code from Step 1 of processing is \" $exitcode\n    exit $exitcode\n  fi\n  mv latest.log latest_reco_1.log\n  ./$STATSCRIPT latest_reco_1.log reco_1\nfi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "e6cff7874c2851145e574c3d973b21f9437a2d1a6c4d64ab5f12fb8c0281a08d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"$ALIEN_JDL_SPLITSTEP\" ]] || [[ \"$ALIEN_JDL_SPLITSTEP\" -eq 2 ]] || ( [[ -n $ALIEN_JDL_STARTSPLITSTEP ]] && [[ \"$ALIEN_JDL_STARTSPLITSTEP\" -le 2 ]]) || [[ \"$ALIEN_JDL_SPLITSTEP\" -eq \"all\" ]]; then\n    # 2. processing the other detectors' data and reconstruction\n    WORKFLOW_PARAMETERS=$WORKFLOW_PARAMETERS_START\n    echo \"Step 2) Decoding and reconstructing ALL-TPC\"\n    echo -e \"\\nStep 2) Decoding and reconstructing ALL-TPC\" >> workflowconfig.log\n    for i in AOD QC CALIB CALIB_LOCAL_INTEGRATED_AGGREGATOR; do\n      export WORKFLOW_PARAMETERS=$(echo $WORKFLOW_PARAMETERS | sed -e \"s/,$i,/,/g\" -e \"s/^$i,//\" -e \"s/,$i\"'$'\"//\" -e \"s/^$i\"'$'\"//\")\n    done\n    env DISABLE_ROOT_OUTPUT=0 IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_EXCLUDE=TPC WORKFLOW_DETECTORS_MATCHING= ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list >> workflowconfig.log\n    # execute the workflow\n    if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n      timeStart=`date +%s`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "bc2b148a9cf1d9e8dfc3cf9cbafa745e57e81d4d64a6e00dd8b5d5a31dec80d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# execute the process\nif [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n  timeStart=`date +%s`\n  time env DISABLE_ROOT_OUTPUT=0 IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_EXCLUDE=TPC WORKFLOW_DETECTORS_MATCHING= ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  exitcode=$?\n  echo \"Duration of workflow execution, Step 2 = $delta s\"\n  exitcode=$?\n  echo \"exitcode = $exitcode\"\n  if [[ $exitcode -ne 0 ]]; then\n    echo \"exit code from Step 2 of processing is \" $exitcode > validation_error.message\n    echo \"exit code from Step 2 of processing is \" $exitcode\n    exit $exitcode\n  fi\n  mv latest.log latest_reco_2.log\n  ./$STATSCRIPT latest_reco_2.log reco_2\n  # let's check against the previous step\n  if [[ -f latest_reco_1.log ]]; then",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "71b23ddd8c981d712071293487fccb428dd60777e93e57cee53adf339867b687": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# let's compare to the previous step\n  if [[ -f latest_reco_1.log ]]; then\n\tnCTFsFilesInspected_step1=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/\\(^[0-9]*\\)_.*/\\1/'`\n\tnCTFsFilesOK_step1=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/^[0-9]*_\\([0-9]*\\)_.*/\\1/'`\n\tnCTFsFilesFailed_step1=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/^[0-9]*_[0-9]*_\\([0-9]*\\)_.*/\\1/'`\n\tnCTFsProcessed_step1=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/^[0-9]*_[0-9]*_[0-9]*_\\([0-9]*\\).*/\\1/'`\n\tnCTFsFilesInspected_step2=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_2.stat | sed 's/\\(^[0-9]*\\)_.*/\\1/'`\n\tnCTFsFilesOK_step2=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_1.stat | sed 's/^[0-9]*_\\([0-9]*\\)_.*/\\1/'`\n\tnCTFsFilesFailed_step2=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_2.stat | sed 's/^[0-9]*_[0-9]*_\\([0-9]*\\)_.*/\\1/'`\n\tnCTFsProcessed_step2=`ls [0-9]*_[0-9]*_[0-9]*_[0-9]*_[0-9]*_reco_2.stat | sed 's/^[0-9]*_[0-9]*_[0-9]*_\\([0-9]*\\).*/\\1/'`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "78f2fe201c8209bd3bb89e6a9c77b8f0b4273804e2a32f1c383d91fc4d55e19b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $nCTFsFilesInspected_step1 != $nCTFsFilesInspected_step2 ]] || [[ $nCTFsFilesFailed_step1 != $nCTFsFilesFailed_step2 ]] || [[ $nCTFsFilesOK_step1 != $nCTFsFilesOK_step2 ]] || [[ $nCTFsProcessed_step1 != $nCTFsProcessed_step2 ]]; then\n\t  echo \"Discrepancy detected between step 1 and step 2 regarding the count of CTFs (files or individual CTFs):\"\n\t  echo \"nCTFsFilesInspected_step1 = $nCTFsFilesInspected_step1, nCTFsFilesInspected_step2 = $nCTFsFilesInspected_step2\"\n\t  echo \"nCTFsFilesOK_step1 = $nCTFsFilesOK_step1, nCTFsFilesOK_step2 = $nCTFsFilesOK_step2\"\n\t  echo \"nCTFsFilesFailed_step1 = $nCTFsFilesFailed_step1, nCTFsFilesFailed_step2 = $nCTFsFilesFailed_step2\"\n\t  echo \"nCTFsProcessed_step1 = $nCTFsProcessed_step1, nCTFsProcessed_step2 = $nCTFsProcessed_step2\"\n\t  echo \"Discrepancy detected between step 1 and step 2 regarding the count of CTFs (files or individual CTFs):\" > validation_error.message",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "3f3768fec1a705eabab61d960f23a0f8088b4cf8c82225dc959bb7824fc2a2ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"nCTFsFilesInspected_step1 = $nCTFsFilesInspected_step1, nCTFsFilesInspected_step2 = $nCTFsFilesInspected_step2\" > validation_error.message\n    echo \"nCTFsFilesOK_step1 = $nCTFsFilesOK_step1, nCTFsFilesOK_step2 = $nCTFsFilesOK_step2\" > validation_error.message\n    echo \"nCTFsProcessed_step1 = $nCTFsProcessed_step1, nCTFsProcessed_step2 = $nCTFsProcessed_step2\" > validation_error.message\n    exit 255\n  fi\n  fi\n  fi\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "33e3c853908af448f7b8251f906cc7721bd8175ac96e237818f9996ce8120493": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"$ALIEN_JDL_SPLITSTEP\" ]] || [[ \"$ALIEN_JDL_SPLITSTEP\" -eq 3 ]] || ( [[ -n $ALIEN_JDL_STARTSPLITSTEP ]] && [[ \"$ALIEN_JDL_STARTSPLITSTEP\" -le 3 ]]) || [[ \"$ALIEN_JDL_SPLITSTEP\" -eq \"all\" ]]; then\n    # 3. matching, QC, calib, AOD\n    WORKFLOW_PARAMETERS=$WORKFLOW_PARAMETERS_START\n    echo \"Step 3) matching, QC, calib, AOD\"\n    echo -e \"\\nStep 3) matching, QC, calib, AOD\" >> workflowconfig.log\n    export TIMEFRAME_RATE_LIMIT=0\n    env $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=print TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_USE_GLOBAL_READER=ALL WORKFLOW_DETECTORS_EXCLUDE_QC=CPV ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list >> workflowconfig.log\n    # initiate the process\n    if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n      timeStart=`date +%s`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "c617bf540d1efd78331633678bdd013c29150d78b19df0f53fc70c44571b1110": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    # execute the workflow\n    if [[ \"0$RUN_WORKFLOW\" != \"00\" ]]; then\n      timeStart=`date +%s`\n      time env $SETTING_ROOT_OUTPUT IS_SIMULATED_DATA=0 WORKFLOWMODE=run TFDELAY=$TFDELAYSECONDS WORKFLOW_DETECTORS=ALL WORKFLOW_DETECTORS_USE_GLOBAL_READER=ALL WORKFLOW_DETECTORS_EXCLUDE_QC=CPV ./run-workflow-on-inputlist.sh $INPUT_TYPE list.list\n      timeEnd=`date +%s`\n      timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n      delta=$(( $timeEnd-$timeStart ))\n      exitcode=$?\n      echo \"Time taken to run the workflow, Step 3 = $delta seconds\"\n      exitcode=$?\n      echo \"exitcode = $exitcode\"\n      if [[ $exitcode -ne 0 ]]; then\n        echo \"exit code from Step 3 of processing is \" $exitcode > validation_error.message\n        echo \"exit code from Step 3 of processing is \" $exitcode\n        exit $exitcode\n      fi\n      mv latest.log latest_reco_3.log\n    fi\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "aad2c21ce6f8f3910a9370843d0cb3eddb8a59d2c36d678c6267b5eee9dafada": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now extract all performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    timeStart=`date +%s`\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\n    timeEnd=`date +%s`\n    timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n    delta=$(( $timeEnd-$timeStart ))\n    exitcode=$?\n    echo \"Time spent in splitting the metrics files = $delta s\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "03141e1396544a924bd76e58f6c73c5f400ab879f10ad07fc8e59fb71b4fbe62": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ $ALIEN_JDL_AODOFF -ne 1 ]]; then\n  # flag to potentially activate Analysis QC\n  [[ -z ${ALIEN_JDL_RUNANALYSISQC+x} ]] && ALIEN_JDL_RUNANALYSISQC=1\n  \n  # merging the last AOD file if it is too small; the threshold is set at 80% of the expected file size\n  AOD_LIST_COUNT=`find . -name AO2D.root | wc -w`\n  AOD_LIST=`find . -name AO2D.root`\n  if [[ -n $ALIEN_JDL_MINALLOWEDAODPERCENTSIZE ]]; then\n    MIN_ALLOWED_AOD_PERCENT_SIZE=$ALIEN_JDL_MINALLOWEDAODPERCENTSIZE\n  else\n    MIN_ALLOWED_AOD_PERCENT_SIZE=20\n  fi\n  if [[ $AOD_LIST_COUNT -ge 2 ]]; then\n    AOD_LAST=`find . -name AO2D.root | sort | tail -1`\n    CURRENT_SIZE=`wc -c $AOD_LAST | awk '{print $1}'`\n    echo current size = $CURRENT_SIZE\n    PERCENT=`echo \"scale=2; $CURRENT_SIZE/($AOD_FILE_SIZE*10^6)*100\" | bc -l`\n    echo percent = $PERCENT\n    if (( $(echo \"$PERCENT < $MIN_ALLOWED_AOD_PERCENT_SIZE\" | bc -l) )); then\n      AOD_LAST_BUT_ONE=`find . -name AO2D.root | sort | tail -2 | head -1`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "5098fb24bcc9c1b7d531ed5f349ef5f5906719b9d75ac1a33ca6a35aaee74995": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "AOD_LAST_BUT_ONE=`find . -name AO2D.root | sort | tail -2 | head -1`\n  echo \"Too small, merging $AOD_LAST with the preceding file $AOD_LAST_BUT_ONE\"\n  ls $PWD/$AOD_LAST > list.list\n  ls $PWD/$AOD_LAST_BUT_ONE >> list.list\n  echo \"List of files for merging:\"\n  cat list.list\n  mkdir tmpAOD\n  cd tmpAOD\n  ln -s ../list.list .\n  timeStart=`date +%s`\n  time o2-aod-merger --input list.list\n  timeEnd=`date +%s`\n  timeUsed=$(( $timeUsed+$timeEnd-$timeStart ))\n  delta=$(( $timeEnd-$timeStart ))\n  echo \"Duration of merging the latest AOD files to achieve a suitable size = $delta seconds\"\n  exitcode=$?\n  echo \"exitcode = $exitcode\"\n  if [[ $exitcode -ne 0 ]]; then\n    echo \"Exit code from aod-merger for the latest file is \" $exitcode > validation_error.message\n    echo \"Exit code from aod-merger for the latest file is \" $exitcode\n    exit $exitcode\n  fi\n  MERGED_SIZE=`wc -c AO2D.root | awk '{print $1}'`",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "43fb1e74e603bebc8055e74a17dfa07185aee32480e729fe736799eb32302c57": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    exit $exitcode\n    fi\n    MERGED_SIZE=`wc -c AO2D.root | awk '{print $1}'`\n    echo \"Size of merged file: $MERGED_SIZE\"\n    cd ..\n    AOD_DIR_TO_BE_REMOVED=\"$(echo $AOD_LAST | sed -e 's/AO2D.root//')\"\n    AOD_DIR_TO_BE_UPDATED=\"$(echo $AOD_LAST_BUT_ONE | sed -e 's/AO2D.root//')\"\n    echo \"We will delete $AOD_DIR_TO_BE_REMOVED and update $AOD_DIR_TO_BE_UPDATED\"\n    rm -rf $AOD_DIR_TO_BE_REMOVED\n    mv tmpAOD/AO2D.root $AOD_DIR_TO_BE_UPDATED/.\n    rm -rf tmpAOD\n    fi\n    fi\n  \n  # now verifying all AO2D files and executing the analysis QC\n  # regenerating the list of AOD files, in case it has changed after the merging above\n  AOD_LIST_COUNT=`find . -name AO2D.root | wc -w`\n  AOD_LIST=`find . -name AO2D.root`\n  MAX_POOL_SIZE=${ALIEN_JDL_CPUCORES-8}\n  if [[ -n $ALIEN_JDL_MAXPOOLSIZEAODMERGING ]]; then\n    MAX_POOL_SIZE=$ALIEN_JDL_MAXPOOLSIZEAODMERGING\n  fi\n  echo \"Maximum parallel AOD mergers will be $MAX_POOL_SIZE\"\n  JOB_LIST=job-list.txt",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "da5120fdb70f593bf1270af3be63451af1165dd84f1ed9f04475fffd0526c8ee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n  fi\n  echo \"Maximum parallel AOD mergers will be $MAX_POOL_SIZE\"\n  JOB_LIST=job-list.txt\n  if [[ -f $JOB_LIST ]]; then\n    rm $JOB_LIST\n  fi\n  timeStart=`date +%s`\n  timeUsedCheck=0\n  timeUsedMerge=0\n  timeUsedCheckMergedAOD=0\n  timeUsedAnalysisQC=0\n  # preparing the list of AODs to be merged internally\n  for (( i = 1; i <= $AOD_LIST_COUNT; i++ )); do\n    AOD_FILE=`echo $AOD_LIST | cut -d' ' -f$i`\n    AOD_DIR=`dirname $AOD_FILE | sed -e 's|./||'`\n    cd $AOD_DIR\n    if [[ -f \"AO2D.root\" ]]; then\n      echo \"Checking AO2Ds with un-merged data frames in $AOD_DIR\"\n      timeStartCheck=`date +%s`\n      time root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n      timeEndCheck=`date +%s`\n      timeUsedCheck=$(( $timeUsedCheck+$timeEndCheck-$timeStartCheck ))\n      exitcode=$?\n      if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from AO2D check is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D check is \" $exitcode\n\texit $exitcode\n      fi\n    fi\n  done",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "4e0d242331ebeb00f5f24daa5cadf76f366efe7757b88a41add4554684f30a02": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"exit code from AO2D check is \" $exitcode\n    exit $exitcode\n  fi\n  fi\n  cd -\n  ls $AOD_FILE > list_$AOD_DIR.list\n  echo \"$AOD_DIR\" >> $JOB_LIST\ndone\nif [[ -z $ALIEN_JDL_DONOTMERGEAODS ]] || [[ $ALIEN_JDL_DONOTMERGEAODS == 0 ]]; then\n  # starting parallel merging\n  timeStartMerge=`date +%s`\n  arr=()\n  aods=()\n  mergedok=()\n  i=0\n  while IFS= read -r line; do\n    while [[ $CURRENT_POOL_SIZE -ge $MAX_POOL_SIZE ]]; do\n      CURRENT_POOL_SIZE=`jobs -r | wc -l`\n      sleep 1\n    done\n    run_AOD_merging $line &\n    arr[$i]=$!\n    aods[$i]=$line\n    i=$((i+1))\n    CURRENT_POOL_SIZE=`jobs -r | wc -l`\n  done < $JOB_LIST\n  # gathering exit codes from merging processes\n  for i in \"${!arr[@]}\"; do\n    wait ${arr[$i]}\n    exitcode=$?\n    if [[ $exitcode -ne 0 ]]; then\n      echo \"Exit code from the merging process of DFs inside AO2D for ${aods[$i]} is \" $exitcode > validation_error.message",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "f1735a7175212f422baff67b27201c71626b7389b197e27800fdc7c2e10e579b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"The exit code from the process that merged DFs inside AO2D for ${aods[$i]} is \" $exitcode\n    echo \"Therefore, we will retain the AO2Ds with unmerged DFs for ${aods[$i]}\"\n    mergedok[$((10#${aods[$i]}))]=0\n  else\n    echo \"The merging of DFs inside the AO2D in ${aods[$i]} was successful\"\n    mergedok[$((10#${aods[$i]}))]=1\n  fi\n    done\n    timeEndMerge=`date +%s`\n    timeUsedMerge=$(( $timeUsedMerge+$timeEndMerge-$timeStartMerge ))\n    # Verifying the merged AODs and replacing the original ones with the merged versions if everything is correct\n    # This loop could be integrated with the previous one, but for now, they remain separate\n    for (( i = 1; i <=$AOD_LIST_COUNT; i++)); do\n      AOD_FILE=`echo $AOD_LIST | cut -d' ' -f$i`\n      AOD_DIR=`dirname $AOD_FILE | sed -e 's|./||'`\n      echo \"Examining $AOD_DIR:\"\n      if [[ ${mergedok[$((10#$AOD_DIR))]} == 0 ]]; then\n\techo \"Merging for $AOD_DIR did not succeed, so we will not proceed with this file\"\n\tcontinue\n      else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "c12a592c393da9d6943af4cb90975c8484260007f2f8fc1f67af6cb04fc837db": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Merging for $AOD_DIR was unsuccessful, so we will not proceed with this file\"\n\tcontinue\n      else\n\techo \"Merging for $AOD_DIR was successful, we can continue\"\n      fi\n      cd $AOD_DIR\n      # now checking the files\n      echo \"Verifying AO2Ds with merged DFs in $AOD_DIR\"\n      timeStartCheckMergedAOD=`date +%s`\n      time root -l -b -q '$O2DPG_ROOT/DATA/production/common/readAO2Ds.C(\"AO2D_merged.root\")' > checkAO2D_merged.log\n      timeEndCheckMergedAOD=`date +%s`\n      timeUsedCheckMergedAOD=$(( $timeUsedCheckMergedAOD+$timeEndCheckMergedAOD-$timeStartCheckMergedAOD ))\n      exitcode=$?\n      if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from AO2D with merged DFs check is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D with merged DFs check is \" $exitcode\n\techo \"We will retain the AO2Ds with unmerged DFs\"\n      else\n\techo \"All checks passed, replacing initial AO2D.root file with the one containing merged DFs\"\n\tmv AO2D_merged.root AO2D.root\n      fi\n      cd ..\n    done\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "b6796bbb30839a4327e8405a8ee0c27f4199e9f3da4a0cbb5333724948ef9fb6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    mv AO2D_merged.root AO2D.root\n      fi\n      cd ..\n    done\n  fi\n  # executing analysis quality control if required\n  if [[ $ALIEN_JDL_RUNANALYSISQC == 1 ]]; then\n    for (( i = 1; i <=$AOD_LIST_COUNT; i++)); do\n      AOD_FILE=`echo $AOD_LIST | cut -d' ' -f$i`\n      AOD_DIR=`dirname $AOD_FILE | sed -e 's|./||'`\n      cd $AOD_DIR\n      timeStartAnalysisQC=`date +%s`\n      # constructing the analysis workflow\n      time ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py -f AO2D.root\n      # executing it\n      time ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -k -f workflow_analysis_test.json > analysisQC.log\n      timeEndAnalysisQC=`date +%s`\n      timeUsedAnalysisQC=$(( $timeUsedAnalysisQC+$timeEndAnalysisQC-$timeStartAnalysisQC ))\n      exitcode=$?\n      echo \"exitcode = $exitcode\"\n      if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from Analysis QC is \" $exitcode > validation_error.message\n\techo \"exit code from Analysis QC is \" $exitcode\n\texit $exitcode\n      fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "b150a8d287dcd09e82dcdb88aa1528a1222eb5e323da3d08968e872a14a3f413": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "echo \"exit code from Analysis QC is \" $exitcode\n\texit $exitcode\n      fi\n      if [[ -f \"Analysis/MergedAnalyses/AnalysisResults.root\" ]]; then\n\tmv Analysis/MergedAnalyses/AnalysisResults.root .\n      else\n\techo \"No Analysis/MergedAnalyses/AnalysisResults.root found! check analysis QC\"\n      fi\n      if ls Analysis/*/*.log 1> /dev/null 2>&1; then\n\tmv Analysis/*/*.log .\n      fi\n      cd ..\n    done\n  else\n    echo \"Analysis QC will not be run, ALIEN_JDL_RUNANALYSISQC = $ALIEN_JDL_RUNANALYSISQC\"\n  fi\n  echo \"Time spent in checking initial AODs = $timeUsedCheck s\"\n  if [[ -z $ALIEN_JDL_DONOTMERGEAODS ]] || [[ $ALIEN_JDL_DONOTMERGEAODS == 0 ]]; then\n    echo \"Time spent in merging AODs = $timeUsedMerge s\"\n    echo \"Time spent in checking final AODs = $timeUsedCheckMergedAOD s\"\n  fi\n  if [[ $ALIEN_JDL_RUNANALYSISQC == 1 ]]; then\n    echo \"Time spent in AnalysisQC = $timeUsedAnalysisQC s\"\n  else\n    echo \"No timing reported for Analysis QC, as it was not executed\"\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "31444813906b0338eb212ef0678261fba2e348cd71b010a39536105faaaefd00": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    timeUsed=$(( $timeUsed+$timeUsedCheck+$timeUsedMerge+$timeUsedCheckMergedAOD+$timeUsedAnalysisQC ))\necho \"Time used for processing = $timeUsed s\"\n\nif [[ $ALIEN_JDL_QCOFF != 1 ]]; then\n  # transferring the QC json file here\n  if [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\n  else\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n      echo \"transferring the most recent file found in ${GEN_TOPO_WORKDIR}/json_cache\"\n      QC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n      echo \"No QC files found, possibly indicating QC was not executed\"\n    fi\n  fi\n  if [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\n  fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1/async_pass.sh"
        }
    ],
    "2cb17c3e41580b548c4aedfa0759229c120e692f030d68fef30583e9a10e277b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nGRPMAG=o2sim_grp_b5p_128HB.root\nCOLLISIONCONTEXT=collisioncontext_Single_3b_2_2_2.root\n\n#if $RUNNUMBER is between 517676 and 517679, then\n#  COLLISIONCONTEXT=collisioncontext_Single_3b_0_2_2.root\n#fi\n\n# Update magnetic field\n#if $RUNNUMBER is 519041 or above, then\n#  GRPMAG=o2sim_grp_b5p_128HB.root\n#fi\n\necho \"Magnetic field for GRP = $GRPMAG\"\necho \"Filling scheme = $COLLISIONCONTEXT\"\n\nln -s $COLLISIONCONTEXT collisioncontext.root\nln -s $GRPMAG o2sim_grp.root",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/selectSettings.sh"
        }
    ],
    "f25defb8099484f96b58ba8c7a22b67756dbcf5f62b869255acf700eb29446ac": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# script to configure additional environment variables\n# utilizing some configurations from alien\n\n# handling process flags provided to the script\n\nexport SETENV_NO_ULIMIT=1\n\n# to prevent memory issues\nexport DPL_DEFAULT_PIPELINE_LENGTH=16\n\n# list of detectors\nexport WORKFLOW_DETECTORS=ITS,TPC,TOF,FV0,FT0,FDD,MID,MFT,MCH,TRD,EMC,PHS,CPV\n\n# custom settings for the CTF reader: we are on the grid, and we access files remotely\necho \"*********************** mode = ${MODE}\"\nunset ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow\nif [[ $MODE == \"remote\" ]]; then\n  export INPUT_FILE_COPY_CMD=\"\\\"alien_cp ?src file://?dst\\\"\"\n  export ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"--remote-regex \\\"^alien:///alice/data/.+\\\"\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "adedffd4e2d4e69b9f504dc0a89510334c695978dcc283071a671b5fc0518666": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# verifying remapping status\nif [[ $remappingITS == 1 ]] || [[ $remappingMFT == 1 ]]; then\n  REMAPPING=\"--condition-remap \\\"http://alice-ccdb.cern.ch/RecITSMFT=\"\n  if [[ $remappingITS == 1 ]]; then\n    REMAPPING=$REMAPPING\"ITS/Calib/ClusterDictionary\"\n    if [[ $remappingMFT == 1 ]]; then\n      REMAPPING=$REMAPPING\",\"\n    fi\n  fi\n  if [[ $remappingMFT == 1 ]]; then\n    REMAPPING=$REMAPPING\"MFT/Calib/ClusterDictionary\"\n  fi\n  REMAPPING=$REMAPPING\\\"\nfi\n\necho remapping set to $REMAPPING\n\n# additional customized parameters for CTF reader\nexport ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow=\"$ARGS_EXTRA_PROCESS_o2_ctf_reader_workflow --allow-missing-detectors $REMAPPING\"\n\n# run-specific configurations\nif [[ -f \"setenv_run.sh\" ]]; then\n    source setenv_run.sh\nelse\n    echo \"************************************************************\"\n    echo No specific run-dependent configurations for current async processing\n    echo \"************************************************************\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "404532b12ce2f069905adbd32260bd8513a298a7eaab674c66ae1f68196e1c7a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TPC vdrift\nroot -b -q \"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/getTPCvdrift.C+($RUNNUMBER)\"\nexport VDRIFT=`cat vdrift.txt`\n\n# disable monitoring-backend\nexport ENABLE_METRICS=1\n\n# include performance metrics\n#export ARGS_ALL_EXTRA=\" --resources-monitoring 10 --resources-monitoring-dump-interval 10\"\nexport ARGS_ALL_EXTRA=\" --resources-monitoring 50 --resources-monitoring-dump-interval 50\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "af29b00eee349b5e392cc513bed73f2ffe9d513e43f6a535c3ebc396aca886a9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# some settings shared among workflows\nexport ITSEXTRAERR=\"ITSCATrackerParam.sysErrY2[0]=9e-4;ITSCATrackerParam.sysErrZ2[0]=9e-4;ITSCATrackerParam.sysErrY2[1]=9e-4;ITSCATrackerParam.sysErrZ2[1]=9e-4;ITSCATrackerParam.sysErrY2[2]=9e-4;ITSCATrackerParam.sysErrZ2[2]=9e-4;ITSCATrackerParam.sysErrY2[3]=1e-2;ITSCATrackerParam.sysErrZ2[3]=1e-2;ITSCATrackerParam.sysErrY2[4]=1e-2;ITSCATrackerParam.sysErrZ2[4]=1e-2;ITSCATrackerParam.sysErrY2[5]=1e-2;ITSCATrackerParam.sysErrZ2[5]=1e-2;ITSCATrackerParam.sysErrY2[6]=1e-2;ITSCATrackerParam.sysErrZ2[6]=1e-2;\"\n\n# specific options for the ITS reconstruction workflow\nexport ITS_CONFIG=\" --tracking-mode sync_misaligned\"\nexport CONFIG_EXTRA_PROCESS_o2_its_reco_workflow=\"ITSVertexerParam.phiCut=0.5;ITSVertexerParam.clusterContributorsCut=3;ITSVertexerParam.tanLambdaCut=0.2\"\n\n# custom options for the GPU reconstruction workflow\nexport CONFIG_EXTRA_PROCESS_o2_gpu_reco_workflow=\"TPCGasParam.DriftV=$VDRIFT;GPU_global.dEdxDisableResidualGainMap=1\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "c6f664f9cfec978d17bbfa28262aa7c7cbf30431abf14d8361efc4021352b5cd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for TOF reconstruction\n# exportARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb --ccdb-url-tof \\\"http://alice-ccdb.cern.ch\\\"\"\n# as of a commit on December 4\nexportARGS_EXTRA_PROCESS_o2_tof_reco_workflow=\"--use-ccdb\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "b5b8eda776bd3d6a500ab4d8a9f1e99efa5b669ba5dcd065c14faf8e23e928f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc configuration for primary vertex processing\n#export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=30;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;\"\n# as per the comment in https://alice.its.cern.ch/jira/browse/O2-2691?focusedCommentId=278262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-278262",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "c656e38d6e3504ab0329aa5b4c9939e30383ea2329c9209935b43264f1342f8a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "export PVERTEXER=\"pvertexer.acceptableScale2=9;pvertexer.minScale2=2.;pvertexer.nSigmaTimeTrack=4.;pvertexer.timeMarginTrackTime=0.5;pvertexer.timeMarginVertexTime=7.;pvertexer.nSigmaTimeCut=10;pvertexer.dbscanMaxDist2=36;pvertexer.dcaTolerance=3.;pvertexer.pullIniCut=100;pvertexer.addZSigma2=0.1;pvertexer.tukey=20.;pvertexer.addZSigma2Debris=0.01;pvertexer.addTimeSigma2Debris=1.;pvertexer.maxChi2Mean=30;pvertexer.timeMarginReattach=3.;pvertexer.addTimeSigma2Debris=1.;pvertexer.dbscanDeltaT=24;pvertexer.maxChi2TZDebris=100;pvertexer.maxMultRatDebris=1.;pvertexer.dbscanAdaptCoef=20.;pvertexer.timeMarginVertexTime=1.3\"\nexport SVTX=\"svertexer.checkV0Hypothesis=false;svertexer.checkCascadeHypothesis=false\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "7680118ea4c995eb324d42c45ce6453a6d364ee90714929203e233b36b6eefb8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export CONFIG_EXTRA_PROCESS_o2_primary_vertexing_workflow=\"TPCGasParam.DriftV=$VDRIFT;$PVERTEXER;\"\nexport CONFIG_EXTRA_PROCESS_o2_secondary_vertexing_workflow=\"$SVTX\"\n\n# customized settings for TPC-ITS matching\nexport ITSTPCMATCH=\"tpcitsMatch.maxVDriftUncertainty=0.2;tpcitsMatch.safeMarginTimeCorrErr=10.;tpcitsMatch.cutMatchingChi2=1000;tpcitsMatch.crudeAbsDiffCut[0]=5;tpcitsMatch.crudeAbsDiffCut[1]=5;tpcitsMatch.crudeAbsDiffCut[2]=0.3;tpcitsMatch.crudeAbsDiffCut[3]=0.3;tpcitsMatch.crudeAbsDiffCut[4]=10;tpcitsMatch.crudeNSigma2Cut[0]=200;tpcitsMatch.crudeNSigma2Cut[1]=200;tpcitsMatch.crudeNSigma2Cut[2]=200;tpcitsMatch.crudeNSigma2Cut[3]=200;tpcitsMatch.crudeNSigma2Cut[4]=900;\"\nexport CONFIG_EXTRA_PROCESS_o2_tpcits_match_workflow=\"TPCGasParam.DriftV=$VDRIFT;$ITSEXTRAERR;$ITSTPCMATCH\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "a8726784ae3e0cd4fb68b711c433ac6b8ba6a8ec69c87b91f071de47897ea9c2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc settings for TOF matching\nexport ARGS_EXTRA_PROCESS_o2_tof_matcher_workflow=\"--output-type matching-info,calib-info --enable-dia\"\nexport CONFIG_EXTRA_PROCESS_o2_tof_matcher_workflow=\"TPCGasParam.DriftV=$VDRIFT;$ITSEXTRAERR\"\n\n# ad-hoc settings for TRD matching\nexport CONFIG_EXTRA_PROCESS_o2_trd_global_tracking=\"TPCGasParam.DriftV=$VDRIFT;$ITSEXTRAERR\"\n\n# ad-hoc settings for FT0\nexport ARGS_EXTRA_PROCESS_o2_ft0_reco_workflow=\"--ft0-reconstructor\"\n\n# ad-hoc settings for FV0\nexport ARGS_EXTRA_PROCESS_o2_fv0_reco_workflow=\"--fv0-reconstructor\"\n\n# ad-hoc settings for FDD\n#...\n\n# ad-hoc settings for MFT\nexport CONFIG_EXTRA_PROCESS_o2_mft_reco_workflow=\"MFTTracking.forceZeroField=true;MFTTracking.FullClusterScan=true;MFTTracking.LTFclsRCut=0.2;\"\nexport ARGS_EXTRA_PROCESS_o2_mft_reco_workflow=\" --run-assessment \"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "cc019a8e6b3a20b455fc384108ad2ebf81a089139e82fd3a9971f3725c0337b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ad-hoc configurations for MCH\nexport CONFIG_EXTRA_PROCESS_o2_mch_reco_workflow=\"MCHClustering.lowestPadCharge=15;MCHTracking.chamberResolutionX=0.4;MCHTracking.chamberResolutionY=0.4;MCHTracking.sigmaCutForTracking=7;MCHTracking.sigmaCutForImprovement=6;MCHDigitFilter.timeOffset=126\"\n\n# specific settings for TPC residual extraction\nexport ARGS_EXTRA_PROCESS_o2_calibration_residual_aggregator=\"--output-type trackParams,unbinnedResid,binnedResid\"\n\n# enabling AOD production\nexport WORKFLOW_PARAMETERS=\"AOD,${WORKFLOW_PARAMETERS}\"\n\n# ad-hoc settings for AOD\n#...\n\n# enabling Quality Control\nexport WORKFLOW_PARAMETERS=\"QC,${WORKFLOW_PARAMETERS}\"\nexport QC_CONFIG_PARAM=\"--local-batch=QC.root --override-values 'qc.config.Activity.number=$RUNNUMBER;qc.config.Activity.passName=$PASS;qc.config.Activity.periodName=$PERIOD'\"\n\nexport GEN_TOPO_WORKDIR=\"./\"\n#export QC_JSON_FROM_OUTSIDE=\"QC-20211214.json\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "1261dbf04f05838de711a76807e2119dc78152eb20b3e17998fdc072d5be00be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    sed -i 's/REPLACE_ME_RUNNUMBER/'\"${RUNNUMBER}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PASS/'\"${PASS}\"'/g' $QC_JSON_FROM_OUTSIDE\n    sed -i 's/REPLACE_ME_PERIOD/'\"${PERIOD}\"'/g' $QC_JSON_FROM_OUTSIDE\nfi\n\n# Enabling TPC calibration\nexport CALIB_TPC_SCDCALIB_SENDTRKDATA=1\nexport WORKFLOW_PARAMETERS=\"CALIB,CALIB_LOCAL_INTEGRATED_AGGREGATOR,${WORKFLOW_PARAMETERS}\"\nexport CALIB_PRIMVTX_MEANVTX=0\nexport CALIB_TOF_LHCPHASE=0\nexport CALIB_TOF_CHANNELOFFSETS=0\nexport CALIB_TOF_DIAGNOSTICS=0\nexport CALIB_TPC_TIMEGAIN=0\nexport CALIB_TPC_RESPADGAIN=0\nexport CALIB_TRD_VDRIFTEXB=0\nexport CALIB_EMC_BADCHANNELCALIB=0\nexport CALIB_EMC_TIMECALIB=0\nexport CALIB_PHS_ENERGYCALIB=0\nexport CALIB_PHS_BADMAPCALIB=0\nexport CALIB_PHS_TURNONCALIB=0\nexport CALIB_PHS_RUNBYRUNCALIB=0\nexport CALIB_TPC_VDRIFTTGL=0\nexport CALIB_CPV_GAIN=0",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/setenv_extra.sh"
        }
    ],
    "eb8d30664393c135fb2686dd6a384178525245e88efd59ec91af5f5c78d13432": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Script to execute asynchronous processing\n#\n# If running locally, you need to export variables such as:\n#\n# export ALIEN_JDL_LPMRUNNUMBER=505673\n# export ALIEN_JDL_LPMINTERACTIONTYPE=pp\n# export ALIEN_JDL_LPMPRODUCTIONTAG=OCT\n# export ALIEN_JDL_LPMPASSNAME=apass4\n# export ALIEN_JDL_LPMANCHORYEAR=2021\n\n\nif [[ \"${1##*.}\" == \"root\" ]]; then\n    #echo ${1##*.}\n    #echo \"alien://${1}\" > list.list\n    #export MODE=\"remote\"\n    echo \"${1}\" > list.list\n    export MODE=\"LOCAL\"\n    shift\nelif [[ \"${1##*.}\" == \"xml\" ]]; then\n    sed -rn 's/.*turl=\"([^\"]*)\".*/\\1/p' $1 > list.list\n    export MODE=\"remote\"\n    shift\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "6a4a320bb2302a739b54028c7cc7d284d83c7627944c86c99f946b25375aba42": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    POSITIONAL=()\nwhile [[ $# -gt 0 ]]; do\n  key=\"$1\"\n  case $key in\n    -rnb|--run-number)\n      RUNNUMBER=\"$2\"\n      shift\n      shift\n      ;;\n    -b|--beam-type)\n      BEAMTYPE=\"$2\"\n      shift\n      shift\n      ;;\n    -m|--mode)\n      MODE=\"$2\"\n      shift\n      shift\n      ;;\n    -p|--period)\n      PERIOD=\"$2\"\n      shift\n      shift\n      ;;\n    -pa|--pass)\n      PASS=\"$2\"\n      shift\n      shift\n      ;;\n    *)\n    POSITIONAL+=(\"$1\")\n    shift\n    ;;\n  esac\ndone\n\n# subsequently, we override if these were found in the jdl\nif [[ -n \"$ALIEN_JDL_LPMRUNNUMBER\" ]]; then\n    export RUNNUMBER=\"$ALIEN_JDL_LPMRUNNUMBER\"\nfi\n\n# for the beam type\nif [[ -n \"$ALIEN_JDL_LPMINTERACTIONTYPE\" ]]; then\n    export BEAMTYPE=\"$ALIEN_JDL_LPMINTERACTIONTYPE\"\nfi\n\n# concerning the period\nif [[ -n \"$ALIEN_JDL_LPMPRODUCTIONTAG\" ]]; then\n    export PERIOD=\"$ALIEN_JDL_LPMPRODUCTIONTAG\"\n    export O2DPGPATH=\"$PERIOD\"\nfi\n\n# regarding the pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "a545f365fe035c1fb2303560445a4ff8c8d7ba5e774d76083eff9788e7bc1ca6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# pass\nif [[ -n \"$ALIEN_JDL_LPMPASSNAME\" ]]; then\n    export PASS=\"$ALIEN_JDL_LPMPASSNAME\"\nfi\n\nif [[ -z $RUNNUMBER ]] || [[ -z $PERIOD ]] || [[ -z $BEAMTYPE ]] || [[ -z $PASS ]]; then\n    echo \"verify that the required environment variables are set: RUNNUMBER (currently $RUNNUMBER), PERIOD (currently $PERIOD), PASS (currently $PASS), BEAMTYPE (currently $BEAMTYPE)\"\n    exit 3\nfi\n\necho processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "c31dc3b6f612b746e26799bc11990fdb447a62fc241ac728ee95b382fb3610c1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo processing run $RUNNUMBER, from period $PERIOD with $BEAMTYPE collisions and mode $MODE\n\n###if [[ $MODE == \"remote\" ]]; then \n    # common archive\n    if [[ ! -f commonInput.tgz ]]; then\n\techo \"commonInput.tgz not found, exiting\"\n\texit 2\n    fi\n    tar -xzvf commonInput.tgz\n    SELECTSETTINGSSCRIPT=\"$O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/selectSettings.sh\"\n    if [[ -f \"selectSettings.sh\" ]]; then\n      SELECTSETTINGSSCRIPT=\"selectSettings.sh\"\n    fi\n    source $SELECTSETTINGSSCRIPT\n    # run specific archive\n    if [[ ! -f runInput_$RUNNUMBER.tgz ]]; then\n\techo \"runInput_$RUNNUMBER.tgz not found, proceeding without it\"\n    else \n      tar -xzvf runInput_$RUNNUMBER.tgz\n    fi\n###fi\n\necho \"Listing current directory content\"\nls -altr",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "452b3e91df38c6b82b49f57527a2ea47eb7c57db224fb2cd38e4c39d1cdbc2e3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -f \"setenv_extra.sh\" ]]; then\n    source setenv_extra.sh $RUNNUMBER $BEAMTYPE\nelse\n    echo \"************************************************************************************\"\n    echo \"No custom setenv_extra settings for this async processing run; utilizing the default in O2DPG\"\n    echo \"************************************************************************************\"\n    if [[ -f $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh ]]; then\n\tln -s $O2DPG_ROOT/DATA/production/configurations/$ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME/setenv_extra.sh\n\tsource setenv_extra.sh $RUNNUMBER $BEAMTYPE\n    else\n\techo \"*********************************************************************************************************\"\n\techo \"No setenv_extra script found for $ALIEN_JDL_LPMANCHORYEAR/$O2DPGPATH/$ALIEN_JDL_LPMPASSNAME in O2DPG\"\n\techo \"                No special settings will be applied\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "7d1d42206a78e75c3c1683189ba28bc3072d9f85ad8980b319e224f026c3c19c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"                No specific settings will be applied\"\n\techo \"*********************************************************************************************************\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "a705a1ac175848ed244d027955d4cb3bd8a06c700c57c54d0292dfdb606f632b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [[ -f run-workflow-on-inputlist.sh ]]; then\n    echo \"Utilize the run-workflow-on-inputlist.sh macro provided as input\"\nelse\n    echo \"Utilize the run-workflow-on-inputlist.sh macro from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/run-workflow-on-inputlist.sh .\nfi\n\nif [[ -z $DPL_WORKFLOW_FROM_OUTSIDE ]]; then\n    echo \"Utilize dpl-workflow.sh from O2\"\n    cp $O2_ROOT/prodtests/full-system-test/dpl-workflow.sh .\nelse\n    echo \"Utilize dpl-workflow.sh passed as input\"\n    cp $DPL_WORKFLOW_FROM_OUTSIDE .\nfi\n\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    echo \"QC JSON from external source is $QC_JSON_FROM_OUTSIDE\"\nfi\n\nln -sf $O2DPG_ROOT/DATA/common/setenv.sh\nln -sf $O2DPG_ROOT/DATA/common/getCommonArgs.sh\n\n# TFDELAY and throttling\nexport TFDELAYSECONDS=40\nif [[ -n \"$ALIEN_JDL_TFDELAYSECONDS\" ]]; then\n  TFDELAYSECONDS=\"$ALIEN_JDL_TFDELAYSECONDS\"\n# ...otherwise, it depends on whether we have throttling\nelif [[ -n \"$ALIEN_JDL_USETHROTTLING\" ]]; then\n  TFDELAYSECONDS=8\n  export TIMEFRAME_RATE_LIMIT=1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "03bbb08bb1f322314d3f8d8cdbdd1a1a8e729ce3f2b6debee6698fa8e96332bf": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ECHO \"[INFO (async_pass.sh)] environment variables were configured as TFDELAYSECONDS ${TFDELAYSECONDS} TIMEFRAME_RATE_LIMIT ${TIMEFRAME_RATE_LIMIT}\"\n\n# processing and matching\n# display workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=print DISABLE_ROOT_OUTPUT=\"\" TFDELAY=$TFDELAYSECONDS NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list > workflowconfig.log\n# execute the workflow\nIS_SIMULATED_DATA=0 WORKFLOWMODE=run DISABLE_ROOT_OUTPUT=\"\" TFDELAY=$TFDELAYSECONDS NTIMEFRAMES=-1 SHMSIZE=16000000000 DDSHMSIZE=32000 ./run-workflow-on-inputlist.sh CTF list.list\n\n# now extract performance metrics\nIFS=$'\\n'\nif [[ -f \"performanceMetrics.json\" ]]; then\n    for workflow in `grep ': {' performanceMetrics.json`; do\n\tstrippedWorkflow=`echo $workflow | cut -d\\\" -f2`\n\tcat performanceMetrics.json | jq '.'\\\"${strippedWorkflow}\\\"'' > ${strippedWorkflow}_metrics.json\n    done\nfi\n\n# option to activate Analysis QC\n[[ -z ${ALIEN_JDL_RUNANALYSISQC+x} ]] && ALIEN_JDL_RUNANALYSISQC=1",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "52b660ba6d5ea3bbf27967844625d250d84d624f5b1c2123fed05db39c2c2c4c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# now verifying AO2D file\nif [[ -f \"AO2D.root\" ]]; then\n    root -l -b -q $O2DPG_ROOT/DATA/production/common/readAO2Ds.C > checkAO2D.log\n    exitcode=$?\n    if [[ $exitcode -ne 0 ]]; then\n\techo \"exit code from AO2D verification is \" $exitcode > validation_error.message\n\techo \"exit code from AO2D verification is \" $exitcode\n\texit $exitcode\n    fi\n    if [[ $ALIEN_JDL_RUNANALYSISQC == 1 ]]; then \n      ${O2DPG_ROOT}/MC/analysis_testing/o2dpg_analysis_test_workflow.py --merged-task -f AO2D.root\n      ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow_analysis_test.json > analysisQC.log\n      if [[ -f \"Analysis/MergedAnalyses/AnalysisResults.root\" ]]; then\n\tmv Analysis/MergedAnalyses/AnalysisResults.root .\n      else\n\techo \"No Analysis/MergedAnalyses/AnalysisResults.root found! check analysis QC\"\n      fi\n      if ls Analysis/*/*.log 1> /dev/null 2>&1; then\n\tmv Analysis/*/*.log .\n      fi\n    else\n      echo \"Analysis QC will not be executed, ALIEN_JDL_RUNANALYSISQC = $ALIEN_JDL_RUNANALYSISQC\"",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "dac677ae08e05338328f444ccaf4b71a9db3c53b12c538e885e8b25d31773ee4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    echo \"Analysis Quality Control will not be executed, as ALIEN_JDL_RUNANALYSISQC is set to $ALIEN_JDL_RUNANALYSISQC\"\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "5038063d4aa2d5bbe1d48aa389c8a29907d537c9e4b505b799bd29537bc9d258": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# transferring the QC json file here\nif [[ ! -z $QC_JSON_FROM_OUTSIDE ]]; then\n    QC_JSON=$QC_JSON_FROM_OUTSIDE\nelse\n    if [[ -d $GEN_TOPO_WORKDIR/json_cache ]]; then\n\techo \"transferring the most recent file from ${GEN_TOPO_WORKDIR}/json_cache\"\n\tQC_JSON=`ls -dArt $GEN_TOPO_WORKDIR/json_cache/* | tail -n 1`\n    else\n\techo \"No QC files detected, possibly QC was not executed\"\n    fi\nfi\nif [[ ! -z $QC_JSON ]]; then\n    cp $QC_JSON QC_production.json\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/production/configurations/2022/LHC22f/apass1_TPCcalib/async_pass.sh"
        }
    ],
    "ff73d84431a44179917bdbd401e746b6af78adec17bd3d774dbb49513a94ad3a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# This script wraps the execution of gen_topo.sh and records the process status in /var/log/topology/gen-topo.log.\n# Further details can be found in gen_topo.sh.\n# Created by: David Rohr\n\n# Execute the first stage of GenTopo\nif [[ ! -z $ECS_ENVIRONMENT_ID && -d \"/var/log/topology/\" && $USER == \"epn\" ]]; then\n  GEN_TOPO_LOGDATE=$(date -u +%Y%m%d-%H%M%S)\nfi\n\nif [[ ! -z $GEN_TOPO_LOGDATE ]]; then\n  echo \"$GEN_TOPO_LOGDATE $ECS_ENVIRONMENT_ID : Commencing topology generation\" >> /var/log/topology/gen-topo.log\n  if [[ ! -z $ODC_TOPO_GEN_CMD ]]; then\n    echo \"$GEN_TOPO_LOGDATE $ECS_ENVIRONMENT_ID : Command line: $ODC_TOPO_GEN_CMD\" >> /var/log/topology/gen-topo.log\n  fi\nfi\n\nSTDERRFILE=$(mktemp)\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh 2> $STDERRFILE\nRETVAL=$?",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_logged.sh"
        }
    ],
    "a8e1874865064b16bb9ca783c2bef8aa6c4aad51244c7f60a32b07ac32916dfb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "TEMP_FILE=$(mktemp)\n/opt/alisw/el9/GenTopo/bin/gen_topo.sh 2> $TEMP_FILE\nRETURN_CODE=$?\n\nif [[ ! -z $GEN_TOPO_LOGDATE ]]; then\n  echo \"$GEN_TOPO_LOGDATE $ECS_ENVIRONMENT_ID : Topology generation return value: $RETURN_CODE\" >> /var/log/topology/gen-topo.log\n  if [[ $RETURN_CODE != 0 ]]; then\n    while read STDERR_LINE; do\n      echo \"$GEN_TOPO_LOGDATE $ECS_ENVIRONMENT_ID :     $STDERR_LINE\" >> /var/log/topology/gen-topo.log\n    done < $TEMP_FILE\n    echo \"FATAL $(tail -n 1 $TEMP_FILE)\" 1>&2\n    echo -e \"\\n - full stderr output:\" 1>&2\n  fi\nfi\n\ncat $TEMP_FILE 1>&2\nexit $RETURN_CODE",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_logged.sh"
        }
    ],
    "aa38b63a78c88cad6285625668e94868452e5a26ed8d37240e64cb2b473e4416": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Set default values\n[[ -z \"$GEN_TOPO_STDERR_LOGGING\" ]] && export GEN_TOPO_STDERR_LOGGING=1 # Turn on logging for stderr messages",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "85b91bcfa820c615b403c78ddaf66b7a7709b0d5ef128abe07b146daad4c35fc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Verify settings received via environment variables from AliECS\nif [[ -z \"$GEN_TOPO_HASH\" ]]; then echo \"\\$GEN_TOPO_HASH\" is missing; exit 1; fi # Indicator if the source is a hash or a folder\nif [[ -z \"$GEN_TOPO_SOURCE\" ]]; then echo \"\\$GEN_TOPO_SOURCE\" is missing; exit 1; fi # Source of the O2DPG repository, either a commit hash or a path\nif [[ -z \"$GEN_TOPO_LIBRARY_FILE\" ]]; then echo \"\\$GEN_TOPO_LIBRARY_FILE\" is missing; exit 1; fi # Topology description library file located in the DATA path of the O2DPG repository\nif [[ -z \"$GEN_TOPO_WORKFLOW_NAME\" ]]; then echo \"\\$GEN_TOPO_WORKFLOW_NAME\" is missing; exit 1; fi # Name of the workflow within the library file\nif [[ -z \"${WORKFLOW_DETECTORS+x}\" ]]; then echo \"\\$WORKFLOW_DETECTORS\" is missing; exit 1; fi # Comma-separated list of detectors to process\nif [[ -z \"${WORKFLOW_DETECTORS_QC+x}\" && -z \"${WORKFLOW_DETECTORS_EXCLUDE_QC+x}\" ]]; then echo \"\\$WORKFLOW_DETECTORS_EXCLUDE_QC\" is missing; exit 1; fi # Comma-separated list of detectors to run quality checks for",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "4964c99d9c617231916ead3ac8be4e41a0324007a9cc410634027fcb19f3c952": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"${WORKFLOW_DETECTORS_CALIB+x}\" && -z \"${WORKFLOW_DETECTORS_EXCLUDE_CALIB+x}\" ]]; then echo \\$WORKFLOW_DETECTORS_EXCLUDE_CALIB is missing; exit 1; fi # Comma-separated list of detectors to run calibration for\nif [[ -z \"${WORKFLOW_PARAMETERS+x}\" ]]; then echo \\$WORKFLOW_PARAMETERS is missing; exit 1; fi # Additional parameters for the workflow\nif [[ -z \"${RECO_NUM_NODES_OVERRIDE+x}\" ]]; then echo \\$RECO_NUM_NODES_OVERRIDE is missing; exit 1; fi # Override the number of nodes\nif [[ -z \"${RECO_MAX_FAIL_NODES_OVERRIDE+x}\" ]]; then echo \\$RECO_MAX_FAIL_NODES_OVERRIDE is missing; exit 1; fi # Override the number of nodes allowed to fail\nif [[ -z \"$DDMODE\" ]] && [[ -z \"$DDWORKFLOW\" ]]; then echo Either \\$DDMODE or \\$DDWORKFLOW must be set; exit 1; fi # Select the data distribution workflow\nif [[ -z \"$MULTIPLICITY_FACTOR_RAWDECODERS\" ]]; then echo \\$MULTIPLICITY_FACTOR_RAWDECODERS is missing; exit 1; fi # Process multiplicity scaling parameter",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "1ee2fd9a9ccec00b23bb3606448378118b47452a8f5a34f427d305214a387398": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ -z \"$MULTIPLICITY_FACTOR_CTFENCODERS\" ]]; then echo \\$MULTIPLICITY_FACTOR_CTFENCODERS is missing; exit 1; fi # Check multiplicity scaling factor\nif [[ -z \"$MULTIPLICITY_FACTOR_REST\" ]]; then echo \\$MULTIPLICITY_FACTOR_REST is missing; exit 1; fi # Check multiplicity scaling factor\nif [[ -z \"$RECOSHMSIZE\" ]]; then echo \\$RECOSHMSIZE is missing; exit 1; fi # Verify SHM size for reconstruction collections\nif [[ -z \"$DDSHMSIZE\" ]]; then echo \\$DDSHMSIZE is missing; exit 1; fi # Verify SHM size for DD",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "a674bec8d1590d44d237014757f4fb912847fc657ed4092442277a6bfad9ece7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# If debug mode is activated, adjust some settings\nif [[ \"${DEBUG_TOPOLOGY_GENERATION:=0}\" == \"1\" ]]; then\n  echo \"Debug mode is on. Adjusting options accordingly\" 1>&2\n  RECO_NUM_NODES_OVERRIDE=1       # avoid slurm query and set the number of nodes to a fixed value\n  GEN_TOPO_MI100_NODES=1          # also set for MI100 nodes\n  GEN_TOPO_OVERRIDE_TEMPDIR=$PWD  # keep temporary files like QC jsons in the current directory\n  EPN2EOS_METAFILES_DIR=/tmp      # not used, but needs to be set to something\n  unset ECS_ENVIRONMENT_ID\n  unset GEN_TOPO_CACHE_HASH\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "14b2314f5ce1e1e03e27101f6fbfe60f45d2265b92923b28195b144c95b879c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Verify settings provided by EPN\nif [[ -z \"$FILEWORKDIR\" ]]; then echo \\$FILEWORKDIR is missing; exit 1; fi\nif [[ -z \"$INRAWCHANNAME\" ]]; then echo \\$INRAWCHANNAME is missing; exit 1; fi\nif [[ -z \"$CTF_DIR\" ]]; then echo \\$CTF_DIR is missing; exit 1; fi\nif [[ -z \"$CALIB_DIR\" ]]; then echo \\$CALIB_DIR is missing; exit 1; fi\nif [[ -z \"$EPN2EOS_METAFILES_DIR\" ]]; then echo \\$EPN2EOS_METAFILES_DIR is missing; exit 1; fi\nif [[ -z \"$GEN_TOPO_WORKDIR\" ]]; then echo \\$GEN_TOPO_WORKDIR is missing; exit 1; fi\nif [[ -z \"$GEN_TOPO_ODC_EPN_TOPO_CMD\" ]]; then echo \\$GEN_TOPO_ODC_EPN_TOPO_CMD is missing; exit 1; fi\nif [[ -z \"$GEN_TOPO_EPN_CCDB_SERVER\" ]]; then echo \\$GEN_TOPO_EPN_CCDB_SERVER is missing; exit 1; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "4180bf276ad0e415e4ac201020368706df05191886e75f77595a99bc75a63131": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Replace TRG with CTP\nif [[ ! -z \"$WORKFLOW_DETECTORS\"  ]]; then export WORKFLOW_DETECTORS=${WORKFLOW_DETECTORS/TRG/CTP} ; fi\nif [[ ! -z \"$WORKFLOW_DETECTORS_QC\"  ]]; then export WORKFLOW_DETECTORS_QC=${WORKFLOW_DETECTORS_QC/TRG/CTP} ; fi\nif [[ ! -z \"$WORKFLOW_DETECTORS_CALIB\"  ]]; then export WORKFLOW_DETECTORS_CALIB=${WORKFLOW_DETECTORS_CALIB/TRG/CTP} ; fi\n\nmkdir -p $GEN_TOPO_WORKDIR || { echo Error creating directory 1>&2; exit 1; }\nfor i in `seq 1 100`; do\n  exec 100>${GEN_TOPO_WORKDIR}/${i}.lock || { echo Cannot create file descriptor for lock file 1>&2; exit 1; }\n  flock -n -E 100 100\n  RETVAL=$?\n  [[ $RETVAL == 100 ]] && continue\n  [[ $RETVAL != 0 ]] && { echo Cannot open lock file, retval $RETVAL 1>&2; exit 1; }\n  export GEN_TOPO_WORKDIR=$GEN_TOPO_WORKDIR/${i}_${GEN_TOPO_ONTHEFLY}\n  GEN_TOPO_LOCKFILE=${GEN_TOPO_WORKDIR}/${i}.lock\n  break\ndone\n[[ -z \"$GEN_TOPO_LOCKFILE\" ]] && { echo Topology generation could not obtain a work directory 1>&1; exit 1; }",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "07c1b88f7e8511a82cb48858ce123ef82e234c6e2f5d06e968e559af571f0837": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ \"0$DDMODE\" == \"0discard\" ]] || [[ \"0$DDMODE\" == \"0disk\" ]]; then\n  export GEN_TOPO_LIBRARY_FILE=\"production/no-processing.desc\"\n  export GEN_TOPO_WORKFLOW_NAME=\"no-processing\"\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "6eaa023d5993f4ec935174032bd4a1d8dcd74abf6d74b0dd6c683623346383ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "mkdir -p $GEN_TOPO_WORKDIR/cache || { echo Error creating directory 1>&2; exit 1; }\nwhile true; do\n  if [[ $GEN_TOPO_HASH == 1 ]]; then\n    cd $GEN_TOPO_WORKDIR || { echo Cannot enter work directory 1>&2; exit 1; }\n    if [[ \"0$GEN_TOPO_ONTHEFLY\" == \"01\" && ! -z \"$GEN_TOPO_CACHE_HASH\" ]]; then\n      export GEN_TOPO_CACHEABLE=1\n    fi\n    if [[ \"0$GEN_TOPO_CACHEABLE\" == \"01\" && -f cache/$GEN_TOPO_CACHE_HASH ]]; then\n      if [[ \"0$GEN_TOPO_WIPE_CACHE\" == \"01\" ]]; then\n        rm -f cache/$GEN_TOPO_CACHE_HASH\n      else\n        echo Reusing cached XML topology $GEN_TOPO_CACHE_HASH 1>&2\n        touch cache/$GEN_TOPO_CACHE_HASH\n        cp cache/$GEN_TOPO_CACHE_HASH $GEN_TOPO_WORKDIR/output.xml\n        break\n      fi\n    fi\n    for CHECKOUTATTEMPT in 1 2; do\n      if [[ ! -d O2DPG ]]; then git clone https://github.com/AliceO2Group/O2DPG.git 1>&2 || { echo O2DPG checkout failed 1>&2; exit 1; }; fi\n      cd O2DPG\n      rm -f DATA/core_dump_*",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "a1069f5062017bc77f50172a01e295530d50a9fd7890caa13b61bc142f6917aa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    cd O2DPG\n      rm -f DATA/core_dump_*\n      git reset --hard HEAD &> /dev/null && git clean -d -f &> /dev/null && break\n      [[ $CHECKOUTATTEMPT -eq 2 ]] && { echo git reset error 1>&2; exit 1; }\n      echo \"Failed to clean up O2DPG repository. Deleting the repository and cloning it from scratch\" 1>&2\n      cd $GEN_TOPO_WORKDIR || { echo Cannot access work directory 1>&2; exit 1; }\n      rm -rf O2DPG\n    done\n    git checkout $GEN_TOPO_SOURCE &> /dev/null\n    if [[ $? != 0 ]]; then\n      git fetch --tags origin 1>&2 || { echo Repository update failed 1>&2; exit 1; }\n      git checkout $GEN_TOPO_SOURCE &> /dev/null || { echo Specified commit does not exist 1>&2; exit 1; }\n    fi\n    # Not on a branch, but at a tag or a detached non-dirty commit\n    if ! git describe --exact-match --tags HEAD &> /dev/null && ( git symbolic-ref -q HEAD &> /dev/null || ! git diff-index --quiet HEAD &> /dev/null ); then\n      unset GEN_TOPO_CACHEABLE\n    fi\n    cd DATA\n  else",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "d33e3ba88e67586d6e42030b717141eb49237b51ae5432db40a2221a7e64aaf3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    unset GEN_TOPO_CACHEABLE\n    fi\n    cd DATA\n  else\n    cd $GEN_TOPO_SOURCE || { echo Directory missing 1>&2; exit 1; }\n  fi\n  export EPNSYNCMODE=1\n  export O2DPG_ROOT=`realpath \\`pwd\\`/../`\n  echo Beginning topology generation to temporary file $GEN_TOPO_WORKDIR/output.xml 1>&2\n  # Execute stage 3 of GenTopo using the O2DPG version chosen by the user\n  ./tools/parse \"$GEN_TOPO_LIBRARY_FILE\" $GEN_TOPO_WORKFLOW_NAME $GEN_TOPO_WORKDIR/output.xml 1>&2 || { echo Error during workflow description parsing 1>&2; exit 1; }\n  if [[ \"0$GEN_TOPO_CACHEABLE\" == \"01\" ]]; then\n    cd $GEN_TOPO_WORKDIR\n    if [[ `ls cache/ | wc -l` -ge 1000 ]]; then\n      ls -t cache/* | tail -n +1000 | xargs rm\n    fi\n    cp $GEN_TOPO_WORKDIR/output.xml cache/$GEN_TOPO_CACHE_HASH\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "56c7d8ebf16525f42ac0b297ebe09f0f51ae43ba78a52c611b0a0a22dd3d26d2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "break\ncompleted",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "db2892092efdb1cbf5f70c1b874709827b4d743ac53226e3deabede0a9d71538": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z \"$GEN_TOPO_ODC_EPN_TOPO_POST_CACHING_CMD\" ]] && [[ \"0$WORKFLOWMODE\" != \"0print\" ]]; then\n  TMP_POST_CACHING_CMD=\"$GEN_TOPO_ODC_EPN_TOPO_POST_CACHING_CMD $GEN_TOPO_ODC_EPN_TOPO_POST_CACHING_ARGS\"\n  TMP_POST_CACHING_NMIN=$(( $RECO_NUM_NODES_OVERRIDE > $RECO_MAX_FAIL_NODES_OVERRIDE ? $RECO_NUM_NODES_OVERRIDE - $RECO_MAX_FAIL_NODES_OVERRIDE : 0 ))\n  TMP_POST_CACHING_CMD+=\" --nodes-mi50 $RECO_NUM_NODES_OVERRIDE --nmin-mi50 $TMP_POST_CACHING_NMIN\"\n  if [[ -z $GEN_TOPO_MI100_NODES || $GEN_TOPO_MI100_NODES == \"0\" ]]; then\n    TMP_POST_CACHING_CMD+=\" --force-exact-node-numbers --nodes-mi100 0 --nmin-mi100 0\"\n  elif [[ -n $GEN_TOPO_MI100_NODES && $GEN_TOPO_MI100_NODES != \"-1\" ]]; then\n    TMP_POST_CACHING_NMIN=$(( $GEN_TOPO_MI100_NODES > $RECO_MAX_FAIL_NODES_OVERRIDE ? $GEN_TOPO_MI100_NODES - $RECO_MAX_FAIL_NODES_OVERRIDE : 0 ))\n    TMP_POST_CACHING_CMD+=\" --force-exact-node-numbers --nodes-mi100 $GEN_TOPO_MI100_NODES --nmin-mi100 $TMP_POST_CACHING_NMIN\"\n  fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "ca9b12c4139950120a83d86e3e877e5b6f29a740480c2e8f67bd0ec5fb8d7736": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "fi\n  TMP_POST_CACHING_CMD+=\" -o $GEN_TOPO_WORKDIR/output.xml.new $GEN_TOPO_WORKDIR/output.xml\"\n  echo \"Executing post-caching topo-merger command: $TMP_POST_CACHING_CMD\" 1>&2\n  eval $TMP_POST_CACHING_CMD 1>&2 || { echo Error during EPN resource allocation 1>&2; exit 1; }\n  mv -f $GEN_TOPO_WORKDIR/output.xml.new $GEN_TOPO_WORKDIR/output.xml 1>&2\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "aac9ebc53204ce04e0ba339b635a97949f1b93086f66105c1fad2594aca42c48": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [[ ! -z \"$ECS_ENVIRONMENT_ID\" && -d \"/var/log/topology/\" && $USER == \"epn\" ]]; then\n  GEN_TOPO_LOG_FILE=/var/log/topology/topology-$(date -u +%Y%m%d-%H%M%S)-$ECS_ENVIRONMENT_ID.xml\n  cp $GEN_TOPO_WORKDIR/output.xml $GEN_TOPO_LOG_FILE\n  nohup gzip $GEN_TOPO_LOG_FILE &> /dev/null &\nfi\n\ncat $GEN_TOPO_WORKDIR/output.xml\n\nif [[ \"$DEBUG_TOPOLOGY_GENERATION\" == \"0\" ]]; then\n  echo \"Removing temporary output file $GEN_TOPO_WORKDIR/output.xml\" 1>&2\n  rm $GEN_TOPO_WORKDIR/output.xml\nfi\nrm -f $GEN_TOPO_LOCKFILE",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo_o2dpg.sh"
        }
    ],
    "2928e44d3b90c9c7a20734367aae1d93d80d2b020143795d6da0a1848e71db23": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\nexport DDMODE=processing                                             # The DataDistribution mode - possible options include: processing, disk, processing-disk, discard\nexport DD_DISK_FRACTION=100                                          # For disk or processing-disk mode, this sets the fraction of raw data to retain\n\n# These parameters can be used to obtain the Workflow Repository via a hash or tag\n#export GEN_TOPO_HASH=1                                              # Retrieve the O2DPG repository using a specific git hash\n#export GEN_TOPO_SOURCE=v0.20                                        # The git hash to use for the retrieval",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/run.sh"
        }
    ],
    "a6fb36dc886125059ede8810a4c42312cce3302b8e5aad94434c79059e434459": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Use these settings to define the location of the workflow repository in your home directory\nexport GEN_TOPO_HASH=0                                               # Define the path to the O2DPG repository\nexport GEN_TOPO_SOURCE=$HOME/alice/O2DPG/DATA                        # Path to the O2DPG repository\nexport OVERRIDE_PDPSUITE_VERSION=                                    # Can be used to set a different O2PDPSuite version\nexport SET_QCJSON_VERSION=1                                          # Specifies the version of the QC JSONs",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/run.sh"
        }
    ],
    "3f06975863f999a483521a7757e02d8f61c032de07242dfb6458170da20f3ba1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export GEN_TOPO_LIBRARY_FILE=production/production.desc              # File containing the topology description library to load\nexport GEN_TOPO_WORKFLOW_NAME=synchronous-workflow                   # Name of the workflow within the topology description library\nexport WORKFLOW_DETECTORS=ALL                                        # Optional parameter for the workflow: List of detectors to perform reconstruction on (separated by commas)\nexport WORKFLOW_DETECTORS_QC=ALL                                     # Optional parameter for the workflow: List of detectors to perform quality control on\nexport WORKFLOW_DETECTORS_CALIB=ALL                                  # Optional parameter for the workflow: List of detectors to perform calibration on\nexport WORKFLOW_DETECTORS_RECO=ALL                                   # Optional parameter for the workflow: List of detectors to perform reconstruction on\nexport WORKFLOW_DETECTORS_FLP_PROCESSING=                            # Optional parameter for the workflow: List of detectors to perform flow processing on",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/run.sh"
        }
    ],
    "3265273e7acde7aaa053632f85c6817d6675dd30259dcec2abd2bb27d3201316": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export WORKFLOW_PARAMETERS=QC,CALIB,GPU,CTF,EVENT_DISPLAY            # Additional parameters for the workflow\nexport RECO_NUM_NODES_OVERRIDE=0                                     # Override the number of EPN compute nodes (the default is set in the description library file)\nexport RECO_MAX_FAIL_NODES_OVERRIDE=0                                # Set the maximum number of nodes allowed to fail at startup\nexport NHBPERTF=128                                                  # Number of HBF per TF\nexport MULTIPLICITY_FACTOR_RAWDECODERS=1                             # Scale factor for the number of raw decoders\nexport MULTIPLICITY_FACTOR_CTFENCODERS=1                             # Scale factor for the number of CTF encoders\nexport MULTIPLICITY_FACTOR_REST=1                                    # Scale factor for other processes",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/run.sh"
        }
    ],
    "f02162b7775d9254f2f0019c416a23fdf4e28e4907c6812c71a695a96395b383": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    export SHM_MANAGER_SHMID=                                            # If used with EPN SHM Management tool, SHMID must align with the tool's setting\n\nexport OUTPUT_FILE_NAME=gen_topo_output.xml\nif [[ \"0$GEN_TOPO_RUN_HOME\" == \"01\" ]]; then\n  [[ -z $O2DPG_ROOT || -z $O2_ROOT ]] && { echo \"ERROR: O2 and O2DPG must be configured!\"; exit 1; }\n  $O2DPG_ROOT/DATA/tools/epn/gen_topo.sh > $OUTPUT_FILE_NAME\nelse\n  [[ ! -f /opt/alisw/el9/GenTopo/bin/gen_topo.sh ]] && { echo \"ERROR: EPN installation of gen_topo.sh is missing. Did you attempt to run from home? If so, please set GEN_TOPO_RUN_HOME=1!\"; exit 1; }\n  /opt/alisw/el9/GenTopo/bin/gen_topo.sh > $OUTPUT_FILE_NAME\nfi\nif [[ $? == 0 ]]; then\n  echo Generated XML topology $OUTPUT_FILE_NAME\nelse\n  cat $OUTPUT_FILE_NAME\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/run.sh"
        }
    ],
    "a3bf8eedebad3b37b680841c1c9b44ea5da3577df81612e0cad97e116020ff9a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# This script acts as a wrapper to configure EPN-specific environment variables necessary for the PDP DPL Topology generation.\n# Author: David Rohr\n\n# It originates from O2DPG: https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo.sh\n# This script is installed at /opt/alisw/el9/GenTopo/bin/ as part of the GenTopo package on EPNs.\n\n# The main goal of this script is to decouple the topology generation process (handled within O2DPG) from the EPN-specific configurations.\n# It exclusively contains the EPN-specific settings.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo.sh"
        }
    ],
    "b9032cda33422ea19136138100e52396284e0e2d9ca969d129723d2410cfa616": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configuration for EPN-related paths, names, and directories\n[[ -z \"$FILEWORKDIR\" ]] && export FILEWORKDIR=/home/epn/odc/files # Location for common group and geometry files\n[[ -z \"$INRAWCHANNAME\" ]] && export INRAWCHANNAME=tf-builder-pipe-0 # Name of the pipe from which to retrieve data from TfBuilder\n[[ -z \"$CTF_DIR\" ]] && export CTF_DIR=/data/tf/compressed # Destination for CTF files\n[[ -z \"$CALIB_DIR\" ]] && export CALIB_DIR=/data/calibration # Destination for calibration data files\nif [[ -z \"$EPN2EOS_METAFILES_DIR\" ]] && [[ \"0$WORKFLOWMODE\" != \"0print\" ]]; then\n  export EPN2EOS_METAFILES_DIR=/data/epn2eos_tool/epn2eos # Directory for epn2eos metadata files\nfi\nif [[ $USER == \"epn\" ]]; then\n  if [[ -z \"$GEN_TOPO_WORKDIR\" ]]; then\n    mkdir -p /var/tmp/gen_topo\n    export GEN_TOPO_WORKDIR=/var/tmp/gen_topo # Directory for O2DPG repository checkout and XML cache. If this directory is cleared, gen_topo will regenerate necessary content the next time it runs. The directory should remain persistent to cache workflows.",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo.sh"
        }
    ],
    "309ca0eda16602dab286084996a72e0bc0f13d56b384261fc41153828410cd49": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    fi\nelse\n  [[ -z \"$GEN_TOPO_WORKDIR\" ]] && export GEN_TOPO_WORKDIR=$HOME/gen_topo # A directory for the O2DPG repository checkout and XML cache storage. If this directory is cleared, gen_topo will regenerate necessary content the next time it runs. This folder should remain persistent to maintain workflow caches.\n  mkdir -p $HOME/gen_topo\nfi\n[[ -z \"$GEN_TOPO_EPN_CCDB_SERVER\" ]] && export GEN_TOPO_EPN_CCDB_SERVER=\"http://127.0.0.1:8084\" # The CCDB server to utilize\nif [[ \"0$GEN_TOPO_ONTHEFLY\" == \"01\" ]]; then export SHM_MANAGER_SHMID=1 ;fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo.sh"
        }
    ],
    "84cbb2f0bec4bf73acb0298879ec2e22a7fec71f46780de2ff2467eb8aa550d7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Command for merging topologies\nif [[ -z \"$GEN_TOPO_ODC_EPN_TOPO_CMD\" ]]; then\n  export GEN_TOPO_ODC_EPN_TOPO_CMD='env - PYTHONPATH+=/usr/local/lib/python3.9/site-packages:/usr/local/lib64/python3.9/site-packages /usr/local/bin/epn-topo-merger'\nfi\n\n# Command for postprocessing topology generation following topology caching\nif [[ -z \"$GEN_TOPO_ODC_EPN_TOPO_POST_CACHING_CMD\" ]]; then\n  export GEN_TOPO_ODC_EPN_TOPO_POST_CACHING_CMD='env - PYTHONPATH+=/usr/local/lib/python3.9/site-packages:/usr/local/lib64/python3.9/site-packages /usr/local/bin/epn-topo-alloc'\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo.sh"
        }
    ],
    "6adbd58c3e04986e6409a605be7812a27f60e66c43c725f787d4d0fb5c8a1935": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Additional arguments for topology merger\nif [[ -z \"$GEN_TOPO_ODC_EPN_TOPO_POST_CACHING_ARGS\" ]]; then\n  if [[ \"${GEN_TOPO_DEPLOYMENT_TYPE:-}\" == \"ALICE_STAGING\" ]]; then\n    export GEN_TOPO_ODC_EPN_TOPO_POST_CACHING_ARGS=\"--recozone staging-mi50 --reco100zone staging-mi100 --calibzone calib\"\n  else\n    export GEN_TOPO_ODC_EPN_TOPO_POST_CACHING_ARGS=\"--recozone online-mi50 --reco100zone online-mi100 --calibzone calib\"\n  fi\nfi\nif [[ -z \"$GEN_TOPO_MI100_NODES\" ]]; then export GEN_TOPO_MI100_NODES=-1; fi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo.sh"
        }
    ],
    "3ee754f9ad77a72eab784b150ba0a151e70d78f775bbd4be39a86c52e13c3d5f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# GEN_TOPO_RUN_HOME is a debugging setting utilized in certain tests; it is not required for online operations.\nif [[ \"0$GEN_TOPO_RUN_HOME\" == \"01\" ]]; then\n  if [[ \"0$GEN_TOPO_RUN_HOME_TEST\" != \"01\" && $WORKFLOWMODE != \"print\" ]]; then\n    echo \"ERROR: GEN_TOPO_RUN_HOME is only supported with WORKFLOWMODE=print!\" 1>&2\n    exit 1\n  fi\nelse\n  if [ \"0$GEN_TOPO_ONTHEFLY\" == \"01\" ]; then\n    # Clear the modules to ensure the topology generation uses the correct O2 version, including ODC, from the RPM path.\n    module purge &> /dev/null\n  fi\nfi\n# Execute the second stage of GenTopo, handling PDP, from the hardcoded updatable RPM path.\n/opt/alisw/el9/GenTopo/bin/gen_topo_o2dpg.sh\nif [ $? != 0 ]; then\n  exit 1\nfi",
            "link": "https://github.com/AliceO2Group/O2DPG/blob/master/DATA/tools/epn/gen_topo.sh"
        }
    ],
    "59d47c1517edc0dd107111e2eea247e8a20ff187f160da6e3a2bfc5c8d44121d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page simExampExamples Simulation Examples\n/doxy -->\n\n# Examples of Simulations\n\nThis section provides various examples of simulations that demonstrate how the ALICE O2 framework can be utilized for different experimental scenarios.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/README.md"
        }
    ],
    "937e9f8283e515d9f2a573d73360f4ccb4b127614e76a1ddded79c3579f1bf2b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n* \\subpage simulationExamplesPythia8\n* \\subpage simulationExamplesPythiaHepMCWrapper\n* \\subpage simulationExamplesHF_Embedding_Pythia8\n* \\subpage simulationExamplesSignal_ImpactB\n* \\subpage simulationExamplesTrigger_ImpactB_Pythia8\n* \\subpage simulationExamplesAdaptive_Pythia8\n* \\subpage simulationExamplesAliRoot_Hijing\n* \\subpage simulationExamplesAliRoot_AMPT\n* \\subpage simulationExamplesHepMC\n* \\subpage simulationExamplesHepMC_STARlight\n* \\subpage simulationExamplesHepMC_EPOS4\n* \\subpage simulationExamplesHybrid\n* \\subpage simulationExamplesHybrid_parallel\n* \\subpage simulationExamplesJet_Embedding_Pythia8\n* \\subpage simulationExamplesMcTracksToAOD\n* \\subpage simulationExamplesMcTracksToAOD\n* \\subpage simulationExamplesPythia\n* \\subpage simulationExamplesForceDecay_Lambda_Neutron_Dalitz\n* \\subpage simulationExamplesJustPrimaryKinematics\n* \\subpage simulationExamplesSelective_Transport\n* \\subpage simulationExamplesSelective_Transport_pi0\n* \\subpage simulationExamplesStepMonitoringSimple1",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/README.md"
        }
    ],
    "2fc421932a714723f9e2d9f0fe6c7917e4ed5056bc117a95036fa9bf03c169ba": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "* \\subpage refrunSimExamplesStepMonitoringSimple1\n* \\subpage refrunSimExamplesCustom_EventInfo\n* \\subpage refrunSimExamplesMCTrackToDPL\n* \\subpage refrunSimExamplesTParticle\n/doxy -->",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/README.md"
        }
    ],
    "ec747f83170394c1dffe6d5ed868d476664e2891e47c171ec875b1bbab6d23ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This is a straightforward simulation example demonstrating the use of the `STARlight` event generator to run event simulations.\nThe `STARlight` event generation is initiated in a clean environment through the `run-starlight.sh` script.\n\nThe `run-starlight.sh` script sets up the necessary environment for executing `STARlight`. It copies essential files from the `STARlight` installation directory into the current working directory. These files include:\n- `slight.in` for configuring the event generator,\n- `starlight2hepmc.awk` and `pdgMass.awk` for converting the output to `HepMC2` format.\n\nUpon completion of the `STARlight` process, the resulting `HepMC2` output file is named `startlight.hepmc` and is ready for use in the subsequent `o2` simulation stage.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_STARlight/README.md"
        }
    ],
    "869f5e2c4d3909962ac736e500fad8c09e3e5336d5b3401be40d9c51c239af0b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# IMPORTANT\nTo execute this example, ensure the STARlight package is installed on your system.\n```\n$ aliBuild build STARlight --defaults o2\n```\nIt's worth noting that the `--defaults o2` option is not essential, as `STARlight` operates in an isolated environment distinct from the one utilized by the `o2` simulation.\n\n# WARNING\nThis example uses the `STARlight` configuration file `slight.in` from the `STARlight` installation directory. In this file, the number of events set to generate is fixed at `N_EVENTS = 1000`. Consequently, the maximum number of events that can be injected into the `o2` simulation is `NEV = 1000`. However, this can be managed dynamically by instructing `STARlight` to produce the exact number of events required by the `o2` simulation.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_STARlight/README.md"
        }
    ],
    "aadab94dad47cb092f1c488446c1322d74a8ff900710e93d88381101afe56a34": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# ENHANCEMENT\nThis illustration can be enhanced by executing the `STARlight` event generator in the background and transmitting the `HepMC` data through a pipe that is subsequently read by the `o2` simulation. To keep the example straightforward, this step is omitted.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_STARlight/README.md"
        }
    ],
    "6484ac8919f23b24ff1d7c89f1ee7e58155814a18ace9920728eda8b3f23e496": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This example illustrates the use of o2-sim as a real-time generator for DPL (analysis) tasks.\n\n<!-- doxy\n\\page refrunSimExamplesMCTrackToDPL Example MCTrackToDPL\n/doxy -->",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/MCTrackToDPL/README.md"
        }
    ],
    "2d969d2ab677f6e30bb921259dd4597ca0deb584eaa90eaff980952c11db0f4e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The guide for using EPOS4 within the O2 framework is detailed in this brief manual. For a comprehensive explanation of the HepMC(3) data processing, refer to the HepMC_fifo directory within the MC examples. The scripts utilize the `cmd` parameter in `GeneratorHepMC` to initiate EPOS4 generation through the `epos.sh` script.\n\nEPOS 4.0.0 relies on the older HepMC2 libraries, necessitating their specification in the generator's steering scripts. Omitting `HepMC.version=2` will render the scripts ineffective. Consequently, any alteration to the configurations without a thorough understanding may disrupt the balance. On the other hand, both EPOS 4.0.3 and EPOS4HQ use HepMC3, automatically updating the version when these generators are employed.\n\n# Script Overview",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/README.md"
        }
    ],
    "d28fc6a28e348511ae75d28e68116a39db6ee5d39e316fe06f06a6a806a656fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Scripts Description\n\nFour scripts are available for running the simulations:\n- **epos.sh** &rarr; initiates the EPOS4 generation process\n- **runo2sim.sh** &rarr; enables the creation of events using o2-sim\n- **rundpg.sh** &rarr; initiates the DPG machinery for event generation\n- **rundpl.sh** &rarr; starts event generation with DPL\n\nAn example.optns file is also provided to begin EPOS4, and additional options can be found in the generator example folder or on the website [epos4learn.web.cern.ch](https://epos4learn.docs.cern.ch/), which offers an extensive tutorial on the generator.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/README.md"
        }
    ],
    "20bb4560053e8bb0c351a487e735616be27b236eda171cf9f63daafb1d641416": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## epos.sh\n\nThis script can be executed independently to produce an .hepmc file or output HepMC results to the console. However, it is essential to ensure that EPOS4 is loaded (via cvmfs through AliGenerators or O2sim) or installed. To direct the output to a file, the user can use:\n```\n./epos.sh -i test -s 234345 > test.hepmc\n```\nThis command demonstrates all the script's functionalities, similar to those found in the generation steering scripts. Specifically, the `-i` parameter enables the provision of .optns parameters to EPOS4, while `-s` supplies the generator with a user-defined seed. The HepMC data will be saved in test.hepmc due to stdout redirection. This redirection works because epos.sh automatically sets the `-hepstd` flag, and the `set ihepmc 2` option in the option file must be activated for this to function correctly. Otherwise, either an hepmc file will be generated (if ihepmc is 1) or no data will be produced (if ihepmc is neither 1 nor 2).",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/README.md"
        }
    ],
    "34c8e07e57391e4584ce46443f3b4e817cbc373234580caf6bd936f9b344a324": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "It is crucial to recognize that using an empty/null seed in the generator can cause EPOS4 to crash, hence a safeguard was incorporated in our steering epos.sh script to generate a random number when 0 is specified.\n\n## runo2sim.sh, rundpg.sh, and rundpl.sh\n\nThese three scripts share minor differences, particularly in their initial sections, and will be discussed together. They function after loading any O2sim version from and including the 20/09/2024, as several modifications were necessary to enable the simultaneous loading of both O2sim and EPOS4.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/README.md"
        }
    ],
    "7acf142fa707b602b36986d89de0bda8fa4effa2f5381e0017e4a514ab541752": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If no parameters are specified in the scripts, they will operate with default settings (energy and number of events defined in the example.optns file), but several flags can modify the generation parameters:\n- **-m , --more** &rarr; supplies the simulation with detailed parameters via configuration key flags\n- **-n , --nevents** &rarr; alters the event count in the .optns file or uses the count from the file if none is provided\n- **-i , --input** &rarr; specifies the .optns filename for EPOS4 input, omitting the file extension\n- **-j , --jobs** &rarr; determines the number of worker processes\n- **-hq** &rarr; activates EPOS4HQ generation\n- **-h , --help** &rarr; displays usage instructions\n- **-e , --ecm** &rarr; sets the center-of-mass energy in the options file\n\nIn the `rundpg.sh` script, an extra flag is available\n- **-t , --tf** &rarr; defines the number of timeframes to generate",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/README.md"
        }
    ],
    "3924559720fe6e806a3cfa9b836710c3503242804ca1e98be064450aa93322c5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In this scenario, the options file is duplicated within each tf$n folder to ensure the epos script can operate with multiple timeframes. For o2sim and DPG scripts, a random seed is directly specified, whereas with DPL, this is impractical because the --seed option cannot influence GeneratorHepMC. Therefore, epos.sh is assigned a default seed of 0, which then produces a random number.\n\nThe scripts now diverge as follows:\n\n- **runo2sim.sh** &rarr; initiates the o2-sim process\n- **rundpg.sh** &rarr; first runs the o2dpg_sim_workflow.py to create the json configuration, then starts the workflow with o2_dpg_workflow_runner.py\n- **rundpl.sh** &rarr; executes o2-sim-dpl-eventgen, feeding its output to o2-sim-mctracks-to-aod and subsequently to o2-analysis-mctracks-to-aod-simple-task",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/README.md"
        }
    ],
    "945334f72eba5d2419341b267006ec3baba0a2b3ee178763b001579a4f47c13b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "At the end of the scripts, o2-sim, DPG workflow creator/runner, and DPL software are executed, allowing users to modify this section according to their needs. It's crucial not to remove the configuration keys `GeneratorFileOrCmd.cmd=$cmd -i $optns;GeneratorFileOrCmd.bMaxSwitch=none$HEPMC;`, and it's advisable to use the -m flag for additional configurations. EPOS4 does not support setting a maximum impact parameter, so it's preferable to keep the bMaxSwitch at none, whereas the other keys ensure the generator runs successfully with auto-generated FIFOs.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/README.md"
        }
    ],
    "f5a8d1581218774c073760b4340858f12d5153df1a116c39c2f35f94169c5f82": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Here are guidelines for utilizing `GeneratorTParticle`, selected via the `-g tparticle` option, for `o2-sim`.\n\n## Loading TParticle Files\n\n`GeneratorTParticle` is capable of reading events from a ROOT file that contains a `TTree` with a branch holding a `TClonesArray` of `TParticle` objects. Such files can be generated by an independent event generator program (EG).\n\nTo initiate a simulation that reads from the file `particles.root`, execute:\n\n    o2-sim -g tparticle --configKeyValues \"GeneratorFileOrCmd.fileNames=particles.root\"  ...\n\nRefer to the script `read.sh` for additional information. Run\n\n    ./read.sh --help\n\nto view the available options. This script assumes an input file with a `TTree` that contains a single `TBranch` holding a `TClonesArray` of `TParticle` objects. An example file can be created using `myeg.sh`. Execute\n\n    ./myeg.sh --help\n\nto see the options available for this script.\n\n### Configuration Settings\n\n---",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "26a47bd7ed33d32b416b165b806fe248380f39fcfbd05bf30a88c27b1b400528": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "./myeg.sh --help\n\nfor a list of options.\n\n### Configurations\n\n- The `TTree` name to read can be specified via the configuration key `GeneratorTParticle.treeName`, with `T` as the default.\n- The `TBranch` name containing the `TClonesArray` of `TParticle` objects can be configured using the key `GeneratorTParticle.branchName`, with `Particles` as the default.\n\nFor example,\n\n    o2-sim -g tparticle --configKeyValues \"GeneratorFileOrCmd.fileNames=particles.root;GeneratorTParticle.treeName=Events;GeneratorTParticle.branchName=Tracks\"  ...\n\n## Generating TParticle events from a child process\n\n`GeneratorTParticle` is not limited to reading events from a file; it can also start a child EG to generate events. If you have an EG named `eg` that writes `TParticle` event records to a file, you can run a simulation using this external EG with the command\n\n    o2-sim -g tgenerator --configKeyValues \"GeneratorFileOrCmd.cmd=eg\"\n\nFor further details, see also the script `child.sh`.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "13e3e6562fcc5f1c825d2e4666814365b5b1d5e13b88f57265d8d0d01537adae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Refer to the script `child.sh` for more details, by running:\n\n    ./child.sh --help\n\nAs for the program `eg`, it has certain requirements that must be met.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "c04fde23b621dac1a79cc75c6ede655879c52d6aee42f0ed97e7ce0ab04323da": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- The EG program is required to write HepMC event structures to a designated file. The specified option for this action can be set using the configuration key `GeneratorFileOrCmd.outputSwitch`, which has a default value of `-o`.\n- It is mandatory for the program to allow setting the number of events to generate via a command-line option. This is managed by the configuration key `GeneratorFileOrCmd.nEventsSwitch` with a default value of `-n`. Therefore, the EG application should recognize `-n 10` to indicate that 10 events should be generated.\n- The EG application must include an option to set the random number generator seed through a command-line switch. This setting is controlled by the configuration key `GeneratorFileOrCmd.seedSwitch` with a default value of `-s`. Consequently, the EG application needs to accept `-s 123456` to specify that the random number seed should be set to 123456.\n- The EG application should provide a command-line switch to define the maximum impact parameter (in Fermi-metres) that is sampled.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "4513945ac03f0d51a9c834671b6a563e453cc2c52ea152ad92a610a36748323f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The maximum impact parameter (in Fermi-metres) sampled is controlled by the configuration key `GeneratorFileOrCmd.bMaxSwitch`. It defaults to `-b`. Therefore, when using the EG application, specifying the command line argument `-b 10` instructs the application to generate events with an impact parameter ranging from 0fm to 10fm.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "1af0473e43897572bfe086d6c7eb094e5fab823a37df4e7336729911c0a55c2e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If a program fails to meet these requirements, it will usually be straightforward to create a simple wrapper script to ensure compliance.\n\n### Configurations\n\nSame as above.\n\n### Example EG\n\nThe child-process feature enables us to utilize almost any EG that provides a `TGenerator` interface without integrating it into O2. Assume we have developed the class `MyGenerator` to generate events.\n\n```cpp\nclass MyGenerator : public TGenerator {\npublic:\n  MyGenerator();\n  void Initialize(Long_t projectile, Long_t target, Double_t sqrts);\n  void GenerateEvent();\n  Int_t ImportParticles(TClonesArray* particles, Option_t* option = \"\");\n};\n```\n\nand a steering class.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "a93d1a601dabc4dd327efed123675f1cea56555a31ca03572f8bc7047293688a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "struct MySteer {\n  TGenerator*   generator;\n  TFile*        file;\n  TTree*        tree;\n  TClonesArray* particles;\n  Int_t         flushEvery;\n  MySteer(TGenerator* generator,\n          const TString& output,\n          Int_t flushEvery)\n    : generator(generator),\n      file(TFile::Open(output,\"RECREATE\")),\n      tree(\"T\",\"Particle tree\"),\n      particles(new TClonesArray(\"TParticle\")),\n      flushEvery(flushEvery)\n  {\n    tree->SetDirectory(file);\n    tree->Branch(\"Particles\",&particles);\n  }\n  ~MySteer() { close(); }\n  void event() {\n    particles->Clear();\n    generator->GenerateEvent();\n    generator->ImportParticles(particles);\n    tree->Fill();\n  }\n  void sync() {\n    tree->AutoSave(\"SaveSelf FlushBaskets Overwrite\");\n  }\n  void run(Int_t nev) {\n    for (Int_t iev = 0; iev < nev; iev++) {\n      event();\n\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "c8c573f8b2b020ffdeab179486e7269936dc4d9d5b6d552333e2dd9128dec2f2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "void process_events(Int_t nev) {\n   for (Int_t event_index = 0; event_index < nev; event_index++) {\n     generate_event();\n     if (flushInterval > 0 && (event_index % flushInterval == 0) && event_index != 0)\n       synchronize();\n   }\n}\n\nvoid finalize() {\n  if (!file) return;\n  file->Write();\n  file->Close();\n  file = nullptr;\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "12719e10c7f3f9f4f2671cd2d0a076b65674bd3539957f39ed61083bfc1cf094": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Then we can write the script `MyEG.macro` (full code) as follows:\n\n```cpp\nvoid MyEG(Int_t nev, const TString& out, Int_t every=1)\n{\n  MyGenerator* eg = new MyGenerator();\n  eg->Initialize(2212, 2212, 5200);\n\n  MySteer steer(eg, out, every);\n  steer.run(nev);\n}\n```\n\nAnd a straightforward shell script `myeg.sh` to pass arguments to `MyEG.macro`:\n\n```sh\n#!/bin/sh\n\nnev=1\nout=particles.root\n\nwhile test $# -gt 0 ; do\n    case $1 in\n    -n) nev=$2 ; shift ;;\n    -o) out=$2 ; shift ;;\n    *) ;;\n    esac\n    shift\ndone\n\nroot -l MyEG.macro -- $nev \\\"$out\\\"\n```\n\nUsing these, we can execute:\n\n```sh\no2-sim -g tgenerator --configKeyValues \"GeneratorFileOrCmd.cmd=./myeg.sh\"\n```\n\nto generate events using our custom generator `MyGenerator`.\n\n### Implementation Details\n\nInternally, `GeneratorTParticle`:\n\n1. generates a unique temporary file name in the working directory,\n2. constructs a command line, such as:\n\n      eg options -o temporary-name &",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "fff230c349d5386989de170a6196787892036542bb610894303510cf5fdd5339": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXAMPLE COMMAND -o temporary-name &\n\n3. then runs that command line\n\n## Future Enhancements\n\nThe `GeneratorTParticle` (and sister generator `GeneratorHepMC`) can be configured using `--configKeyValues` settings:\n\n- `GeneratorTParticle.treeName=name` defines the name of the `TTree` in the input files.\n\n- `GeneratorTParticle.branchName=name` specifies the name of the `TBranch` within the `TTree` that contains the `TClonesArray` of `TParticle` objects.\n\n- `GeneratorFileOrCmd.fileNames=list` lists the HepMC files to read as a comma-separated string.\n\n- `GeneratorFileOrCmd.cmd=command line` allows execution of a command line as a background child process. If this is specified (not an empty string), `GeneratorFileOrCmd.fileNames` is disregarded.\n\n- Several keys are used to specify command line option switches for the child program. If any of these keys are set to the empty string or the special value `none`, the corresponding switch and option value are not passed to the child program.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "beeeee8f3917fcc945d70498caf9c3f11d99e726a2c354e6b99647eac4ed79a7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `GeneratorFileOrCmd.outputSwitch=switch` (default `>`), which is used to define the output file. If not specified, the default `>` indicates that the program outputs events exclusively to standard output.\n\n- `GeneratorFileOrCmd.seedSwitch=switch` (default `-s`) to set the random number generator seed. This value is determined by the `o2-sim` option `--seed`.\n\n- `GeneratorFileOrCmd.bMaxSwitch=switch` (default `-b`) to set the maximum impact parameter. The value for this is derived from the `o2-sim` option `--bMax`.\n\n- `GeneratorFileOrCmd.nEventsSwitch=switch` (default `-n`) to define the number of events to generate. This value is controlled by the `o2-sim` options `--nEvents` or `-n`.\n\n- `GeneratorFileOrCmd.backgroundSwitch=switch` (default `&`) to indicate how the program should run in the background. Generally, this should be `&`, but the program might also fork to the background on its own.\n\nThe command-line construction will now appear as:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "7a5d496ba2db65f5d8f636648767476543e3bee1169cc234e117aeafd4509de7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The command line build process will now use the following format:\n\n> _commandLine_ _nEventsSwitch_ _nEvents_ _seedSwitch_ _seed_\n> _bMaxSwitch_ _bMax_ _outputSwitch_ _output_ _backgroundSwitch_\n\nIf any of the `Switch` parameters are left empty or set to `none`, the corresponding option will not be included in the command line. For instance, if _bMaxSwitch_ is left empty, the resulting command line will be:\n\n> _commandLine_ _nEventsSwitch_ _nEvents_ _seedSwitch_ _seed_\n> _outputSwitch_ _output_ _backgroundSwitch_\n\n\n## TODO\n\n### Header Information\n\nThe `GeneratorTParticle` class will accept a parameter named `headerName`, which specifies a branch that contains header information. Within this branch, the class will look for leaves (`TLeaf`) that correspond to standard header information keys (refer to `o2::dataformats::MCInfoKeys`). If any of these leaves are found, the corresponding keys will be set on the generated event header.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "1e8b431482fbe4436295e0b8170fea8b0b36af69398eff174c41a2e538c8c6fb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Therefore, as long as the generator adheres to the established convention, we can also include supplementary data (such as impact parameter, Npart, etc.) from the input files alongside the particle data.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/README.md"
        }
    ],
    "cb12c98d126b4fbbba5493f3fe8347223c548e762342e7f51168820ad5dbd786": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesHybrid Example Hybrid\n/doxy -->\n\nThis manual provides instructions on utilizing the Hybrid generator with the o2-sim. All other generators are implemented as sub-generators and can be invoked through a JSON file, which is passed to o2-sim via the GeneratorHybrid.configFile parameter. To make use of this example, the O2sim package must be loaded.\n\nThe runo2sim.sh script can be used to automatically execute the example, which includes a majority of the available generators in O2. A JSON template can be created using the ${O2DPG_ROOT}/MC/bin/o2_hybrid_gen.py script. For this example, users can simply copy the entire Hybrid example folder and run the script after granting it executable permissions (`chmod +x runo2sim.sh`).\n\n# Files description",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid/README.md"
        }
    ],
    "f2a7ac883d7dafb63e058a03d45c863f9fdfd96dff4c67fe356d2ed547aa142d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# File Descriptions\n\n- **runo2sim.sh** &rarr; enables the use of the hybrid generator example\n- **hybridconfig.json** &rarr; an example JSON configuration file for the hybrid generator\n- **example.optns** &rarr; an options file intended for use with EPOS4, which is implemented as a subgenerator in this example (ensure that the .optns file is in the current working directory)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid/README.md"
        }
    ],
    "652ae55789ec879f1a184c56482eedcb4e45187e741953e3ebaf165c8ad751d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesSelective_Transport_pi0 Example of Selective Particle Transport\n/doxy -->\n\nThis simulation example demonstrates running the simulation and selectively transporting particles\nthrough the detector geometry based on configurable settings, as well as utilizing the external event trigger\nmechanism on generators.\n\nThe simulation employs the Pythia8 pp generator with default settings.\nThe specific simulation parameters are configured in the sim.ini file.\n\nOnly the settings for selective particle transport are modified, including:\n```\n[Stack]\ntransportPrimary=external\ntransportPrimaryFileName=transportPDG.macro\ntransportPrimaryFuncName=transportPDG(321)\ntransportPrimaryInvert=false\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Selective_Transport_pi0/Readme.md"
        }
    ],
    "93b1cfa44284067d6380923dcb69c28b9cf361e0963a8e1962e2697d3f13ab00": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "`transportPrimary` specifies the selection method, with `external` indicating that the definition is loaded via a plugin macro, accessed through `transportPrimaryFuncName` in the file `transportPrimaryFileName`. `transportPrimaryInvert` enables the inversion of the selection, thus preventing transport for the chosen particles.\n\nThe second phase of these simulation examples illustrates how to proceed from the initial step by propagating all remaining tracks. This is executed only for events that meet a specific trigger condition, requiring both photons from the pi0 decay to have converted within a designated region.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Selective_Transport_pi0/Readme.md"
        }
    ],
    "6ac589fd98cf8340e66736bd84b2d341ba7fc9b132e6952a6367b96bbd900fc4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This document illustrates the following:\n\na) How to execute a basic background event simulation with certain parameter adjustments.\nb) How to configure and operate an event generator that produces signal events, based on the impact parameter of the background event into which it will be embedded.\n\nCustom signal events are generated according to settings outlined in a file named 'signal_impactb.macro'. The custom event generator responds to a notification indicating the embedding status of the simulation, using the background event's header to guide its actions. Here, the impact parameter of the background event determines the number of signal particles to be generated.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Signal_ImpactB/README.md"
        }
    ],
    "4384b48da49ea486c1fff009bc3b869e0b45ff5af5593b03b324c08c77cbfa2a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The macro file can be set using the `--configKeyValues` parameter `GeneratorExternal.funcName`, and the function call to fetch the configuration and define the formula is indicated by `GeneratorExternal.funcName`.\n\nThe event generator used for background embedding must supply an impact parameter; Pythia8 heavy-ion model fulfills this requirement by providing this value.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Signal_ImpactB/README.md"
        }
    ],
    "897b682c3e83b901ed0be58a54947daafbfe50237a9a32dd9b454a433c9bd77e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesForceDecay_Lambda_Neutron_Dalitz Example ForceDecay_Lambda_Neutron_Dalitz\n/doxy -->\n\nThis document demonstrates a straightforward simulation scenario for forcing a particular particle decay sequence. To keep the example simple, we will utilize a Box generator to inject Lambda0 particles into the simulation.\n\nOur goal is to implement a forced decay chain for the Lambda0 particle:\n```\nLambda0 --> n pi0 --> n e+ e- gamma\n```\nSince both the Lambda0 and pi0 particles decay by default through Geant, we need to activate an external decayer for these particles. This can be achieved by using the configuration key:\n```\n--configKeyValues 'SimUserDecay.pdg=3122 111'\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/ForceDecay_Lambda_Neutron_Dalitz/README.md"
        }
    ],
    "1a2dfe7ad7e04bccc1124675b2ae5242a1c604af4f2beaf0d1e1b6ff39141977": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In addition, we need to configure the external decayer to perform the desired decay channels. The standard external decayer setup is loaded from\n```\n${O2_ROOT}/share/Generators/pythia8/decays/base.cfg\nand is assigned to the first slot of the configuration parameter 'DecayerPythia8.config'.\n```\nTo achieve this, we aim to add extra settings from the `decay_lambda_neutron_dalitz.cfg` file on top of the default configuration. This can be accomplished with\n```\n--configKeyValues 'DecayerPythia8.config[1]=decay_lambda_neutron_dalitz.cfg'\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/ForceDecay_Lambda_Neutron_Dalitz/README.md"
        }
    ],
    "0ab0d4d68624cf59b913a299af68d3904eef8ebd00e7a10d840d75c58a1b98e7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesPythiaHepMCWrapper Example illustrating the simple extraction of HepMC data using GeneratorPythia8\n\n/doxy -->\n\nThis example shows how to enhance GeneratorPythia8 with a user-defined macro (or an external generator) to enable additional HepMC3 output of generated Pythia8 events.\n\nIt includes a handy tool for those who need to convert Pythia8 events into HepMC files. Note that other methods to achieve this are available (refer to the original Pythia8 example).\n\nThe example includes:\n\n- The external generator implementation `Pythia8HepMC3.C`\n- A `run.sh` script to demonstrate its usage, along with a check by feeding the generated HepMC data back into the simulation.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8_HepMC_Wrapper/README.md"
        }
    ],
    "ac7927cdfcd2d958c7a13059fe23f9b513c89018eb49ed51f6ba0efcb85d58a0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\\page refrunSimExamplesMcTracksToAOD Example McTracksToAOD\n/doxy\n\nThese examples illustrate how to perform on-the-fly event generation for DPL (analysis) tasks.\n\nList of examples:\n- run.sh --> inject events from an existing kinematics file\n- run_Pythia8.sh --> generate Pythia8 events within the DPL device and forward them to the analysis\n- run_trigger.sh --> generate Pythia8 events with triggering in the DPL device and forward them to the analysis\n- run_O2Kine.sh --> generate events and save them in a kinematics file; read back these events and publish them to the analysis task",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/McTracksToAOD/README.md"
        }
    ],
    "cb86a97a26a53263511eb43c017021964d6aefab157665ffa8c35b2ab42d2002": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesPythia Example for Generating Pythia Events\n/doxy -->\n\nPythia8 is the only event generator guaranteed to be included in O2, as it is utilized for decays in the simulations.\n\nThe event generator is chosen using\n\n    o2-sim -g pythia8 ...\n\nPythia8 is extensively documented on its official website. For detailed information, please consult that documentation.\n\n## Configuration Parameters\n\nConfiguration parameters are set with\n\n    o2-sim --configKeyValues \"comma-separated-list-of-pairs\"\n\nFor instance,\n\n    o2-sim -g pythia8 \\\n      --configKeyValues \"GeneratorPythia8.config=myconfig.cfg\"\n\nThe available configuration parameters for Pythia8 include",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "fa6a2e7e0073e5386d3ff7b7ec6609a887636ee64f2deb492b075f30173ba4f0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `GeneratorPythia8.config=filename` Determines the configuration file for Pythia8 to use. The structure and parameters are thoroughly explained on the Pythia website. Keep in mind that if a predefined configuration is chosen (e.g., `pythia8pp`), the file indicated here will be loaded after the default configuration.\n- `GeneratorPythia8.hooksFileName=script-file-name` Sets a ROOT script to execute, which defines a `Pythia8::UserHooks` object (refer to the [documentation](https://pythia.org/latest-manual/UserHooks.html)). An example can be found at `${O2_ROOT}/share/Generators/egconfig/pythia8_userhooks_charm.C`.\n- `GeneratorPythia8.hooksFuncname=function-name` Identifies the function within `GeneratorPythia8::hooksFileName` to be called. This function must return a pointer to a `Pythia8::UserHooks` object. For instance, see the provided example.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "f4b79b50d57a4c5ca60e7309bf845061db8e00c3344f91594e86d00fd7937dde": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The function _must_ return a pointer to a `Pythia8::UserHooks` object. For an example, see `${O2_ROOT}/share/Generators/egconfig/pythia8_userhooks_charm.C`. The default setting is `pythia8_userhooks`.\n- `GeneratorPythia8.includePartonEvent=boolean` When set to `false` (default), the events are pruned to exclude particles that are not:\n  - beam particles (HepMC status = 4),\n  - decayed (HepMC status = 2), or\n  - final state (HepMC status = 1). This reduces the event size by approximately 30%. Note that setting this option to `false` _may_ corrupt the events, so use it with caution. If set to `true`, the entire event is stored.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "1cc24e4a286bdd578c2a8d9d4dd20cdba804b70e3dbd02ba6d616c9c39f43857": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Predefined Configurations\n\nThe `o2::eventgen::GeneratorFactory` class (which interprets the `o2-sim\n-g` option) provides several predefined Pythia configurations. These are detailed below, along with their associated configuration files (located in `${O2_ROOT}/share/Generators/egconfig/'):\n\n- `alldet` (`pythia8_inel.cfg`) for pp collisions at 14 TeV, representing minimum bias inelastic events, with an additional muon box generator for the MUON arm acceptance.\n- `pythia8inel` (`pythia8_inel.cfg`) for pp collisions at 14 TeV, representing minimum bias inelastic events.\n- `pythia8hf` (`pythia8_hf.cfg`) for pp collisions at 14 TeV, with hard c-cbar and b-bar processes enabled.\n- `pythia8powheg` (`pythia8_powheg.cfg`) for pp collisions at 13 TeV, utilizing POWHEG parton distribution functions via LHEF files.\n- `pythia8hi` (`pythia8_hi.cfg`) for Pb-Pb collisions at 5.52 TeV, employing the Angantyr model.\n\n## Alternative\n\nInstead of using the built-in Pythia8 event generator, an external application can also produce HepMC output. For instance,",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "198d1c32145754f54a882bbb1cdc3ad3d657f289c4807f2edf1f1689be3ed6c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "/*\n   g++ -std=c++17 -I${PYTHIA8_ROOT}/include \\\n   -I${HEPMC3_ROOT}/include \\\n   pythia.cc -o pythia \\\n   -L${PYTHIA8_ROOT} -L${HEPMC3_ROOT}/lib \\\n   -Wl,-rpath,${PYTHIA8_ROOT}/lib \\\n   -Wl,-rpath,${HEPMC3_ROOT}/lib \\\n   -lHepMC3 \\\n   -lpythia8\n*/\n#include <HepMC3/WriterAscii.h>\n#include <Pythia8/Pythia.h>\n#include <Pythia8Plugins/HepMC3.h>\n#include <string>\n#include <fstream>",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "93473a9fd7be64cb4259e7df7b07790b67ba3c25f9f3806c4f91881a62d670c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "struct BasePythia {\n  Pythia8::Pythia _pythia{\"\",false};\n  int             _seed = -1;\n  std::string     _config;\n  void silence() {\n    _pythia.readString(\"Print:quiet                      = on\");\n    _pythia.readString(\"Init:showAllSettings             = off\");\n    _pythia.readString(\"Stat:showProcessLevel            = off\");\n    _pythia.readString(\"Init:showAllParticleData         = off\");\n    _pythia.readString(\"Init:showChangedParticleData     = off\");\n    _pythia.readString(\"Init:showChangedSettings         = off\");\n    _pythia.readString(\"Init:showMultipartonInteractions = off\");\n  }\n  void seed() {\n    _pythia.readString(\"Random:setSeed = \"\n                   +std::string(_seed >= 0 ? \"yes\" : \"no\"));\n    _pythia.readString(\"Random:seed = \"+std::to_string(_seed));\n  }\n  virtual void configure() = 0;\n  void init()  {\n    silence();\n    seed();\n    configure();",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "7fd31b6111532cdc65082904f9c5274a8e89bbe521551e3ac196c06311e3d2c0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "void init()  {\n        silence();\n        seed();\n        configure();\n        if (!_config.empty()) _pythia.readFile(_config);\n        _pythia.init();\n      }\n      bool loop(size_t nev, const std::string& filename) {\n        std::ofstream*         file = (filename == \"-\" || filename.empty()\n                                       ? nullptr\n                                       : new std::ofstream(filename.c_str()));\n        std::ostream&           out  = file ? *file : std::cout;\n        HepMC3::GenEvent        event;\n        HepMC3::WriterAscii     writer(out);\n        HepMC3::Pythia8ToHepMC3 converter;",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "23f269e14809ac9b6b171b92c5e5e7a0feec29f9c842514b554b455aba18b830": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "for (size_t iev = 0; iev < nev; ++iev) {\n    if (not _pythia.next()) return false;\n    event.clear();\n    converter.fill_next_event(_pythia, event);\n    writer.write_event(event);\n  }\n  if (file) {\n    file->close();\n    delete file;\n  }\n  return true;\n}\n\nstruct Pythia : BasePythia {\n  void configure() {\n    _pythia.readString(\"Beams:idA                = 2212\");\n    _pythia.readString(\"Beams:idB                = 2212\");\n    _pythia.readString(\"Beams:eCM                = 5020.\");\n    _pythia.readString(\"SoftQCD:inelastic        = on\");\n    _pythia.readString(\"ParticleDecays:limitTau0 = on\");\n    _pythia.readString(\"ParticleDecays:tau0Max   = 10\");\n    _pythia.readString(\"Tune:ee                  = 7\");\n    _pythia.readString(\"Tune:pp                  = 14\");\n  }\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "7440841bb69e49d23c0dcbe92408e7f31eaabd0e09e81dd54527ce833dcc805f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "struct Angantyr : BasePythia {\n  enum Model {\n    fixed = 0,\n    random = 1,\n    opacity = 2\n  } _model = fixed;\n  float _bMax = 15;\n  virtual void configure() {\n    _pythia.readString(\"Angantyr::CollisionModel = \"+std::to_string(_model));\n    _pythia.readString(\"HeavyIon:showInit        = off\");\n    _pythia.readString(\"HeavyIon:SigFitPrint     = off\");\n    _pythia.readString(\"HeavyIon:SigFitDefPar    = 0,0,0,0,0,0,0,0,0\");\n    _pythia.readString(\"HeavyIon:SigFitNGen      = 20\");\n    _pythia.readString(\"HeavyIon:bWidth          = \"+std::to_string(_bMax));\n  }\n};",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "a4aa5b9eb9fe914bb61a515249029331136b1cd17fb4da3d4129ace272191b29": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "struct PbPb : Angantyr {\n  void configure() {\n    Angantyr::configure();\n    _pythia.readString(\"Beams:idA                = 1000822080\");\n    _pythia.readString(\"Beams:idB                = 1000822080\");\n    _pythia.readString(\"Beams:eCM                = 5020.\");\n    _pythia.readString(\"Beams:frameType          = 1\");\n    _pythia.readString(\"ParticleDecays:limitTau0 = on\");\n    _pythia.readString(\"ParticleDecays:tau0Max   = 10\");\n  }\n};",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "eb6de28d0da5cecfe25dede189973bef5c376b6d3ea2e8eef67b842dbbe04c72": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "struct pPb : Angantyr {\n  void configure() {\n    Angantyr::configure();\n    _pythia.readString(\"Beams:idA                = 2212\");\n    _pythia.readString(\"Beams:idB                = 1000822080\");\n    _pythia.readString(\"Beams:eA                 = 7000.\");\n    _pythia.readString(\"Beams:eB                 = 2760.\");\n    _pythia.readString(\"Beams:frameType          = 1\");\n    _pythia.readString(\"ParticleDecays:limitTau0 = on\");\n    _pythia.readString(\"ParticleDecays:tau0Max   = 10\");\n  }\n};",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "ab0f7c2c2e55fab7747cde7ac98c526cdc2697d2414bfafcd8da441696a55230": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "int main(int argc, char** argv) {\n  int seed           = -1;\n  int nev            = 10;\n  std::string output = \"-\";\n  std::string system = \"pp\";\n  std::string config = \"\";\n  for (int i = 1; i < argc; i++) {\n    if (argv[i][0] == '-') {\n      switch (argv[i][1]) {\n      case 's': seed   = std::stoi(argv[++i]); break;\n      case 'n': nev    = std::stoi(argv[++i]); break;\n      case 'o': output = argv[++i]; break;\n      case 'c': config = argv[++i]; break;\n      case 'h':\n        std::cout << \"Usage: \" << argv[0] << \" [OPTIONS] [SYSTEM]\\n\\n\"\n                  << \"Options:\\n\"\n                  << \"  -h           This help\\n\"\n                  << \"  -n NUMBER    Number of events\\n\"\n                  << \"  -o FILE      Output file\\n\"\n                  << \"  -s SEED      Random number seed\\n\"\n                  << \"  -c FILE      Configuration file\\n\\n\"\n                  << \"Systems (all at sqrt(s)=5.02TeV):\\n\"\n                  << \"  pp, p-Pb, or Pb-Pb\\n\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "93c8f084ad7e24ceb9fed3228aa0e6430ead4e81f931896fd485edbc8434b5ce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<< \"Systems (all at sqrt(s)=5.02TeV):\\n\"\n              << \"  pp, p-Pb, or Pb-Pb\\n\"\n              << std::endl;\n        return 0;\n          default:\n        std::cerr << \"Unrecognized option: \" << argv[i] << std::endl;\n        return 1;\n          }\n        } else\n          system = argv[i];\n      }",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "28ef9a59587b8ea4a025b37862260216a7de500e35565246749537e0d4d53ad9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The provided code initializes a generic event generator that relies on Pythia and outputs the results either to a file or standard output in the HepMC format. It can be utilized with the `hepmc` generator, for instance, as shown below:\n\n    o2-sim -g hepmc \\\n      --configKeyValues=\"GeneratorFileOrCmd.cmd=./pythia p-Pb\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8/README.md"
        }
    ],
    "30f07c363fbf176deccaaaa5268b9220ff86c2cef7bf6898eb9a90d8add7cc0e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The guide outlines the integration of JETSCAPE within the O2 simulation framework. For a detailed explanation of the HepMC(3) data handling, refer to the HepMC_fifo directory in the MC examples. The scripts utilize the `cmd` parameter of `GeneratorHepMC` to initiate JETSCAPE generation through the `jetscape.sh` script. It is crucial to enable the HepMC3 output format in the xml configuration file, as demonstrated in jetscape_user_example.xml, otherwise the simulation will fail.\n\n# Scripts Overview\n\nThere are two scripts for running the simulations:\n- **jetscape.sh** &rarr; initiates the JETSCAPE generation process\n- **runo2sim.sh** &rarr; facilitates the creation of events using o2-sim",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/README.md"
        }
    ],
    "6c0f1a34a3ea340890b05719e110111244cbb993e1a85eed41a9271f0de31a37": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "ADDITIONALLY, the jetscape_user_example.xml file is supplied to initiate JETSCAPE with custom parameters. Users can easily develop scripts akin to those provided for the EPOS4 tutorial, tailored for DPL or O2DPG simulations.\n\n## jetscape.sh\n\nThis script can be executed independently to produce a .hepmc file. The example illustrates all the script functionalities, which are similarly implemented in the generation steering scripts. Specifically, the `-i` flag permits the specification of the user configuration XML file, `-s` enables the generator to use a user-defined seed, and the HepMC output filename is set via the `-o` flag. The script automatically modifies certain parts of the provided input XML file.\n\n## runo2sim.sh",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/README.md"
        }
    ],
    "fb5578b6990dff59d189d8b5e73dc92cae74b3b89b5403e5b926bd15760e0663": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## runo2sim.sh\n\nThis script is functional only with O2sim versions that include the FIFO custom name creation fix (the exact build number will be specified here in the future); otherwise, it may crash or fail to complete the simulation. Several flags can be used to adjust the generation settings:\n- **-m , --more** &rarr; inputs advanced parameters via configuration key flags\n- **-n , --nevents** &rarr; modifies the number of events in the .xml file or uses the value from the file if no events are specified\n- **-i , --input** &rarr; specifies the .xml filename for JETSCAPE input, with no file extension needed\n- **-j , --jobs** &rarr; defines the number of worker processes\n- **-h , --help** &rarr; displays usage instructions",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/README.md"
        }
    ],
    "a40b129dd042ebec8221dba1530c601fa98a1d59d7e6bb3455b3c75b9f8b07c0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The final sections of the script run o2-sim, allowing users to modify them according to their needs. It is crucial to avoid removing the configuration keys `GeneratorFileOrCmd.cmd=$cmd -i $xml;GeneratorFileOrCmd.fileNames=test_out.hepmc;GeneratorFileOrCmd.outputSwitch=-o;GeneratorFileOrCmd.bMaxSwitch=none;GeneratorFileOrCmd.nEventsSwitch=none;` as their deletion could make the script non-functional. Instead, any additional configurations should be added using the -m flag.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/README.md"
        }
    ],
    "a2ced012a6419b30ea7b7405a2ed7de4bd1d00cc2972e9d47947c62813a8ca03": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This is a straightforward simulation example demonstrating\n\na) how to execute a basic background event simulation with specific parameter adjustments\nb) how to conduct a simulation that generates signal events using a custom external generator capable of altering its behavior based on the characteristics of the background event.\n\nPythia8 events are produced according to the settings defined in the `adaptive_pythia8.macro` file. These settings ensure that Pythia8 starts with the `pythia8_inel.cfg` configuration. Customization is provided so that the generator can receive and respond to a notification indicating the embedding status of the simulation, allowing it to determine subsequent actions based on the background event header. Specifically, the number of Pythia8 events to be embedded is determined by a formula involving the count of primary particles in the background events.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Adaptive_Pythia8/README.md"
        }
    ],
    "c904ad29c8af081a8b9d11baf9e257bbe16933b437e194f8561c3c0337df1ca6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The macro file is defined using the `--configKeyValues` option with the key `GeneratorExternal.fileName`, and the function call to fetch the configuration and set the formula is specified through `GeneratorExternal.funcName`.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Adaptive_Pythia8/README.md"
        }
    ],
    "729e8ecca3ac5d44b4a5cf7cff31159476f6dc472a2a697c2649896b8f198e54": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesAliRoot_AMPT Example AliRoot_AMPT\n/doxy -->\n\nThis complex simulation example illustrates the process of running event generation with the AMPT event generator interface from AliRoot. A wrapper class named AliRoot_AMPT is created to manage the AliGenAmpt instance and set its configurations. Additionally, it offers methods to predefine the random event plane and to update the event header.\n\nThe overall setup is controlled by the `ampt` function, which is defined in the macro `aliroot_ampt.macro`. The macro file is referenced through the `--configKeyValues` option by setting `GeneratorExternal.fileName`, and the specific function call to retrieve the configuration is set via `GeneratorExternal.funcName`.\n\n# IMPORTANT\nTo execute this example, you must load an AliRoot package that is compatible with O2. For further information, see https://alice.its.cern.ch/jira/browse/AOGM-246.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/AliRoot_AMPT/README.md"
        }
    ],
    "10ed905e9ffc0310776cec2a00f27894f5a6f1c8993dffef189b6789ad8f90e8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In order for AliRoot to be loaded after O2, use the following command sequence:\n`alienv enter O2/latest,AliRoot/latest`\nLoading AliRoot before O2 might result in unresolved symbol issues.\n\n# WARNING\nThe simulation's physics output has not been fully tested and validated.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/AliRoot_AMPT/README.md"
        }
    ],
    "132442794994c32e41fcf1ae7a6a20077a58949eb8e917071e876c8a5aef3838": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesAliRoot_Hijing Example AliRoot_Hijing\n/doxy -->\n\nThis document illustrates a straightforward simulation example that demonstrates running event simulations using the Hijing event generator interface within AliRoot. The configuration of AliGenHijing is managed by the `hijing(double energy = 5020., double bMin = 0., double bMax = 20.)` function, which is defined in the macro `aliroot_hijing.macro`.\n\nThe macro file is referenced through the `--configKeyValues` setting `GeneratorExternal.fileName`, and the function responsible for fetching the configuration is specified by `GeneratorExternal.funcName`.\n\n# IMPORTANT\nTo execute this example, you must load an AliRoot package that is compatible with O2.\nFor more information, see https://alice.its.cern.ch/jira/browse/AOGM-246.\n\nAliRoot should be loaded **after** O2 in the following order:\n`alienv enter O2/latest,AliRoot/latest`\nLoading AliRoot before O2 might result in unresolved symbol issues.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/AliRoot_Hijing/README.md"
        }
    ],
    "15071021628657c9fe5463bf4ff5f1b9f361f3e52de6f9bb410b84dcd7671780": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesHybrid Example Hybrid\n/doxy -->\n\nThis manual illustrates the use of the Hybrid generator within o2-sim. Other generators are integrated as sub-generators and can be invoked through a JSON file, which is passed to o2-sim via the GeneratorHybrid.configFile parameter. To utilize this example, the O2sim package must be loaded.\n\nThe runo2sim.sh script can be used to automatically execute this example, incorporating the majority of the available generators in O2. The JSON template can be created with the ${O2DPG_ROOT}/MC/bin/o2_hybrid_gen.py script. For simplicity, users can copy the entire Hybrid example folder and then run the script by granting it execution permissions (`chmod +x runo2sim.sh`).\n\n# Files description",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_trigger/README.md"
        }
    ],
    "06aef015a7150702c4f565e1d651a00426cd9b9efeb0de2cd2832835317fca24": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# File Descriptions\n\n- **runo2sim.sh** &rarr; enables the use of the hybrid generator example\n- **hybridconfig.json** &rarr; an example JSON configuration file for the hybrid generator\n- **example.optns** &rarr; an options file intended for use with EPOS4, which is implemented as a subgenerator in this example (the .optns file needs to be present in the current working directory)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_trigger/README.md"
        }
    ],
    "55c3b3b62355446b0825b02620c2846cbc186770d5b642c0aa31fdf448c6ccb3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Here are guidelines on how to use the `GeneratorHepMC` selected with the `-g hepmc` option for `o2-sim`.\n\nHepMC event structures can be imported from any format supported by HepMC itself (refer to\n[these](http://hepmc.web.cern.ch/hepmc/group__IO.html) and\n[these](http://hepmc.web.cern.ch/hepmc/group__factory.html) resources).\n\n## Importing HepMC Files\n\nThe `GeneratorHepMC` generator can import events from a\n[HepMC(3)](http://hepmc.web.cern.ch/hepmc/) formatted file. Such files can be generated by standalone event generator software (EG). Examples of such software include:\n\n- [Pythia8](https://pythia.org)\n- The [CRMC](https://gitlab.iap.kit.edu/AirShowerPhysics/crmc) suite\n- [Herwig](https://herwig.hepforge.org/)\n- [SMASH](https://smash-transport.github.io/)\n- And many more...\n\nFor more details on creating event files in the HepMC format, please consult the documentation of these software tools.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "b1133416a0a6787ef260259465ee765142726412cb6996ee14190222ccbf0237": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To perform a simulation by reading from the file `events.hepmc`, execute:\n\n    o2-sim -g hepmc --configKeyValues \"GeneratorFileOrCmd.fileNames=events.hepmc\" ...\n\nRefer to [`read.sh`](read.sh) for more details.\n\n## Reading HepMC events from a child process\n\nThe `GeneratorHepMC` module is capable not only of reading HepMC events from a file, but also of spawning a child EG to generate events. If you have an EG named `eg` that writes HepMC event records to the standard output, you can run a simulation using this external EG with:\n\n    o2-sim -g hepmc --configKeyValues \"GeneratorFileOrCmd.cmd=eg\"\n\nFurther information can be found in the script [`child.sh`](child.sh).\n\nThe program `eg` must meet certain requirements.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "5362a66e58cd1f9de538093e2786b1d219f99864d68024d07814d36ce29e7eb7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- The EG program is required to write HepMC event structures to a designated file. The output file is determined by the `GeneratorFileOrCmd.outputSwitch` configuration key, with a default value of `>`, indicating that the program will output HepMC event structures to standard output without printing any additional text.\n\n- The program must also allow setting the number of events to be generated through a command-line option, controlled by the `GeneratorFileOrCmd.nEventsSwitch` key and with a default value of `-n`. Therefore, using `-n 10` instructs the program to generate 10 events.\n\n- Additionally, the EG application should include a command-line option to set the seed for the random number generator, managed by the `GeneratorFileOrCmd.seedSwitch` key and having a default value of `-s`. For instance, `-s 123456` sets the random number seed to 123456.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "e738ab15cc88d8789aa9d45e50c179bac514e2233c7cfc674ff599a6840c1037": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Set the random number seed to `123456` as an example.\n- The EG application should accept a command line option to specify the\n  maximum impact parameter (in Fermi-metres) sampled. This value is configured\n  through the key `GeneratorFileOrCmd.bMaxSwitch` and defaults to `-b`. Therefore,\n  the EG application should interpret the command line argument `-b 10` to mean\n  that it should only produce events with an impact parameter ranging from 0fm to 10fm.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "844342e328b3ca6387fb54130f1299922fe04967d11da17c374c592d34785971": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If a program fails to meet these requirements, it is usually straightforward to create a small wrapper script to enforce them. For instance, `crmc` generates a significant amount of output to standard output. We can use a shell script ([`crmc.sh`](crmc.sh)) to filter this output as follows:\n\n    #!/bin/sh\n    crmc $@ -o hepmc3 -f /dev/stdout | sed -n 's/^\\(HepMC::\\|[EAUWVP] \\)/\\1/p'\n\nThe `sed` command filters lines that start with `HepMC::`, or with the single characters `E` (event), `A` (attribute), `U` (units), `W` (weight), `V` (vertex), or `P` (particle) followed by a space. This should typically be sufficient to eliminate unnecessary information from the standard output.\n\nMoreover, the script forwards any additional command line arguments to `crmc` through `$@`. This can be applied to `o2-sim` to configure options for the CRMC suite. For example, to simulate p-Pb collisions using DpmJET, we can run:\n\n    o2-sim -g hepmc --configKeyValues \"GeneratorFileOrCmd.cmd=crmc.sh -m 12 -i2212 -I 1002080820\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "f7dc32455394b2b11b86081d480951d97f02205bdce88c5a35e1f3606e6a4a10": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Implementation Details\n\n`GeneratorHepMC` internally:\n\n1. generates a unique temporary file name in the working directory,\n2. establishes a FIFO (or named pipe, see [Wikipedia](https://en.wikipedia.org/wiki/Named_pipe)),\n3. constructs a command line, e.g.,\n\n        eg options > fifo-name &\n\n4. and runs that command line\n\n## Configuration Keys\n\n`GeneratorHepMC` (and its sister generator, `GeneratorTParticle`) permits customization through configuration keys specified via `--configKeyValues`.\n\n- `HepMC.eventsToSkip=number` specifies the number of events to skip at the start of each file read.\n\n- `HepMC.prune=boolean` if set to true, it filters out events involving particles that are not:\n  - beam particles (status = 4),\n  - decayed particles (status = 2), or\n  - final state particles (status = 1)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "bb7256f9377a8a8d493ab3a49e2980855aa43ffdb8c5e7fd48c6171507ab6e66": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This can decrease the event size, and the extent of reduction varies based on the event generator. Use this option with caution, as it might disrupt the event structure, although steps are taken to minimize such risks.\n\nIn the future, we might need finer control over which particles to retain. For instance, we could define keys like:\n\n- `HepMC.keepStatus=list-of-status-codes`\n- `HepMC.keepPDGs=list-of-pdg-numbers`\n\n- `HepMC.version` - when reading events from files, this setting is no longer necessary; the code automatically identifies the format version. If executing a child process via `GeneratorFileOrCmd.cmd` and the EG outputs HepMC2 format, this must be set to `2`; otherwise, HepMC3 is assumed.\n\n- `GeneratorFileOrCmd.fileNames=list` - a comma-separated list of HepMC files to be read.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "ed548b3f6868ad52b703c822b3b008e4d9e5d4244f8ca8c950653f75b5b3e176": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `GeneratorFileOrCmd.fileNames=list` a comma-separated list of HepMC files to read.\n\n- `GeneratorFileOrCmd.cmd=command line` a command line to run as a background child process. When set (not empty), `GeneratorFileOrCmd.fileNames` is disregarded.\n\n- Several keys to define the command line option switch that the child program uses for specific purposes. If any of these are left as an empty string, the corresponding switch and option value are not transmitted to the child program.\n\n  - `GeneratorFileOrCmd.outputSwitch=switch` (default `>`) to define the output file. The default `>` implies that the program outputs HepMC events exclusively to standard output.\n\n  - `GeneratorFileOrCmd.seedSwitch=switch` (default `-s`) to set the random number generator seed. The value provided is chosen based on the `o2-sim` option `--seed`.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "e3e28049dae9aeac20765d201827473b344ab8cacfc8977b05329b2e05d3d821": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- `GeneratorFileOrCmd.bMaxSwitch=switch` (default `-b`) to set\n  the maximum value for the impact parameters sampled. The value\n  provided is chosen by the `o2-sim` option `--bMax`\n\n- `GeneratorFileOrCmd.nEventsSwitch=switch` (default `-n`) to\n  define the number of events to be generated. The specified value\n  is selected by the `o2-sim` option `--nEvents` or (`-n`)\n\n- `GeneratorFileOrCmd.backgroundSwitch=switch` (default `&`) to\n  indicate how the program runs in the background. Usually, this\n  should be `&`, but a program might fork to the background on its own.\n\n- Some options are no longer recommended\n\n  - `HepMC.fileName` - use `GeneratorFileOrCmd.fileNames`\n\nThe command line configuration is now\n\n> _commandLine_ _nEventsSwitch_ _nEvents_ _seedSwitch_ _seed_\n> _bMaxSwitch_ _bMax_ _outputSwitch_ _output_ _backgroundSwitch_",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "15d8e4d7f87b2dffd00d967841c5b31889f54c66764550df53a57ffcbab0f89a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If any `Switch` key is left blank, the corresponding option is not included in the command line. For instance, if _bMaxSwitch_ is blank, the build command line will be\n\n> _commandLine_ _nEventsSwitch_ _nEvents_ _seedSwitch_ _seed_\n> _outputSwitch_ _output_ _backgroundSwitch_",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/README.md"
        }
    ],
    "96fb424d71faf116529fa13c3fff6cf41e9a1ae494d81adb977d11c645541d97": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This is a straightforward simulation example demonstrating the process of running event simulation with the Pythia8 event generator in heavy-ion mode, along with the implementation of an external custom trigger.\nThis external trigger utilizes the `DeepTrigger` feature, enabling users to access the internal workings of the event generator to tailor the trigger logic.\nIn this example, the trigger selection utilizes the impact parameter of the currently generated Pythia8 heavy-ion event.\nThe criteria for accepting the impact parameters are set within a min-max range, which can be adjusted via command-line arguments.\n\nThe configuration and setup of the external `DeepTrigger` are handled by the function `trigger_impactb_pythia8(double bMin = 0., double bMax = 20.)`, which is defined in the macro `trigger_impactb_pythia8.macro`.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Trigger_ImpactB_Pythia8/README.md"
        }
    ],
    "e728ac2f71686f4e549f9bca41f349d6bf8fd3c7f4239f5a47d20e75651ea31b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The macro file and function names are defined using the `--configKeyValues` options `TriggerExternal.fileName` and `TriggerExternal.funcName`, respectively.\n\n# WARNING\nUtilizing a trigger is not always the most efficient approach for event generation.\nIt is generally recommended to find a method to bias the event generation process to save CPU time.\nIn certain cases, selecting a particular impact-parameter range in Pythia8 can result in significant time spent during event generation rather than in the simulation.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Trigger_ImpactB_Pythia8/README.md"
        }
    ],
    "b1f0d7678dee5e1132456fe6576487d80cb10d887e86c118d6a4bf2840431f0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesHybrid Example Hybrid_parallel\n/doxy -->\n\nIllustrating the setup of the Hybrid generator with multiple instances of the same generator to enhance event generation efficiency (for a single timeframe).\n\n- **run_parallel.sh** primary example shell script\n- **hybridconfig_parallel.json** &rarr; example JSON file for configuring the hybrid generator",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_parallel/README.md"
        }
    ],
    "5e4ba20ea46098a5e2443814e41bca5f2a186483ebe56b97672bb7aebf651f5d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesHybrid Example Hybrid_cocktail\n/doxy -->\n\nThis example illustrates the use of the Hybrid generator with cocktails. The JSON file demonstrates how cocktails can be organized into groups. Each generator will be activated exactly once per cocktail event generation.\nThe fundamental Hybrid Generator methods are showcased in the Hybrid and Hybrid_parallel example folders. Currently, the cocktail setup cannot be configured via the template script.\n\n# File Description\n\n- **runo2sim.sh** &rarr; enables the Hybrid generator example usage\n- **hybridcocktail.json** &rarr; an example JSON file for configuring the Hybrid generator with cocktails",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_cocktail/README.md"
        }
    ],
    "33f4fec5a238913fb1c6aa2f26f412c0377f44f14d2a34d9458485c6cd2858ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refrunSimExamplesStepMonitoringSimple1  Example StepMonitoring Simple1\n/doxy -->\n\nA straightforward example demonstrating the use of MCStepLogger in the simulation process.\nIn this case, the steplogger gathers fundamental details on the number of steps and field calls executed for each geometry logical volume.\n\nThe collected data is displayed on the screen upon the completion of the simulation.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/StepMonitoring/Simple1/README.md"
        }
    ],
    "d3671cd64e57133bc1ce0a72a1fe36311b126f58961171cb67a9711871958d58": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document provides a straightforward simulation example to illustrate:\n#\n\n# a) how to initiate the STARlight event generator for producing HepMC files\n# b) how to integrate these HepMC files into an O2Physics Analysis task (a generator-only analysis)\n\nSTARLIGHT_ROOT=$(starlight-config)\nif [ ! \"${STARLIGHT_ROOT}\" ]; then\n    echo \"STARLIGHT must be loaded; alienv enter ...\"\n    exit 1\nfi\n\n# PART a)\n# ./run-starlight.sh\nset -x\n# PART b) ... apply vertex smearing to the HepMC events and conduct a basic analysis\nNEV=$(grep EVENT slight.out | wc -l)\n\no2-sim-dpl-eventgen -b --nevents ${NEV} --generator hepmc --confKeyValues \\\n                    \"GeneratorFileOrCmd.fileNames=starlight.hepmc;Diamond.position[2]=0.1;Diamond.width[2]=0.05\" |\\\n                    o2-sim-mctracks-to-aod -b | o2-analysis-mctracks-to-aod-simple-task -b",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_STARlight/run_HepMCToAOD.sh"
        }
    ],
    "295f1add681bcde13b18211a96623487347fb137c54780e9bfaf00fd9cca766a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\necho \" --- run-starlight.sh ---\"\n\nset -x\n\n# prepare the environment\n#VERSION=latest\n#eval $(alienv printenv -q STARlight/$VERSION)\n#STARLIGHT_ROOT=$(starlight-config)\n\n# populate the working directory\ncp $STARLIGHT_ROOT/config/slight.in .\ncp $STARLIGHT_ROOT/HepMC/*.awk .\n\n# execute STARlight\nstarlight slight.in | tee slight.log\ncat slight.log slight.out | \\\n    awk -f pdgMass.awk -f starlight2hepmc.awk > starlight.hepmc",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_STARlight/run-starlight.sh"
        }
    ],
    "2b274e3ffef211e6c6fa392992bf532ca2cb1fde0c2fb4c5fe0572a408bb411c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document provides a basic example of the ALICE O2 simulation, demonstrating the following:\n#\n\n# a) how to initiate the STARlight event generator\n# b) how to execute the simulation by reading data from a HepMC file\n\nset -x\nSTARLIGHT_ROOT=$(starlight-config)\nif [ ! \"${STARLIGHT_ROOT}\" ]; then\n    echo \"STARLIGHT needs to be loaded; please run alienv enter ...\"\n    exit 1\nfi\n\nexport STARLIGHT_ROOT\n# PART a)\n./run-starlight.sh\n\n# PART b)\nNEV=$(grep EVENT slight.out | wc -l)\no2-sim -j 20 -n ${NEV} -g hepmc -m PIPE ITS -o sim \\\n       --configKeyValues \"GeneratorFileOrCmd.fileNames=starlight.hepmc;Diamond.position[2]=0.1;Diamond.width[2]=0.05\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_STARlight/run.sh"
        }
    ],
    "a4c780adaedabc5b0f136332286fa2d58fdb073d822e5d1640ff64ca3474e67e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nset -x\n\nNEVENTS=100\nRATELIMIT=1\n\n# start the generator process to create 100 min bias Pythia8 events, without Geant4 and geometry\no2-sim -j 1 -g pythia8pp -n ${NEVENTS} --noDiscOutput --forwardKine --noGeant &> sim.log &\nSIMPROC=$!\n\n# start the DPL process with the appropriate proxy configuration\n# (Note that the --o2sim-pid option is not strictly necessary if only one o2-sim process is running;\n#  the socket will then be automatically determined.)\no2-sim-mctracks-proxy -b --enable-test-consumer --nevents ${NEVENTS} --o2sim-pid ${SIMPROC} --timeframes-rate-limit ${RATELIMIT} --aggregate-timeframe 1 &\nTRACKANAPROC=$!\n\nwait ${SIMPROC}\nwait ${TRACKANAPROC}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/MCTrackToDPL/run.sh"
        }
    ],
    "537c78c1464eed69e88e01c75102d688c888f1cda8ba36f17a21783b0f4615ab": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n# Script based on CRMC example\n# For EPOS4 option files, ensure ihepmc is set to 2 to output HepMC data to stdout. The -hepstd flag is essential to avoid printing unnecessary information (a z-*optns*.mtr file will be generated).\n\noptns=\"example\"\nseed=1\nEPOS4=\"\"\n\nif [ -z \"$EPO4VSN\" ]; then\n    # Error: EPO4VSN environment variable is not set\n    exit 1\nfi\n\nif [ \"$EPO4VSN\" = \"4.0.0\" ]; then\n    EPOS4=\"$EPOS4_ROOT/epos4/scripts/epos\"\nelse\n    EPOS4=\"$EPOS4_ROOT/bin/epos\"\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -i|--input)   optns=$2 ; shift ;;\n        -s|--seed)    seed=$2 ; shift ;;\n        -h|--help) usage; exit 0 ;;\n    esac\n    shift\ndone\n\nif [ ! -f $optns.optns ]; then\n    echo \"Error: Options file $optns.optns not found\"\n    exit 2\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/epos.sh"
        }
    ],
    "d1551e19a57c76d6e25e74b3137bbdae6123c2b73187a4eb54d94dc6c9ad047b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ ! -f $optns.optns ]; then\n    echo \"Error: The options file $optns.optns was not found\"\n    exit 2\nfi\n\nif grep -Fq \"set ihq 1\" $optns.optns; then\n    if [ -z \"$EPO4HQVSN\" ]; then\n        # Error: The EPOS4HQ version could not be found\n        exit 3\n    else\n        # Running with EPOS4HQ\n        EPOS4=\"$EPO4HQ/bin/eposhq\"\n    fi\nfi\n\nif [ $seed -eq 0 ]; then\n    # Seed cannot be 0, a random number will be used instead\n    seed=\"$RANDOM\"\nfi\n\n# The OR filter processes the stdout, extracting only the useful HepMC data\n$EPOS4 -hepstd -s $seed $optns | sed -n 's/^\\(HepMC::\\|[EAUWVP] \\)/\\1/p'",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/epos.sh"
        }
    ],
    "2849b691a28aa726fd29cd173e0c810fc9e28c852b4e16d0f4f674fead50c32b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# This is a straightforward example illustrating how to automatically initiate EPOS4 generation via command line with HEPMC output on FIFO, while concurrently employing o2-sim for the transport phase.\n\n# This script is compatible with O2sim versions starting from September 20, 2024.\n\n# Both EPOS4 and O2 must be installed\nset -x\nif [ -z \"${EPOS4_ROOT}\" ]; then\n    echo \"This requires EPOS4 to be loaded; please use alienv enter...\"\n    exit 1\nfi\n\nif [ -z \"${O2_ROOT}\" ]; then\n    echo \"Error: O2 must be loaded\"\n    exit 2\nfi\n\ncmd=\"$PWD/epos.sh\"\nNEV=-1\nmore=\"\"\noptns=\"example\"\neCM=-1\nJOBS=2\nHEPMC=\"\"\nHQ=false\n\nif [ -z \"$EPO4VSN\" ]; then\n    echo \"Error: EPOS4 version not specified\"\n    exit 7\nfi\nif [ \"$EPO4VSN\" == \"4.0.0\" ]; then\n    HEPMC=\";HepMC.version=2\"\nelse\n    HEPMC=\";HepMC.version=3\"\nfi\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n    EOF\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpl.sh"
        }
    ],
    "150ef5cbcdc30e20ad6510b0a4b6f02e284ab9d7e7350669d2d22f49df750698": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    usage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -m,--more    CONFIG      Additional configurations ($more)\n  -n,--nevents EVENTS      Number of events to simulate ($nev)\n  -i,--input   INPUT       Options file for EPOS4 ($optns)\n  -j,--jobs    JOBS        Number of jobs to run ($JOBS)\n  -e,--ecm     ENERGY      Center-of-Mass energy\n  -h,--help                Display these instructions\n  -hq          HQ          Enable EPOS4HQ\n  --                       Remaining command line arguments passed to o2-sim\n\nCOMMAND must be enclosed in quotes if it includes spaces or special\ncharacters\n\nBelow is the help output from o2-sim-dpl-eventgen\n\nEOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Using default settings\"\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpl.sh"
        }
    ],
    "cb8bd4870050846a680d495bca9959ad15dbb95ea389d54085c787acbadfc747": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    EOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Operating with default settings\"\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -m|--more)    more=\"$2\" ; shift ;;\n        -n|--nevents) NEV=$2 ; shift ;;\n        -i|--input)   optns=$2 ; shift ;;\n        -j|--jobs)    JOBS=$2 ; shift ;;\n        -e|--ecm)     eCM=$2 ; shift ;;\n        -hq)          HQ=true ; shift ;;\n        -h|--help) usage; o2-sim-dpl-eventgen --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >/dev/stderr\n           exit 3\n           ;;\n    esac\n    shift\ndone\n\necho \"Options file: $optns\"\n\nif [ ! -f $optns.optns ]; then\n    echo \"Error: Options file $optns.optns does not exist\"\n    exit 4\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpl.sh"
        }
    ],
    "b46b65c9b82532e86643ecf647462f9da8ca558535ac27678e4833d5f4ececb4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    if [ ! -f $optns.optns ]; then\n    echo \"Error: Options file $optns.optns not found\"\n    exit 4\nfi\n\n# Determine the number of events from the optns file\nif [ ! $NEV -eq -1 ]; then\n    echo \"Setting number of events to $NEV\"\n    if grep -Fq \"nfull\" $optns.optns; then\n        sed -i \"/nfull/c\\set nfull $NEV\" $optns.optns\n    else\n        echo \"set nfull $NEV\" >> $optns.optns\n    fi\nelse\n    echo \"Number of events not specified, checking optns file...\"\n    if grep -Fq \"nfull\" $optns.optns; then\n        NEV=$(grep -F \"nfull\" $optns.optns | awk '{print $3}')\n        echo \"Number of events set to $NEV\"\n    else\n        echo \"Error: Number of events not set in EPOS4\"\n        exit 5\n    fi\nfi\n\n# Configure the center of mass energy",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpl.sh"
        }
    ],
    "587be14a5104245bbf09978486a5e2134cdd66ddfd7c4fd533bfd4bf4eaca632": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configure eCM\n\nif [ ! $eCM -eq -1 ]; then\n    echo \"Configuring eCM to $eCM\"\n    if grep -Fq \"ecms\" $optns.optns; then\n        sed -i \"/ecms/c\\set ecms $eCM\" $optns.optns\n    else\n        echo \"set ecms $eCM\" >> $optns.optns\n    fi\nelse\n    echo \"Energy not configured, examining optns file...\"\n    if grep -Fq \"ecms\" $optns.optns; then\n        eCM=$(grep -F \"ecms\" $optns.optns | awk '{print $3}')\n        echo \"Energy configured to $eCM\"\n    else\n        echo \"Error: eCM not set in EPOS4\"\n        exit 6\n    fi\nfi\n\n# Configure HQ mode",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpl.sh"
        }
    ],
    "4f102ee719d8dc5ce395f4f4623dcab9aedcba6627f8d9a8878d5352c3cf8112": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Configure High-Quality Mode\n\nif [ \"$HQ\" = true ]; then\n    echo \"Enabling High-Quality Mode\"\n    if grep -Fq \"ihq\" $optns.optns; then\n        sed -i \"/ihq/c\\set ihq 1\" $optns.optns\n    else\n        echo \"set ihq 1\" >> $optns.optns\n    fi\n    if [ -z \"$EPO4HQVSN\" ]; then\n        echo \"Error: High-Quality EPOS4 version not found\"\n        exit 7\n    else\n        HEPMC=\";HepMC.version=3\"\n    fi\nelse\n    echo \"Disabling High-Quality Mode\"\n    if grep -Fq \"ihq\" $optns.optns; then\n        sed -i \"/ihq/c\\set ihq 0\" $optns.optns\n    else\n        echo \"set ihq 0\" >> $optns.optns\n    fi\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpl.sh"
        }
    ],
    "4789c58b87ee8d2d37bfa43a7ae6ed71ee8800720ae4f5c040cf9dec5167157a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Starting simulation => the seed is provided automatically to epos using the --seed flag, with HepMC.version set to 2 being essential for version 4.0.0 to function properly. Otherwise, the simulation will not work.\n# The seed is set to Random by the epos.sh script, as the --seed option with o2-sim-dpl-eventgen does not pass the number to GeneratorHepMC.\no2-sim-dpl-eventgen -b --nEvents ${NEV} --generator hepmc --configKeyValues \"GeneratorFileOrCmd.cmd=$cmd -i $optns;GeneratorFileOrCmd.bMaxSwitch=none$HEPMC;${more}\" |\\\n                    o2-sim-mctracks-to-aod -b | o2-analysis-mctracks-to-aod-simple-task -b",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpl.sh"
        }
    ],
    "6a29df8bba35a16e52b420ab9e5e733855887925ce08fff28608963d0b57139d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    #!/usr/bin/env bash\n#\n# This is a simple simulation example demonstrating how to\n# initiate EPOS4 generation automatically via command line with HEPMC output on FIFO\n# while concurrently using o2-sim for transport.\n\n# This script is compatible with O2sim versions starting from September 20, 2024.\n\n# Both EPOS4 and O2 need to be loaded\nset -x\nif [ -z \"${EPOS4_ROOT}\" ]; then\n    echo \"This requires EPOS4 to be loaded; please use alienv enter ...\"\n    exit 1\nfi\n\nif [ -z \"${O2_ROOT}\" ]; then\n    echo \"Error: O2 needs to be loaded\"\n    exit 2\nfi\n\ncmd=\"$PWD/epos.sh\"\nNEV=-1\nmore=\"\"\noptns=\"example\"\neCM=-1\nJOBS=2\nHEPMC=\"\"\nHQ=false\n\nif [ -z \"$EPO4VSN\" ]; then\n    echo \"Error: EPOS4 version not found\"\n    exit 7\nfi\nif [ \"$EPO4VSN\" == \"4.0.0\" ]; then\n    HEPMC=\";HepMC.version=2\"\nelse\n    HEPMC=\";HepMC.version=3\"\nfi\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/runo2sim.sh"
        }
    ],
    "7ad266eb17be9a448a66dd6bf421c773918aa36d7b9e5e00cd3e21687c162671": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    usage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -m,--more    CONFIG      Additional configurations ($more)\n  -n,--nevents EVENTS      Number of events to simulate ($nev)\n  -i,--input   INPUT       Configuration file for EPOS4 ($optns)\n  -j,--jobs    JOBS        Number of jobs to run ($JOBS)\n  -e,--ecm     ENERGY      Center-of-Mass energy\n  -h,--help                Display these instructions\n  -hq          HQ          Activate EPOS4HQ\n  --                       Remaining command-line arguments passed to o2-sim\n\nThe command must be enclosed in quotes if it includes spaces or special\ncharacters.\n\nBelow is the help output from o2-sim\n\nEOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Using default values\"\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/runo2sim.sh"
        }
    ],
    "5dbe9270dd61433d2687e505cde370f1a550945d2d0b9f0bb66806999d81b644": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    EOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Using default settings\"\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -m|--more)    more=\"$2\" ; shift ;;\n        -n|--nevents) NEV=$2 ; shift ;;\n        -i|--input)   optns=$2 ; shift ;;\n        -j|--jobs)    JOBS=$2 ; shift ;;\n        -e|--ecm)     eCM=$2 ; shift ;;\n        -hq)          HQ=true ; shift ;;\n        -h|--help)    usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unrecognized option '$1', please use '--'.\" >/dev/stderr\n           exit 3\n           ;;\n    esac\n    shift\ndone\n\necho \"Options file: $optns\"\n\nif [ ! -f $optns.optns ]; then\n    echo \"Error: Required options file $optns.optns does not exist\"\n    exit 4\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/runo2sim.sh"
        }
    ],
    "5ce9b18a9f967640952e543342a7f28e0362e2fe4b05ba44b829ca4ea4cfb0a2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ ! -f $optns.optns ]; then\n    echo \"Error: Options file $optns.optns not found\"\n    exit 4\nfi\n\n# Define number of events from the optns file\nif [ ! $NEV -eq -1 ]; then\n    echo \"Setting number of events to $NEV\"\n    if grep -Fq \"nfull\" $optns.optns; then\n        sed -i \"/nfull/c\\set nfull $NEV\" $optns.optns\n    else\n        echo \"set nfull $NEV\" >> $optns.optns\n    fi\nelse\n    echo \"Number of events not set, checking optns file...\"\n    if grep -Fq \"nfull\" $optns.optns; then\n        NEV=$(grep -F \"nfull\" $optns.optns | awk '{print $3}')\n        echo \"Number of events set to $NEV\"\n    else\n        echo \"Error: Number of events not set in EPOS4\"\n        exit 5\n    fi\nfi\n\n# Define center of mass energy",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/runo2sim.sh"
        }
    ],
    "d6ffca7a42a94f73251d46befda54c6ef56eae2db5a2c3e84a028fc512b64cde": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\nif [ ! $eCM -eq -1 ]; then\n    echo \"Setting eCM to $eCM\"\n    if grep -Fq \"ecms\" $optns.optns; then\n        sed -i \"/ecms/c\\set ecms $eCM\" $optns.optns\n    else\n        echo \"set ecms $eCM\" >> $optns.optns\n    fi\nelse\n    echo \"Energy not specified, examining optns file...\"\n    if grep -Fq \"ecms\" $optns.optns; then\n        eCM=$(grep -F \"ecms\" $optns.optns | awk '{print $3}')\n        echo \"Energy configured as $eCM\"\n    else\n        echo \"Error: eCM not defined in EPOS4\"\n        exit 6\n    fi\nfi\n\n# Configure HQ mode",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/runo2sim.sh"
        }
    ],
    "3d3e5172e4fd17d5b3deb476de4018c9f024c8d777f9e48be49d194b00af9ed7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Activate HQ mode\n\nif [ \"$HQ\" = true ]; then\n    echo \"Activating HQ mode\"\n    if grep -Fq \"ihq\" $optns.optns; then\n        sed -i \"/ihq/c\\set ihq 1\" $optns.optns\n    else\n        echo \"set ihq 1\" >> $optns.optns\n    fi\n    if [ -z \"$EPO4HQVSN\" ]; then\n        echo \"Error: EPOS4HQ version not found\"\n        exit 7\n    else\n        HEPMC=\";HepMC.version=3\"\n    fi\nelse\n    echo \"Disabling HQ mode\"\n    if grep -Fq \"ihq\" $optns.optns; then\n        sed -i \"/ihq/c\\set ihq 0\" $optns.optns\n    else\n        echo \"set ihq 0\" >> $optns.optns\n    fi\nfi\n\n# Initiate simulation => a seed is automatically provided to epos via the --seed flag. HepMC.version must be set to 2 for version 4.0.0; otherwise, the simulation will fail.\no2-sim -j $JOBS -n ${NEV} -g hepmc --seed $RANDOM  \\\n       --configKeyValues \"GeneratorFileOrCmd.cmd=$cmd -i $optns;GeneratorFileOrCmd.bMaxSwitch=none$HEPMC;${more}\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/runo2sim.sh"
        }
    ],
    "9855d943e41204e9ec66c0b2fff14973aceac02f458b8d77422893deb7f47db0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# This script demonstrates the process of initiating the DPG simulation framework, which automatically invokes EPOS4 and utilizes FIFOs produced internally by GeneratorHepMC.\n\n# This script is compatible with O2sim versions starting from September 20, 2024.\n\nset -x\nif [ -z \"${EPOS4_ROOT}\" ]; then\n    echo \"EPOS4 is required; please load it with alienv enter...\"\n    exit 1\nfi\n\n# Ensure O2DPG and O2 are loaded\nif [ -z \"${O2DPG_ROOT}\" ]; then\n    echo \"Error: O2DPG needs to be loaded\"\n    exit 1\nfi\nif [ -z \"${O2_ROOT}\" ]; then\n    echo \"Error: O2 needs to be loaded\"\n    exit 1\nfi\n\n\ncmd=\"$PWD/epos.sh\"\nNEV=-1\nmore=\"\"\noptns=\"example\"\nTF=1\neCM=-1\nJOBS=2\nHEPMC=\"\"\nHQ=false\n\nif [ -z \"$EPO4VSN\" ]; then\n    echo \"Error: EPOS4 version is not defined\"\n    exit 7\nfi\nif [ \"$EPO4VSN\" == \"4.0.0\" ]; then\n    HEPMC=\";HepMC.version=2\"\nelse\n    HEPMC=\";HepMC.version=3\"\nfi\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n    PARAPHRASED DOCUMENT:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpg.sh"
        }
    ],
    "0d99f385e70fdee1cc07694abbece5159e1229814c23dba751426f0aab4f7474": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "usage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -m,--more    CONFIG      More configurations ($more)\n  -n,--nevents EVENTS      Number of events ($nev)\n  -i,--input   INPUT       Options file fed to EPOS4 ($optns)\n  -j,--jobs    JOBS        Number of jobs ($JOBS)\n  -h,--help                Display help instructions\n  -e,--ecm     ENERGY      Center-of-Mass energy\n  -t,--tf      TF          Timeframes ($TF)\n  -hq          HQ          Enable EPOS4HQ\n  --                       Remaining command-line arguments passed to o2-sim\n\nCOMMAND must be quoted if it contains spaces or other special\ncharacters\n\nBelow follows the help output of o2dpg_sim_workflow\n\nEOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Running with default values\"\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpg.sh"
        }
    ],
    "1e754c86f22144c22ccbeaa8b9fe555a99cefdf5c8fa4f090515bb5bb24ac4f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    EOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Using default settings\"\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -m|--more)    more=\"$2\" ; shift ;;\n        -n|--nevents) NEV=$2 ; shift ;;\n        -i|--input)   optns=$2 ; shift ;;\n        -j|--jobs)    JOBS=$2 ; shift ;;\n        -e|--ecm)     eCM=$2 ; shift ;;\n        -hq)          HQ=true ; shift ;;\n        -h|--help) usage; ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py --help  ; exit 0 ;;\n        -t|--tf)     TF=$2 ; shift ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >/dev/stderr\n           exit 3\n           ;;\n    esac\n    shift\ndone\n\necho \"Options file: $optns\"\n\nif [ ! -f $optns.optns ]; then\n    echo \"Error: Options file $optns.optns not found\"\n    exit 4\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpg.sh"
        }
    ],
    "a1c9d084961c87530c40630435bbe102b854b1e23b83f3f8ba22689af16e9c3a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ ! -f $optns.optns ]; then\n    echo \"Error: Options file $optns.optns not found\"\n    exit 4\nfi\n\n# Determine the number of events from the optns file\nif [ ! $NEV -eq -1 ]; then\n    echo \"Setting the number of events to $NEV\"\n    if grep -Fq \"nfull\" $optns.optns; then\n        sed -i \"/nfull/c\\set nfull $NEV\" $optns.optns\n    else\n        echo \"set nfull $NEV\" >> $optns.optns\n    fi\nelse\n    echo \"Number of events not specified, checking the optns file...\"\n    if grep -Fq \"nfull\" $optns.optns; then\n        NEV=$(grep -F \"nfull\" $optns.optns | awk '{print $3}')\n        echo \"Number of events set to $NEV\"\n    else\n        echo \"Error: Number of events not set in EPOS4\"\n        exit 5\n    fi\nfi\n\n# Configure the center of mass energy",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpg.sh"
        }
    ],
    "e4ceee4f6118889844ac9d9d166db4931be22974a8e08bd9384ffcfd19e65d18": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Set ECM\n\nif [ ! $eCM -eq -1 ]; then\n    echo \"Configuring ECM to $eCM\"\n    if grep -Fq \"ecms\" $optns.optns; then\n        sed -i \"/ecms/c\\set ecms $eCM\" $optns.optns\n    else\n        echo \"set ecms $eCM\" >> $optns.optns\n    fi\nelse\n    echo \"ECM not specified, reviewing optns file...\"\n    if grep -Fq \"ecms\" $optns.optns; then\n        eCM=$(grep -F \"ecms\" $optns.optns | awk '{print $3}')\n        echo \"ECM set to $eCM\"\n    else\n        echo \"Error: ECM not defined in EPOS4\"\n        exit 6\n    fi\nfi\n\n# Set HQ mode",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpg.sh"
        }
    ],
    "b5c6391990e7042fb67aa717a289f367ada356531db879a222b2447cf806bab4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Activate HQ mode\n\nif [ \"$HQ\" = true ]; then\n    echo \"Activating HQ mode\"\n    if grep -Fq \"ihq\" $optns.optns; then\n        sed -i \"/ihq/c\\set ihq 1\" $optns.optns\n    else\n        echo \"set ihq 1\" >> $optns.optns\n    fi\n    if [ -z \"$EPO4HQVSN\" ]; then\n        echo \"Error: EPOS4HQ version not found\"\n        exit 7\n    else\n        HEPMC=\";HepMC.version=3\"\n    fi\nelse\n    echo \"Disabling HQ mode\"\n    if grep -Fq \"ihq\" $optns.optns; then\n        sed -i \"/ihq/c\\set ihq 0\" $optns.optns\n    else\n        echo \"set ihq 0\" >> $optns.optns\n    fi\nfi\n\n# Copy options file into each timeframe directory\nfor i in $(seq 1 $TF); do\n    if [ ! -d tf$i ]; then\n        mkdir tf$i\n    fi\n    cp $optns.optns tf$i/$optns.optns\ndone\n\n# Generate workflow\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM $eCM -ns $NEV -gen hepmc -tf $TF -j $JOBS -seed $RANDOM \\\n        -interactionRate 500000 -confKey \"GeneratorFileOrCmd.cmd=$cmd -i $optns;GeneratorFileOrCmd.bMaxSwitch=none$HEPMC;${more}\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpg.sh"
        }
    ],
    "aca66a3a8264659c9becef5445cca38c2ac23dad9396060e0ec2cd5447a7bdd1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Execute simulation workflow\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod --stdout-on-failure",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_EPOS4/rundpg.sh"
        }
    ],
    "967f8e55958f7066313841e7128734e02af4b481dbd63ee1104772494ef26188": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document illustrates a simulation scenario where Pythia8 is used with an external generator to add custom data to the event header.\n#\n#\n\nset -x\n\nMODULES=\"PIPE ITS TPC\"\nEVENTS=100\nNWORKERS=8\n\n### Use the external generator to produce some events, which will include custom data in the event header\n\no2-sim -j ${NWORKERS} -n ${EVENTS} -g external -m ${MODULES} \\\n       --configFile sim.ini > log 2>&1\n\n### Utilize ROOT to read the kinematics data and print the custom information that was added by the external generator in the previous step\n\nroot -b -q -l \"read_event_info.macro(\\\"o2sim_Kine.root\\\")\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Custom_EventInfo/run.sh"
        }
    ],
    "14990736c8d57b7779cf66af6a512a45410dab713e2d2a0987264d86973dcc84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\ncmd=\"./myeg.sh\"\nseed=$RANDOM\nnev=1\nout=\nopt=\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -c,--cmdline COMMAND     Command line\n  -s,--seed    SEED        Random number seed ($seed)\n  -n,--nevents EVENTS      Number of events ($nev)\n  -o,--output  OUTPUT      Output prefix ($out)\n  -+,--compile             Compile script ($opt)\n  --                       Remaining command line passed to o2-sim\n\nCOMMAND should be quoted if it includes spaces or other special\ncharacters\n\nBelow follows the help output of o2-sim\n\nEOF\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/child.sh"
        }
    ],
    "4dfc4d52861635a1d28ec174050a236a1456aad231aead240d294b21d2f34fef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Below is the help information for o2-sim\n\nEOF\n}\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -c|--cmdline) cmd=\"$2\" ; shift ;;\n        -s|--seed)    seed=$2 ; shift ;;\n        -n|--nevents) nev=$2 ; shift ;;\n        -o|--output)  out=$2 ; shift ;;\n        -+|--compile) opt=\" -+\";;\n        -h|--help) usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >/dev/stderr\n           exit 1\n           ;;\n    esac\n    shift\ndone\n\nif test \"x$out\" = \"x\" ; then\n    out=`echo $cmd | sed 's,^\\./,,' | tr '[$/. ]' '_'`\nfi\nout=`echo \"$out\" | tr ' ' '_'`\n\nset -x\nexport VMCWORKDIR=${O2_ROOT}/share\no2-sim -g tparticle \\\n       --configKeyValues \"GeneratorFileOrCmd.cmd=$cmd $opt;GeneratorFileOrCmd.outputSwitch=-o\" \\\n       --outPrefix \"$out\" --seed $seed --nEvents $nev $@",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/child.sh"
        }
    ],
    "3f03e7b428ab698980d49c66cd5dfb072aefa34ca62ec6826edd70534abbcb32": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\ninp=particles.root\nseed=$RANDOM\nnev=1\nout=\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -i,--input   FILENAME    Input HepMC file ($inp)\n  -s,--seed    SEED        Random number seed ($seed)\n  -n,--nevents EVENTS      Number of events ($nev)\n  -o,--output  NAME        Output file name\n  --                       Additional parameters passed to o2-sim\n\nThe input file FILENAME is assumed to contain a TTree with a TBranch\nholding a TClonesArray of TParticle objects. Such a file can be\ngenerated using the myeg.sh script in this directory.\n\nBelow follows the help output of o2-sim\n\nEOF\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/read.sh"
        }
    ],
    "1c5eab64cfc15d3e02a98101de445bfd3337b7c73eef0756bf97995f90e38354": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Below is the help information for o2-sim\n\nEOF\n}\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -i|--input)   inp=$2 ; shift ;;\n        -s|--seed)    seed=$2 ; shift ;;\n        -n|--nevents) nev=$2 ; shift ;;\n        -o|--output)  out=$2 ; shift ;;\n        -h|--help) usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >/dev/stderr\n           exit 1\n           ;;\n    esac\n    shift\ndone\n\nif test \"x$out\" = \"x\" ; then\n    out=`basename $inp .root`\nfi\nout=`echo \"$out\" | tr ' ' '_'`\n\nset -e\nexport VMCWORKDIR=${O2_ROOT}/share\no2-sim -g tparticle --configKeyValues \"GeneratorFileOrCmd.fileNames=${inp}\" \\\n  --outPrefix \"$out\" --seed $seed --nEvents $nev $@",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/read.sh"
        }
    ],
    "08651586637a8024120f1ef43254a48d26da1f6cf36725125ed39a960171a07e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/sh\n\n\nnev=1\nout=particles.root\nseed=0\nopt=\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n  -n NUMBER   Number of events\n  -o FILENAME Output file name\n  -s SEED     Random number seed\n  -b FERMI    Maximum impact parameter\n  -+          Run the script in AcLIC mode\nEOF\n}\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -h) usage ; exit 0;;\n        -n) nev=$2 ; shift ;;\n        -o) out=$2 ; shift ;;\n        -s) seed=$2 ; shift ;;\n        -b) imp=$2 ; shift ;;\n        -+) opt=+ ;;\n        *) ;;\n    esac\n    shift\ndone\n\nroot -q -l MyEG.macro${opt} -- $nev \\\"$out\\\" $seed",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/TParticle/myeg.sh"
        }
    ],
    "2d56058bc222bcccb19a450372f8656a7c52427103f41a1deb51952382b2198c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Hybrid generator simulation example:\n# the simulation is configured using a JSON file (hybridconfig.json in this folder), whose\n# template can be generated using the script ${O2DPG_ROOT}/MC/bin/o2_hybrid_gen.py\nset -x\nif [ ! \"${O2DPG_ROOT}\" ]; then\n    echo \"This requires O2DPG to be loaded; use alienv enter ...\"\n    exit 1\nfi\n\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 2\n\nNEV=-1\nmore=\"\"\nJOBS=2\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -m,--more    CONFIG      Additional configurations ($more)\n  -n,--nevents EVENTS      Number of events to simulate ($NEV)\n  -j,--jobs    JOBS        Number of parallel jobs ($JOBS)\n  -h,--help                Display these instructions\n  --                       Further command-line arguments passed to o2-sim\n\nCOMMAND must be quoted if it contains spaces or other special\ncharacters\n\nBelow follows the help output of o2-sim\n\nEOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Running with default settings\"\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid/runo2sim.sh"
        }
    ],
    "c08a3b6a548993de54ffe9344bf237246106ee225c42ca4dbbe4fbc3d1152f80": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    EOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Using default settings\"\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -m|--more)    more=\"$2\" ; shift ;;\n        -n|--nevents) NEV=$2 ; shift ;;\n        -j|--jobs)    JOBS=$2 ; shift ;;\n        -h|--help) usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >/dev/stderr\n           exit 3\n           ;;\n    esac\n    shift\ndone\n\n# Setting the number of events in the options file\nif [ ! $NEV -eq -1 ]; then\n    echo \"Setting the number of events to $NEV\"\nelse\n    echo \"Number of events not specified, defaulting to 10...\"\n    NEV=10\nfi\n\n# Generating 1000 events using STARlight and saving them in a slight.hepmc file\n${O2_ROOT}/examples/HepMC_STARlight/run-starlight.sh\n\n# Generating an event pool with Pythia8 for 10000 events and saving it in evtpool.root\n${O2DPG_ROOT}/MC/run/examples/event_pool.sh --make",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid/runo2sim.sh"
        }
    ],
    "94be0c47fb351c29b32ca64770d54a628339a3cbcf9d4d9f1323e6755600f764": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Initiating simulation with Hybrid generator\n${O2_ROOT}/bin/o2-sim --noGeant -j $JOBS --field ccdb --vertexMode kCCDB --run 300000 --configKeyValues \"MFTBase.buildAlignment=true;GeneratorHybrid.configFile=$PWD/hybridconfig.json;GeneratorHybrid.randomize=false;${more}\" -g hybrid -o genevents --timestamp 1546300800000 --seed 836302859 -n $NEV",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid/runo2sim.sh"
        }
    ],
    "5ba9d41b4272bc95ac92ea5ffaa9779dd99f60d51dc085a1d49f9aa0bf6a7476": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document presents an example of a simulation that illustrates running the simulation and selectively transporting particles\n# through the detector geometry based on specified settings.\n#\n# The simulation employs the Pythia8 pp generator with default configurations. The simulation's specific settings are outlined in the sim.ini file.\n#\n# Only the parameters for the selective particle transport are modified, specifically:\n# ```\n# [Stack]\n# transportPrimary=external\n# transportPrimaryFileName=transportPDG.macro\n# transportPrimaryFuncName=transportPDG(321)\n# transportPrimaryInvert=false\n# ```\n#\n# `transportPrimary` specifies the selection mode, where `external` indicates that the selection is defined by a plugin macro, \n# loaded via the function call `transportPrimaryFuncName` from the file `transportPrimaryFileName`. The `transportPrimaryInvert` \n# flag can be toggled to invert the selection, thereby preventing the transport of chosen particles.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Selective_Transport_pi0/run.sh"
        }
    ],
    "71fb16cb34b6c9a1ec31f5bdfa82b871ca83e3724a57179b3737eae21cde8ade": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n#\n# In the second part of these simulation examples, we demonstrate how to proceed with the simulation from the initial step and allow the propagation of all remaining tracks. This process is confined to events that meet a particular trigger condition, namely, both photons from the pi0 decay must have converted within a specified region.\n#",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Selective_Transport_pi0/run.sh"
        }
    ],
    "5417f6c6b64ceee3d22fcfaf9074776a911d35b7fd6c8bdd95373efc55aff09b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "set -x\n\nMODULES=\"PIPE ITS TPC\"\nNEVENTS1=100\nNEVENTS2=1\nNWORKERS=1\n\n### step 1\n\no2-sim -j ${NWORKERS} -n ${NEVENTS1} -g pythia8pp -m ${MODULES} -o step1 \\\n       --configFile sim_step1.ini --seed 73141128\n\n### step 2\n\no2-sim -j ${NWORKERS} -n ${NEVENTS2} -g extkinO2 -m ${MODULES} -o step2 \\\n       --externalKinFile step1_Kine.root \\\n       --configFile sim_step2.ini \\\n       --trigger external",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Selective_Transport_pi0/run.sh"
        }
    ],
    "b2f87786f6b2fd6535bf0735d0c10cd7232d81ea0400e575cdfde84b1a189e6e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document illustrates how to:\n#\n\n# a) execute a basic background event simulation with customized parameters\n# b) configure and run an event generator that creates signal events, embedding them based on the background event's impact parameter\n\nset -x\n\n# PART a)\nNBGR=5\no2-sim -j 20 -n ${NBGR} -g pythia8hi -m PIPE ITS -o bkg --configKeyValues \\\n       \"Diamond.position[2]=0.1;Diamond.width[2]=0.05\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Signal_ImpactB/run.sh"
        }
    ],
    "0b4aee96dd807e286da0a67b76a7378df584f51c371c4113eea6ffd481d73a67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# PART b)\n# generate signal events based on the configuration specified in the file 'signal_impactb.macro'.\n# the external event generator is notified of the simulation embedding status and uses the header of the background event to determine subsequent actions, specifically utilizing the impact parameter from the background event to calculate the number of signal particles.\nNSGN=10\no2-sim -j 20 -n ${NSGN} -m PIPE ITS \\\n       -g external --configKeyValues 'GeneratorExternal.fileName=signal_impactb.macro;GeneratorExternal.funcName=signal_impactb(333, \"20. / (x + 1.)\")' \\\n       --embedIntoFile bkg_Kine.root -o sgn > logsgn 2>&1",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Signal_ImpactB/run.sh"
        }
    ],
    "b8742bd4322a6b695cd7ba11cb14e98478ba907ad110f10a24a9e667872fcdf9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n#",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/ForceDecay_Lambda_Neutron_Dalitz/run.sh"
        }
    ],
    "c2fb7037df48404d8de24c55145b70d3d65e1b9e8317aa2eca93c9200b859b0e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This example demonstrates forcing a specific particle decay chain within the ALICE O2 simulation.\n# We'll use a Box generator to inject Lambda0 particles into the simulation.\n#\n# Our goal is to force the decay chain of the Lambda0 particle:\n# Lambda0 --> n pi0 --> n e+ e- gamma.\n#\n# Since both the Lambda0 and the pi0 are decayed by default using Geant, we need to enable the external decayer for these particles.\n# This can be achieved by setting:\n# --configKeyValues 'SimUserDecay.pdg=3122 111'.\n#\n# Additionally, we need to configure the external decayer to enforce the decay channels we desire.\n# The default configuration for the external decayer is loaded from:\n# ${O2_ROOT}/share/Generators/pythia8/decays/base.cfg\n# and is assigned to slot #0 of the configuration parameter 'DecayerPythia8.config'.\n#\n# To accomplish this, we will add extra settings from the `decay_lambda_neutron_dalitz.cfg` file on top of the default configuration.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/ForceDecay_Lambda_Neutron_Dalitz/run.sh"
        }
    ],
    "70e1d5c05e46a8ca5f04a8189068c2366042d8ed0bf69fe67dc43c0a9cbc369f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# This can be achieved using\n# --configKeyValues 'DecayerPythia8.config[1]=decay_lambda_neutron_dalitz.cfg'\n#",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/ForceDecay_Lambda_Neutron_Dalitz/run.sh"
        }
    ],
    "e491f30d826a98f69b212121f92f37bf354ec8908449b8e59dee4b88ff1063fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "SET -x\n\nNEV=10\no2-sim -j 20 -n ${NEV} -g boxgen -m PIPE ITS TPC --configKeyValues 'BoxGun.pdg=3122;BoxGun.number=1;SimUserDecay.pdglist=3122 111;DecayerPythia8.config[1]=decay_lambda_neutron_dalitz.cfg;DecayerPythia8.verbose=true'",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/ForceDecay_Lambda_Neutron_Dalitz/run.sh"
        }
    ],
    "55db1438ab631123af8d42b79c1e7e8131fa948cc0555c2709a0e14f48cd8bde": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document illustrates the following key aspects of the ALICE O2 simulation:\n\n# a) how to execute a basic background event simulation with customized parameters\n# b) how to generate signal events using specific pythia8 settings and user-defined hooks to filter events\n# c) how to perform digitization embedding/overlaying of background and signal hits\n# d) how to retrieve MC kinematics data using MClabels\n# e) how to traverse through MCtracks\n\nset -x\n\n# PART a)\nNBGR=5\no2-sim -j 20 -n ${NBGR} -g pythia8hi -m PIPE ITS TPC -o bkg --configKeyValues \\\n       \"Diamond.position[2]=0.1;Diamond.width[2]=0.05\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Jet_Embedding_Pythia8/run.sh"
        }
    ],
    "cce030906ecb024b45775c826cf0e4efcc853294022039aaee2d65accaefcc2d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# PART b)\n# generate hard jets through a pythia8 configuration found in the file 'pythia8_hard.cfg'; event selection is managed by a user hook detailed in 'pythia8_userhooks_jets.macro', and the vertex setting is identical to that of background events (via --embedInto)\nNSGN=10\no2-sim -j 20 -n ${NSGN} -g pythia8pp -m PIPE ITS TPC --configKeyValues \"GeneratorPythia8.config=pythia8_hard.cfg;GeneratorPythia8.hooksFileName=pythia8_userhooks_jets.macro\" --embedIntoFile bkg_Kine.root -o sgn > logsgn 2>&1\n\n# PART c)\n# perform digitization by summing signal over background events\no2-sim-digitizer-workflow --sims bkg,sgn --tpc-lanes 4 -b --run\n\n# PART d)\n# Basic analysis: read ITS digits and examine properties of both digit and MC tracks that produce a digit\nroot -q -b -l 'exampleMCTrackAnalysis.macro(\"itsdigits.root\")'",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Jet_Embedding_Pythia8/run.sh"
        }
    ],
    "0061860a6bab5b1bdd1c36c4f262d753c4ef3e8f8e47c9cfa9fccb2da8bb73dd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n#\n# Script for generating Pythia8 events and saving these events in HepMC3 files, alongside producing the conventional MCTrack kinematics data.\n#\n# The script also runs a second event generation process based on the HepMC3 files produced initially. Ideally, both processes should produce the same kinematics data.\n#\n\nNEVENTS=1000\nSEED=11\n\no2-sim -j 1 -g external --configKeyValues 'GeneratorExternal.fileName=Pythia8HepMC3.macro;GeneratorExternal.funcName=hepmc_pythia8(\"skimmed.hepmc\");GeneratorPythia8.config=${O2_ROOT}/share/Generators/egconfig/pythia8_inel.cfg' --seed ${SEED} --noGeant -o pythia8_skimmed -n ${NEVENTS}\no2-sim -j 1 -g external --configKeyValues 'GeneratorExternal.fileName=Pythia8HepMC3.macro;GeneratorExternal.funcName=hepmc_pythia8(\"unskimmed.hepmc\");GeneratorPythia8.config=${O2_ROOT}/share/Generators/egconfig/pythia8_inel.cfg;GeneratorPythia8.includePartonEvent=true' --seed ${SEED} --noGeant -o pythia8_unskimmed -n ${NEVENTS}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8_HepMC_Wrapper/run.sh"
        }
    ],
    "eec99cdb55969ea63e743b61c79b9b35ddea151ab3599d833122214c3f8d2033": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# propagate the generated hepmc file; it should yield the same kinematics as the original Pythia8\no2-sim -j 1 -g hepmc --configKeyValues=\"GeneratorFileOrCmd.fileNames=skimmed.hepmc\" --vertexMode kNoVertex --noGeant -o fromhepmc_skimmed -n ${NEVENTS} --seed ${SEED}\no2-sim -j 1 -g hepmc --configKeyValues=\"GeneratorFileOrCmd.fileNames=unskimmed.hepmc\" --vertexMode kNoVertex --noGeant -o fromhepmc_unskimmed -n ${NEVENTS} --seed ${SEED}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Pythia8_HepMC_Wrapper/run.sh"
        }
    ],
    "918c38af7cb9358118af0b842d88a7097e91f44e53372a638d4a6da344d885f9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Example demonstrating the process of generating a kinematics file in the initial stage and then utilizing it to insert events into the analysis framework in the subsequent stage.\n\nset -x\n\n# Generate events on disc\nNEVENTS=1000\n# Run the generator process (for 10,000 minimum bias Pythia8 events; no Geant; no geometry)\n# o2-sim -j 1 -g pythia8pp -n ${NEVENTS} --noGeant --vertexMode kNoVertex &> sim.log\n\n# Option 1) -- Use o2-mckine-publisher\n[ -f AnalysisResults.root ] && rm AnalysisResults.root\no2-sim-kine-publisher -b --kineFileName o2sim --aggregate-timeframe 10 |\\\no2-sim-mctracks-to-aod -b |\\\no2-analysis-mctracks-to-aod-simple-task -b &> log1\nmv AnalysisResults.root AnalysisResult_1.root",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/McTracksToAOD/run_O2Kine.sh"
        }
    ],
    "7f6f7d40b3dba4f5f19b88e50d14647762f176de88510bdc82be10f1f3fdc02f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Option 2) -- utilize o2-sim-dpl-eventgen with extkinO2 generator (this should yield the same result as Option 1)\n[ -f AnalysisResults.root ] && rm AnalysisResults.root\no2-sim-dpl-eventgen -b --nevents ${NEVENTS} --aggregate-timeframe 10 --generator extkinO2 \\\n                    --confKeyValues \"GeneratorFromO2Kine.fileName=o2sim_Kine.root\" --vertexMode kNoVertex |\\\no2-sim-mctracks-to-aod -b |\\\no2-analysis-mctracks-to-aod-simple-task -b &> log2\nmv AnalysisResults.root AnalysisResult_2.root",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/McTracksToAOD/run_O2Kine.sh"
        }
    ],
    "9e6dab633c6cb5c548a98056da6b43b3eeb5b06fd332c240cb8ce3dad4aa2682": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nset -x\n\nNEVENTS=10000\n# start the generator process for 10000 minimum bias Pythia8 events without Geant4 or geometry\no2-sim -j 1 -g pythia8pp -n ${NEVENTS} --noDiscOutput --forwardKine --noGeant &> sim.log &\nSIMPROC=$!\n\n# run a DPL process with the appropriate proxy settings\n# (It is not essential to use --o2sim-pid if only one o2-sim process is active, as the socket will be automatically identified.)\n\n# --aggregate-timeframe 200 merges 200 generated events into a single timeframe for AOD table conversion\n# ensure any necessary analysis task configurations are included in the proxy and converter\no2-sim-mctracks-proxy -b --nevents ${NEVENTS} --o2sim-pid ${SIMPROC} --aggregate-timeframe 200 |\\\no2-sim-mctracks-to-aod -b |\\\no2-analysis-mctracks-to-aod-simple-task -b &\nTRACKANAPROC=$!\n\nwait ${SIMPROC}\nwait ${TRACKANAPROC}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/McTracksToAOD/run.sh"
        }
    ],
    "d1b66c098fae7462877c06e06575813ed034826c95b638b894fcb08234dbd552": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "wait ${SIMPROC}\nwait ${TRACKANAPROC}\n\n# The same analysis task can also run directly on an AO2D with McCollisions and McParticles:\n# o2-analysis-mctracks-to-aod-simple-task -b --aod-file <AO2DFile>",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/McTracksToAOD/run.sh"
        }
    ],
    "6007e20121ec15d5479b0239d2715c6f5967f73d725ecdb18acff209deee6c68": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# An example of generating DPL Pythia8 events without vertex smearing and subsequently injecting them into the analysis framework\n\nset -x\n\nNEVENTS=1000\n\n# --aggregate-timeframe 10 combines 10 generated events into a single timeframe, which is then converted into AOD tables.\n# It's important to note that if specific configurations are needed for the analysis tasks, these should also be included in the proxy and converter.\n\no2-sim-dpl-eventgen -b --nEvents ${NEVENTS} --aggregate-timeframe 10 --generator pythia8pp --vertexMode kNoVertex |\\\no2-sim-mctracks-to-aod -b | o2-analysis-mctracks-to-aod-simple-task -b &> pythia8.log\n\n# The same analysis task can also be executed directly on an AO2D file containing McCollisions and McParticles:\n# o2-analysis-mctracks-to-aod-simple-task -b --aod-file <AO2DFile>",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/McTracksToAOD/run_Pythia8.sh"
        }
    ],
    "92290046acf4a0fd17ee08e370cc76de5eb3faa69b70363785478512947c3315": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# An example for generating DPL Pythia8 events with vertex smearing, an external trigger function, and subsequent\n# conversion into the analysis framework.\n\nset -x\nNEVENTS=1000\n\nCONFKEY=\"TriggerExternal.fileName=trigger.macro;TriggerExternal.funcName=trigger()\"\no2-sim-dpl-eventgen -b --nevents ${NEVENTS} --aggregate-timeframe 10 --generator pythia8pp --trigger external \\\n                    --vertexMode kDiamondParam --confKeyValues \"${CONFKEY}\" |\\\no2-sim-mctracks-to-aod -b | o2-analysis-mctracks-to-aod-simple-task -b",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/McTracksToAOD/run_trigger.sh"
        }
    ],
    "673f99ae40c6975fa947452a7e1b5efff0d1b7791202568c0cd98dd273c6c2e7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This is a basic simulation example illustrating how to run the simulation as a service and interact with it using the client control script.\n#\n# Steps demonstrated:\n# a) start a simulation in service mode\n# b) request a first batch of events\n# c) request a second batch of events with a different output name\n\n\nset -x\n\nMODULES=\"PIPE ITS TPC TOF TRD\"\nNWORKERS=6\n\n# helper function to generate a random file name\nrname1=$(hexdump -n 16 -v -e '/1 \"%02X\"' -e '/16 \"\\n\"' /dev/urandom | head -c 6)\n\n### step 1: Start the service with specified worker and engine configurations, along with physics/geometry settings. No events are requested at this stage.\n\n( o2-sim-client.py --startup \"-j ${NWORKERS} -n 0 -g pythia8pp -m ${MODULES} -o simservice --logseverity DEBUG --configKeyValues align-geom.mDetectors=none\"  \\\n                  --block ) | tee /tmp/${rname1}   # <--- halt when everything is fully initialized\nSERVICE1_PID=$(grep \"detached as pid\" /tmp/${rname1} | awk '//{print $4}')",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/SimAsService_basic/run.sh"
        }
    ],
    "ed3bc111a14cd239892ed81ccf962684ae33d07adc5179d0b441cd85b2322246": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "sleep 2\n### step 2: Transport a batch of pythia8 events; Reconfiguration of the engine is not feasible at this moment.\n###         However, reconfiguration of the generator is possible, albeit with limitations.\no2-sim-client.py --pid ${SERVICE1_PID} --command \"-n 10 -g pythia8pp -o batch1_pythia8\" --block\n\nsleep 2\n\n### step 3: Transport a batch of pythia8hi events and wait until the process is completed.\no2-sim-client.py --pid ${SERVICE1_PID} --command \"-n 2 -g pythia8hi -o batch2_pythia8hi\" --block\n\n\n### step 4: Request the service to shut down (note the additional 1, which is unfortunately necessary).\no2-sim-client.py --pid ${SERVICE1_PID} --command \"--stop 1\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/SimAsService_basic/run.sh"
        }
    ],
    "29ebeb3c1c27475919486acbfef749e52118ca756d243270f07f395c2f62b7a2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\nNRUNS=100\nNJOBS=4\nNEVENTS=1000\nGEANT=TGeant3\n\nshopt -s extglob\n\nfor I in $(seq -w 1 $NRUNS); do\n\n    DIR=\"RUN$I\"\n    mkdir $DIR\n    cp left_trace.macro $DIR\n    cp primary_and_hits.macro $DIR\n    cp secondary_and_hits.macro $DIR\n    cd $DIR\n    echo \" --- starting run $I\"\n    o2-sim -j $NJOBS -n $NEVENTS -e $GEANT -g pythia8pp --skipModules ZDC --configKeyValues \"Stack.pruneKine=false\" &> o2-sim.log\n\n    root -b -q -l \"primary_and_hits.macro(\\\"o2sim_Kine.root\\\", \\\"barrel\\\")\" &\n    root -b -q -l \"primary_and_hits.macro(\\\"o2sim_Kine.root\\\", \\\"muon\\\")\" &\n    root -b -q -l \"primary_and_hits.macro(\\\"o2sim_Kine.root\\\", \\\"any\\\")\" &\n\n    root -b -q -l \"secondary_and_hits.macro(\\\"o2sim_Kine.root\\\", \\\"barrel\\\")\" &\n    root -b -q -l \"secondary_and_hits.macro(\\\"o2sim_Kine.root\\\", \\\"muon\\\")\" &\n    root -b -q -l \"secondary_and_hits.macro(\\\"o2sim_Kine.root\\\", \\\"any\\\")\" &\n\n    wait\n\n    rm !(*and_hits.*.root)\n\n    cd ..\ndone",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Inspect_Hits/run.sh"
        }
    ],
    "33d30125366ea0cf806271ed300ea3f9f2d8dd234824515970321b21e382d52e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This script demonstrates a simulation scenario where particles are selectively transported through the detector geometry based on predefined settings.\n#\n# The simulation utilizes Pythia8 for pp collision generation with default parameters. The specific configuration for the simulation is detailed in the sim.ini file.\n#\n# The selective transport parameters are modified as follows:\n# ```\n# [Stack]\n# transportPrimary=external\n# transportPrimaryFileName=transportPDG.macro\n# transportPrimaryFuncName=transportPDG(321)\n# transportPrimaryInvert=false\n# ```\n#\n# Here, `transportPrimary` specifies the selection mode, where `external` indicates that the criteria are derived from a plugin macro specified by the function `transportPrimaryFuncName` in the file `transportPrimaryFileName`. The `transportPrimaryInvert` parameter can reverse the selection, thereby preventing transport for the chosen particles.\n#\n\nset -x\n\nMODULES=\"PIPE ITS TPC\"\nEVENTS=100\nNWORKERS=8",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Selective_Transport/run.sh"
        }
    ],
    "b08623df6779d9fc9a47d5b5066bde1ab7e158e506ccc7708871d7fc0330149f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "SET -x\n\nMODULES=\"PIPE ITS TPC\"\nEVENTS=100\nNWORKERS=8\n\no2-sim -j ${NWORKERS} -n ${EVENTS} -g pythia8pp -m ${MODULES} -o step1 \\\n       --configFile sim.ini \\\n       > logstep1 2>&1",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Selective_Transport/run.sh"
        }
    ],
    "a37807eb6293877e6d779d21c81700ad54700db73cb3470093485fc926b78a3c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/sh\n# Script inspired by EPOS4 example\n# This script runs JETSCAPE using a specified XML file, setting the RNG seed and custom HepMC output filename. Unlike the EPOS example, the HepMC output is saved in a specifically named file rather than via stdout.\n\nxml=\"example\"\nseed=$RANDOM\nhepmc=\"jetout.hepmc\"\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -i,--input   INPUT       XML user file fed to JETSCAPE ($xml)\n  -o,--output  OUTPUT      HepMC output file ($hepmc)\n  -s,--seed    SEED        RNG seed ($seed)\n  -h,--help                Display these instructions\n  --                       Additional command line arguments passed to o2-sim\n\nEOF\n}\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -i|--input)   xml=$2 ; shift ;;\n        -o|--output)  hepmc=$2 ; shift ;;\n        -s|--seed)    seed=$2 ; shift ;;\n        -h|--help) usage; exit 0 ;;\n    esac\n    shift\ndone\n\nif [ ! -f $xml.xml ]; then\n    echo \"Error: Options file $xml.xml not found\"\n    exit 1\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/jetscape.sh"
        }
    ],
    "f5319f31ffb29bc344e9d0004d33f5b09490a8469581975b3d4368e0773473a2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ ! -f $xml.xml ]; then\n    echo \"Error: Options file $xml.xml not found\"\n    exit 1\nfi\n\nif [ $seed -eq 0 ]; then\n    echo \"Seed can't be 0, a random number will be used instead\"\n    seed=$RANDOM\nelse\n    if grep -Fq \"<seed>\" $xml.xml; then\n        sed -i \"/<seed>/c\\  <seed>$seed</seed>\" $xml.xml\n    else\n        sed -i \"/<\\/jetscape>/i\\  <Random>\\n    <seed>$seed</seed>\\n  </Random>\" $xml.xml\n    fi\n    echo \"Seed set to $seed\"\nfi\n\n# Verify if the HepMC output has been configured\nif [ ! -z \"$hepmc\" ]; then\n    # Remove file extension\n    newhep=$(echo $hepmc | sed 's/.hepmc//')\n    if grep -Fq \"<outputFilename>\" $xml.xml; then\n        sed -i \"/<outputFilename>/c\\  <outputFilename>$newhep</outputFilename>\" $xml.xml\n    else\n        sed -i \"/<jetscape>/a\\  <outputFilename>$newhep</outputFilename>\" $xml.xml\n    fi\n    echo \"HepMC output file set to $hepmc\"\nelse\n    echo \"Error: HepMC output file not set\"\n    exit 2\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/jetscape.sh"
        }
    ],
    "76b632f09e384a4e2044a13de7190dd0d3aeb563212133e53df1a436d299f0ea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Main XML file extracted from the JETSCAPE directory\nrunJetscape $xml.xml $JETSCAPE_ROOT/config/jetscape_master.xml",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/jetscape.sh"
        }
    ],
    "a2cc318ccb3c596b0c06309248781ebb2a343f463f30ce61a5f70b496c6532a4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This is a basic example demonstrating how to initiate a JETSCAPE simulation\n# via command line with HEPMC output through a FIFO, while concurrently employing o2-sim for transport.\n\n# Both JETSCAPE and O2 need to be loaded\nset -x\nif [ ! \"${JETSCAPE_ROOT}\" ]; then\n    echo \"JETSCAPE must be loaded; please use alienv enter ...\"\n    exit 1\nfi\n\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 must be loaded\" && exit 2\n\ncmd=\"$PWD/jetscape.sh\"\nNEV=-1\nmore=\"\"\nxml=\"example\"\nJOBS=2\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -m,--more    CONFIG      Additional configurations ($more)\n  -n,--nevents EVENTS      Total number of events to simulate ($NEV)\n  -i,--input   INPUT       XML configuration file for JETSCAPE ($xml)\n  -j,--jobs    JOBS        Number of jobs to run ($JOBS)\n  -h,--help                Display these instructions\n  --                       Any remaining command line arguments will be passed to o2-sim\n\nEnsure COMMAND is quoted if it contains spaces or special characters\n\nHere is the help output for o2-sim:\n\nEOF\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/runo2sim.sh"
        }
    ],
    "7ddf30ea4e8cb2419c0527d5f647b115f758bde03f689f88c4c08d2e081c401d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Below is the help information for o2-sim\n\nEOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Using default settings\"\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -m|--more)    more=\"$2\" ; shift ;;\n        -n|--nevents) NEV=$2 ; shift ;;\n        -i|--input)   xml=$2 ; shift ;;\n        -j|--jobs)    JOBS=$2 ; shift ;;\n        -h|--help) usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >&2\n           exit 3\n           ;;\n    esac\n    shift\ndone\n\necho \"User XML file: $xml\"\n\nif [ ! -f $xml.xml ]; then\n    echo \"Error: Input file $xml.xml not found\"\n    exit 4\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/runo2sim.sh"
        }
    ],
    "6750382649075586f6b257f21a0c35433fd58c30484db8708d49b929108eda9d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if [ ! -f $xml.xml ]; then\n    echo \"Error: Options file $xml.xml not found\"\n    exit 4\nfi\n\n# Define the number of events in the XML file\nif [ ! $NEV -eq -1 ]; then\n    echo \"Setting the number of events to $NEV\"\n    if grep -Fq \"<nEvents>\" $xml.xml; then\n        sed -i \"/<nEvents>/c\\  <nEvents>$NEV</nEvents>\" $xml.xml\n    else\n        sed -i \"/<jetscape>/a\\  <nEvents>$NEV</nEvents>\" $xml.xml\n    fi\nelse\n    echo \"Number of events not set, checking XML file...\"\n    if grep -Fq \"<nEvents>\" $xml.xml; then\n        NEV=$(grep -F \"<nEvents>\" $xml.xml | awk '{print $2}')\n        echo \"Number of events set to $NEV\"\n    else\n        echo \"Error: Number of events not set in JETSCAPE\"\n        exit 5\n    fi\nfi\n\n# Starting the simulation\no2-sim -j $JOBS -n ${NEV} -g hepmc --seed $RANDOM  \\\n       --configKeyValues \"GeneratorFileOrCmd.cmd=$cmd -i $xml;GeneratorFileOrCmd.fileNames=test_out.hepmc;GeneratorFileOrCmd.outputSwitch=-o;GeneratorFileOrCmd.bMaxSwitch=none;GeneratorFileOrCmd.nEventsSwitch=none;${more}\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC_JETSCAPE/runo2sim.sh"
        }
    ],
    "3d14f5d8b482c9d8c5199d2e4bc6e7f45f6e5e2560b7b35d09ed65980a00572f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# A straightforward example illustrating how to configure o2-sim to bypass the transport/physics steps and save only the events generated initially.\n# Although this can be accomplished in various ways, the example serves to clarify the configuration process.\n# Essentially, the configuration involves disabling physics in the file and applying strict geometry cuts to prevent Geant from performing any calculations.\n\n# first step --> generate events using Pythia8 (no transport)\no2-sim -n 10 -g pythia8pp -m CAVE --configFile only_primarykine.ini\n\n# second step --> read back events from O2 kine (no transport)\no2-sim -n 10 -g extkinO2 --extKinFile o2sim_Kine.root -m CAVE --configFile only_primarykine.ini -o o2sim2\n\n# ideally, the kinematics files from both stages should match.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/JustPrimaryKinematics/run.sh"
        }
    ],
    "019665105e4318d880c1f62050cc86f6a544d4b059521939c46239729ac36b8b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document illustrates the following aspects:\n#\n# a) how to execute a basic background event simulation with customized parameters,\n# b) how to create a pythia8 configuration file by substituting values from a template,\n# c) how to perform a simulation that produces signal events with specific pythia8 settings and user hooks,\n# d) how to conduct digitization that embeds or overlays background and signal hits.\n#\n# The primary emphasis of this example is on section c). Section b) merely substitutes values in the Pythia8 configuration file from a template.\n#\n# An external event generator configuration `-g external` is loaded from the file specified by the `--configKeyValues` setting `GeneratorExternal.fileName=GeneratorHF.macro` and executed by running the function `GeneratorExternal.funcName=\"GeneratorHF()\"`. Additional configuration parameters are loaded from the INI file `--configFile o2sim_configuration_sgn.ini`.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HF_Embedding_Pythia8/run.sh"
        }
    ],
    "08b467eea3d35d550622b73ac8ef2b1b35ab6b47429a1bbef20c751e0856136d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#\n# The configuration file for Pythia8 is specified in GeneratorPythia8.config.\n#\n# We have set up the configuration to favor c-cbar processes, which can be chosen based on pt-hat bins.\n#\n# GeneratorPythia8.hooksFileName indicates the file name for the custom Pythia8 hooks, while GeneratorPythia8.hooksFuncName specifies the function to call to load these hooks.\n#\n# In this example, hooks are utilized to accelerate event generation. The event generation is paused at the parton level. We then check if the partons of interest are present; if not, the event is vetoed. This approach saves time by avoiding the full hadronization step for uninteresting events. For more details, refer to `pythia8_userhooks_ccbar.macro`.\n#\n# DecayerPythia8.config[0], [1], and [2] specify multiple configuration files for an external decayer. These files are loaded sequentially. For further information, see the corresponding `.cfg` files.\n#",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HF_Embedding_Pythia8/run.sh"
        }
    ],
    "5d142409414f84bc80126d50c0ae30f5b7964c3843bac472b971a3dc316ce4cb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# The files are loaded sequentially. For more details, check the associated `.cfg` file.\n#\n# SimUserDecay.pdglist tells Geant to bypass decay processes and instead pass them to the external decayer.\n#",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HF_Embedding_Pythia8/run.sh"
        }
    ],
    "e34d822cf18383afd56203960fd9bd5307bbc63d6fe2c6f0c8677694e387c292": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    set -x\n\nMODULES=\"PIPE ITS TPC\"\nBKGEVENTS=5\nSIGEVENTS=20\nNWORKERS=8\n\n# PART a)\n\no2-sim -j ${NWORKERS} -n ${BKGEVENTS} -g pythia8hi -m ${MODULES} -o bkg \\\n       --configFile o2sim_configuration_bkg.ini \\\n       > logbkg 2>&1\n\n# PART b)\n\nRNDSEED=0    # [default = 0] time-based random seed\nPTHATMIN=0.  # [default = 0]\nPTHATMAX=-1. # [default = -1]\n\nsed -e \"s/\\${rndSeed}/$RNDSEED/\" \\\n    -e \"s/\\${pTHatMin}/$PTHATMIN/\" \\\n    -e \"s/\\${pTHatMax}/$PTHATMAX/\" \\\n    pythia8_ccbar.template > pythia8.cfg\n\n# PART c)\n\no2-sim -j ${NWORKERS} -n ${SIGEVENTS} -g external -m ${MODULES} -o sgn \\\n       --configKeyValues \"GeneratorExternal.fileName=GeneratorHF.macro;GeneratorExternal.funcName=GeneratorHF()\" \\\n       --configFile o2sim_configuration_sgn.ini \\\n       --embedIntoFile bkg_Kine.root \\\n       > logsgn 2>&1\n\n# PART d)\n\no2-sim-digitizer-workflow --sims bkg,sgn --tpc-lanes 4 -b --run",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HF_Embedding_Pythia8/run.sh"
        }
    ],
    "790b9b956ca399acf79cf674661428c2a4227fa7c9622520ebe874e1ae6eaef5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document provides a basic example of the ALICE O2 simulation, illustrating the following points:\n\n# a) how to execute a simple background event simulation with customizable parameters\n# b) how to conduct a simulation that generates signal events using a custom external generator, which can adjust its behavior according to the background event characteristics.\n\nset -x\n\n# PART a)\nNBGR=5\no2-sim -j 20 -n ${NBGR} -g pythia8hi -m PIPE ITS -o bkg --configKeyValues \\\n       \"Diamond.position[2]=0.1;Diamond.width[2]=0.05\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Adaptive_Pythia8/run.sh"
        }
    ],
    "55ab97a4083cc1cea549729d2e29ce158efa344d439547debc8b774e70cda7d9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# PART b)\n# generate pythia8 events based on the configuration specified in the file 'adaptive_pythia8.macro'.\n# pythia8 is initialized using the 'pythia8_inel.cfg' file, and the setup enables the generator to respond to a notification about the embedding status of the simulation, providing the header of the background event for further decisions. The number of pythia8 events to be embedded is determined by a formula that depends on the number of primary particles in the background events.\nNSGN=10\no2-sim -j 20 -n ${NSGN} -m PIPE ITS \\\n       -g external --configKeyValues 'GeneratorExternal.fileName=adaptive_pythia8.macro;GeneratorExternal.funcName=adaptive_pythia8(\"0.002 * x\")' \\\n       --embedIntoFile bkg_Kine.root -o sgn > logsgn 2>&1",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Adaptive_Pythia8/run.sh"
        }
    ],
    "6947ed46444a9abe8c638740ffcd28dc4932e8a55512843a330f91a7745303c5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document illustrates how to run simulations as a service and interact with them using a client control script. Specifically, it demonstrates using the service to implement event biasing through a feedback control loop, where an external \"broker\" triggers on simulated events and initiates additional simulations until a target is met.\n#\n# The steps covered include:\n# a) starting several simulations in service mode\n# b) requesting a batch of events from the crude service until a specified number of triggered events is accumulated\n# c) continuing the simulation of successful events for the remaining primary events\n#\n# NOTE:\n# - This example primarily aims to showcase the sim-service in a complex scenario\n# - While event biasing can be achieved this way, alternative methods (such as directly within o2-sim) might be more efficient (this example serves as a basic approach for comparison).",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/SimAsService_biasing1/run.sh"
        }
    ],
    "95d3b783f5ca0d5e726b2130a455d02927a290ced675b941b00797a2a3b48147": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#   it should eventually become more efficient (the current example can be regarded as an initial baseline)\n# - This script combines executables and ROOT macros, but a future approach could involve using PyROOT, which would allow for easier access to results and better reuse of compiled macros.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/SimAsService_biasing1/run.sh"
        }
    ],
    "0f5bb905d488accf4ec72a47e876cbc9a1067d4f02c5170111d5a430eacd0bea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "MODULES=\"PIPE ITS TPC TOF\"\nNWORKERS=8\nNTRIALEVENTS=20 # number of trial events per batch\nNTRIGGEREDEVENTS=20  # number of targeted triggered events\n\n# helper to generate a random file name\n# TODO: use FIFO or ramfiles instead of actual files on the disc\nrname1=$(hexdump -n 16 -v -e '/1 \"%02X\"' -e '/16 \"\\n\"' /dev/urandom | head -c 6)\n\nset -x\n### step 1: Initialize the first service with a partial detector configuration\n\n( o2-sim-client.py --startup \"-j ${NWORKERS} -n 0 -m ${MODULES} -o simservice --configFile sim_step1.ini\" \\\n                   --block ) | tee /tmp/${rname1}  # <--- continue until everything is fully initialized\nSERVICE1_PID=$(grep \"detached as pid\" /tmp/${rname1} | awk '//{print $4}')",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/SimAsService_biasing1/run.sh"
        }
    ],
    "dee785fbffac6734d7f4cb100459eb33941c44ea3b6f17918d1267a738130e3b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# A secondary service is utilized for continuation functions (at present, engine/stack reconfiguration is constrained, hence the primary service might also suffice).\n(o2-sim-client.py --startup \"-j ${NWORKERS} -n 0 -m ${MODULES} -o simservice2 --configKeyValues GeneratorFromO2Kine.continueMode=true;align-geom.mDetectors=none\" \\\n                   --block ) | tee /tmp/${rname1}  # <--- proceed once full initialization is complete\nSERVICE2_PID=$(grep \"detached as pid\" /tmp/${rname1} | awk '//{print $4}')\n\n# sleep 20\n\n# LOOP FOR BIASING\nbiasedcount=0\nbatch=0\ntrialevents=0\nwhile (( biasedcount < ${NTRIGGEREDEVENTS} )); do\n  ### simulate a few events using service 1\n  o2-sim-client.py --pid ${SERVICE1_PID} --command \"-g pythia8pp -n ${NTRIALEVENTS} --configFile sim_step1.ini -o batch${batch}\" --block",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/SimAsService_biasing1/run.sh"
        }
    ],
    "850f7ee4c35cd59b6f24a279deb1d109ec6f8a0f74e7c27433ff0c9152dc0d9b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### filter out good events\nln -nsf simservice_grp.root batch${batch}_grp.root\ncommand=\"broker.macro('-g extkinO2 --extKinFile batch'${batch}'_Kine.root --trigger external --configFile sim_step2.ini', 'batch'${batch}', 'filtered')\"\n(root -b -l -q \"${command}\") &> /tmp/${rname1}_${batch}\n\ntriggercount=$(grep \"TRIGGER-COUNT\" /tmp/${rname1}_${batch} | awk '{print $2}')\n\nbiasedcount=$((biasedcount + triggercount))\nbatch=$((batch + 1))\ntrialevents=$((trialevents + NTRIALEVENTS))\ndone\necho \"========================================\"\necho \"Transported ${trialevents} trial events.\"\necho \"Triggered on ${biasedcount} events.     \"\necho \"****************************************\"\n\nrm /tmp/${rname1}*",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/SimAsService_biasing1/run.sh"
        }
    ],
    "45b9363195e9f38b4ddf58bcdf58131ee6cc30836490ff48fc028d4b94068f5d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    rm /tmp/${rname1}*\n\n# SIMULATE REMAINING PRIMARIES FOR GOOD TRIGGERED EVENTS\no2-sim-client.py --pid ${SERVICE2_PID} --command \"-g extkinO2 --extKinFile filtered_Kine.root -n ${NTRIGGEREDEVENTS} -o filtered_part2 \\\n                                                  --configKeyValues GeneratorFromO2Kine.continueMode=true\" --block\n\n# STOP THE SERVICES\no2-sim-client.py --pid ${SERVICE1_PID} --command \"--stop 1\"\no2-sim-client.py --pid ${SERVICE2_PID} --command \"--stop 1\"\n\nsleep 1\n\n# ADDITIONAL SAFETY MEASURES TO ENSURE ALL PROCESSES ARE STOPPED\n. ${O2_ROOT}/share/scripts/jobutils.sh\nfor p in $(childprocs ${SERVICE1_PID}); do\n  kill -9 ${p}\ndone\n. ${O2_ROOT}/share/scripts/jobutils.sh\nfor p in $(childprocs ${SERVICE2_PID}); do\n  kill -9 ${p}\ndone",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/SimAsService_biasing1/run.sh"
        }
    ],
    "433e82bfc5c0c6a0bd630d8f79123200479d30fa36095efafc992c69a77d4dd1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\n# Please consult the README.md for additional details.\n\nset -x\n\nNEV=5\nENERGY=5020.\nBMIN=15.\nBMAX=20.\no2-sim -j 20 -n ${NEV} -g external -m PIPE ITS TPC -o sim \\\n       --configKeyValues \"GeneratorExternal.fileName=aliroot_ampt.macro;GeneratorExternal.funcName=ampt(${ENERGY}, ${BMIN}, ${BMAX})\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/AliRoot_AMPT/run.sh"
        }
    ],
    "8ba9bc49edf605b4b4671b195f254646e545edf961a24419d4b610a606458d94": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This script provides a basic example of running event simulations with the Hijing event generator interface through AliRoot.\n#\n# The AliGenHijing setup is managed by the function 'hijing(double energy = 5020., double bMin = 0., double bMax = 20.)' outlined in the macro 'aliroot_hijing.macro'.\n#\n# The macro file is referenced via the '--configKeyValues' parameter setting 'GeneratorExternal.fileName', and the function call to access the configuration is set via 'GeneratorExternal.funcName'.\n#\n# IMPORTANT\n# To execute this example, you must load an AliRoot package compatible with O2. For more information, see https://alice.its.cern.ch/jira/browse/AOGM-246.\n#\n# Ensure AliRoot is loaded after O2 by following this sequence: `alienv enter O2/latest,AliRoot/latest`.\n#\n\nset -x",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/AliRoot_Hijing/run.sh"
        }
    ],
    "d0f6616e6165e2a29c90544967217db8cb7b1210580ebadd0e0fdeb678d4c634": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "set -x\n\nNEV=5\nENERGY=5020.\nBMIN=0\nBMAX=20.\no2-sim -j 20 -n ${NEV} -g external -m PIPE ITS TPC -o sim \\\n       --configKeyValues \"GeneratorExternal.fileName=aliroot_hijing.macro;GeneratorExternal.funcName=hijing(${ENERGY}, ${BMIN}, ${BMAX})\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/AliRoot_Hijing/run.sh"
        }
    ],
    "5d0cfc539d37e4f7480361839f01dbde5285e7ea16c1bd4e379666617938233f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# Example of hybrid generator simulation incorporating triggers and a cocktail setup:\n# This simulation leverages a JSON configuration file (hybridconfig.json, located in this directory), which can be created using the script ${O2DPG_ROOT}/MC/bin/o2_hybrid_gen.py.\n# The trigger is derived from the trigger.macro, which in this case involves a basic selection based on impact parameter for heavy ion collisions.\nset -x\nif [ ! \"${O2DPG_ROOT}\" ]; then\n    echo \"O2DPG needs to be loaded; alienv enter ...\"\n    exit 1\nfi\n\n[ ! \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 2\n\nNEV=1\nmore=\"\"\nJOBS=2\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -m,--more    CONFIG      Additional configurations ($more)\n  -n,--nevents EVENTS      Number of events ($NEV)\n  -j,--jobs    JOBS        Number of jobs ($JOBS)\n  -h,--help                Display these instructions\n  --                       Any remaining command-line arguments passed to o2-sim\n\nCOMMAND should be enclosed in quotes if it includes spaces or special\ncharacters\n\nEOF\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_trigger/runo2sim.sh"
        }
    ],
    "8749f9d63c13daba23d96b4781260e4be75d238ba95070a2f56231816f77ef9b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "COMMAND must be enclosed in quotes if it includes spaces or special characters.\n\nBelow is the help output from o2-sim\n\nEOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Using default values\"\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -m|--more)    more=\"$2\" ; shift ;;\n        -n|--nevents) NEV=$2 ; shift ;;\n        -j|--jobs)    JOBS=$2 ; shift ;;\n        -h|--help) usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >/dev/stderr\n           exit 3\n           ;;\n    esac\n    shift\ndone\n\n# Starting the simulation with the Hybrid generator\n${O2_ROOT}/bin/o2-sim --noGeant -j $JOBS --field ccdb --vertexMode kCCDB --run 300000 --configKeyValues \"MFTBase.buildAlignment=true;GeneratorHybrid.configFile=$PWD/hybridconfig.json;GeneratorHybrid.randomize=false;${more}\" -g hybrid -o genevents --timestamp 1546300800000 --seed 836302859 -n $NEV",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_trigger/runo2sim.sh"
        }
    ],
    "b395f30937eca12ad35369f186709734e58971ca37b0d8a3c33610751a6956ce": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\ncmd=\"./crmc.sh\"\nadditional_config=\"GeneratorFileOrCmd.bMaxSwitch=none\"\nseed=$RANDOM\nnev=1\nout=\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -c,--cmdline COMMAND     Command line\n  -m,--additional-config CONFIG More configurations ($additional_config)\n  -s,--seed    SEED        Random number seed ($seed)\n  -n,--nevents EVENTS      Number of events ($nev)\n  -o,--output  OUTPUT      Output prefix ($out)\n  --                       Remaining command line arguments passed to o2-sim\n\nCOMMAND should be quoted if it includes spaces or special\ncharacters.\n\nBelow is the help output of o2-sim\n\nEOF\n}",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/child.sh"
        }
    ],
    "d79b144b9864e32ab877144e52e42cb7b8ed142001410db76d03d90d62336c53": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Below is the help information for o2-sim\n\nEOF\n}\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -c|--cmdline) cmd=\"$2\" ; shift ;;\n        -s|--seed)    seed=$2 ; shift ;;\n        -n|--nevents) nev=$2 ; shift ;;\n        -o|--output)  out=$2 ; shift ;;\n        -h|--help) usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >/dev/stderr\n           exit 1\n           ;;\n    esac\n    shift\ndone\n\nif test \"x$out\" = \"x\" ; then\n    out=`echo $cmd | sed 's,^\\./,,' | tr '[$/. ]' '_'`\nfi\nout=`echo \"$out\" | tr ' ' '_'`\n\nexport VMCWORKDIR=${O2_ROOT}/share\no2-sim -g hepmc --configKeyValues \"GeneratorFileOrCmd.cmd=$cmd;${more}\" \\\n       --outPrefix \"$out\" --seed $seed --nEvents $nev $@",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/child.sh"
        }
    ],
    "0987c2c7b47835bf23732e152653a87828a731913b9ed42f4c1ad86895c3b278": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n\ninp=events.hepmc\nseed=$RANDOM\nnev=1\nout=\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -i,--input   FILENAME    Input HepMC file ($inp)\n  -s,--seed    SEED        Random number seed ($seed)\n  -n,--nevents EVENTS      Number of events ($nev)\n  -o,--output  NAME        Output name\n  --                       Remaining command line arguments are passed to o2-sim\n\nThe following is the help output from o2-sim.\n\nEOF\n}\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -i|--input)   inp=$2 ; shift ;;\n        -s|--seed)    seed=$2 ; shift ;;\n        -n|--nevents) nev=$2 ; shift ;;\n        -o|--output)  out=$2 ; shift ;;\n        -h|--help) usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >&2\n           exit 1\n           ;;\n    esac\n    shift\ndone\n\nif test \"x$out\" = \"x\" ; then\n    out=`basename $inp .hepmc`\nfi\nout=`echo \"$out\" | tr ' ' '_'`",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/read.sh"
        }
    ],
    "727b6a47950ed4ee27eeceb160b9ab32fd387096e9d7ea04e1761c7118f4d58d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "if test \"x$out\" = \"x\" ; then\n    out=`basename $inp .hepmc`\nfi\nout=`echo \"$out\" | tr ' ' '_'`\n\nexport VMCWORKDIR=${O2_ROOT}/share\no2-sim -g hepmc --configKeyValues \"GeneratorFileOrCmd.fileNames=$inp\" \\\n       --outPrefix \"$out\" --seed $seed --nEvents $nev $@",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/read.sh"
        }
    ],
    "687bd84b84f285cb3a449c6cdd9dbb4656ed6a4b9bec29cc1941795bed558309": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/sh\n# This script is _not_ allowed to output to standard out, except for the HepMC\n# event record.\n\ncrmcParam=$(dirname $(dirname `which crmc`))/etc/crmc.param\nexec crmc -c $crmcParam $@ -o hepmc -f /dev/stdout | \\\n    sed -n 's/^\\(HepMC::\\|[EAUWVP] \\)/\\1/p'",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/HepMC/crmc.sh"
        }
    ],
    "e58899daeb3198a37104a07f5337aa39e47bb104e99827767496acf23089c81d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This document illustrates a basic simulation scenario involving the use of Pythia8 for heavy-ion event generation with an external custom trigger.\n# The external trigger leverages `DeepTrigger` to enable users to access Pythia8's internal event details for defining the trigger criteria.\n#\n# Specifically, this example utilizes the impact parameter of the current Pythia8 heavy-ion event. The trigger selection criteria accept impact parameters within a configurable min-max range, which can be adjusted via command-line parameters.\n#\n# The configuration and implementation of the external `DeepTrigger` are handled by the function `trigger_impactb_pythia8(double bMin = 0., double bMax = 20.)`, which is defined in the macro `trigger_impactb_pythia8.macro`.\n#\n# The macro file and function name are designated using the `--configKeyValues` settings `TriggerExternal.fileName` and `TriggerExternal.funcName`, respectively.\n \nset -x",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Trigger_ImpactB_Pythia8/run.sh"
        }
    ],
    "2d9db9e29c6c8168e76c22ba808c740f5810c6f292e58e13af9da8795af7e19d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    NEV=10\nBMIN=15.\nBMAX=20.\no2-sim -j 20 -n ${NEV} -g pythia8hi -m PIPE ITS TPC --trigger external --configKeyValues \"TriggerExternal.fileName=trigger_impactb_pythia8.macro;TriggerExternal.funcName=trigger_impactb_pythia8(${BMIN}, ${BMAX})\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Trigger_ImpactB_Pythia8/run.sh"
        }
    ],
    "51d32fd48b5c6b63632bb1f3bb2b83d4fac47151715c063663fc7f3178355637": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This example demonstrates a hybrid generator simulation using multiple parallel clones of the same generator. The configuration details for these clones are stored in a JSON file (hybridconfig_extern_parallel.json) within this directory. Running these clones concurrently is aimed at accelerating the event production process to meet a specific event count.\n\nNEV=10\nWORKERS=8\n\n# Initiating the hybrid generator simulation in parallel mode\n${O2_ROOT}/bin/o2-sim --noGeant -j 1 --field ccdb --vertexMode kCCDB --run 300000 --configKeyValues \"GeneratorHybrid.configFile=$PWD/hybridconfig_extern_parallel.json;GeneratorHybrid.randomize=false;GeneratorHybrid.num_workers=${WORKERS}\" -g hybrid -o genevents_extern_parallel --timestamp 1546300800000 --seed 836302859 -n $NEV",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_parallel/run_extgen_parallel.sh"
        }
    ],
    "78effd6352bfc7573fb0eea338c1d40cb0024ab80193a397fdebd6413fa097be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# This script demonstrates a hybrid generator simulation where multiple instances of the same generator\n# are configured from a JSON file (hybridconfig_parallel.json) and run in parallel to enhance event production speed.\n\nNEV=100\nWORKERS=8\n\n# Initiating the simulation using the Hybrid generator in parallel mode\n${O2_ROOT}/bin/o2-sim --noGeant -j 1 --field ccdb --vertexMode kCCDB --run 300000 --configKeyValues \"GeneratorHybrid.configFile=$PWD/hybridconfig_parallel.json;GeneratorHybrid.randomize=false;GeneratorHybrid.num_workers=${WORKERS}\" -g hybrid -o genevents_parallel --timestamp 1546300800000 --seed 836302859 -n $NEV",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_parallel/run_parallel.sh"
        }
    ],
    "0a0229587fd545d9313e835bf9e6a2662bdb9ee0bdb14313afed4e5c6a76414d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/usr/bin/env bash\n#\n# Example of hybrid generator simulation using cocktails:\n# the configuration is set via a JSON file (hybridcocktail.json located in this directory)\nset -x\nif [ -z \"${O2DPG_ROOT}\" ]; then\n    echo \"O2DPG needs to be loaded; alienv enter ...\"\n    exit 1\nfi\n\n[ -z \"${O2_ROOT}\" ] && echo \"Error: O2 needs to be loaded\" && exit 2\n\nNEV=-1\nmore=\"\"\nJOBS=2\n\nusage()\n{\n    cat <<EOF\nUsage: $0 [OPTIONS]\n\nOptions:\n\n  -m,--more    CONFIG      Additional configurations ($more)\n  -n,--nevents EVENTS      Number of events to simulate ($NEV)\n  -j,--jobs    JOBS        Number of jobs to run in parallel ($JOBS)\n  -h,--help                Display this message\n  --                       Any remaining arguments will be passed to o2-sim\n\nCOMMAND must be quoted if it contains spaces or other special\ncharacters\n\nBelow follows the help output of o2-sim\n\nEOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Running with default settings\"\nfi",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_cocktail/runo2sim.sh"
        }
    ],
    "1c3dd1de0bd53424041cc87bc3dc288fed1bc3e85ec5ef561befd34bbc4fc365": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    EOF\n}\n\nif [ \"$#\" -lt 2 ]; then\n    echo \"Proceeding with default settings\"\nfi\n\nwhile test $# -gt 0 ; do\n    case $1 in\n        -m|--more)    more=\"$2\" ; shift ;;\n        -n|--nevents) NEV=$2 ; shift ;;\n        -j|--jobs)    JOBS=$2 ; shift ;;\n        -h|--help) usage; o2-sim --help full ; exit 0 ;;\n        --)           shift ; break ;;\n        *) echo \"Unknown option '$1', did you forget '--'?\" >/dev/stderr\n           exit 3\n           ;;\n    esac\n    shift\ndone\n\n# Set the number of events in the options file\nif [ ! $NEV -eq -1 ]; then\n    echo \"Setting the number of events to $NEV\"\nelse\n    echo \"Number of events not specified, defaulting to 10...\"\n    NEV=10\nfi\n\n# Generate the event pool using pythia8 (10000 events) and save it in evtpool.root\n${O2DPG_ROOT}/MC/run/examples/event_pool.sh --make",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_cocktail/runo2sim.sh"
        }
    ],
    "f80f802fd6e6a505253ad5e25c3edc3974819dae35b81c4c16eb12a7fb05c2c3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Initializing simulation with Hybrid generator\n${O2_ROOT}/bin/o2-sim --noGeant -j $JOBS --field ccdb --vertexMode kCCDB --run 300000 --configKeyValues \"MFTBase.buildAlignment=true;GeneratorHybrid.configFile=$PWD/hybridcocktail.json;GeneratorHybrid.randomize=false;${more}\" -g hybrid -o genevents --timestamp 1546300800000 --seed 836302859 -n $NEV",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/Hybrid_cocktail/runo2sim.sh"
        }
    ],
    "6fcdd9388823dc76e4052b04e8ec1271ef45f116906597e19099edc5bdc0becb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#!/bin/bash\n\n# Ensure the steplogger environment is set up:\n# alienv enter O2/latest MCStepLogger/latest\n\n# This illustrates the simplest way to use the steplogger\nLD_PRELOAD=$MCSTEPLOGGER_ROOT/lib/libMCStepLoggerInterceptSteps.so o2-sim-serial -n 1 -g pythia8pp -m PIPE ITS TPC",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/run/SimExamples/StepMonitoring/Simple1/run.sh"
        }
    ],
    "b2006dc924135a77f0241d5cdbe7255d208777e458187d4981ac7317e3c9ef37": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refdocDetectorSimulation Detector Simulation\n/doxy -->\n\n# Documentation for Detector Simulation\n\nThis document provides details about the ALICE detector simulation and digitization procedures utilized in LHC Run3.\n\n## Overview\n\nDetector simulation, which simulates detector responses to virtual particle events, comprises two primary components:\n  a) generating simple (energy deposit) traces within the detector as particles pass through and interact with the detector material.\n  b) converting these traces into (electronic) signals for the detector readout (typically referred to as digitization).\n\nThe first component is managed by the `o2-sim` executable (refer to [SimSection](#SimSection)). The second component is handled by the `o2-sim-digitizer-workflow` executable (refer to [DigitSection](#DigitSection)). Additional examples are [listed here](#Examples).\n\n## Key New Features Compared to AliRoot\n\nThe Run3 simulation introduces the following advancements:\n\nThe paraphrased document retains the original meaning and structure while using different wording.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "9cd77a3d2e1037a16211dd35a059cbd4f21f38b9531455624ed4b09fb0a9bf3a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Key new features in Run3 simulation compared to AliRoot\n\nThe Run3 simulation introduces the following enhancements:\n\n  - **a distributed system based on FairMQ**, which splits event generation, particle transport, and IO into separate asynchronous components that can be deployed on different machines\n  - **sub-event parallelism** that enables quick transport of a single large event and reduces memory usage\n  - **independent parallelism** not tied to the transport engine\n  - **configuration via predefined parameter classes and ini/text files**\n  - **a clear separation of transport and digitization**, allowing each phase to be run independently",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "9dbf3a411951cec7cf0ba154bf6aa5aae63a49d5605d07d67ac709e307725a18": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Documentation of transport simulation <a name=\"SimSection\"></a>\n\nThe `o2-sim` executable is designed to simulate particles produced in a collision event as they traverse through the detector, resulting in energy deposits (hits) that can potentially be translated into detectable signals. This is the main executable that initiates a network of subprocesses communicating through messages within a distributed computing environment.\n\n## Usage Overview\n* **Quick start example:** A standard (illustrative) command might look like:\n\n    ```o2-sim -n 10 -g pythia8pp -e TGeant4 -j 2 --skipModules ZDC,PHS```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "a7dee65bc4ef764d54a89648a51a7028f8cf1e4c5df80317c8779e752792256f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "which would initiate a simulation of 10 pythia8 events across the entire ALICE detector, excluding the ZDC and PHOS, utilizing Geant4 on 2 parallel worker processes.\n* **Generated output**: The simulation generates the following output files:\n\n| File                  | Description                                                                            |\n| --------------------- | -------------------------------------------------------------------------------------- |\n| `o2sim_Kine.root`     | includes kinematics data (primaries and secondaries) and event metadata                |\n| `o2sim_geometry.root` | contains the final ROOT geometry configured for the simulation run                    |\n| `o2sim_grp.root`      | holds special global run parameters (grp), such as magnetic field                     |\n| `o2sim_XXXHits.root`  | hit files for each active detector XXX involved in the simulation                      |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "e2ad154cc841500aad679dcfa3d1fc94d70a5ccbd6491eb357fdb6f9015ddf2e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| `o2sim_configuration.ini` | summary of the parameter settings used in the simulation |\n| `o2sim_serverlog` | log file generated by the particle generator server |\n| `o2sim_workerlog` | log file created by the transportation processes |\n| `o2sim_hitmergerlog` | log file from the IO process operations |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "f8534bc1a480980a4d38697f8979d290e185a9e4aed0eb1792d0b44a7d71d3eb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "* **Key command line options**: The document lists several primary options (incomplete):\n\n    PARAPHRASED DOCUMENT: * **Principal command line parameters**: The following significant options are provided (incomplete):",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "7824cf5a8c2d276281516b8e21a324b6c16d98c08beeb031df3ad5c647ccfb7c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| Option                | Description                                                                            |\n| --------------------- | -------------------------------------------------------------------------------------- |\n| -h,--help     | Displays the list of available command line options along with their default values.   |\n| -n,--number | Specifies the number of events to be simulated.                                         |\n| -g,--generator | Utilizes a predefined generator template by name (e.g., pythia8pp, pythia8hi). The configuration details for generations are explained in a separate section. |\n| -e,--engine | Chooses the VMC transport engine (TGeant4, TGeant3).                                   |\n| -m,--modules | Includes a list of modules/geometries to be used (default is ALL); for example, -m PIPE ITS TPC |\n| -j,--nworkers | Sets the number of parallel simulation engine workers (default is half the number of hyperthread CPU cores) |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "abd29bf88d73104cb33dfc1ba86ed5355bd336240825a474705927dad280bf61": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| --chunkSize | The size of a sub-event, which dictates how many primary tracks are dispatched to a simulation worker for processing. |\n| --skipModules | A list of modules to exclude or skip, taking precedence over the -m option. |\n| --configFile   | An `.ini` file with a list of (non-default) parameters to configure the simulation run. For more details, see the section on configurable parameters. |\n| --configKeyValues | Similar to `--configFile`, but allows setting parameters directly on the command line as a string sequence. Example: `--configKeyValues \"Stack.pruneKine=false\"`. It takes precedence over `--configFile`. Parameters must be from the ConfigurableParams list. |\n| --seed   | The initial seed for all random number generators. A default value of -1 results in random behavior. |\n| -o,--outPrefix | The prefix for the output file. The default is o2sim. Example: `-o mySignalProduction`. |\n| --noGeant | Disable Geant transport and only generate the generator kinematics. |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "12d81a193cdfd04915da270d613e4001052493c4eb21f2a7c1b39ba96236911c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "* **Advanced Control** via environment variables:\n`o2-sim` can be customized using these environment variables:\n\n| Variable | Description |\n| --- | --- |\n| **ALICE_O2SIM_DUMPLOG** | If set, the logs from all FairMQ components will be displayed on the screen and can be redirected to a user-defined log file. |\n| **ALICE_NOSIMSHM** | When set, communication between simulation processes will use ROOT serialization instead of a shared memory mechanism. |\n\n\n## Adjustable Parameters",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "07540a09a906af7f3d2cc726f2d19efdafd381f12c0bd79967116480820f88ae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Adjustable Parameters\n\nThe simulation utilizes `adjustable parameters` as detailed in the [ConfigurableParam.md](https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md) documentation. Both the detector code and the general simulation code declare and utilize these parameters during runtime. Once a parameter is defined, it can be modified or set externally through configuration files or command-line inputs, such as `--configFile` and `--configKeyValues`. The full list of parameters along with their default values can be found in `o2sim_configuration.ini`, which is generated by running `o2-sim -n 0 -m CAVE` with no events.\n\nKey parameters that affect the transport simulation include:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "b28d75ada25bc86d8446707d0debe78e05975ee83ef1d1840f890a01ef5c26ed": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Important factors that shape the transport simulation include:\n\n| Key Parameter | Description |\n| --- | --- |\n| G4 | Settings that affect the Geant4 engine, like the physics list. For instance, \"G4.physicsmode=kFTFP_BERT_optical_biasing\" |\n| Stack | Settings that affect the particle stack. Examples include whether kinematics pruning is done and if secondaries are retained. |\n| SimCutParams | Allows setting geometry stepping cuts in R, Z, and other dimensions. |\n| Diamond | Sets the interaction vertex location and its spread/width, used across all event generators. |\n| Pythia8 | Parameters impacting the Pythia8 generator. |\n| HepMC | Parameters impacting the HepMC generator. |\n| TriggerParticle | Influences the trigger mechanism in particle generators. |\n\nDetectors can also have parameters that affect aspects like geometry layout and material composition.\n\n## Guidance on available generators",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "6ec9f66cb937f2e6c1d61770848fa71694a44bd18dc20334bb32023d5ee01f25": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Guidance on Available Generators\n\nHere are some notes on example generators, along with usage instructions.\n\n* **Fwmugen**\n\nfwmugen is a straightforward generator for creating forward muons (one muon per event).\n\n```\no2-sim -m MFT -e TGeant3 -g fwmugen -n 10\n```\n\n* **BoxGen**\n\n```\no2-sim -m PIPE ITS MFT -e TGeant3 -g boxgen -n 10 --configKeyValues 'BoxGun.pdg=13 ; BoxGun.eta[0]=-3.6 ; BoxGun.eta[1]=-2.45; BoxGun.number=100'\n```\nThis command generates 10 events with 100 forward muons.\n\n* **PYTHIA 8**\n\nSets up pythia8 for minimum bias pp collisions at 14 TeV.\n\n```\no2-sim -m PIPE ITS MFT -g pythia8pp -n 50\n```\n\n[Provide a detailed explanation of the environment variables]\n\n## Data Layout\n[Include information about the structure of the hits file]\n\n## Frequently Asked Questions\nFeel free to contribute to the documentation by posing a question.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "dd7372367f2af12770d0786d82ba2899e3bec8324f9e990c865f6fe5e4574484": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## F.A.Q.\nYou can contribute to the documentation by posing a question.\n\n#### 1. **How do I connect an external event generator with ALIROOT?**\nTo utilize event generators like `THijing` or `TPyhtia6` from ALIROOT, you can use the `-g external` command-line parameter, coupled with a ROOT macro that sets up the event generator. Examples of such macros are found in the installation directory `$O2_ROOT/share/Generators/external`. Users can also create their own macros to tailor the setup to their specific requirements.\n\n#### 2. **How can I run the simulation on a specific subset of geometry modules?**\nEmploy the `--modules` or `-m` command-line option. For instance, `o2-sim -m PIPE ITS TPC` will simulate the geometry and material comprising PIPE, ITS, and TPC.\n\n#### 3. **How can I ensure the simulation generates the same events as an AliRoot simulation?**\nRun the simulation with the exact configuration and parameters used in the AliRoot simulation.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "853ec307eab570ebb3430f861cacb7ad359a5b058f0755c933ed4b3e2c1ae456": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#### 3. **How can I run with the exact events used in an AliRoot simulation?**\n\nYou can perform any custom simulation with AliRoot and reuse the kinematics data stored in the `Kinematics.root` file. This file includes primary and secondary particles, which may have been added during transportation. If you pass this file to `o2sim`, the primary particles can be used as the initial event. Use the **`-g extkin`** command-line option:\n```\no2-sim -g extkin --extKinFile Kinematics.root ...\n```\n\n#### 4. **How can I generate signal events using the vertex positions of pre-existing background events?**",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "5e997b9ec42672f00aff69139bde3345890b32ce3a4ea39bc9c202f7addcb9e5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This procedure, referred to as embedding, involves combining two events generated independently. To ensure physical accuracy, these events must share the same interaction vertex.\n\nIf you have background events already stored in the `o2sim.background.root` file, you can generate a new set of events with the same interaction vertex as the background events using this command line option:\n\n```\no2-sim --embedIntoFile o2sim.background.root\n```\n\nBackground events are sequentially selected until all are used, after which they begin to be repeated.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "a155b7028d7743d9b4b35b696c90d41379d3c450a8964203d369ab601c8832c0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#### 5. **How can I retrieve comprehensive stepping data?** <a name=\"MCStepLoggerSection\"></a>\nTo obtain detailed stepping information, run the simulation using `o2-sim-serial` with the following command:\n```\nMCSTEPLOG_TTREE=1 LD_PRELOAD=$MCSTEPLOGGER_ROOT/lib/libMCStepLoggerInterceptSteps.so o2-sim-serial -j 1 -n 10\n```\nThis command generates a file named `MCStepLoggerOutput.root`, which includes detailed step and process data. This file can be analyzed using a dedicated analysis framework. For further details, see the documentation at https://github.com/AliceO2Group/VMCStepLogger/blob/master/README.md.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "3ead0bea019ef444882ef099637211ca370feeb39425945994cc725359406124": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#### 6. **How do I configure a trigger in the event generator?**\nEvent generators adhering to the `o2::eventgen::Generator` protocol can be set to trigger under specific conditions.\nA fundamental 'particle trigger' feature is available in the `o2::eventgen` core, enabling users to specify a trigger particle.\nThe criteria for the trigger particle can be set using command line options:\n```\no2-sim -g pythia8pp -t particle --configKeyValues \"TriggerParticle.pdg=333;TriggerParticle.ptMin=5.;TriggerParticle.yMin=-0.5;TriggerParticle.yMax=0.5\"\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "1b21a3ca37154a3f776040870da4ffc705869629e7b2d818b50253e41fb59a50": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Custom triggers can also be built by the user to meet specific needs with unlimited flexibility.\nAn external trigger function can be set using command-line arguments:\n```\no2-sim -g pythia8pp -t external --configKeyValues 'TriggerExternal.fileName=path_to_trigger_macro.C;TriggerExternal.funcName=\"the_function(some, parameters)\"'\n```\nThis function must adhere to a simple protocol and return a lambda function structured like this:\n```\no2::eventgen::Trigger the_function()\n{\n  return [](const std::vector<TParticle>& particles) -> bool {\n    return true; // triggered\n  }\n}\n```\nIn the lambda function, users have access to the generated particles and can examine them to create a trigger as desired.\nThe trigger is activated when the lambda function returns `true`, and the current event's simulation is then initiated.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "37939d9bd000fd3e10e4439eeede530bd450fef112677b3385c1e800147a984e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To enable users to create triggers that extend beyond the standard particle stack produced by the event generator, an additional feature is introduced. This feature permits users to delve into the core processes of the event generator, whenever feasible. Due to this, it is referred to as a 'DeepTrigger'. A 'DeepTrigger' is integrated into the simulation in the same manner as a regular trigger:\n\n```\no2-sim -g pythia8pp -t external --configKeyValues 'TriggerExternal.fileName=path_to_deep_trigger_macro.C;TriggerExternal.funcName=\"the_deep_function(some, parameters)\"'\n```\n\nHere, the function must adhere to a modified protocol and should return a lambda function defined as follows:\n\n``` o2::eventgen::DeepTrigger the_deep_function()\n{\n  return [mpiMin](void* interface, std::string name) -> bool {\n    return true;\n  };\n}\n```\n\nIt's important to note that in this scenario, the user receives a pointer to the event-generator interface along with a string that specifies the name of the event.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "cad59524afa3e994c3d605e094f6b8c5c13a2afffac81383d2b77be3d1b34faa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In order to accommodate various types of event generators, which are generally independent of each other, a `void*` must be utilized. The name includes a string that indicates the specific generator, allowing for the appropriate type casting to be applied.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "ab2f8038ab74a3568ce322d69c28a90712c7422e087831a211b8030c5b4426d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#### 7. **How can I modify medium parameters during a simulation?**\nCertain medium parameters are set in `$O2/Detectors/<detector>/simulation/data/simcuts.txt` (or in `$O2/Detectors/Passive/data/simcuts_<modulename>.txt` for passive modules), while others may be hardcoded in the source. To inspect or alter these parameters dynamically, you can generate a `JSON` file using\n```bash\no2-sim <args> --configKeyValues \"MaterialManagerParam.outputFile=medium_params.json\"\n```\nTo adjust parameters of interest, modify `medium_params.json` and then use it as input for the simulation via\n```bash\no2-sim <args> --configKeyValues \"MaterialManagerParam.inputFile=medium_params.json\"\n```\n\n**Note** that altering process parameters has no impact when Geant4 is employed for particle transport.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "793577653a6c5374af553a0b88698b6035003ed6da6d48bbe47b9de72c89afcd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Replaying Steps and Optimizing Full Simulation Parameters\n\nThe `MCReplay` engine allows you to replay a simulation based on steps that were recorded by the `MCStepLogger` (refer to the [detailed documentation](https://github.com/AliceO2Group/VMCStepLogger/tree/v0.2.0/MCReplay) for more information).\n\nTo use it with the O2 framework, start by following the instructions in the [MCStepLoggerSection](#MCStepLoggerSection) to generate a file with logged steps. To replay these steps, execute the following command:\n```bash\no2-sim-serial -n <ref_nevents> -e MCReplay -g extkinO2 --extKinFile o2sim_Kine.root -o replay\n```\nIt is recommended to use a different output prefix, as shown here, to avoid overwriting hit files that contain crucial data. Ensure you include/exclude the same modules as in the reference run using the `-m` and `--skipModules` flags. If the reference run used a different prefix, the kinematics file name will be `<prefix>_Kine.root`.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "b7b20eeca9a42c222e4d1c5986d30953f81d976c8085f9da59e1c4e5274c3bea": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If the name of the step log file varies, you can specify it using `--configKeyValues=\"MCReplayParam.stepFilename=<path/step/file/name>\"`. Additionally, you can define a minimum energy threshold (in GeV) for particles, where those produced below this threshold will be excluded. To do this, apply `--configKeyValues=\"MCReplayParam.energyCut=0.1\"` if you want to discard particles with an energy below `0.1 GeV`.\n\nTo improve efficiency and speed, you can omit steps or particle production that have a minimal effect on the hits and consequently on the digits when comparing with a reference run. This adjustment allows the detector simulation to run more efficiently.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "3d7e3b2b7ab0d6c034dee7976c15ce3d78717d164ff70f7bcb9b77bc6da94010": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Advanced Triggers\nAdvanced triggers is a term for a new feature that enables users to define custom functions with direct access to the event generator interface. This feature adheres to the structure outlined previously, allowing users to supply a custom lambda function that will be passed a pointer to the internal event-generator interface object (e.g., for Pythia8, a pointer to the Pythia object) and a tagname for identification. This capability could be beneficial for users needing to implement triggers based on data beyond the generated particle stack, leveraging additional internal counters or information within the event generator.\n\nHere is an example of an advanced trigger implementation in Pythia8.\n\n```\n//   usage: o2sim --trigger external --configKeyValues 'TriggerExternal.fileName=trigger_mpi.C;TriggerExternal.funcName=\"trigger_mpi()\"'\n\n#include \"Generators/Trigger.h\"\n#include \"Pythia8/Pythia.h\"\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "7909a1895681033cfd08164f7453f1e48e2f0a54d851f5b18e4badb966180e6d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#include \"Generators/Trigger.h\"\n#include \"Pythia8/Pythia.h\"\n\no2::eventgen::DeepTrigger\n  trigger_mpi(int mpiMin = 5)\n{\n  return [mpiMin](void* interface, std::string name) -> bool {\n    if (name == \"pythia8\") {\n      auto py8 = reinterpret_cast<Pythia8::Pythia*>(interface);\n      return py8->info.nMPI() >= mpiMin;\n    }\n    LOG(fatal) << \"Cannot define MPI for generator interface \\'\" << name << \"\\'\";\n    return false;\n  };\n}\n```\n\n\n### Pythia8 UserHooks\nPythia8 provides functionality for users to insert custom code at specific points during the event-generation process. For more information, refer to the Pythia8 manual:\nhttp://home.thep.lu.se/~torbjorn/pythia82html/UserHooks.html\n\nThe interface for this is configured through a macro where the user must define a custom UserHooks in line with the Pythia8 protocol. Additionally, the macro should include a function to obtain a pointer to the custom UserHooks object.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "cbd2cdcf7fb915315b8c6238a57edba7e4b5769d9c2a45ea8b9b723e63ce364c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This feature could be beneficial for users aiming to control the event-generation process deeply within the internal routines and to veto particular processes by analyzing the status of Pythia8 at different stages, such as vetoing events that lack charm partons prior to the hadronisation of partons. This can reduce the time required for event generation by skipping many steps early on.\n\nAn example of a configuration macro is as follows:\n\n```\n//   usage: o2sim -g pythia8pp --configKeyValues \"GeneratorPythia8.hooksFileName=pythia8_userhooks_charm.C\"\n\n#include \"Generators/Trigger.h\"\n#include \"Pythia8/Pythia.h\"\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "7e463b34290d338608eb3cbbc59e58a8d075149673172cfa4f4cfa55c3188074": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Digitization Step Documentation <a name=\"DigitSection\"></a>\n\n# Development\n\nThis section documents the digitization step, including the integration of the `UserHooksCharm` class, which is derived from `Pythia8::UserHooks`. The class is designed to veto parton-level events based on specific criteria. The `UserHooksCharm` constructor and destructor are default-defined. The `canVetoPartonLevel` method returns `true`, indicating the capability to veto parton-level events. The `doVetoPartonLevel` method iterates through the event particles, checking if the particle is a charm quark (id 4) and if its rapidity is within a specified range (|y| < 1.5). If these conditions are met, the event is vetoed; otherwise, it is allowed. The `pythia8_userhooks_charm` function returns a new instance of `UserHooksCharm`.\n\n```cpp\nPythia8::UserHooks*\n  pythia8_userhooks_charm()\n{\n  return new UserHooksCharm();\n}\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "177ae70ef5cbd3d00dcee004a010c7cab69e5c7e06cd09dd97fe41a4978b3743": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Digitization - the process of converting hits generated in the transport simulation into the format of the electronics detector output - is managed by the `o2-sim-digitizer-workflow` executable. This executable is structured as a [DPL workflow] (https://github.com/AliceO2Group/AliceO2/blob/dev/Framework/Core/README.md). Key components of this workflow include:\n- A **SimReader** process, tasked with analyzing simulation data/kinematics and establishing the digitization context. This context details aspects like the timeframe structure (bunch crossing properties and interaction rate) and the method for merging background and signal hits.\n- Specific **Digitizer processors** for each detector, which handle the actual digitization, receiving the digitization context from the SimReader.\n- **IO processors** for each detector, responsible for writing the digitized data to files.\n- A **GRP updater** process, which updates the GRP file with information gathered during the digitization process.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "353c959c8ef2f3fa10f60a80915c49a12895fd9f9efd3f83450a6b9976f88ce4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Usage overview:\n* **Quick start example:** A basic invocation looks like\n\n    ```o2-sim-digitizer-workflow [--sims foo] -b``` \n\n    which starts the digitization process for all detectors involved in a simulation with the default prefix `foo` (set to o2sim by default) and processes all events using the standard bunch crossing configuration. All digitizers operate in parallel.\n\n* **More advanced example:** \n\n    ```o2-sim-digitizer-workflow --sims bkg,sgn --interactionRate 1e6 --onlyDet TPC,ITS -b``` \n\n    which initiates the digitization for the TPC and ITS detectors with a specified LHC interaction rate. This example also combines digitization results from both background (using prefix bkg) and signal (using prefix sgn) simulations.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "c5a42c57d9696d38e7f6434506540d3a2b86d7bb27b37be7dfb4f67f6e89a4dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "* **Generated output**: The digitization process produces the following output files:\n\n| File                  | Description                                                                            |\n| --------------------- | -------------------------------------------------------------------------------------- |\n| `collisioncontext.root` | Holds details about the collision/digitization context utilized in this digitization. It includes the list of input files, the composition of collisions for the digit embedding process, and timestamps assigned.  |\n| `XXXdigits.root` | Usually one digit file per detector XXX in a timeframe format. This file also generally contains mappings of digit indices to MC labels. |\n| `o2simdigitizerworkflow_configuration.ini` | Summarizes the parameters used during the digitization process. |\n\n\n* **Main command line options**: The following significant options are available:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "4f993c464d16685df61175bbdb7771b53125d07c00091dcd358103943036cd67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| Option                | Description                                                                            |\n| --------------------- | -------------------------------------------------------------------------------------- |\n| -h,--help     | Displays the list of available command line options and their default values.           |\n| --sims | A comma-separated list of simulation prefixes for overlay/embedding. For example, `--sims background,signal` where `background` and `signal` represent different transport simulation productions. Final collisions are formed from both (using a round robin approach). For more information, see the [Embedding](#Embedding) section. If only one prefix is specified, standard digitization without overlay is performed. |\n| --tpc-lanes | The number of parallel TPC digitizers, considering the increased data rate compared to other detectors. |\n| --interactionRate | The total hadronic interaction rate (Hz). |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "6bebd8860abc9270641bf14df2896645ed8b2ad74cc988a8734b1f82088a1652": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| --interactionRate | Total rate of hadronic interactions (Hz). |\n| --bcPatternFile | File defining a different bunch crossing pattern than the default, see `macro/CreateBCPattern.C` for more details. |\n| --onlyDet | List of detectors to be digitized, separated by commas (default is all). |\n| --skipDet | List of detectors to exclude from digitization, separated by commas. |\n| --incontext | Name of the context file to be used, useful for reusing a context from a prior run when processing detectors separately. |\n| --outcontext | Specify the name of the context file to be created. |\n| --simFileQED | Optional QED hit file that can be included to incorporate the effects of QED into the digitization process. |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "9d09ea6cad2be4ea11a3eaf2bebb9d7061da7f94f19384389d9b22e1f69433a2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Interaction Sampling <a name=\"Interaction sampling\"></a>\n\nThe output files from `o2-sim` contain individual events without any time stamps. The digitization process will sample the vector of non-decreasing `{BC/orbit}` pairs based on the bunch filling pattern and the specified interaction rate, then pass them to the digitizers.\nThe interaction sampling is controlled by the `HBFUtils` configurable parameters, for example:\n\n```o2-sim-digitizer-workflow --configKeyValues \"HBFUtils.nHBFPerTF=128;HBFUtils.orbitFirst=123;HBFUtils.orbitFirstSampled=300\"```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "2abe8ecb7e42bcaad888669c851c364fa386ea1b2b069619ec555eb874c09257": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The key element is `HBFUtils.orbitFirstSampled`, which instructs `InteractionSampler` about the starting orbit for sampling. Other parameters, `nHBFPerTF` and `orbitFirst`, do not直接影响数字化过程，但它们被存储在`grp`对象中(`o2sim_grp.root`文件)并记录了每个TF的轨道数量及运行的第一个轨道。\n`HBFUtils`的完整内容存储在`o2simdigitizerworkflow_configuration.ini`中，并在重建和MC到原始数据转换过程中使用。\n特别地，在生成原始数据时(参见`O2/prodtests/full_system_test.sh`中的`...-digi2raw`组命令)，`HBFUtils`的设置将从这个ini文件中加载(可以通过`--hbfutils-config <ini-file>`选项更改文件名)，`HBFUtils.orbitFirst`用于确定运行的起始标志(`RDH中的SOX标志`)，`HBFUtils.nHBFPerTF`用于将数字化数据分割成TF。",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "d6d9b1c2129f08862dde0573ab540810459e7adbae845acda8955c57da3940b3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "It is important to note that for detectors operating in continuous readout mode, empty HBFs will be generated for all orbits without detector data between the `SOX` and the final orbit of the TF that contains received data. If you wish to start creating raw data from the first sampled TF, you can modify `HBFUtils.orbitFirst` to the desired orbit. For instance, as shown in the example above, one could set\n\nThis maintains the same meaning and length as the original text.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "963880e7e3aa14a4b4f7094dea08ef6431bb66de9f946c0960e202a0ec7578d2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```o2-ft0-digi2raw --configKeyValues \"HBFUtils.orbitFirst=251\" ...```\n\nto initiate raw data generation starting from orbit 251 instead of the orbit 123 specified during the digitization process (i.e., the second TF of the run). An additional setting `HBFUtils.maxNOrbits` can be specified to constrain the number of orbits included (counted from the `SOX`) in the raw data (i.e., any data with `orbit > HBFUtils.orbitFirst + HBFUtils.maxNOrbits` will be excluded during the creation of the raw data).",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "0ed67a70f84f7f0a18b3e11580d6bbc441edb8367c481f445aaba45bb3d9c1c8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Similarly, during the reconstruction workflow, the `HBFUtils` settings utilized by `o2-sim-digitizer-workflow` will be loaded (though they can be overridden by using the `--hbfutils-config <ini-file>` option or by specifying `--configKeyValues \"HBFUtils...` directly). The DPL ensures that the `DataHeader.firstTForbit` matches the 1st orbit of the TF containing `HBFUtils.orbitFirstSampled`, and for subsequent TFs, it increments by `HBFUtils.nHBFPerTF` if the digitized files contain multiple TF entries.\n\n## Embedding <a name=\"Embedding\"></a>\n\n## Monte Carlo Labels <a name=\"MCLabels\"></a>\n\nWe can link digits to the original tracks/particles from the transport simulation to maintain information about their origin. This provenance can be preserved through reconstruction and analysis, aiding in studies of reconstruction efficiencies and more.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "513d79607373e5e31b9fa769a935150f3f0325c0a83b51bdd26ce3a7db330fca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "For this purpose, a specialized data object `MCCompLabel` is provided, enabling the encapsulation of identifiers for track, event, and source kinematics files. \n```c++\n  MCCompLabel(int trackID, int evID, int srcID, bool fake = false)\n```\nThis data should suffice for locating and loading the specific Monte Carlo track ([refer here](#MCReader)).\n\nLinking digits to an arbitrary set of labels is achieved by populating a **separate** and **dedicated** container called `MCTruthContainer`, which is written as a distinct branch in the output file alongside the branch for digits. This approach ensures that digits remain closely aligned with raw data while allowing for an unlimited number of labels with minimal memory overhead.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "c0da3c3843b5c5aed1676622d3232bc8996ba39ef26d7fb0ec099b6ba8ddd028": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The procedure is as follows: For a group of digits allocated for detector `foo`\n```c++\nstd::vector<o2::foo::Digits> mDigits;\n```\nwe maintain an additional container for labels of type:\n```c++\no2::dataformats::MCTruthContainer<o2::dataformats::MCCompLabel> mLabelContainer;\n```\nAccessing the labels is done through positional correspondence: Labels for the digit at position `pos` can be retrieved as follows:\n```c++\nconst auto& digit = mDigits[pos];\n// provides an iterable view of labels\nconst auto& labels_for_digit = mLabelContainer.getLabels(pos);\n// iterate over the labels\nfor (auto& label : labels_for_digit) {\n   // process the label\n}\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "b1474e1cdbc65762688ba14aaf5894301758fcf17c225babe637844bdddae38d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "If the positional correspondence is too weak, an alternative approach is to store the corresponding data index in the label container within the digit itself:\n```c++\nconst auto& digit = mDigits[pos];\n// provides an iterable view of labels\nconst auto& labels_for_digit = mLabelContainer.getLabels(digit.labelindex);\n// iterate through labels\nfor (auto& label : labels_for_digit) {\n   // process label\n}\n```\n\n\n## Accessing Monte Carlo Kinematics<a name=\"MCReader\"></a>\n\nFollowing the digitization process, the `MCKinematicsReader` class can be utilized to load and access the Monte Carlo tracks. This class requires the digitization context file, which is generated during the digitization step. After initialization, it can provide access to the tracks linked to a Monte Carlo label.\n\nA typical code example might look like:\n```c++\n// initialize the reader using the context\no2::steer::MCKinematicsReader reader(\"collisioncontext.root\");\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "f8747f63facbd76e08d9eb8d0925b7f44cb38678a5b36fadb1bc6e8e81edcac4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "// load digits from the digits file and store them in alldigits\n// load the label container from the digits file and save it in labelcontainer\n\n// the code iterates over all the digits and retrieves the tracks that contributed to each digit\n\nfor (int pos = 0; pos < alldigits.size(); ++pos) {\n  const auto& digit = alldigits[pos];\n  const auto& labels_for_digit = labelcontainer.getLabels(pos);\n  // loop through the labels\n  for (auto& label : labels_for_digit) {\n     track = reader.getTrack(label);\n     // perform actions with the track\n  }\n}\n```\nNote that one can also access kinematics directly after the transport simulation. \nTo do so, initialize the MCKinematicsReader in a different mode:\n```c++\n// initialize the reader from the transport kinematics file (assuming the prefix is o2sim)\no2::steer::MCKinematicsReader reader(\"o2sim\", o2::steer::MCKinematicsReader::Mode::kMCKine);\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "16c1f27e4c20df87bd7cf6065845178aff6e14d9eb73bc748580fa3ded617f0f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "// Loop through every event in the file\nfor (int event = 0; event < reader.getNEvents(0); ++event) {\n  // Retrieve all Monte Carlo tracks for this specific event\n  const std::vector<MCTrack>& tracks = reader.getTracks(event);\n\n  // Process the tracks\n}\n```\n\n\n# Simulation Tutorials/Examples <a name=\"Examples\"></a>\n\nA collection of examples demonstrating the use of simulation and digitization can be found in the [examples folder](../run/SimExamples). Additional resources include the scripts utilized for regression testing in [prodtests](../prodtests).",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "2e5626d35804e85c1469576a83e595c41039a72473dedd7383af94ccd806c0b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| Example               | Short Description                                                                      |\n| --------------------- | -------------------------------------------------------------------------------------- |\n| [HF_Embedding_Pythia8](../run/SimExamples/HF_Embedding_Pythia8) | Demonstrates setting up a detailed HF simulation for embedding purposes.          |\n| [AliRoot_Hijing](../run/SimExamples/AliRoot_Hijing) | Illustrates using Hijing within AliRoot for generating events.                       |\n| [AliRoot_AMPT](../run/SimExamples/AliRoot_AMPT) | Provides guidance on utilizing AMPT within AliRoot for event generation.            |\n| [Adaptive_Pythia8](../run/SimExamples/Adaptive_Pythia8) | Complex example showcasing **generator configuration for embedding** that adapts to the background event. |\n| [Signal_ImpactB](../run/SimExamples/Signal_ImpactB) | Example highlighting **generator configuration for embedding** that adjusts based on the impact parameter of the background event. |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "abedb41f7ad6eef67993fbb7a39c9bf2ea43eeb27f1a08717eed30842b12fbc2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| [PrimaryKinematics](../run/SimExamples/JustPrimaryKinematics) | Example illustrating how to retrieve only primary kinematics using transport configuration |\n| [HepMC_STARlight](../run/SimExamples/HepMC_STARlight) | Basic example demonstrating **generator setup** that executes an independent `STARlight` generation connected to `o2` through a `HepMC` file |\n| [Jet_Embedding_Pythia](../run/SimExamples/Jet_Embedding_Pythia8) | Advanced example showcasing **generator setup**, **digitization embedding**, and **MCTrack accessibility** |\n| [Selective_Transport](../run/SimExamples/Selective_Transport) | Simple example demonstrating how to run a simulation with transport limited to a customizable set of particles |\n| [Selective_Transport_pi0](../run/SimExamples/Selective_Transport_pi0) | Advanced example illustrating the use of inhibit-pause-trigger-continue method in a simulation run |\n| [Custom_EventInfo](../run/SimExamples/Custom_EventInfo) | Simple example demonstrating how to include custom data in the MC event header |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "98a88cbe42efdcc7fad8cb69b5131347a71b5f0dc2fb53cae8f5759a3d843209": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| [sim_challenge.sh](../prodtests/sim_challenge.sh) | A basic example that performs a straightforward transport, digitization, and reconstruction pipeline across the entire detector. Each stage leverages parallelism. |\n| [sim_performance.sh](../prodtests/sim_performance_test.sh) | A fundamental example showcasing a serial transport and a linearized digitization sequence, processing one detector at a time. It acts as a benchmark for performance. |",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DetectorSimulation.md"
        }
    ],
    "f3ab7f570a98aba12a0f89f81c882655eccfced56979e8538ee1d95e0652fa6c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refdocDoxygenInstructions Doxygen Instructions\n/doxy -->\n\n# Doxygen \n\n## Guidelines for Contributors\n\nThe Doxygen documentation pages are generated from `README.md` files located within the O2 directories. \n\nThe connections between the Doxygen pages and their subpages are established using Doxygen `page` and `subpage` keywords. Each `README.md` file should start with a Doxygen `page` tag, and if the module includes additional documentation pages (typically found in sub-directories), these must be linked using the Doxygen `subpage` tag. Special markdown comments are employed to prevent the rendering of Doxygen keywords on GitHub.\n\n*When creating a new documentation page, it is essential to include a `\\subpage` declaration in the upper-level category page to ensure your page does not clutter the \"global\" references displayed in the left-hand tab menu.*",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DoxygenInstructions.md"
        }
    ],
    "7d131b27e2ca9ac7737231421df4b54f52de02adf3700baf5bf0ef3051e281fa": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "See the examples of `README.md` files at the top level and within submodules, or refer to <a href=\"https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DoxygenInstructions.md\">this link</a> if you are working with Doxygen documentation.\n\n<!--  /// \\cond EXCLUDE_FOR_DOXYGEN -->\n\n#### An example of a `README.md` file at the top level in the O2 directories.\n\n```\n<!-- doxy\n\\page refModulename Module 'Modulename'\n/doxy -->\n\n# Module Title\n\nDescription of the module.\n\n<!-- doxy\nThis module includes the following submodules:\n\n* \\subpage refModulenameSubmodulename1\n* \\subpage refModulenameSubmodulename2\n* \\subpage refModulenameSubmodulename3\n/doxy -->\n```\n#### Example of a `README.md` file at the submodule level:\n\n```\n<!-- doxy\n\\page refModulenameSubmodulename1 Submodulename1\n/doxy -->\n\n# Submodule1 Title\n\nDescription of Submodule1.\n```\n<!--  /// \\endcond  -->",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DoxygenInstructions.md"
        }
    ],
    "2e7c9eef443f79391875d46178f9713e970b2959cc4c8edd3477dc80a28d8430": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The paragraph(s) with the submodule description.\n```\n<!--  /// \\endcond  -->\n\nThe `Modulename` and `Submodulename` within the `page` and `subpage` tags should match exactly (including case sensitivity) with the directory names.\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/DoxygenInstructions.md"
        }
    ],
    "559b5631205e7a672ae92b427d361e77b174c2c6a32c2086173c5bb027800766": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\\page refdocCMakeInstructions Guidelines for Using CMake\n\n\\cond DOXYGEN_IGNORE\n/doxy -->\n\n<!-- vim-markdown-toc GFM -->",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "de30f5f328cd9805b22874e3d2100d1be2c39a55d2fde5a4c11c3bda985f0f03": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\\cond DOXYGEN_IGNORE\n/doxy -->\n\n<!-- vim-markdown-toc GFM -->\n\n* [CMake and CTest guidance for AliceO2](#cmake-and-ctest-guidance-for-aliceo2)\n  * [CMake](#cmake)\n    * [Guidelines for contributors (developer documentation)](#guidelines-for-contributors-developer-documentation)\n    * [Sample CMakeLists.txt](#sample-cmakeliststxt)\n    * [Examples](#examples)\n      * [Ex1 Adding a basic library](#ex1-adding-a-basic-library)\n      * [Ex2 Adding a basic library with a Root dictionary](#ex2-adding-a-basic-library-with-a-root-dictionary)\n      * [Ex3 Adding an executable](#ex3-adding-an-executable)\n      * [Ex4 Adding a couple of tests](#ex4-adding-a-couple-of-tests)\n      * [Ex5 Adding a man page](#ex5-adding-a-man-page)\n  * [CTest](#ctest)\n    * [Filtering tests by name (-R/-E)](#filtering-tests-by-name--r-e)\n    * [Filtering tests by label (-L/-LE)](#filtering-tests-by-label--l-le)\n    * [Improving ctest execution speed](#improving-ctest-execution-speed)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "250dd00aba1dd62d91e8cb2e5603a77613fddbe78c5b972d64355cf4ffe72dee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- vim-markdown-toc -->\n\n<!-- doxy\n\\endcond\n/doxy -->\n\n# CMake and CTest Guidelines for AliceO2\n\n## CMake\n\nPlease note that this document covers the [new CMake system](CMakeMigration.md); the previous system based on buckets is no longer in use.\n\n### Instructions for Contributors (Developer Documentation)\n\nA sub-module `CMakeLists.txt` specifies one or more _targets_.\nA target usually represents a build product, such as a (static or shared) library or an executable. Targets are the fundamental building blocks of any modern CMake build system.\n\n### Example CMakeLists.txt\n\nA typical module's `CMakeLists.txt` includes\n\n- a call to [o2_add_library](../cmake/O2AddLibrary.cmake) to define a library (and its dependencies)\n- one or more calls to [o2_add_executable](../cmake/O2AddExecutable.cmake) to define executables (and their dependencies)\n- one or more calls to [o2_add_test](../cmake/O2AddTest.cmake) to define tests (and their dependencies)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "b30976b1d89f2d00342409ecb2967b5955ebf6de3378564eee0f13d96036cf34": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Optionally, it may include a call to [o2_target_root_dictionary](../cmake/O2TargetRootDictionary.cmake) if the module's library needs a Root dictionary.\n\nAll _direct_ dependencies should be _explicitly_ listed using the `PUBLIC_LINK_LIBRARIES` keyword in the various o2_xxx functions.\n\nKeep in mind that, although the parameter name suggests otherwise, `PUBLIC_LINK_LIBRARIES` should reference _target_ names, not library names. You must use the fully qualified `O2::targetName` instead of the shortened `basename` used to define the target. Additionally, if the referenced target does not exist, CMake will inform you during the configuration stage, which is beneficial.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "1e11ba1a3c19b4b97cec4abc23f394dc32f0dcbc318dbb59b39fa45673842d95": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Note that CMakeLists.txt should also be treated as code, and therefore, the same attention to detail you use in writing code (such as avoiding code duplication, adding comments, etc.) should be applied to it. Similar to the rest of our code, we can format it using the [cmake-format](https://github.com/cheshirekow/cmake_format) tool (while this tool isn't as advanced as `clang-format`, it can still handle most of the formatting tasks efficiently).\n\n### Examples\n\nThe example outputs below are from a Mac, so the shared library extension is `dylib`. On Linux, it would be `so`.\n\n#### [Ex1](../Examples/Ex1) Adding a Basic Library\n\nGiven the following source directory structure :\n\n    Ex1\n    ├── CMakeLists.txt\n    ├── include\n    │   └── Ex1\n    │       └── A.h\n    └── src\n        ├── A.cxx\n        ├── B.cxx\n        └── B.h\n\nWith the `CMakeLists.txt` file containing :\n\n    o2_add_library(Ex1 SOURCES src/A.cxx src/B.cxx PUBLIC_LINK_LIBRARIES FairMQ::FairMQ)\n\nthis will create a library with two source files, which depend on the FairMQ::FairMQ target.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "cdf7ec05cb8a25239d32aa8a82480483fabd9d40a495db1dd69d753f72d9b67b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The document will outline a library composed of 2 source files, which relies on the FairMQ::FairMQ target.\n\nUpon executing `cmake --build .`, you will locate the library in the `stage/lib` directory. For example, on a Mac:\n\n    > ls stage/lib/*Ex1*\n    stage/lib/libO2Ex1.dylib\n\nTo inspect the built library dependencies, use `otool -L` on macOS or `ldd` on Linux.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "903f9b6fc9815fd63e9fb5617075786bcd8dcbaa31dce0b1981a00b083831709": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "> otool -L stage/lib/libO2Ex1.dylib\nstage/lib/libO2Ex1.dylib:\n            @rpath/libO2Ex1.dylib (compatibility version 0.0.0, current version 0.0.0)\n            @rpath/libFairMQ.1.4.dylib (compatibility version 1.4.0, current version 1.4.2)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_container.dylib (compatibility version 0.0.0, current version 0.0.0)\n            /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.250.1)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_program_options.dylib (compatibility version 0.0.0, current version 0.0.0)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_filesystem.dylib (compatibility version 0.0.0, current version 0.0.0)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_system.dylib (compatibility version 0.0.0, current version 0.0.0)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "f37656e507ab14b166f4e4868b6a87b0b05d0cf59e778b468324d78d6aa44c17": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "/Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_regex.dylib (compatibility version 0.0.0, current version 0.0.0)\n            @rpath/libFairLogger.1.2.dylib (compatibility version 1.2.0, current version 1.2.0)\n            /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 400.9.4)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "df68cde3140f971f4e12deca1fddc5ed4990b4dd7dc2c517425392621cc2e0b1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The direct dependency on `FairMQ` can be found easily. The other dependencies, such as `boost` and `FairLogger`, are transitive, meaning they are included by `FairMQ` and CMake adds them automatically.\n\nAfter running the command `cmake --build . -- install` (note the singular `--` is intentional), the library will be located in the `lib` directory under the installation path, while its public header files (only `A.h` in this case) will be in the `include/Ex1` directory:\n\n```\n> ls [install_topdir]\n├── include\n│   ├── Ex1\n│   │   └── A.h\n├── lib\n│   └── libO2Ex1.dylib\n```\n\n#### [Ex2](../Examples/Ex2) Incorporating a basic library with a Root dictionary\n\nBuilding upon the previous example (where `A.h` now employs `ClassDef`), we will now integrate a Root dictionary:\n\n```\nEx2\n├── CMakeLists.txt\n├── include\n│   └── Ex2\n│       └── A.h\n└── src\n    ├── A.cxx\n    ├── B.cxx\n    ├── B.h\n    └── Ex2LinkDef.h\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "967dd2f9dcbffc35c439ac646ce16b86234d9c3346a48ff1262c882f5203bb64": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The command `o2_add_library(Ex2 SOURCES src/A.cxx src/B.cxx PUBLIC_LINK_LIBRARIES FairMQ::FairMQ)` will create a library that depends on the `FairMQ::FairMQ` target and includes three source files (the specified `A.cxx` and `B.cxx` files, plus a dictionary generated by `o2_target_root_dictionary`). Additionally, the `o2_target_root_dictionary` function not only adds a dictionary source file but also includes a dependency on the `ROOT::RIO` target for the dictionary component, which is necessary at link time.\n\nThe `HEADERS` parameter for `o2_target_root_dictionary` is required, but the `LINKDEF` parameter can be left out if a LinkDef file named `[targetBaseName]LinkDef.h` is located in the `[targetBaseName]` source directory (as in the example, where `src/Ex2LinkDef.h` could have been omitted).",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "91d1fa9af0176236453967c3c95e0b0daa8ce0d28f3aec0d58585741b5fea998": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "When you execute `cmake --build .`, you will observe the presence of a `rootmap` file and a `pcm` file alongside the library in the `stage/lib` directory. These files need to be placed together with the library to facilitate easy loading from the Root prompt.\n\n```\nls stage/lib/*Ex2*\nstage/lib/G__O2ExDict_rdict.pcm\nstage/lib/libO2Ex2.dylib\nstage/lib/libO2Ex2.rootmap\n```\n\nExamining the dependencies of libO2Ex2 reveals that they include those of libO2Ex1, plus additional ROOT dependencies due to the dictionary inclusion.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "30e6f0d80444d1be1c814fbf43821d6100a66cadab855cc8786dff3266b628d9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "> otool -L stage/lib/libO2Ex2.dylib\nstage/lib/libO2Ex2.dylib:\n            @rpath/libO2Ex2.dylib (compatibility version 0.0.0, current version 0.0.0)\n            @rpath/libFairMQ.1.4.dylib (compatibility version 1.4.0, current version 1.4.2)\n            @rpath/libRIO.6.16.so (compatibility version 6.16.0, current version 6.16.0)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_container.dylib (compatibility version 0.0.0, current version 0.0.0)\n            /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.250.1)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_program_options.dylib (compatibility version 0.0.0, current version 0.0.0)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_filesystem.dylib (compatibility version 0.0.0, current version 0.0.0)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "e13376f03f8ff08be5a7e4a79faf8c4ee3c6d2f26e02f68a4710af801d18d6a3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "/Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_system.dylib (compatibility version 0.0.0, current version 0.0.0)\n    /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_regex.dylib (compatibility version 0.0.0, current version 0.0.0)\n    @rpath/libFairLogger.1.2.dylib (compatibility version 1.2.0, current version 1.2.0)\n    @rpath/libThread.6.16.so (compatibility version 6.16.0, current version 6.16.0)\n    @rpath/libCore.6.16.so (compatibility version 6.16.0, current version 6.16.0)\n    /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 400.9.4)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "ef6a0f941fb58359c2680b983caa55aa813738532b45d355998b1e4584aa3833": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The include installation will resemble that of Ex1: the `LinkDef.h` file is _not_ included (unless you place it in include/Ex2, but that is not advisable).\n\n    > ls [install_topdir]\n    ├── include\n    │   ├── Ex2\n    │       └── A.h\n    ├── lib\n    │   ├── G__O2ExDict_rdict.pcm\n    │   ├── libO2Ex2.dylib\n    │   ├── libO2Ex2.rootmap\n\n#### [Ex3](../Examples/Ex3) Incorporating an Executable\n\nBuilding on the previous example, Ex3 now includes an executable:\n\n    Ex3\n    ├── CMakeLists.txt\n    ├── include\n    │   └── Ex3\n    │       └── A.h\n    └── src\n        ├── A.cxx\n        ├── B.cxx\n        ├── B.h\n        ├── Ex2LinkDef.h\n        └── run.cxx\n\n    o2_add_library(Ex3\n            SOURCES src/A.cxx src/B.cxx\n            PUBLIC_LINK_LIBRARIES FairMQ::FairMQ)\n\n    o2_target_root_dictionary(Ex3\n            HEADERS include/Ex3/A.h src/B.h)\n\n    o2_add_executable(ex3\n            SOURCES src/run.cxx\n            PUBLIC_LINK_LIBRARIES O2::Ex3 O2::Ex2\n            COMPONENT_NAME example)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "ad0dc88d0aa0ace68123f98fbb9b3017771d6b5ecf27bf54f9a2e5c3730c8aee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In the `o2_add_executable`, there are three key points to consider.\n\nFirst, the `Ex3` library, which is built within the same module and referred to by its fully qualified name `O2::Ex3`, is referenced. Simply using `Ex3` would not be effective because it does not correspond to a defined target (`Ex3` is merely the target base name). Similarly, the \"external\" (to this module) `Ex2` library is referenced using its fully qualified name `O2::Ex2`. Both the target dependencies and include dependencies are gathered, ensuring that the necessary include directories, such as `include/Ex2`, are correctly located during compilation.\n\nSecond, the `COMPONENT_NAME` argument is utilized, which will be part of the executable name. Consequently, the output executable will be named `o2-example-ex3`, adhering to our [naming convention for executables](https://rawgit.com/AliceO2Group/CodingGuidelines/master/naming_formatting.html#Executable_Names).",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "e13343884ee87f1b8eb844740c508bd09c505c8e3ad8c4b4bc7b78b191b055c5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Runtime dependencies for the executable can be identified using either the `otool -L` command on macOS or the `ldd` command on Linux:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "87e641ee09d879ccd1c4a5f832e78c8e92ed1900517e8857c2f8ca66ab6319b9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "> otool -L stage/bin/o2-example-ex3\nstage/bin/o2-example-ex3:\n            @rpath/libO2Ex3.dylib (compatibility version 0.0.0, current version 0.0.0)\n            @rpath/libO2Ex2.dylib (compatibility version 0.0.0, current version 0.0.0)\n            @rpath/libFairMQ.1.4.dylib (compatibility version 1.4.0, current version 1.4.2)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_container.dylib (compatibility version 0.0.0, current version 0.0.0)\n            /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.250.1)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_program_options.dylib (compatibility version 0.0.0, current version 0.0.0)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_filesystem.dylib (compatibility version 0.0.0, current version 0.0.0)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "803279254391842fd34eec2f8622ddbb0fdb798afdee2753f52907c741ab5967": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "/Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_system.dylib (compatibility version 0.0.0, current version 0.0.0)\n            /Users/laurent/alice/cmake/sw/osx_x86-64/boost/v1.68.0-1/lib/libboost_regex.dylib (compatibility version 0.0.0, current version 0.0.0)\n            @rpath/libFairLogger.1.2.dylib (compatibility version 1.2.0, current version 1.2.0)\n            @rpath/libRIO.6.16.so (compatibility version 6.16.0, current version 6.16.0)\n            @rpath/libThread.6.16.so (compatibility version 6.16.0, current version 6.16.0)\n            @rpath/libCore.6.16.so (compatibility version 6.16.0, current version 6.16.0)\n            /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 400.9.4)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "ce6053d74d34294969cce0583526ddf530d79d16bd2a1b767535a19a791cfccb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In the documentation, you can observe the dependencies on the Ex2 and Ex3 libraries, as well as their dependencies (FairMQ, ROOT) and their respective dependencies (FairLogger).\n\nAdditionally, the generated executable can be run directly from the build directory without needing to configure the `PATH` or `LD_LIBRARY_PATH` environment variables.\n\n    > stage/bin/o2-example-ex3\n    Hello from ex2::A ctor\n    Hello from ex3::A ctor\n\nThis is due to the correct setting of the [RPATH](https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/RPATH-handling) by CMake for the build directory. It should also be correctly configured during the installation process.\n\n#### [Ex4](../Examples/Ex4) Incorporating a Few Tests\n\nWe will include two simple tests in our existing example.\n\n    o2_add_test(test1\n                SOURCES test/test1.cxx\n                PUBLIC_LINK_LIBRARIES O2::Ex4\n                COMPONENT_NAME Ex4\n                LABELS fast dummy obvious\n                INSTALL)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "65d6ebccba4f638e20fffb7e1493639383ec0d493ad0c35e1ba9d0d66715f98b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    o2_add_test(test2\n                SOURCES test/test2.cxx\n                PUBLIC_LINK_LIBRARIES O2::Ex4 O2::Ex3 O2::Ex2\n                COMPONENT_NAME Ex4\n                LABELS fast dummy)\n\nThese test executables will be located in `stage/bin` with names beginning with `o2-test-ex4` (i.e., the COMPONENT_NAME is utilized and converted to lowercase):\n\n    stage/\n    ├── bin\n    │   ├── o2-example-ex3\n    │   ├── o2-example-ex4\n    │   ├── o2-test-ex4-test1\n    │   └── o2-test-ex4-test2\n    └── lib\n        ├── libO2Ex1.dylib\n        ├── libO2Ex2.dylib\n        ├── libO2Ex3.dylib\n        └── libO2Ex4.dylib\n\nBy default, tests are not installed; however, if the `INSTALL` option is specified for `o2_add_test`, they will be installed. Thus, in the installation directory, only the initial test will be present in the `tests` subdirectory. A complete installation of our four examples would result in:\n\n    stage/\n    ├── bin\n    │   ├── o2-example-ex3\n    │   ├── o2-example-ex4\n    │   ├── o2-test-ex4-test1\n    │   └── o2-test-ex4-test2\n    └── lib\n        ├── libO2Ex1.dylib\n        ├── libO2Ex2.dylib\n        ├── libO2Ex3.dylib\n        └── libO2Ex4.dylib",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "4f9b84882572aa470a2ab2dc4e45e34a795a6d7d51e25206f193d51102601622": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ../install-Debug/\n    ├── bin\n    │   ├── o2-example-ex3\n    │   └── o2-example-ex4\n    ├── include\n    │   ├── Ex1\n    │   │   └── A.h\n    │   ├── Ex2\n    │   │   └── A.h\n    │   ├── Ex3\n    │   │   └── A.h\n    │   └── Ex4\n    │       └── A.h\n    ├── lib\n    │   ├── G__O2Ex2Dict_rdict.pcm\n    │   ├── G__O2Ex3Dict_rdict.pcm\n    │   ├── G__O2Ex4Dict_rdict.pcm\n    │   ├── libO2Ex1.dylib\n    │   ├── libO2Ex2.dylib\n    │   ├── libO2Ex2.rootmap\n    │   ├── libO2Ex3.dylib\n    │   ├── libO2Ex3.rootmap\n    │   ├── libO2Ex4.dylib\n    │   └── libO2Ex4.rootmap\n    ├── share\n    │   └── config\n    │       └── rootmanager.dat\n    └── tests\n        └── o2-test-ex4-test1\n\nThe typical structure of our tests relies on the [Boost.Test](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html) framework, which is automatically included by the `o2_add_test` function unless the `NO_BOOST` option is explicitly specified.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "9336e80fb1b58b83dabe6b036a4fc21cb21f44763ddd1e399c82e3fe5936fee8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Finally, take note of the `LABELS` (plural) option, which is useful for categorizing tests and/or choosing which tests to execute.\n\n> ctest\nTest project /Users/laurent/alice/cmake/standalone/O2/build-Debug\n    Start 1: O2test-ex4-test1\n1/3 Test #1: O2test-ex4-test1 ......................   Passed    0.07 sec\n    Start 2: O2test-ex4-test2\n2/3 Test #2: O2test-ex4-test2 ......................   Passed    0.07 sec\n    Start 3: ensure-executable-naming-convention\n3/3 Test #3: ensure-executable-naming-convention ...   Passed    0.03 sec\n\n100% tests passed, 0 tests failed out of 3\n\nLabel Time Summary:\ndummy      =   0.14 sec*proc (2 tests)\nfast       =   0.14 sec*proc (2 tests)\nobvious    =   0.07 sec*proc (1 test)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "07a0b61b5cc0bfa2b768ab717590efbbe33daf7649c90077f0f8071f03fab3e6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "> ctest -L obvious # execute only tests labeled as \"obvious\"\nTest project /Users/laurent/alice/cmake/standalone/O2/build-Debug\n    Starting 1: O2test-ex4-test1\n1/3 Test #1: O2test-ex4-test1 ......................   Passed    0.07 sec\n\nAll tests passed, 0 failed out of 1\n\nLabel Time Summary:\ndummy      =   0.07 sec*proc (1 test)\nfast       =   0.07 sec*proc (1 test)\nobvious    =   0.07 sec*proc (1 test)\n\nTests can also be chosen by name using a regular expression (`-R`). Exclusion of tests can be done based on labels (`-LE`) or names (`-RE`).\n\nTest project /Users/laurent/alice/cmake/standalone/O2/build-Debug\n    Starting 2: O2test-ex4-test2\n1/2 Test #2: O2test-ex4-test2 ......................   Passed    0.07 sec\n    Starting 3: ensure-executable-naming-convention\n2/2 Test #3: ensure-executable-naming-convention ...   Passed    0.03 sec\n\nAll tests passed, 0 failed out of 2",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "17f9dd7d8c87e3cd63de7ebbe8f1ce389cc96a0940ab36df2c947737d211ef1c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "100% tests passed, with 0 out of 2 failing.\n\nLabel Time Summary:\n- dummy: 0.07 sec*proc (1 test)\n- fast: 0.07 sec*proc (1 test)\n\nIt's also important to note that some tests (very few) are executed only for certain configurations (build types). These tests are not run automatically when using the basic `ctest` command. To run these tests, you must specify the build type, for instance:\n\n```\nctest -C RelWithDebInfo\n```\n\n## CTest\n\nIn the O2 build directory, running `ctest` executes all the O2 tests, which isn't always necessary or desirable, especially during development.\n\nFortunately, as demonstrated in [Ex4](#ex4-adding-a-couple-of-tests), there are multiple methods to limit the set of tests run by `ctest`.\n\nRemember that in all commands below, the `-N` option is used to display the list of tests that would be selected without actually running them. To execute the tests, simply omit the `-N` option.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "6c6f1926827498f202d7d8514c62f967889389e5dd4d21ae4c07b9c35bdccca6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### Selecting/excluding by test name (-R/-E)\n\nThe simplest method is to use the `-R` (regexp) option to select test names:\n\n```shell\n> ctest -N -R test/Contour\n  Test #269: Detectors/MUON/MCH/Contour/test/Contour.cxx\n  Test #270: Detectors/MUON/MCH/Contour/test/ContourCreator.cxx\n\n> ctest -N -R \"test/Contour\\.(.)\"\n  Test #269: Detectors/MUON/MCH/Contour/test/Contour.cxx\n\n```\n\nAlternatively, you can use `-E` to exclude tests that match a regular expression, rather than selecting them.\n\n### Selecting/excluding by label (-L/-LE)\n\nIf tests are labeled, you can include or exclude them using `-L` or `-LE` respectively. To see all defined labels, use the `--print-labels` option.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "c20b3edceb1d0e899fa11a10b3e1f191e869c42f7faaa6c45b3a309402715eb5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```shell\n> ctest -N -L mch\n  Test #268: Detectors/MUON/MCH/Contour/test/BBox.cxx\n  Test #269: Detectors/MUON/MCH/Contour/test/Contour.cxx\n  Test #270: Detectors/MUON/MCH/Contour/test/ContourCreator.cxx\n  Test #271: Detectors/MUON/MCH/Contour/test/Edge.cxx\n  Test #272: Detectors/MUON/MCH/Contour/test/Interval.cxx\n  Test #273: Detectors/MUON/MCH/Contour/test/Polygon.cxx\n  Test #274: Detectors/MUON/MCH/Contour/test/SegmentTree.cxx\n  Test #275: Detectors/MUON/MCH/Contour/test/Vertex.cxx\n  Test #276: Detectors/MUON/MCH/Simulation/macros/drawMCHGeometry.C\n  Test #277: Detectors/MUON/MCH/Simulation/macros/drawMCHGeometry.C_compiled\n```\n\n### Enhancing ctest Execution Speed\n\nIt's worth noting that `ctest` allows you to run tests in parallel (unless they are specifically marked as unsafe to run in parallel) by using the `-j n` option, where `n` indicates the maximum number of tests to run concurrently.\n\nSerial execution:\n```shell",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "5c0b1f75858b624a8557c11b16eccc9f27a2dea5449d9382dd29d90d811f68bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```shell\n> ctest -L mch -LE long -E Raw\n    Begin 265: Detectors/MUON/MCH/Contour/test/BBox.cxx\n1/8 Test #265: Detectors/MUON/MCH/Contour/test/BBox.cxx .............   Success    0.04 sec\n    Begin 266: Detectors/MUON/MCH/Contour/test/Contour.cxx\n2/8 Test #266: Detectors/MUON/MCH/Contour/test/Contour.cxx ..........   Success    0.05 sec\n    Begin 267: Detectors/MUON/MCH/Contour/test/ContourCreator.cxx\n3/8 Test #267: Detectors/MUON/MCH/Contour/test/ContourCreator.cxx ...   Success    0.05 sec\n    Begin 268: Detectors/MUON/MCH/Contour/test/Edge.cxx\n4/8 Test #268: Detectors/MUON/MCH/Contour/test/Edge.cxx .............   Success    0.05 sec\n    Begin 269: Detectors/MUON/MCH/Contour/test/Interval.cxx\n5/8 Test #269: Detectors/MUON/MCH/Contour/test/Interval.cxx .........   Success    0.05 sec\n    Begin 270: Detectors/MUON/MCH/Contour/test/Polygon.cxx\n6/8 Test #270: Detectors/MUON/MCH/Contour/test/Polygon.cxx ..........   Success    0.05 sec\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "50fdbe7f7e993c915880ba0448a1e73f861be762eda94c755664aab54bdecb06": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "6/8 Test #270: Detectors/MUON/MCH/Contour/test/Polygon.cxx ..........   Passed    0.05 sec\n    Begin 271: Detectors/MUON/MCH/Contour/test/SegmentTree.cxx\n7/8 Test #271: Detectors/MUON/MCH/Contour/test/SegmentTree.cxx ......   Passed    0.05 sec\n    Start 272: Detectors/MUON/MCH/Contour/test/Vertex.cxx\n8/8 Test #272: Detectors/MUON/MCH/Contour/test/Vertex.cxx ...........   Passed    0.05 sec",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "13bb0d0fc15ab9b2e14f195bb6322b10188cc3d00c2db2cd27518acb71eec3af": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "100% tests passed, with 0 failures out of 8 tests.\n\nLabel Time Summary:\nmch     =   0.38 sec*proc (8 tests)\nmuon    =   0.38 sec*proc (8 tests)\n\nTotal test time (real) =   0.49 sec\n\n```\n\nParallel execution (on a machine with 16 cores) :\n\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "8bd7cc360ed7181fbb7959a9346eb545c25e2a255bfb69b9f758511e35cd1fd5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```shell\n> ctest -L mch -LE long -E Raw -j 16\n    Running 270: Detectors/MUON/MCH/Contour/test/Polygon.cxx\n    Running 271: Detectors/MUON/MCH/Contour/test/SegmentTree.cxx\n    Running 268: Detectors/MUON/MCH/Contour/test/Edge.cxx\n    Running 267: Detectors/MUON/MCH/Contour/test/ContourCreator.cxx\n    Running 269: Detectors/MUON/MCH/Contour/test/Interval.cxx\n    Running 266: Detectors/MUON/MCH/Contour/test/Contour.cxx\n    Running 265: Detectors/MUON/MCH/Contour/test/BBox.cxx\n    Running 272: Detectors/MUON/MCH/Contour/test/Vertex.cxx\n1/8 Test #270: Detectors/MUON/MCH/Contour/test/Polygon.cxx ..........   Success    0.08 sec\n2/8 Test #271: Detectors/MUON/MCH/Contour/test/SegmentTree.cxx ......   Success    0.08 sec\n3/8 Test #268: Detectors/MUON/MCH/Contour/test/Edge.cxx .............   Success    0.08 sec\n4/8 Test #269: Detectors/MUON/MCH/Contour/test/Interval.cxx .........   Success    0.08 sec\n5/8 Test #267: Detectors/MUON/MCH/Contour/test/ContourCreator.cxx ...   Success    0.08 sec\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "ec9539ba5fef4517ab99da7cc739851bf05d273634f0b6d49b74cd3e2c3133c0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "5/8 Test #267: Detectors/MUON/MCH/Contour/test/ContourCreator.cxx ...   Successfully Passed    0.08 sec\n6/8 Test #266: Detectors/MUON/MCH/Contour/test/Contour.cxx ..........   Successfully Passed    0.08 sec\n7/8 Test #265: Detectors/MUON/MCH/Contour/test/BBox.cxx .............   Successfully Passed    0.08 sec\n8/8 Test #272: Detectors/MUON/MCH/Contour/test/Vertex.cxx ...........   Successfully Passed    0.08 sec",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "f17db6dfbc7584c72dbd12d75103c942dd5840f2bf8d2267a9e8dd06e8eac47b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "100% of the tests passed, with no failed tests out of a total of 8.\n\nLabel Time Summary:\nmch     =   0.65 sec*proc (8 tests)\nmuon    =   0.65 sec*proc (8 tests)\n\nTotal test time (real) =   0.19 sec",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeInstructions.md"
        }
    ],
    "08abf71d046589d62bb8cd2565098c07afb1f95b6b97ab0c13ac96bcba21047a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refdocCodeOrganization Code Structure\n/doxy -->\n\n# Code Structure\n\n## Overview\n\nThe AliceO2 project is organized into various sub-modules. The detector-specific sub-modules are located within the Detectors directory, while those related to specific functions are situated in the main directory or grouped, such as Utilities.\n\nA typical submodule is structured as follows:\n\n```\n.\n|-- Common\n|   |-- CMakeLists.txt\n|   |-- doc\n|   |   `-- All documentation files\n|   |-- include\n|   |   `-- Common\n|   |       `-- Factory.h\n|   |-- src\n|   |   |-- Internal.h\n|   |   `-- Factory.cxx\n|   `-- test\n|       `-- TestFactory.cxx\n\n```\n\nDepending on the specific case, some subdirectories can be optional or added. Headers are placed in the include directory if they are part of the public interface; otherwise, they go into the src directory.\n\n### Other Repositories in AliceO2Group\n\nRepositories within the AliceO2Group adhere to the same structure.\n\n## Principles\n\nSeveral principles were established, which led to the current code structure:\n\n- Headers for the public interface are placed in the include directory.\n- Headers for internal use are placed in the src directory.\n- Detector-specific modules are grouped under the Detectors directory.\n- Function-specific modules are located in the main directory or grouped, such as Utilities.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CodeOrganization.md"
        }
    ],
    "c68acc077167e11f145acff49ca526fe49c1ba1cc64fd45d32fe05893dccd0e9": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- A _module_ represents a collection of closely related code with a shared interface, potentially resulting in one or more libraries.\n- It is preferred to isolate large, common components (modules/projects) into separate repositories within AliceO2Group on GitHub.\n- As a result, AliceO2 simplifies to a lean repository that includes:\n  - Detector-specific code (e.g., for reconstruction, simulation, calibration, or quality control).\n  - Shared elements (e.g., DataFormat, Steer-like functionalities), which are prerequisites for other components but not yet isolated into their own repositories.\n  - Broad algorithms (e.g., global tracking), which depend on multiple detectors.\n- The directory structure can be organized by detector, by function, or a combination of both. The AliceO2 repository combines a mix of detector-specific and function-based sub-modules with their respective sub-structures.\n- Naming convention: camelCase\n  - Structural elements or repeated parts are denoted with a lowercase initial (e.g., src, include, test).",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CodeOrganization.md"
        }
    ],
    "47fc323ad09bebcbeeb723bee948ed949a0b976baaa954590d7b634c4b854786": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- Elements that are repeated or form part of a structure begin with a lowercase letter (e.g., src, include, test).\n  - Conversely, labels and unique names start with an uppercase letter (e.g., Common, Detectors).\n- Why are the headers located in `MyModule/include/MyModule` rather than directly in `MyModule/include`?\n  - The challenge lies in adhering to multiple requirements. Headers need to be placed in a directory named after the module, and the code utilizing these headers must include `MyModule/xyz.h`. This must function consistently, whether within AliceO2 or in another repository, where headers could be either installed or internal. After considering various alternatives, we settled on this solution as it met our criteria without imposing overly complex CMake configurations. Should a better alternative be proposed, we would be open to adopting it.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CodeOrganization.md"
        }
    ],
    "151588c2186ab8b2231b0885f486a8ffbddba4c78b9badfae8d44a49f2df92be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refdocUpgrades Upgrades\n/doxy -->\n\n# Upgrades in the O2 Detector\n\n## Guidelines\n\nCode for detector upgrades should be placed in `Detectors/Upgrades` and\n`DataFormats/Detectors/Upgrades`. This code is compiled only if the CMake option\n`ENABLE_UPGRADES` is enabled, for instance:\n```sh\ncmake -DENABLE_UPGRADES=ON <src dir>\n```\nCMake instructions specific to upgrades should be enclosed as follows:\n```cmake\nif(ENABLE_UPGRADES)\n# ...\nendif(ENABLE_UPGRADES)\n```\nCode components to be compiled exclusively for upgrades should be protected by:\n```c++\n#ifdef ENABLE_UPGRADES\n// ...\n#endif\n```\nThe appropriate compiler definition is applied globally by default.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/Upgrades.md"
        }
    ],
    "dd74b39686d7db16731a6f43b19f46fc7707d2a02faaf7b61001dcd1667fc759": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refdocCLion CLion\n/doxy -->\n\n# CLion\n\nHere are some guidelines and suggestions for optimizing the use of the [CLion IDE from JetBrains](https://www.jetbrains.com/clion/).\n\n## Installation\n\nYou can obtain CLion from its [official website](https://www.jetbrains.com/clion/).\n\n## AliBuild Integration\n\nFor details on integrating CLion with AliBuild, refer to the documentation [here](https://aliceo2group.github.io/advanced/ides.html).\n\n## Tips\n\n### Code Formatting\n\n1. Obtain the [settings-codestyle-clion.jar file](https://github.com/AliceO2Group/CodingGuidelines/raw/master/settings-codestyle-clion.jar).\n2. Access File -> Import Settings and then import the code formatting settings.()",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CLion.md"
        }
    ],
    "3acdd853144d64aeea91afd23118346a45c4e58621483f7c2de9fae38cbe2787": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refdocModernCMakeMigration Modern CMake Migration\n/doxy -->\n\n# Transition to \"Modern\" CMake\n\n## Overview\n\nThe primary goal is to eliminate the entire bucket system, which has proven to be a poor way to address the dependency issues we face in our build system.\n\nTo achieve this, the main strategy is to shift our CMake practices towards the latest recommended methods by the CMake community.\n\nFor more detailed information, refer to various online resources such as a [blog post](https://pabloariasal.github.io/2018/02/19/its-time-to-do-cmake-right/), a [video](https://www.youtube.com/watch?v=bsXLMQ6WgIk), or a [book](https://crascit.com/professional-cmake/). The fundamental concept is to base everything on **targets** and minimize the use of variables and directory-specific functions.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "b576da10d30fa79559cc4f9ff88708127c1e763c4c92daa2c61d7d2ae5c8d939": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Since the initial CMakeLists.txt files were created a few years ago, many third-party libraries have adopted newer CMake practices, offering well-formatted `XXXConfig.cmake` files that can be utilized with `find_package(XXX)`. We should prefer these over crafting intricate `FindXXX.cmake` scripts whenever possible.\n\nTargets are typically defined using CMake's built-in functions such as `add_library` and `add_executable`, and are further configured with functions like `target_include_directories` and `target_link_libraries`.\n\nFor a long time, we debated whether to rely solely on these native CMake functions for our builds. However, doing so would result in a significant amount of redundant code across our CMakeLists.txt files and would complicate enforcing certain standards. Therefore, we opted to continue using our custom functions, as we did in the previous build system.\n\nIn contrast to the earlier system, we have attempted to:\n\n-",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "b93df34157fb7d43f238b0ffae6c536265db13358e0350c1833977157bdaab0a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "COMPARED TO THE PREVIOUS SYSTEM, WE ATTEMPTED:\n\n- To adopt function and parameter names that closely resemble those of the original CMake ones, reducing confusion for those familiar with CMake\n- To utilize functions exclusively rather than macros (unless necessary), ensuring parameters do not inadvertently affect the parent scope\n- To minimize the use of custom variables (while recognizing that variables are not inherently bad), as most of our CMakeLists.txt can be authored without them\n\n## Custom CMake Functions",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "5fac85bfcceb1f5d0a09d6fdaae0c6f91fd6dcddd4bb2a4cf915f6b411ecd9ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Custom CMake Functions\n\nAll our CMake functions are located in the [cmake](../cmake) directory. Each file within this directory defines a single function. The filenames follow the [UpperCamelCase](https://en.wikipedia.org/wiki/Camel_case) convention, whereas the function names use [snake_case](https://en.wikipedia.org/wiki/Snake_case) (CMake function names are case-insensitive, but the modern convention is to use lowercase). For example, `o2_add_executable` is defined in `cmake/O2AddExecutable.cmake`. Each function is documented in its corresponding `.cmake` file.\n\nThe primary functions currently defined are:\n\n- [o2_add_executable](../cmake/O2AddExecutable.cmake)\n- [o2_add_library](../cmake/O2AddLibrary.cmake)\n- [o2_add_header_only_library](../cmake/O2AddHeaderOnleLibrary.cmake)\n- [o2_add_test](../cmake/O2AddTest.cmake)\n- [o2_add_test_wrapper](../cmake/O2AddTestWrapper.cmake)\n- [o2_target_root_dictionary](../cmake/O2TargetRootDictionary.cmake)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "3a82f9a8e458c6d4ebf8c378a4bb340100ff4bf4e85c37969f5d5dd91f3159ba": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "All the `o2_` functions listed above require the _basename_ of a target as their initial, unnamed argument. However, the actual target name differs from this _basename_ as part of the preparation for the packaging stage. The handling of the final target name is managed by the `o2_name_target` function. Nonetheless, developers typically do not need to know the exact final name; they just need to ensure their targets are referenced as `basename` when used as the first parameter in `o2_xxx` functions or as `O2::basename` in their dependencies.\n\n## Migration Strategy\n\nThe approach will be gradual.\n\n1. Rewrite all primary CMakeLists.txt files to achieve a functional build, while ignoring more complex or less critical elements such as a) GPU-related features (both critical and challenging) b) testing of Root macros (challenging) c) generating a proper O2Config.cmake (related to packaging). This initial step acts as a proof-of-concept, nearly full-scale. Discuss the implementation choices during this phase.\n\n2. Incorporate GPU/HIP/OpenCL features.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "e11060f41a31d36ffb55c92953f56b63f7dbf69fe1c034d20ac5447801c02007": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "1. Incorporate GPU/HIP/OpenCL functionalities\n\n2. Develop O2Config.cmake creation\n\n3. Implement Root macro validation\n\n4. Refine and resolve any remaining inconsistencies (e.g., test labeling, etc.)\n\n## Step 1\n\nThis step involves modifying only `CMakeLists.txt` and `*.cmake` files, with source code changes restricted to essential cases. The primary [CMakeLists.txt](../CMakeLists.txt) was restructured, comprising several sections:\n\n- preamble: basic project definition, CMake version requirements, ctest integration\n- project-wide setup: C++ checks, build options, output directories, rpath configurations\n- external dependencies: all `find_package` calls\n- target definitions: i.e., inclusion of all sub-directories in the correct sequence\n- conclusion with testing and documentation\n\nA key change for developers is that testing (still using ctest) can now be performed directly from the build directory, eliminating the need for installation.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "d8d47f310500e572b8793b5b15730b23cc4da6f8350fe4f6a106e7bb3dba9799": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The key differences from the previous setup are summarized below.\n\n### Preamble\n\nCMake 3.13 remains the minimum required version. Although 3.14 would be beneficial, it's not essential. It's worth noting that with our planned CMake 3.15, some new generator expressions features, like [REMOVE_DUPLICATES](https://gitlab.kitware.com/cmake/cmake/issues/18210), may be useful, potentially justifying a CMake version upgrade at that time.\n\n### Project-wide Setup\n\nThis section includes essential checks (such as prohibiting in-source builds), conducts CXX compiler feature checks, sets default build options ([details here](../cmake/O2DefineOptions.cmake)), defines output directories and RPATH settings. The `BUILD_SIMULATION` option is highlighted: currently, it's used mainly to fetch additional dependencies, but we might consider integrating all simulation-related components of O2 into an optional component in the future, though that isn't the current plan.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "3721c3541330f75bdacfb2a837330b4ded7d09ae6fb660481a41337c9d40fc31": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In contrast to earlier implementations, a new `stage` directory was incorporated into the build tree, serving as the primary location for most build outputs, such as `bin`, `lib`, and `share` directories, rather than at the top-level build directory.\n\n### External Dependencies\n\nThird-party dependencies are managed through [dependencies/CMakeLists.txt](../dependencies/CMakeLists.txt). Typically, `find_package` commands employ the `CONFIG` mode, unless a specific use case necessitates the `MODULE` variant.\nNotably:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "968f528bf22f494c9084e3a7b1147084ce38bb066ec50e88bd5642e8421aa5ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- [FindFairRoot](../dependencies/FindFairRoot.cmake) creates imported targets to allow the use of `FairRoot::XXX` targets even if they haven't (yet) been created by FairRoot itself. This file will be removed when FairRoot completes its own CMake migration.\n- [FindGeant3](../dependencies/FindGeant3.cmake), [FindGeant4](../dependencies/FindGeant4.cmake), and [Geant4VMC](../dependencies/FindGeant4VMC.cmake) provide light Find modules that add missing include paths to the imported targets defined in those MC projects, despite these projects already defining targets.\n- [Findpythia](../dependencies/Findpythia.cmake) (for Pythia8) and [Findpythia6](../dependencies/Findpythia6.cmake) create imported targets for the respective libraries.\n- [Findms_gsl](../dependencies/Findms_gsl.cmake) defines a `ms_gsl` target for the header-only library.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "861d910109e6ac99bc1f19a33eec7cb8aa77dffd94259e89c83c1c44e927acd6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "- [FindRapidJSON](../dependencies/FindRapidJSON.cmake) establishes a `RapidJSON::RapidJSON` target that corresponds to the header-only library.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "ba3e748c30d69890888584a0bc197083e669333295f0d5917d6e533cb22e26b6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "As a side note, to facilitate the development of the new CMake system, we created a [o2_find_dependencies_from_alibuild](../dependencies/O2FindDependenciesFromAliBuild.cmake) function that \"detects\" third-party dependencies from an AliBuild installation zone. This could be useful for others, especially those using IDEs such as CLion.\n\n### Definition of All Targets\n\nThis section of the CMakeLists.txt file primarily involves including relevant subdirectories, but there's a catch: the order is crucial! Dependencies that were previously hidden by the bucket system are now apparent.\n\n### Testing\n\nIn the `tests` subdirectory, some setup for testing is performed. This part is still somewhat in progress, but it contains the shell scripts used for testing.\n\n## Status at End of Step 1\n\nThe development process involved first performing a regular install of O2@dev using aliBuild. Then, switch to the `cmake-migration-step-1` branch. Create a build directory and run cmake there:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "1a7f8420c4b56e27e9e8d2ba61447562b5682aebf22fa43219d18671efbc8378": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\n> cd build-RelWithDebInfo\n> rm -rf *\n> cmake $HOME/alice/cmake/O2 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=../install-RelWithDebInfo -DCMAKE_GENERATOR=Ninja -DALIBUILD_BASEDIR=$HOME/alice/cmake/sw/osx_x86-64\n```\n\nUse `ninja` for building and `cmake .` to trigger a rerun of CMake. Repeat the process on Mac (10.14) and CentOS7.\n\nThe tests for this step (with a failing test only on CentOS7 in Debug mode):\n\n```\n~/alice/cmake/standalone/O2/build-Debug$ ctest --progress -j32\nTest project /home/aphecetche/alice/cmake/standalone/O2/build-Debug\n50/85 Test #34: O2test-dplutils-RootTreeWriterWorkflow..............***Failed    2.07 sec\n85/85 Test #24: O2test-detectorsbase-MatBudLUT\n99% tests passed, 1 tests failed out of 85\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "1d9e4f5a06916a3205b7155244b6d691843a56cda421c14f91f33f40cb132330": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "LABEL TIME SUMMARY:\ndummy      =   0.11 sec*proc (2 tests)\nexample    =   0.05 sec*proc (1 test)\nfast       =   0.16 sec*proc (3 tests)\ngpu        =   2.13 sec*proc (2 tests)\nits        =   0.16 sec*proc (1 test)\nmch        =   0.42 sec*proc (8 tests)\nmft        =   0.16 sec*proc (1 test)\nmid        =  20.33 sec*proc (5 tests)\nobvious    =   0.06 sec*proc (1 test)\nslow       =  14.10 sec*proc (1 test)\nsteer      =   3.10 sec*proc (2 tests)\ntpc        =  28.64 sec*proc (10 tests)\n\nTOTAL TEST TIME (REAL) =  23.29 sec\n\nTHE FOLLOWING TESTS FAILED:\n         34 - O2test-dplutils-RootTreeWriterWorkflow (Failed)\nERRORS WHILE RUNNING CTEST\n```\n\n## TIPS\n\n### OBTAINING THE LIST OF TARGETS\n\nIN THE BUILD DIRECTORY, EXECUTE:\n\n```\nmkdir -p .cmake/api/v1/query/\ntouch .cmake/api/v1/query/codemodel-v2\n```\n\nAFTER THE CMAKE CONFIGURATION STAGE (IF USING CMAKE >= 3.14), YOU'LL RECEIVE A LIST OF JSON FILES DESCRIBING THE TARGETS IN THE REPLY SUBDIRECTORY:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "68bbe2a9f13a9ae3f5ca4fc264937f96f8f2ff772f783688b28aa393ac914c98": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\n> tree .cmake/api/v1/reply\n├── codemodel-v2-83681dd2d17b5fde868d.json\n├── index-2019-06-11T10-25-54-0072.json\n├── target-O2bench-mch-segmentation3-Debug-9c692e4e44d81a3a3a92.json\n├── target-O2bench-mid-clusterizer-Debug-1340ba249c9a02e67ed5.json\n├── target-O2bench-mid-tracker-Debug-3e2229d129fb77d3b863.json\n├── target-O2exe-alicehlt-eventsampler-device-Debug-3bd0b54283972d791f58.json\n├── target-O2exe-alicehlt-runcomponent-Debug-80eb80e9623ee42d3fb2.json\n├── target-O2exe-alicehlt-wrapper-device-Debug-10621b10deb5caf32c18.json\n├── target-O2exe-ccdb-conditions-client-Debug-07e6fca14004fe227979.json\n├── target-O2exe-ccdb-conditions-server-Debug-ab5afdf6854abca507b7.json\n├── target-O2exe-ccdb-standalone-client-Debug-aaff2add767f9b354708.json\n\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "67bbfba5369301a162abb63741aff6d5b9559ddee09a8784f912efeaee5e87f3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\n\n## Step 2\n\nThis step aims to re-enable the GPU targets. There are three versions to consider: [HIP](../GPU/GPUTracking/Base/hip), [OpenCL](../GPU/GPUTracking/Base/opencl), and CUDA (for [TPC](..GPU/GPUTracking/Base/cuda) and [ITS](../Detectors/ITSMFT/ITS/tracking/cuda)).\n\nIn the `GPUTracking` module, all AliRoot-specific references have been removed. These references need to be reinstated if required.\n\nThis step was validated on a CentOS7 server with OpenCL, HIP, and CUDA development kits installed.\n\nAdditionally, a temporary [O2RecipeAdapter](../dependencies/O2RecipeAdapter.cmake) CMake include was introduced to facilitate testing without significantly altering the existing o2 recipe and CI.\n\n## Step 3\n\nTo ensure the O2Suite builds successfully, Step 3 involves the creation of a proper O2Config.cmake file, allowing consumer packages like QualityControl to utilize the defined targets.\n\n## Step 3 and 4\n\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "515127efac1660e50d53fb78704bece9e3c3a79b76d99a9dc3320e93878baf27": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Steps 3 and 4\n\nThe creation of the O2Config.cmake (Step 3) file is complete, prepared for use by QualityControl.\n\nThe macro testing (Step 4) is functional, but exclusively within the correct environment (i.e., within an alibuild build). Executing ctest without setting up the environment beforehand must be postponed for now, as it involves more complexity (and diverges from current practices).\n\n[ ] Still to be completed: generation of the O2ConfigVersion.cmake file.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/CMakeMigration.md"
        }
    ],
    "8dbabd9abfa588173e7079d3552134699f61150e735269d0d9d665df612d789e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refdoc Documentation pages\n/doxy -->\n\n# Documentation Pages\n\nThis module includes the documentation pages.\n\n<!-- doxy\n* \\subpage refdocCLion\n* \\subpage refdocCMakeInstructions\n* \\subpage refdocModernCMakeMigration\n* \\subpage refdocCodeOrganization\n* \\subpage refdocDebugging\n* \\subpage refdocDetectorSimulation\n* \\subpage refdocDoxygenInstructions\n* \\subpage refdocManPages\n* \\subpage refdocUpgrades\n* \\subpage refprodtestsfull-system-test\n/doxy -->",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/README.md"
        }
    ],
    "5fd40f44c6318c99f91ec9ddb976984274212a1f6dbd6cea63ce7fde8a6628bb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refCommonSimConfig SimConfig\n/doxy -->\n\n# Configurable Parameters\n\nThis README provides a brief overview of configurable parameters using the ConfigurableParameter class.\n\n# Introduction\n\nThe ConfigurableParameter class addresses the need for:\n* simple variables, under a compound namespace, to be treated as 'knobs' of an algorithm, allowing their values to be modified without recompilation.\n* these variables to be automatically registered in a parameter database or manager instance.\n* the ability to configure or change parameter values through a textual interface, such as from the command line.\n* support for automatic serialization and deserialization techniques, like loading from CCDB or passing parameter snapshots to other processing stages.\n* maintaining a record of who made changes to parameters (provenance tracking).\n\n# Example / HowTo:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "c05cec600a7f1cbf0d0b2b4d977b27911303f227c817cdcccef773e5e4dfc1d3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Example / HowTo:\n\nConsider some algorithms, such as `algorithmA`, which rely on two parameters, `p1` and `p2`, and you wish to configure these parameters.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "f2d103dada08bc79434009b4e1147ba61d1844283be656f3cfaa67a96bdc8c3a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "You should follow these steps:\n  1. Define a parameter class that includes the parameters and their default values.\n     ```c++\n     struct ParamA : ConfigurableParamHelper<ParamA> {\n       int p1 = 10;\n       double p2 = 1.23;\n       // boilerplate code to make parameters known under key \"A\"\n       O2ParamDef(ParamA, \"A\");\n     };\n     ```\n  2. Include \n     ```c++\n     O2ParamImpl(ParamA);\n     ```\n     in a source file to generate the necessary symbols for linking.\n  3. Utilize the parameters in your code.\n     ```c++\n     void algorithmA() {\n       // obtain the parameter singleton object\n       auto& pa = ParamA::Instance();\n       // use the parameters in your code\n       doSomething(pa.p1, pa.p2);\n     }\n     ```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "695a37807a74ed24b35af76a9f7f53e6dee73d902894a8b799b24d887472e1ad": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "// interact with the parameters in your code\n   doSomething(pa.p1, pa.p2);\n }\n \nSubsequently, the parameter `ParamA` is automatically registered in a parameter registry and can be accessed/moderated/serialized via this registry. The principal functions for modulation are static methods within the `ConfigurableParam` class. For instance, you can:\n* retrieve a value using a string key, pointing to a particular parameter:\n  ```c++\n   auto p = ConfigurableParam::getValue<double>(\"A.p2\");\n  ```\n  where the string keys are formed by combining a primary key and the parameter variable name.\n* adjust or set a value using a string key\n  ```c++\n  ConfigurableParam::setValue<double>(\"A.p2\", 10);\n  ```\n  again, with string keys made up of a primary key and the parameter variable name.\n  Note: This API enables you to modify values based on strings, such as those derived from command line inputs:\n  ```c++\n  ConfigurableParam::fromString(\"A.p2=10,OtherParam.a=-1.\");\n  ```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "505aa9a0b80968465113b3595e8133c923beef7abf32093ea87918509e284421": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```c++\nConfigurableParam::fromString(\"A.p2=10,OtherParam.a=-1.\");\n```\nThe system will issue a warning if an undefined string key is utilized.\n\n* serialize the configuration into a ROOT snapshot or into formats like JSON or INI\n  ```c++\n  ConfigurableParam::toINI(filename);\n  ConfigurableParam::toJSON(filename); // JSON representation of param registry\n  ConfigurableParam::toCCDB(filename); // CCDB snapshot of param registry\n  ```\n* extract parameters from a CCDB snapshot\n  ```c++\n  ConfigurableParam::fromCCDB(filename);\n  ```\n* **Provenance tracking**: The system maintains a record of the origin of values. Generally, modifications can occur through:\n  - default parameter initialization from code (CODE)\n  - initialization or overwriting from a CCDB snapshot file\n  - runtime user overrides (RT)",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "abbace2bdb7209d10ceaea195094b3a6115756b1a920485ec25c4d791947bc2e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The registry maintains a record of which source, such as CODE, CCDB, or RT, provided the current decisive value for each parameter. If a parameter remains unchanged, it retains the state from the previous stage.\n\n# Changing Parameters via Command Line and Ini File\n\nAs previously discussed, parameters can be overridden from the command line using any DPL executable, like `o2-sim`, `o2-sim-digitizer-workflow`, or `o2-tpc-reco-workflow`, among others.\n\n## Command Line Syntax\nTo modify a parameter from the command line, use the format `Key.param=value`. **NOTE:** There should be no spaces around the `=`. Multiple key-value pairs should be separated by a `;`:\n```\no2-sim --configKeyValues 'A.p1=1;A.p2=2.56'\n```\nNot all parameters need to be specified; parameters that are not defined will use the default value set in the parameter struct.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "d525d8e724b62b17052ea86b6aa95cba9252b7f119ea240e88ba01e9b7d68df4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Configuration File Format\n\nThe structure of the configuration file follows this pattern:\n```EditorConfig\n[Section1]\nparam1=value1\nparam2=value2\n[Section2]\nparam1=value1\n```\n\nFor example, a file named `paramA.ini`:\n```EditorConfig\n[A]\np1=1\n```\n\nThis can be invoked via the command line:\n```\no2-sim-digitizer-workflow --configFile paramA.ini\n```\nNote that not all parameters are required.\n\n# Technical Specifications\n\n* Parameter classes are immutable singleton classes/structs. By adhering to the pattern of inheriting from `ConfigurableParamHelper<T>` and utilizing the macro `O2ParamDef()`, the necessary implementations are handled automatically.\n* The class layout is mapped to a text configuration using ROOT C++ introspection, requiring ROOT dictionaries for the parameter classes.\n* BOOST property trees are employed for mapping to JSON/INI files, though this internal mechanism may evolve in the future.\n\n# Constraints\n\nLimitations:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "937785a3076a443f505c7ee63465e3ffa22963a5ffa0f14eef0d30b02e243b1a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Limitations\n\n* Parameter classes can only include simple members! Currently, the following types are supported:\n    * simple pods (e.g., `double x; char y;`)\n    * std::string\n    * fixed-size arrays of pods, serialized using the ROOT method:\n       ```c++\n       static constexpr int N=3; //!\n       double array[N] = {1, 2, 3}; //[N] -- note the [N] after //!!\n       ```\n    * array parameters must be indexed textually:\n      ```c++\n      ConfigurableParam::fromString(\"ParamA.array[2]=10\");\n      ```\n    * Support for pointers or objects is not currently available, and parameter classes cannot be nested.\n* Serialization at present covers the entire parameter registry (all parameters together) and is written to a single file or snapshot.\n\n# Wish list / planned improvements",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "34f912be5f8cab9948fcd8579d10675e2aa7104cdf7abf867585a4209c3d2df7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Desired enhancements / upcoming improvements\n\n* Provide a more adaptable method for specifying array types (to represent them in strings), such as:\n  ```c++\n  ConfigurableParam::fromString(\"ParamA.array = {5, 6, 7}\");\n  ```\n* Enhance the flexibility of CCDB reading, allowing either:\n  * reading from a full snapshot via a single file name **or**\n  * reading from multiple files in paths that match the key/namespace.\n* Introduce a more flexible serialization method, for example, the ability to output configuration to different files.\n* Enable changing the configuration from a text file, in addition to the current option via the command line.\n* Add support for several key STL containers (std::array, std::vector).\n* Develop a more versatile way to define stages (CODE, CCDB, RT) and facilitate transitions between them, possibly allowing for additional stages.\n* Reduce boilerplate by automatically generating dictionaries for parameter classes.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Common/SimConfig/doc/ConfigurableParam.md"
        }
    ],
    "06fab02200b9a0d22e5d13047f837fc3a862547cf8339625b680a3691612440d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refTPCcalibrationCalibdEdx Residual dEdx Calibration\n/doxy -->\n\n# Residual dEdx Calibration\n\nThe process `o2-tpc-miptrack-filter` will execute on EPNs, filtering tracks within specified cuts and outputting them as `TPC/MIPS/0`. The cut parameters can be adjusted using the following command-line options:\n\n```\n--min-momentum (= 0.3)\n--max-momentum (= 0.7)\n--min-dedx (= 20)           Minimum dEdx threshold\n--max-dedx (= 200)          Maximum dEdx threshold\n--min-clusters (= 60)       Minimum cluster count per track\n```\n\nThe process `o2-tpc-calibratordedx` should run on an aggregation node. It uses data from the `o2-tpc-miptrack-filter` to populate dEdx histograms and calculates corrections for the dE/dx values for each time slot.\n\n```\n--tf-per-slot           TFs per calibration time slot\n--max-delay             Past slots to consider\n--min-entries           Minimum entries per GEM stack for fitting\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/CalibdEdx.md"
        }
    ],
    "2a8d39a0b30c81aa4abb3f9d77b860ae3e5c42440adea590adefa4476f7d6af4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "--min-entries-sector    The minimum number of entries required per GEM stack for sector-by-sector correction; if below this threshold, we only perform a single fit per ROC type (IROC, OROC1, etc.) without considering side or sector information.\n--min-entries-1d        The minimum number of entries per stack for a 1D fit; below this, we only compute the mean of each GEM stack.\n--min-entries-2d        The minimum number of entries per stack to conduct a 2D fit.\n--fit-passes            The number of fit iterations performed.\n--fit-threshold         The width of the dEdx cut around the MIP peak used in the fit.\n\n--dedxbins              The number of dE/dx bins.\n--angularbins           The number of angular bins for quantities like Tgl and Snp.\n--min-dedx              The minimum dE/dx value.\n--max-dedx              The maximum dE/dx value.\n--fit-snp               Enable the Snp correction.\n\n--file-dump             Save the calibration correction to a file.\n--field                 The magnetic field in kG, necessary for track propagations; this value will be overridden if a grp file is present.\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/CalibdEdx.md"
        }
    ],
    "1b96ad650944f752ff1e35e9e30a4dd1b4bc549a85c81e28a23d35ae00c5d049": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The workflow `o2-tpc-calibdedx` mirrors `o2-tpc-calibratordedx`, yet it focuses on computing a single correction factor using all accessible time frames.\n\n## Running the Workflow\n\nTo execute the complete dE/dx calibration workflow, use the following command:\n\n```\no2-tpc-track-reader --disable-mc | o2-tpc-miptrack-filter | o2-tpc-calibrator-dedx --file-dump --min-entries 100 --tf-per-slot 10\n```\n\nHere, we activate the feature to save the calibration corrections to a file, set the minimum number of entries per time slot to 100, and define that each time slot should contain 10 time frames.\n\n## Simulating the EPN Workflow\n\nFor simulating the EPN/Agregation node topology, run the `o2-tpc-miptrack-filter` workflow, which will begin listening to `TPC/MIPS/0`, awaiting tracks data for processing.\n\n```\no2-dpl-raw-proxy --dataspec A:TPC/MIPS/0 --channel-config \"name=readout-proxy,type=pull,method=bind,address=tcp://localhost:30453,rateLogging=1,transport=zeromq\" | o2-tpc-calib-dedx\n```\n\nIn a separate terminal, initiate `o2-tpc-miptrack-filter`.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/CalibdEdx.md"
        }
    ],
    "35c19a47a3a1dd9bec6cef384de4e429d2cfc595ba204ef0f74f654d5b52f4d2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In a fresh shell, initiate `o2-tpc-miptrack-filter`.\n\n```\no2-tpc-track-reader --disable-mc | o2-tpc-miptrack-filter | o2-dpl-output-proxy --channel-config \"name=downstream,method=connect,address=tcp://localhost:30453,type=push,transport=zeromq\" --dataspec downstream:TPC/MIPS -b\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/CalibdEdx.md"
        }
    ],
    "e673be898d344da32c147a24e78ea7c2cf7492ef43593e614147ea50a48752e4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refTPCcalibrationCalibPadGainTracks Residual gainmap calibration\n/doxy -->\n\n# Residual Gainmap Calibration Workflow\nThe workflow `o2-tpc-calib-gainmap-tracks` operates on EPNs. It normalizes the cluster charge qMax to the dE/dx of the track and stores this for each pad in a histogram. This process requires tracks and clusters, which can be supplied by the `o2-tpc-file-reader` workflow. Configuration for the histograms and track cuts can be adjusted using these command-line options:\n\n\n```\nHistogram configuration:\n--nBins             Number of histogram bins\n--reldEdxMin        Minimum x-coordinate for the Q/(dE/dx) binning\n--reldEdxMax        Maximum x-coordinate for the Q/(dE/dx) binning\n--underflowBin      Enable underflow bin usage\n--overflowBin       Enable overflow bin usage\n--useEveryNthTF     Use only every nth timestamp frame (TF)\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/CalibPadGainTracks.md"
        }
    ],
    "4ef0dbd527f832dcb608639cc4a25a1b8d63caf91154ffc71a5d7d0ef0a42f88": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Track cuts:\n--momMin            Minimum momentum for tracks\n--momMax            Maximum momentum for tracks\n--etaMax            Maximum eta for tracks\n--minClusters       Minimum number of clusters per track\n\nAdditional settings:\n--field             Magnetic field strength in kG, required for track propagation, this will be overridden if a grp file is available\n--debug             Output debug files when objects are processed\n--publish-after-tfs Number of TFs before sending pad-by-pad histograms\n\nThe `o2-tpc-calibrator-gainmap-tracks` workflow should be executed on an aggregation node. It utilizes pad-by-pad histograms provided by `o2-tpc-calib-gainmap-tracks` to generate a pad-by-pad residual gainmap for each time slot. The following options are available:\n\n```\n--tf-per-slot   Number of TFs per calibration slot\n--max-delay     Number of past slots to include\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/CalibPadGainTracks.md"
        }
    ],
    "e780428055aa32c766922aa46b842991c712a1bcd9eaded73ce34dde51f537ec": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "---\n--min-entries   Minimum count of entries needed per pad-by-pad histogram.\n--lowTrunc      Lower boundary for the range used in residual gain calculation from the pad-by-pad histogram.\n--upTrunc       Upper boundary for the range used in residual gain calculation from the pad-by-pad histogram.\n\n--file-dump     Save the calibration class object to a file.\n```\n\n## Execution\n\nThe complete process for extracting the residual gainmap can be run as follows:\n\n```\no2-tpc-file-reader --input-type \"clusters,tracks\" --disable-mc \\\n| o2-tpc-calib-gainmap-tracks --publish-after-tfs 100 --overflowBin true --condition-tf-per-query -1 --debug true \\\n| o2-tpc-calibrator-gainmap-tracks --min-entries 0 --tf-per-slot 100 --file-dump true --shm-segment-size 100000000000 -b\n```\n\n\n## Simulating the EPN Workflow\n\nTo simulate the EPN/Agregation node topology, one can execute the following:\n\nFor the Aggregator:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/CalibPadGainTracks.md"
        }
    ],
    "d466e57085c645498463c5c9867bd014df442a9df159f190189050488d20c9dc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To simulate the EPN/Agregation node topology, follow these steps:\n\nFor the Aggregator:\n\n```\no2-dpl-raw-proxy --dataspec A:TPC/TRACKGAINHISTOS/0 --channel-config \"name=readout-proxy,type=pull,method=bind,address=tcp://localhost:30453,rateLogging=1,transport=zeromq\" \\\n| o2-tpc-calibrator-gainmap-tracks --ccdb-uri \"http://localhost:8080\" --min-entries 0 --tf-per-slot 100\n```\n\nFor the EPN, run the `o2-tpc-calib-gainmap-tracks` workflow in a separate shell:\n\n```\no2-tpc-file-reader --input-type \"clusters,tracks\" --disable-mc \\\n| o2-tpc-calib-gainmap-tracks --publish-after-tfs 100 --overflowBin true --condition-tf-per-query -1 \\\n| o2-dpl-output-proxy --channel-config \"name=downstream,method=connect,address=tcp://localhost:30453,type=push,transport=zeromq\" --dataspec downstream:TPC/TRACKGAINHISTOS -b\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/CalibPadGainTracks.md"
        }
    ],
    "c69dccb3a83763fd30f0c56de0471235861c775788d4e24db8deccd5afcd49cb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "<!-- doxy\n\\page refTPCcalibrationIDC IDC Calibration\n/doxy -->\n\n# IDCs\n\nA concise guide on executing the `IDC` workflow on FLPs and the aggregator node, as well as running it locally with simulated digits as input.\n\n#### Definition of `IDC`s:\n`IDC`: $ I(r,\\phi,t) $ \\\n`IDC0`: $I_0(r,\\phi) = \\langle I(r,\\phi,t) \\rangle _{t=1000\\text{ TFs}}$ \\\n`IDC1`: $I_1(t) = \\langle I(r,\\phi,t) / I_0(r,\\phi) \\rangle _{r,\\phi}$ \\\n`IDCDelta`: $ \\Delta I(r,\\phi,t) = I(r,\\phi,t) / \\left[ I_0(r,\\phi) \\cdot I_1(t) \\right] $\n\n# IDC Workflow (FLPs and Aggregator)\n## FLPs",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "55fc792547f7ca209ce4427829a0761b30977c325203eb1fc9153960e712597c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# IDC Workflow (FLPs and Aggregator)\n## FLPs\n\n`IDC`s are integrated on the CRUs and transformed into a `std::vector<float>` through the `o2-tpc-idc-to-vector` workflow. `IDC1` are utilized for Fourier transform, with the resulting coefficients serving as input for space-charge correction. For synchronous reconstruction, `IDC1` are computed on the FLPs via the `o2-tpc-idc-flp` workflow and transmitted to the EPNs for FFT processing. The FFT is executed on the EPNs by the `o2-tpc-idc-ft-epn` workflow. Furthermore, `IDC`s are sent to an aggregator to factorize them for a specific calibration interval and subsequently perform the FFT. The factorized `IDC`s (`IDC0`, `IDC1`, `IDCDelta`) and the Fourier coefficients are then stored in the CCDB.\n\n#### `IDC1` on FLPs\nParallelization can be achieved by dividing CRUs on an FLP into separate devices using `--lanes` or by utilizing time lanes with `--time-lanes`:",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "951f643b6b7627c115c5869752bd82db709c6bfe1c62368359dafe1c0d0ca6f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```bash\no2-tpc-idc-flp                       \\ # calculation of `IDC1`\n--lanes 2                             \\ # the FLP's CRUs will be divided into two parallel processing streams\n--time-lanes 1                        \\ # the number of time lanes is set to one\n--disableIDC0CCDB true                \\ # `IDC0` will not be loaded from the CCDB, used for `IDC1` normalization\n--crus ${crus}                        \\ # the expected CRUs are specified\n--enable-synchronous-processing true  \\ # synchronous processing is enabled for `IDC1` calculation\n```\n\n#### Output Proxy\nTransmitting the `IDC`s from the FLPs to the aggregator node:\n\n```bash\nloc=\"'downstream:TPC/IDCGROUPA;downstream:TPC/IDCGROUPC'\" # destination address for `IDC`s\n\no2-dpl-output-proxy                                                                                        \\\n--channel-config \"name=downstream,method=connect,address=tcp://localhost:30453,type=push,transport=zeromq\" \\\n--dataspec ${loc} -b\n```\n\n## Aggregator",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "b81b1bf835ba5b5dab83aadf6e4606cc20b60a69e798420050f874fd3fa50cd2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "## Aggregator\n\nAt the aggregator node, the `IDC`s from the FLPs are gathered by an input proxy and combined until data from all specified CRUs are collected. Upon receiving `IDC`s for a certain number of TFs, the factorization of the `IDC`s, the averaging or grouping of the factorized `IDCDelta`, and the FFT of the factorized `IDC1` are carried out. These factorized `IDC`s, along with the grouping parameters and the Fourier coefficients, can be stored in the CCDB via the `o2-calibration-ccdb-populator-workflow` workflow.\n\n#### Define global parameters for the workflow:\n```bash\ncrus=\"0-359\"                # anticipate data from all CRUs from FLPs\nlanes=2                     # number of parallel devices for factorization (at least 2 devices are recommended)\nnTFs=1000                   # number of TFs utilized for factorization and Fourier transform\nurl=\"http://localhost:8080\" # CCDB URI: for local CCDB or use \"http://ccdb-test.cern.ch:8080\"\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "f488690a558c6c1a8efc634305a0850f7326f10c5941cbf35e2e43a682e28a39": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#### Input proxy\nHandling the `IDC`s from the FLPs:\n\n```bash\n# specifying locations for `IDC`s\nloc=\"A:TPC/IDCGROUPA;A:TPC/IDCGROUPC\"\n\n# executing the input proxy\no2-dpl-raw-proxy  \\\n--dataspec ${loc} \\\n--channel-config \"name=readout-proxy,type=pull,method=bind,address=tcp://localhost:30453,rateLogging=1,transport=zeromq\"\n```\n\n\n#### Distribute received `IDC`s from proxy\nReceiving the `IDC`s from the proxy and distributing them to the `o2-tpc-idc-factorize` workflow for factorization, based on the specified number of lanes. Additionally, checks are performed to ensure no data is dropped; if data is lost, dummy data is sent in its place:\n\n```bash\no2-tpc-idc-distribute  \\\n--crus=${crus}         \\ # expected CRUs\n--timeframes ${nTFs}   \\ # number of timeframes to be sent to one factorization device\n--output-lanes ${lanes}  # number of output lanes for parallel factorization\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "33992a1a3e59cf6ee6a3a8125aadb4916ba52c6859f1a95634ee5480f107800a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#### Factorization of `IDC`s\nConvert the `IDC`s into `IDC0`, `IDC1`, and `IDCDelta`, and then carry out the averaging, grouping, and compression of `IDCDelta`. Grouping parameters can be configured using options like `--groupPads \"...\" --groupRows \"...\"`. For specialized grouping at the sector edges, use a configuration key such as `--configKeyValues 'TPCIDCGroupParam.groupPadsSectorEdges=32211'`.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "2772491d455cafb0e331f5b71813242b5bd2c6508c9ce31df5da50cd448b76a8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```bash\no2-tpc-idc-factorize                \\\n--crus=${crus}                      \\ # expected CRUs\n--timeframes ${nTFs}                \\ # total number of time frames sent by o2-tpc-idc-distribute\n--input-lanes ${lanes}              \\ # total number of lanes defined in o2-tpc-idc-distribute\n--groupPads \"5,6,7,8,4,5,6,8,10,13\" \\ # number of pads grouped in the pad direction\n--groupRows \"2,2,2,3,3,3,2,2,2,2\"   \\ # number of pads grouped in the row direction\n--nthreads-grouping 8               \\ # number of threads for grouping\n--nthreads-IDC-factorization 8      \\ # number of threads for IDC factorization\n--enablePadStatusMap true           \\ # perform outlier filtering using the `IDC0`\n--enable-CCDB-output true           \\ # enable creation and sending of CCDB output and grouping of `IDCDelta`\n--sendOutputFFT true                \\ # send the output to the `o2-tpc-idc-ft-aggregator`\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "e6984713505b9d05bc7a4642c837459144ce5f404fba0a377493ecb3c88aa369": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "#### FFT\nReceive `IDC1` from the `o2-tpc-idc-factorize` and execute the FFT on `IDC1`:\n\n```bash\no2-tpc-idc-ft-aggregator \\\n--rangeIDC 200           \\ # the number of `IDC1` utilized during the FFT per TF\n--nFourierCoeff 40       \\ # the number of Fourier coefficients per TF that will be stored in the CCDB\n--inputLanes ${lanes}    \\ # the number of lanes specified in `o2-tpc-idc-distribute`\n--nthreads 8             \\ # the number of threads used for the FFT\n```\n\n### Summary\nAll the necessary steps to be executed (on a local machine):\n\n#### Send raw data\n\n```bash\n# FLPs\ncrus=\"0-359\"\nloc=\"'downstream:TPC/IDCGROUPC;downstream:TPC/IDCGROUPA'\"\n\npathToRawData=\"/../path/to/data/\"\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "3e024d14c40cf9e9b9375c6d8183e67319b14d29c54c40a010354092448bc933": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\n\n#### Receive raw data\n\n```bash\n# define global parameters for the workflow\ncrus=\"0-359\" # expect data from all CRUs in FLPs\nlanes=2      # number of parallel devices for the factorization (at least 2 devices are recommended)\nnTFs=1000    # number of TFs to be used for factorization and Fourier transform\n\n# input addresses for the `IDC`s\nloc=\"A:TPC/IDCGROUPA;A:TPC/IDCGROUPC\"\n\n# shared memory segment size\nARGS_ALL=\"--shm-segment-size 50000000000\"\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "01cd688815fa503cca317edd6bdc5ecd0b773f311fb610d59425866ef6ad5932": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Shared memory size\nARGS_ALL=\"--shm-segment-size 50000000000\"\n\n# Proxy configuration\nconfigProxy=\"name=readout-proxy,type=pull,method=bind,address=tcp://localhost:30453,rateLogging=1,transport=zeromq\"",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "c424b6a217ced2acac31b95e0ad9b260c1faad2ffb55742089208d99c01481a6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "o2-dpl-raw-proxy ${ARGS_ALL}        \\\n--dataspec ${loc}                   \\\n--channel-config \"${configProxy}\"   \\\n| o2-tpc-idc-distribute ${ARGS_ALL} \\\n--crus=${crus}                      \\\n--timeframes ${nTFs}                \\\n--output-lanes ${lanes}             \\\n| o2-tpc-idc-factorize ${ARGS_ALL}  \\\n--crus=${crus}                      \\\n--timeframes ${nTFs}                \\\n--input-lanes ${lanes}              \\\n--nthreads-grouping 8               \\\n--nthreads-IDC-factorization 8      \\\n--nTFsMessage 250                   \\\n--enablePadStatusMap true           \\\n--enable-CCDB-output true           \\\n--sendOutputFFT true                \\\n--configKeyValues 'TPCIDCGroupParam.groupPadsSectorEdges=32211' \\\n| o2-tpc-idc-ft-aggregator ${ARGS_ALL} \\\n--rangeIDC 200                         \\\n--nFourierCoeff 40                     \\\n--timeframes ${nTFs}                   \\\n--nthreads 8                           \\\n| o2-calibration-ccdb-populator-workflow --ccdb-path ccdb-test.cern.ch:8080 \\\n-b",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "45c2e66b3d4ee69dd9bc3bd0565ea89f5b3b9d38a8a20ce94b2b9f4b6395092f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "| o2-calibration-ccdb-populator-workflow --ccdb-path ccdb-test.cern.ch:8080 \\\n-b\n```\n\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "d30b4f4491241cc12b741ff4540e8e75414b357607101c2e855af81ee19abfeb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# IDC Workflow Utilizing Simulated Digits\nOne can utilize simulated raw digits as input or employ the `o2-tpc-idc-test-ft` workflow to generate random `IDC`s or load `IDC`s from an input file (and perform some randomization).\n\n### Simulate the Input\nRun an `o2-sim` simulation to create digits and raw digits (for example):\n\n```bash\n# executing o2-sim\no2-sim -g pythia8pp -n 600 -m TPC [ PIPE ITS ]\n\n# generating TPC digits at a 5MHz interaction rate\no2-sim-digitizer-workflow -b -q --onlyDet TPC --disable-mc --TPCuseCCDB --shm-segment-size $((8<<35)) --interactionRate 5000000\n\n# to produce raw data\no2-tpc-digits-to-rawzs -i tpcdigits.root -o raw/TPC\n```\n\nInitiate the following workflows to perform the factorization of the `IDC`s, the grouping of `IDCDelta`, FFT on the aggregator and EPN, and to store the output in the CCDB and local files:\n\n```bash\nshm=\"50000000000\"\nnTFs=1  # consider only the first TF\nnLoop=1 # the number of loops over the data\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "75cbd37b418657ff8defe47467103dfc056bedc4060fda2fa54a1366de7660e3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "o2-raw-file-reader-workflow --detect-tf0 --shm-segment-size ${shm} --input-conf raw/TPC/tpcraw.cfg --loop ${nLoop} --max-tf 0 \\\n| o2-tpc-reco-workflow --input-type zsraw --output-type digits,disable-writer \\\n| o2-tpc-idc-integrate \\\n| o2-tpc-idc-flp \\\n--disableIDC0CCDB true \\\n--lanes 1 \\\n--enable-synchronous-processing true \\\n| o2-tpc-idc-distribute \\\n--timeframes ${nTFs} \\\n--condition-tf-per-query -1 \\\n--send-precise-timestamp true \\\n| o2-tpc-idc-factorize \\\n--timeframes ${nTFs} \\\n--nthreads-grouping 4 \\\n--configKeyValues 'TPCIDCGroupParam.groupPadsSectorEdges=32211' \\\n--dump-IDCs true \\\n--dump-IDCDelta \\\n--enable-CCDB-output true \\\n--sendOutputFFT true \\\n| o2-tpc-idc-ft-aggregator \\\n--rangeIDC 200 \\\n--nFourierCoeff 40 \\",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "f0ebf8dbe19454e8a4fcb9ca46328c5c86c85b0c87b5623103b331736a25267f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```\n--rangeIDC 200                      \\\n--nFourierCoeff 40                  \\\n--dump-coefficients-agg true        \\\n| o2-tpc-idc-ft-epn                 \\\n--rangeIDC 200                      \\\n--nFourierCoeff 40                  \\\n--dump-coefficients-epn true        \\\n-b\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "2be834157b5d065719ef03cd53569339f5db0d7cebeb33af3656c48474441d67": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Workflow for IDC Generation\n\nThe `o2-tpc-idc-test-ft` workflow can be used to generate `IDCs` as input for the `o2-tpc-idc-flp` workflow. These `IDCs` can either be created randomly from a Gaussian distribution or loaded from a `IDCGroup.root` file (`--load-from-file true`), which was previously written to file using the `o2-tpc-idc-flp` workflow (`o2-tpc-idc-flp --dump-idcs-flp true`).\n\n``` bash\nnTFs=1000 # number of TFs to generate\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "df90adf4b6f3a683efc765f485441af27b6feb75409b24052e9363d76a1dc531": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "o2-tpc-idc-test-ft                  \\\n--dropTFsRandom 20                  \\ # randomly drop every n-th TF\n--delay true                        \\\n--load-from-file true               \\\n--only-idc-gen true                 \\\n--timeframes ${nTFs}                \\\n| o2-tpc-idc-flp                    \\\n--disableIDC0CCDB true              \\\n--lanes 1                           \\\n--enable-synchronous-processing true \\\n--severity warning                  \\\n| o2-tpc-idc-distribute             \\\n--timeframes ${nTFs}                \\\n--condition-tf-per-query -1         \\\n--send-precise-timestamp true       \\\n--severity warning                  \\\n| o2-tpc-idc-factorize              \\\n--timeframes ${nTFs}                \\\n--nthreads-grouping 1               \\\n--configKeyValues 'TPCIDCGroupParam.groupPadsSectorEdges=32211' \\\n--enable-CCDB-output true           \\\n--sendOutputFFT true                \\\n--nTFsMessage 250                   \\\n| o2-tpc-idc-ft-aggregator          \\",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "da996fd2ea599735a73119a9ab050d6da8ce1c36981e30ddd115b0dfc968d660": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```markdown\n## Unit test for FFT\n\n    --nTFsMessage 250                   \\\n| o2-tpc-idc-ft-aggregator          \\\n--rangeIDC 200                      \\\n--nFourierCoeff 40                  \\\n| o2-tpc-idc-ft-epn                 \\\n--rangeIDC 200                      \\\n--nFourierCoeff 40                  \\\n--severity warning                  \\\n-b\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "ec288c3ff0df1bbd67d8a4a331c1e43d30996f39fac735992076ae0a9ede4f05": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To evaluate and contrast the fourier coefficients computed on the aggregator for a specified integration interval with those calculated on the EPNs per TF, the `o2-tpc-idc-test-ft` tool can be utilized. Initially, `IDC0` are computed and saved to a file. Subsequently, in another iteration, these `IDC0` are employed in the `o2-tpc-idc-flp` workflow for `IDC` normalization and `IDC1` calculation. The `IDC1` are then passed to the `o2-tpc-idc-ft-epn` workflow for performing the FFT.\n\nThe `IDC`s from the `o2-tpc-idc-flp` workflow are directed to the `o2-tpc-idc-factorize` workflow, where factorization and `IDC1` calculation occur and are then forwarded to the `o2-tpc-idc-ft-aggregator` workflow, which conducts the FFT.\n\nUltimately, the fourier coefficients derived from the `o2-tpc-idc-ft-epn` workflow are compared with those from the `o2-tpc-idc-ft-aggregator` workflow.",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "8a5167b256fa440a20cadd06cf14b3787ccddadbaeaf5291a540c50b46897cb3": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "```bash\ncrus=\"0-179\" # restrict to CRUs from one TPC side\no2-tpc-idc-test-ft --timeframes 200 --delay true --iter 0 --crus $crus --dump-IDC0\no2-tpc-idc-test-ft --timeframes 200 --delay true --iter 1 --crus $crus\n```",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/IDCWorkFlow.md"
        }
    ],
    "4e24eadd2aa70fd190aa3dcd5f0047671fa6c829473900abc89a0267662830b4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# TPC Calibration Documentation\n\nThis serves as an overview page for the TPC calibration manuals.\n\n* \\subpage refTPCcalibrationCalibdEdx\n* \\subpage refTPCcalibrationIDC\n* \\subpage refTPCcalibrationCalibPadGainTracks\n* \\subpage refTPCcalibrationAverageDistortionCorrection\n\n/doxy",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/Detectors/TPC/calibration/doc/README.md"
        }
    ],
    "6eceb4e98f19b93f1a379361b05db0eb49b6af0b83227bad8e787c4ed515f5b2": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "# Removing HTML comments that conceal doxygen keywords from Markdown\n# I. Hrivnacova 25/03/2019\n#\nsed -e '/<!-- doxy/d' -e '/\\/doxy -->/d' -e 's/```c++/~~~{.cpp}/g; s/```bash/~~~{.sh}/g; s/```/~~~/g;' \"$1\"\n\n# The previous commands were included in .travis.yml\n# git grep -l '^```[a-zA-Z]' | xargs sed -i .old -e 's|```\\([a-zA-Z][a-zA-Z]*\\)|\\n```{.\\1}\\n|g;s|[.]bash|.sh|g;s|```|~~~~~~~|g'\n# find . -name \"*.old\" -delete",
            "link": "https://github.com/AliceO2Group/AliceO2/blob/dev/doc/scripts/filter_for_doxygen.sh"
        }
    ],
    "060a3ac2a4c367858cc704a0bd671ae0eec58c74006369cea6cd886937784207": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Marco Giacalone\nSandro Wenzel\n\n15.10.2024\n\nRunning Run3 Simulations\n\nALICE Analysis Tutorial\n\fOutline\n\n• Overview of the ALICE Run3 simulation environment\n\n• o2-sim and event simulation \n\n• Simulation configuration options and capabilities\n\n• The O2DPG workflow → the new standard for working \n\n2\n\fOutline\n\n• Overview of the ALICE Run3 simulation environment\n\n• o2-sim and event simulation \n\n• Simulation configuration options and capabilities\n\n• The O2DPG workflow → the new standard for working \n\n!\n\nOpening Remark\n\nAn introductory overview for practical Monte Carlo generation.\nFurther details available in other PWG tutorials or documentation.\n\n3\n\fContacts\n\n• Ways to contact the simulation development team\n\n• Simulation e-group (for meeting announcements) + WP12 meetings\n\n• Collaborative Mattermost channels (preferable over private email): O2-simulation + O2DPG\n\n• JIRA tickets for feature requests/bug reports  (components simulation or O2DPG)\n\n• Information sources for simulation details",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "847dc496f38598280d51b12be68be5140c3a54d0cbb6220d56382307de0bfee5": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Where to find information about simulation\n\n• New documentation project: https://aliceo2group.github.io/simulation/\n\n• Previous documentation in AliceO2: DetectorSimulation.md\n\n• Some info in O2DPG: WorkﬂowRunner.md\n\n• Various examples at O2/SimExamples or nightly-tests\n\n👈 still early stage:\n\n●\n●\n●\n\nprovide feedback \nraise questions \nparticipate\n\n4\n\fSoftware environment reminder\n\nsimplest local build (basic generators such as Pythia8) \n\naliBuild build O2 O2DPG --defaults o2\n\nalienv enter O2/latest,O2DPG/latest\n\nfull local build (all generators, QC and O2Physics included)\n\naliBuild build O2sim --defaults o2\n\nalienv enter O2sim/latest\n\nnightly precompiled builds (with CVMFS)\n\n/cvmfs/alice.cern.ch/bin/alienv enter O2sim::v20241014-1\n\n5\n\f~TB/s\n\nPetaBytes\n\nReal particle collisions\n\nReconstruction\n\nsensor data\n\nTakes sensor data and \nreconstructs the state of \nparticles immediately after \ncollisions\n\nAOD data\n(Structured) \nhigh-level \nphysics data for \nquerying and analysis \n\nPhysics \nAnalysis",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "af8965d43c6fb1a2395a87fadf8d5489c7d5705094f54348da2b0db087c292be": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "AOD Data\n(Structured)\nhigh-level \nphysics data be \nqueried/analysed \n\nPhysics \nAnalysis\n\nData analysis aimed at \ndiscovering physics \nresults and \npublishing papers\n\n6\n\nC\nl\na\ns\ns\ni\nc\na\nl\n \np\ni\np\ne\nl\ni\nn\ne\n \ni\nn\n \na\n \nH\nE\nP\n \ne\nx\np\ne\nr\ni\nm\ne\nn\nt\n:\nE\nx\np\ne\nr\ni\nm\ne\nn\nt\na\nl\n \nD\na\nt\na\n\fVirtual collisions of particles\n+ (detector) simulation based on physics models\n\nsensor data\n\nReconstruction\n\nUses sensor data to \nreconstruct the state of \nparticles immediately after \ncollisions\n\nPetaBytes\n\nAOD Data\n(Structured)\nhigh-level \nphysics data be \nqueried/analysed \n\nPhysics \nAnalysis\n\nData analysis aimed at \ndiscovering physics \nresults and \npublishing papers\n\nBut why…\n\n• Detector and systems design\n• Reconstruction algorithm calibration\n• Efficiency studies of reconstruction algorithms\n• Data-taking stress tests with synthetic data\n• Background effects estimation\n• Radiation studies\n•\n\netc\n\n7",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "776f9e1a40a53dba13d4fdd874d36703d1b1d2a2d33b1babf0edca95d6c7f41f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "The ALICE Run3 Simulation Ecosystem\n\nThe simulation ecosystem is made up of several components.\n\nKey parts of the core simulation include:\n\n- Event generation\n- Transport simulation\n- Digitization\n\nFurthermore, MC workflows can encompass:\n\n- Reconstruction\n- Quality Control (QC)\n- Analysis, and more\n\nThese individual components are managed within the O2 and O2Physics repositories.\n\nEvent Generators\nTransport/Detector Simulation\nDetector Digitization\nDetector and Global Reconstruction Code\nAOD Creation\nQC\nAnalysis\n\n...\n\nPWG Configurations\n\nIntegration and configuration of all components into coherent workflows is performed using:\n\n- O2DPG repository (primarily for physics studies on the GRID)\n- full-system-test (mainly for data-taking oriented simulations)\n\n8\n\fData products in the simulation pipeline\n\nEvent-Generation / Transport Simulation\n\n- Geometry file\n- Kinematics file\n- Detector response files (hits)\n\nDigitization\nReconstruction",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "3b94a441618eb08a6bbe7938b79a6803ff0f097b82eb7404a332baff77dff552": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Geometry file\n• Kinematics file\n• Detector response files (hits)\n\nDigitization\n\nReconstruction\n\nPhysics Analysis\n\n• Digits represent detector sub-timeframes\n• Comparable or similar to raw detector output\n\n• Global reconstructed tracks\n• Primary and secondary vertices\n\n• etc.\n• AOD (analysis object data)\n\n9\n\fo2-sim: ALICE Run3 simulation tool\n\n• o2-sim is the particle-detector simulator for ALICE Run3\n\nIt implements ALICE detectors on top of widely used particle-transport \nengines that incorporate actual physics models and particle transport\n\n• Supports Geant4, Geant3, and FLUKA via the Virtual Monte Carlo API\n\n• o2-sim primary tasks:\n\n• ALICE geometry creation\n\n• Event generation (primary particle production)\n\n• Simulation of particle interactions with detector material (secondary particle creation, etc.) and particle transport until they exit the detector or stop\n\n• Creation of hits (energy deposits) as a precursor to detector response after particle passage",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "1fe2368d673f19ded62069258c9bd1d014f5e1ebb11d9db2d1fc6dc46f43235e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Formation of hits (energy deposits) as an initial step in detector simulation following particle traversal\n\n10\n\fo2-sim: ALICE Run3 simulation tool\n\n• New feature in Run3: scalable multi-core simulation with sub-event parallelism\n\n→enables efficient processing of large server resources to swiftly deliver results for significant events\n\n• Note: o2-sim processes events independently – no time frame consideration (introduced during digitization)\n\n• o2-sim generates 3 internal log files → detailed documentation of each process and debugging information\n\no2sim_serverlog\n\no2sim_workerlog0\n\no2sim_mergerlog\n\n11\n\fExamples of o2-sim usage\n\n• Examples of using o2-sim\n\no2-sim -n 10 -g pythia8pp\n\no2-sim -n 10 -g pythia8pp -j 8 \\ \n--skipModules ZDC --field 2 -e TGeant3\n\n o2-sim -n 10 -g pythia8pp --noGeant\n\n“Create 10 standard Pythia8 pp events and simulate their passage through the entire ALICE detector”\n\n“Produce 10 standard Pythia8 pp events and simulate their transport with 8 Geant3 workers, excluding ZDC, and apply a L3 field of 2 kGauss”\n\n11",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "d5ab8ced2361c5c8ab0c53a06ca7f0e98967b3f9560a153a3c856e6f2a015eef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "\"Generate 10 default Pythia8 pp events and perform no further actions (pure generator output).\n\n`o2-sim --help` provides details on the main options and shows the default generation parameters.\n\no2-sim: Kinematics Output\n\nThe kinematics output (default file o2sim_Kine.root) from the transport simulation is likely the most useful for physics analysis.\n\nIt includes creation vertices, momenta, and other details of primary (generator) and secondary (transport) particles created during the simulation.\n\nThe output also contains information about the physics creation process, such as the provenance (mother-daughter relationships), etc.\n\nBased on the o2::MCTrack class, which is essentially a lightweight version of TParticle.\n\nFor each event, there is one entry of vector<MCTracks> in a TTree.\n\nBy default, the kinematics are pruned, keeping only relevant particles.\n\nAdditionally, there is a separate file (o2sim_MCHeader.root) containing event-level metadata for each generated event, for example, the impact parameter of a PbPb collision.\"",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "ee2e7880ddcbe0dd14fe7118a6e866a69fbdc73649ff0acae6be783646cdd95c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• For example, impact parameter in PbPb collisions\n\n“histogram of production vertex-y for all \nMCtracks (both primary and secondary)”\n\n13\n\fHelper classes to access MC kinematics\n\n👉 Example: \nRun/SimExamples/Jet_Embedding_Pythia8\n\n• Interactively accessing and navigating MC kinematics \ncan be tedious (similar to “ROOT-IO boilerplate”)\n\nusing o2::steer;\nusing o2;\n\n// use simulation prefix o2sim to access kinematics file\nMCKinematicsReader reader(\"o2sim\", MCKinematicsReader::Mode::kMCKine);\n\n• Provide 2 key utility classes simplifying this process\n\n// retrieve all Monte Carlo tracks for the current event\nstd::vector<MCTrack> const& tracks = reader.getTracks(event);\n\nfor users\n\n• MCKinematicsReader - Class for simple reading and \nretrieval of tracks for a specific event or Monte Carlo \nlabel\n\n• MCTrackNavigator - Class for traversing the mother-daughter \ntree structure of MC tracks and querying physics properties",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "f8674a5f5d2ba0e3f030b9cd8ab326cd27fc3cf7760028672e62cd6e40a5ee6b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    for (auto& t : tracks) {\n   // process tracks; find the mother track of each track (within the pool of all tracks)\n   auto mother = o2::mcutil::MCTrackNavigator::getMother(t, tracks);\n   if (mother) {\n      std::cout << \"This track has a mother\\n\";\n   }\n   // identify the (backward first) primary particle from which this track descends\n   auto primary = o2::mcutil::MCTrackNavigator::getFirstPrimary(t, tracks);\n}\n\n“Retrieve all Monte Carlo tracks from the stored kinematics file for event ID 1. Loop through all tracks to determine both the immediate mother particle and the primary ancestor in each case.”\n\n14\n\fGenerators: Basic\n\n• o2-sim includes several predefined generators (select using the -g option)\n\n• pythia8pp         (configured Pythia8 for pp interactions)\n\n• pythia8hi          (configured Pythia8 for PbPb collisions)\n\n• boxgen             (a straightforward mono-PDG generator)\n\n• extkinO2           (use external kinematics file, e.g., generated in a preceding step)\n\n👉 Example: run/SimExamples/JustPrimaryKinematics",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "c66f6de829ddf0df569dde5dd1b840fadf911406bac4bdfddcfda2a276654182": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "👉 Example: run/SimExamples/JustPrimaryKinematics\n\n• hepmc              (use events from a HepMC file)\n\n👉 Example: run/SimExamples/HepMC_STARlight\n\no2-sim -g [ pythia8pp | pythia8hi | boxgen | extkinO2 | hepmc ] …\n\n15\n\fGenerators: Pythia8\n\n• Pythia8 is more deeply integrated into O2 \n\n(compared to other generators) and is recommended \n\nfor use whenever possible\n\n• If Pythia8 is utilized, it can be fully customized \n\nvia a specialized text file and the GeneratorPythia8 parameter\n\n• Valid configuration settings are detailed in the Pythia8 reference \n\nmanual\n\n• We also offer a tool, mkpy8cfg.py, to assist \n\nin creating the configuration file\n\n👉 Example: \nRun/SimExamples/Jet_Embedding_Pythia8\n\npythia8.cfg\n\n### random \nRandom:setSeed = on \nRandom:seed = 130145275 \n\n### beams \nBeams:idA = 1000822080 \nBeams:idB = 1000822080 \nBeams:eCM = 5020.000000 \n\n### processes",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "5fc4c03f394a19e14e8c57787b9d3304d61b88f3e50637521d223789f2b90d85": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "### processes \n\n### heavy-ion settings (valid for Pb-Pb 5520 only) \nHeavyIon:SigFitNGen = 0 \nHeavyIon:SigFitDefPar = 13.88,1.84,0.22,0.0,0.0,0.0,0.0,0.0 \nHeavyIon:bWidth = 14.48 \n\n### decays \nParticleDecays:limitTau0 = on \nParticleDecays:tau0Max = 10. \n\n### phase space cuts \nPhaseSpace:pTHatMin = 0.000000 \nPhaseSpace:pTHatMax = -1.000000 \n\nrun with this configuration\n\no2-sim -n 10 -g pythia8 --configKeyValues \n“GeneratorPythia8.config=pythia8.cfg”\n\n16\n\f👉 Example: \nRun/SimExamples/AliRoot_AMPT\n\n👉 Example: \nRun/SimExamples/AliRoot_Hijing\n\nExternal Generators\n\n• Apart from Pythia, specific generators are integrated directly (compiled) in O2 to keep PWG generator code and configurations separate from data-taking processes.\n\n• This avoids the need for recompilation.\n\n• Instead, “external” generators can be interfaced in o2-sim using just-in-time ROOT macros that implement, for example, a GeneratorTGenerator class.\n\n• The setup for the generator is done at “use-time” in C++.\n\n• This makes the generator setup a configuration issue.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "2f98b07242b2cbec03d74e7facd105a20c5451bd78886a377cf825907d21fd6c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• configure the generator at runtime in C++\n\n• this process turns into a configuration challenge\n\n• this approach is employed for PWG-specific generation within the O2DPG production framework\n\n• for instance, the PWGDQ cocktail generator\n\n\"invoke o2-sim with the -g external flag and specify the external file and function name\"\n\no2-sim -n 10 -g external --configKeyValues \n'GeneratorExternal.fileName=myGen.C;GeneratorExternal.funcName=\"gen(5020)\"'\n\n\"snippet of the ROOT macro file myGen.C\"\n\n// my fully custom generator\nclass MyGen : public o2::generator::GeneratorTGenerator {\n  void Init() override;\n  bool generateEvent() override;\n};\n\nFairGenerator* gen(double energy) {\n  return new MyGen(energy);\n}\n\n👉 Additional details in the documentation\n\n17\n\f👉 Example: run/SimExamples/HepMC\n\n👉 Example: \nrun/SimExamples/HepMC_STARlight\n\nHepMC generation\n\n• numerous generators can produce HepMC formatted data by default → a universal and convenient method for storing information from MC event generators",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "c7a7f0a60c0ae57e3f709873c35f4cc83ec695895f82e65fbfa96998c52c45d6": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• o2-sim is capable of handling HepMC files right out of the box; however, data can also be read from FIFOs.\n\n• HepMC3 is the standard, but HepMC2.06 data is compatible for both local file generation and FIFO data.\n\nUsing the command: o2-sim -n 10 -g hepmc --configKeyValues \"HepMC.fileName=/path_to/file.hepmc\"\n\nor for version 2: --configKeyValues 'HepMC.fileName=/path_to/file.hepmc;HepMC.version=2'\n\nAnother feature is the ability to launch event generators via the cmd parameter of GeneratorHepMC; this allows generators to print data directly to stdout, eliminating the need for large local .hepmc files.\n\nFor automatic FIFO generation, use the run/SimExamples/HepMC_EPOS4 script.\n\nCommand: o2-sim -n 100 -g hepmc --seed 12345 --configKeyValues \"GeneratorFileOrCmd.cmd=epos.sh;GeneratorFileOrCmd.bMaxSwitch=none;HepMC.version=2\"\n\nFor more details, see <HERE>.\n\n18\n\fADVANCED\n\nGenerators: Triggering\n\n👉 Example: \nRun/SimExamples/Selective_Transport_pi0\n\n• Event filtering or triggering is also flexible.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "4abeeceb303a50ca87310530bc72f7b33fe38810eee6c7335f0c378fc22cafae": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Event filtering or triggering can also be flexibly managed at the generator level.\n\n• For instance, only events with specific properties are generated and simulated.\n\n• Users can set up a customizable \"external\" trigger through the \"external\" generator approach.\n\n• A user-defined trigger function can be implemented in a separate ROOT macro and passed to o2-sim using the `-t external` option.\n\n• This trigger function evaluates the full list of generated particles.\n\n• For advanced triggering, DeepTriggers can be used to trigger based on the primary particle collection and additional internal generator data.\n\n“Run o2-sim with the pythia8pp generator and forward only events that meet the trigger condition defined in the file Trigger.C”\n\no2-sim -n 10 -g pythia8pp -t external --configKeyValues \n‘TriggerExternal.fileName=myTrigger.C;TriggerExternal.funcName=“trigger”'\n\n“Sample content of the ROOT macro file myTrigger.C”",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "661e65b538c9f559271631593f701ff6f42ee79ca84b352c1c8ecf1f9c98db4e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "“stub content of ROOT macro ﬁle myTrigger.C”\n\n// provides a fully customized event trigger function\no2::eventgen::Trigger trigger()\n{\n  return [ ](const std::vector<TParticle>& particles) -> bool {\n    return true; // event is triggered\n  }\n}\n\n19\n\fADVANCED\n\n👉 Example: \nRun/SimExamples/MCTrackToDPL\n\no2-sim as an on-the-fly generator for analysis\n\n• o2-sim can function as a generator service to inject events directly into an analysis topology (DPL) \n\nwithout the need for intermediate storage\n\n• beneficial for rapid-simulation studies within the analysis framework or for primary-only analysis\n\ntasks\n\n@D. Chinellato \n\n• This approach is currently utilized by various PWGs, such as for cocktail simulation in PWG-EM\n\nVery basic example\n\n•# Launch the simulation\no2-sim -j 1 -g pythia8pp -n 10 --noDiscOutput --forwardKine --noGeant &> sim.log &\n# Start a DPL process\no2-sim-mctracks-proxy -b --nevents 10 --o2sim-pid ${SIMPROC} --aggregate-timeframe 1 &\n\n• Essential for on-the-fly analysis\n\n• Can be skipped for a single o2-sim process\n\n20\n\fIntegrated workflows: O2DPG MC",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "34084c6d4d1470ddd9440338e2c25258b601091ad3260c74439ac2ed443cda17": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Can be skipped for a standalone o2-sim operation\n\n20\n\fIntegrated workﬂows: O2DPG MC\n\n• To generate simulated AODs, we must extend beyond o2-sim and event generation, running the full algorithmic pipeline, which includes digitization and reconstruction steps.\n\n• This is a intricate system comprising numerous executables or tasks, necessitating consistent application and transmission of settings/configuration for effective operation.\n\n• For instance, the full-system-test for data acquisition.\n\n• It is challenging to configure correctly on your own; utilize a maintained setup!\n\n• For ALICE Run3, the official production system for GRID operations is the O2DPG repository (MC section).\n\n• O2DPG also includes scripts and setup for data acquisition (DATA section).\n\n“Algorithm interactions form a complex system (DPL topology)”\n\n21\n\fO2DPG …\n\n• offers a reliable setup for official MC productions for ALICE-Run3 and a runtime for executing MC jobs on GRID.\n\n• incorporates all pertinent processing tasks into a single framework.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "8dd51ca2421498394c20aa7ec126b0899a0e0cd6ee77fb81a9ba5391790839f4": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• consolidates all necessary processing steps into a \nharmonious and unified framework to ensure a \nfunctional pipeline from event generation through AOD and further stages\n\n• preserves PWG generator configurations as \nversion-controlled code\n\n• conducts testing and CI processes for PWG generator configurations\n\nhttps://github.com/AliceO2Group/O2DPG\n\nKey directories:\n\n• MC/bin      (workflow creation/execution)\n• MC/run      (PWG-specific run scripts)\n• MC/config   (PWG-specific generator configurations)\n\n22\n\fBasics of O2DPG-MC\n\n• Executing a MC job involves two steps to separate configuration logic from execution logic\n\n1. Formulate a valid and configured description of a MC job == “workflow”\n\nWorkflow creator\n\nGenerates a cohesive, integrated MC \nworkflow in a directed-acyclic-graph \n(DAG) format, articulated as JSON, \nreflecting the task dependencies\n\nConfigures the MC workflow based on key user \nparameters:\n• collision system\n• generators\n• interaction rate\n• number of timeframes\n\nworkflow.json\n\nSimple example…",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "cf4554d5203577fac58b03787859cb7a561ffd5af2cfab244f096389f8351e0b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    workﬂow.json\n\nA basic example…\n\n23\n\fFundamentals of O2DPG-MC\n\nA comprehensive real-life example with just \n2 timeframes is significantly larger…\n• Running a Monte Carlo (MC) job involves separating configuration logic from execution logic\n\n1. Formulate a valid and configured description of an MC job, termed as a “workﬂow”\n\nWorkﬂow creator\n\nConstructs a coherent, integrated MC \nworkﬂow in a directed-acyclic-graph (DAG) format, described as a JSON, \nreflecting the dependencies between tasks\n\nCustomizes the MC workﬂow based on \nkey user parameters\n• Collision system, generators, interaction rate, number of \ntimeframes\n\nworkﬂow.json\n\n24\n\fFundamentals of O2DPG-MC\n\n• Running an MC job involves separating configuration logic from execution logic\n\n• Step One: Formulate a valid and configured description of an MC job, termed as a “workﬂow”\n\n• Step Two: Execute the MC job using a dynamic graph scheduler\n\nWorkﬂow creator\n\nWorkﬂow executor\n\nOutput (AOD)",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "4b4c4b5fb88d5131460b5c8d5488d4275526b9b3ed530c911ab81d579f1f7914": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Workflow Creator\n\nWorkflow Executor\n\nOutput (AOD)\n\nGenerates a cohesive, integrated Monte Carlo (MC) workflow in the form of a directed-acyclic-graph (DAG), represented as JSON, which models the interdependencies of tasks.\n\nConfigures the MC workflow based on significant user parameters:\n- collision system\n- generators\n- interaction rate\n- number of timeframes\n\nHandles the execution of the DAG workflow on multi-core systems, akin to a dynamic “build” tool.\n\nInitiates tasks as soon as they are ready:\n- Aims for high parallelism and CPU utilization\n- Adheres to resource constraints (avoids overloading the system)\n\nworkflow.json\n\nIn essence, a versatile tool not limited to MC\n\n25\n\fPrinciples of O2DPG-MC\n\n• Executing an MC job involves two stages: separating configuration logic from execution logic\n\n• Stage One: Develop a valid and configured description of the MC job, or \"workflow\"\n\n• Stage Two: Execute the MC job using a dynamic graph scheduler",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "6c01ce3dba68f42ebf373dba3e0eba43596c4d146e0d0b9b89e3d6c505282d60": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKFLOW CREATOR\n\nWORKFLOW EXECUTOR\n\nOUTPUT (AOD)\n\nDesigns a coherent and integrated Monte Carlo (MC) workﬂow in the form of a directed acyclic graph (DAG), described as a JSON file, which models the dependencies among tasks.\n\nConfigures the MC workﬂow based on key user parameters:\n- Collision system\n- Generators\n- Interaction rate\n- Number of timeframes\n\nHandles the execution of the DAG workﬂow on multi-core machines, akin to a dynamic \"build\" tool.\n\nInitiates tasks as they become ready:\n- Aiming for high parallelism and CPU utilization\n- Ensuring adherence to resource constraints (avoids system overload)\n\nworkﬂow.json\n\nIn essence, a versatile tool not limited to MC applications\n\n💡 Did you know?\n\nA DAG workﬂow is comparable to a DPL topology\n\nA DPL topology cannot fit into GRID memory\n\nA DAG workﬂow runs in stages with intermediate files stored on disc\n\n26\n\fO2DPG-MC workﬂows: Requirements\n\n• Requires valid AliEn tokens to run (for accessing CCDB objects)\n\n• Experts can bypass this by using CCDB snapshots",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "befb32f68317696005ffbb480a1aef0ebf8821291695ed4edf267116a86f3b45": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Experts can bypass certain restrictions by using CCDB snapshots.\n\n• The O2DPG MC workﬂows are designed to run optimally on a system with 8 CPU cores and 16GB of RAM, mirroring the standard resources available on the GRID.\n\n• When running these workﬂows locally on your laptop, you should adhere to these resource requirements.\n\n• These defaults are incorporated into the setup and execution of the workﬂows.\n\n• Transport simulation will utilize 8 worker threads.\n\n• TPC and TRD digitisation will employ 8 threads.\n\n• The workﬂow runner assumes it has access to 8 cores.\n\n• Consequently, running O2DPG MC workﬂows on hardware with fewer resources can result in issues.\n\n• However, with some adjustments and tuning, it might still be feasible to run these workﬂows on less powerful hardware.\n\n• Valid AliEn-tokens are necessary to run the workﬂows (for accessing CCDB objects).\n\n• Experts can bypass this by using CCDB snapshots.\n\n• O2DPG MC workﬂows automatically fetch each object once and store them as snapshots for future use.\n\n• The default storage path for these snapshots is ${WORKDIR}/ccdb/<path>/<in>/<ccdb>/snapshot.root.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "2291e180cbf19b6980980401bf82879a176c2d49beb76a328ca755988f7bc787": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Default paths: ${WORKDIR}/ccdb/<path>/<in>/<ccdb>/snapshot.root\n\nMoreover…\n\n•\n\nThe path can be manually specified using:\n\nexport ALICEO2_CCDB_LOCALCACHE=/<your>/<path>\n\nALICEO2_CCDB_LOCALCACHE=/<your>/<path>\n\nor by executing:\n\nALICEO2_CCDB_LOCALCACHE=${YOURPATH} o2_dpg_workﬂow_runner.py …\n\nenabling the use of an existing cache\n\n•\n\nA script in O2 for downloading CCDB ﬁles is available:\n\n${O2_ROOT}/bin/o2-ccdb-downloadccdbﬁle --host http://alice-ccdb.cern.ch -p \nTPC/Calib/CorrectionMapRef --timestamp <timestamp> --created-not-after 3385078236000 \n-d ${YOURPATH}\n\n28\n\f👉 Examples here; 👉 Documentation here\n\nO2DPG-MC step 1: workflow creation\n\n• MC workflow for ALICE Run3 is created using the script:\n\nO2DPG/MC/bin/o2dpg_sim_workflow.py\n\n• Configures the MC workflow based on key parameters such as collision system, generators, interaction rate, number of timeframes, transport engine, etc.\n• `o2dpg_sim_workflow.py --help` → documentation with all available options",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "3abd2dc857e970286dde61ecee8e2146e0c99408d78b3433415215fb055dad75": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 14000 -col pp\n\n                                       -gen pythia8 -proc cdiff           \n\n                          -tf 5 —ns 2000                                                                                 \n\n\"Create an ALICE Run3 Monte Carlo workflow for a 5 timeframe simulation, generating 2000 events per timeframe at an interaction rate of 500kHz for 14TeV pp collisions using Pythia8 with the cdiff process enabled...\"\n\n                                         -interactionRate 500000\n                      -run 302000\n\n☝ Important options:\n\n-gen, -tf, -n, -eCM, -interactionRate, -run, -col\n Optionally: -field, -seed, -proc\n\n29\n\fWorkﬂow creation: Run numbers\n\n• A run number is essential as it is required to fetch conditions from CCDB.\n\n• Therefore, run numbers should be used even for non-data-taking simulations.\n\n• A list of predefined run numbers is available for MC simulations.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "f438541ab59b964baa1d80f5932f6c8e5202f2d547de08177ea91d498a799ea0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Predefined run numbers for Monte Carlo simulations are documented here: \nhttps://twiki.cern.ch/twiki/bin/view/ALICE/O2D\nPGMCSamplingSchema\n\n• For example, a run number of 310000 can be used for a PbPb simulation with a field of -0.5T, which should fetch appropriate CCDB objects.\n\n• The recommended approach involves:\n\n• Documentation\n• Official configuration folder\nWorkflows creation: Generator configuration\n• Custom configurations can be specified to the generation workflow through .ini files\n\no2dpg_sim_workflow.py -gen pythia8 -ini <path/to/config.ini>\n\n• These files include sections for generator settings and can also include additional triggers for the generated particles\n\n• Official configurations are typically found in O2DPG/MC/config/<PWG>/ini/<config>.ini and are validated by a CI system when modifications are proposed via PR or when new configurations are added\n\nSnippet from PWGDQ configuration\n\n• The configurations folder is linked to the O2DPG_MC_CONFIG_ROOT environment variable",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "fa23dcac8b8060d5485e3fbb50f83be4a8fbdf84c35e38aa0377e666b1722f53": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• The configurations folder is associated with the \n\nO2DPG_MC_CONFIG_ROOT environment variable.\n\nLocal configurations can be utilized, while also allowing the testing of newer configurations with older O2DPG builds and vice versa.\n\n[GeneratorPythia8]\nconfig = \n${O2DPG_MC_CONFIG_ROOT}/MC/config/common/pythia8/generato\nr/pythia8_hf.cfg\nhooksFileName = \n${O2DPG_MC_CONFIG_ROOT}/MC/config/PWGHF/pythia8/hooks/pyt\nhia8_userhooks_qqbar.C\nhooksFuncName = pythia8_userhooks_ccbar(-4.3,-2.3)\n\n31\n\fO2DPG-MC Step 2: Workflow Execution\n\n• The workflow runner/executor constructs and executes a \n\nDAG workflow on a compute node.\n\n• At minimum, it requires a workflow file and a target\n\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod\n\n\"Execute workflow up to \naod task (assuming 8-core \nCPU configuration)\"\n\n• Features include checkpointing and incremental build\n\nw\no\nn\nk\no\nt\nd\no\no\nG\n\n• The DAG can be transformed into a standalone simple shell script.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "cdecf7476fe6ea6811e35ae777af910f9921146ee17a3700225d63f29736ab4d": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Transform the Directed Acyclic Graph (DAG) into a basic shell script that can be executed independently.\n\no2dpg_workflow_runner.py -f workflow.json -tt digi\no2dpg_workflow_runner.py -f workflow.json -tt aod\n\n\"First run the workflow until digitization, then proceed to AOD stage, without repeating completed tasks!\no2dpg_workflow_runner.py -f workflow.json -tt aod\n--produce-script my_script.sh\n\"Generate a simple shell script to execute the entire process sequentially up to the AOD stage.\"\n\n• Additional useful features are available\n\n• As usual, use o2dpg_workflow_runner.py --help to view the available options.\n\n32\n\fExecute MC jobs on the GRID\n\n• The MC workflow can be run on the GRID up to the AOD generation stage.\n\n→ Both O2DPG-MC steps will be executed from a script, example.sh O2DPG-MC script.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "6b636918b67a46f0a16aa7fb82fdf3ad1326d46831ac818ba3f6cc9b5276cd62": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Both O2DPG-MC stages will be executed via a script, example.sh.\n\n```bash\n#!/usr/bin/env bash\n# Workflow setup: step 1\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen pythia8 -proc cdiff -tf 1 -ns 200 -e TGeant4 -interactionRate 500000\n# Workflow run: step 2\n${O2DPG_ROOT}/MC/bin/o2dpg_workflow_runner.py -f workflow.json -tt aod\n```\n\nSeveral example \nscripts are included <Here>.\n\n• Jobs can be dispatched to the GRID using a script included in the O2DPG package.\n\n```bash\n${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script my_script.sh --jobname test --outputspec \"/*.log@disk=1\", \"/*.root@disk=2\" --packagespec \"VO_ALICE@O2sim::v20241014-1\" --wait --fetch-output\n```\n\nOptions defined:\n--jobname: sets the task name visible on MonALISA\n--outputspec: determines which files are saved post-execution;\n\n          @disk=2 indicates that two copies of the file will be saved for redundancy.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "b169a957dea7ad77da8300442dc4a9e1c7c48f5934713191dccea3bfba3b1ea0": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "@disk=2 indicates that 2 copies of the file will be saved for security purposes.\n\n--wait: your system will pause until all GRID jobs are completed.\n--fetch-output: automatically transfers files to your local disk.\n\n--help: to display all available options.\n\n!\n☝ Important:\nThe output will be stored in a separate folder from your current working directory; please verify the stdout!\n\n33\n\fAnchored MC Productions\n\nDocumentation\n\n• Simulations that are configured to mimic real data-taking conditions\n\n→ LHC fill schedule, included ALICE detectors, dead channels, alignment, interaction rate, etc.\n\n• These simulations are essential for generating realistic samples for physics analyses.\n\n• Each anchored MC run corresponds to a specific CYCLE and SPLITID, encompassing N timeframes across the entire RUN, with all CYCLES and SPLITIDs processed.\n\nCYCLE J - 1\n\nwhere\n\nJ =    Total N TFs\n\nN*PRODSPLIT\n\n←N is determined by the running script (next slide)",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "4a58985fae7fbb82b2b80a33beff4a858ba0ec8aa1caf285cea5de1ae603d281": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "CYCLE J - 1\n\nwhere\n\nJ =    Total N TFs\n\nN*PRODSPLIT\n\n←N is set via the running script (next slide)\n\n34\n\fHow to initiate anchored MC productions?\n\nDocumentation\n\n• The grid_submit.sh script can be utilized to initiate anchored MC productions → an associated production script must be supplied  \nexample script for anchored pp production\n\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass2\nexport ALIEN_JDL_MCANCHOR=apass2\nexport ALIEN_JDL_CPULIMIT=8\nexport ALIEN_JDL_LPMRUNNUMBER=535069\nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC\nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp\nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a2\nexport ALIEN_JDL_LPMANCHORRUN=535069\nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC23f\nexport ALIEN_JDL_LPMANCHORYEAR=2023\n\nexport NTIMEFRAMES=1\nexport NSIGEVENTS=50\nexport SPLITID=100\nexport PRODSPLIT=153\nexport CYCLE=0\n\nexport SEED=5\nexport NWORKERS=2\n\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh\n\ntest_anchor_2023_apass2_pp.sh \n\nso",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "056029ce08100a93a2a3772b6f80550e32dd780e53f6e837c3845f90c6b8acb8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh\n\ntest_anchor_2023_apass2_pp.sh \n\nso\n\n${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script \ntest_anchor_2023_apass2_pp.sh --jobname test --outputspec \n\"*.log@disk=1\",\"*.root@disk=2\" --packagespec \n\"VO_ALICE@O2sim::v20241014-1\" --wait --fetch-output\n\n☝Important to know:\n● All existing MC productions are listed in MonALISA under Production Info → MC production cycles\n\n(running, completed, software updates, etc.)\n\n● Steps to request Anchored MC production to O2DPG:\n\n1. Run a test on the GRID using your settings\n2. Include an estimate of running time, expected storage, and the number of events\n3. Submit a link to the GRID folder containing your test and results configuration/JDL\n\nCheck \nbackup\n\n35\n\fFurther topics:\n\n• Additional advanced topics will be covered\n\n• … extending beyond the current set of slides …\n\n• Contact us for more details!\n\n• Help us enhance the documentation, which is still in its early stages!\n\n… and much more",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "e0c93135a1b5f6f97cee669239965b27b7acfe7e822a43c1e98e2c251e792624": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "• Assist us in enhancing the documentation, which is currently in its initial phase!\n\n… and much more\n\n36\n\fBackup\n\fDigitization, embedding (signal mixing)\n\n• Digitization might be less crucial for physics analysis … yet it’s essential to be aware of it\n\n• The core function of digitization is to\n\n• transform straightforward energy deposits into detector signals (digits), ultimately mirroring the raw detector output\n\n• place individual generated events into a timeframe collection\n\n• consider pileup effects and triggering\n\n• Digitization as a signal embedding / mixing system\n\n• Digitization can serve as an event-mixing / event-embedding system\n\n• signal-background embedding permits the inclusion of signal events within a repeated background event collection (saves transport simulation time)\n\n• Can create sequences of event types within a timeframe (a signal event following every n-th min-bias event)\n\n👉 Embedding example in O2DPG: \nPWGHF embedding\n\n38\n\fEstimate resources",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "27ec6ea29d2f3ba58699e8eaf30ae3a99a3c4a51d0d7e1e505ad043adbdfff6b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "👉 Embedding example in O2DPG: \nPWGHF embedding\n\n38\n\fEstimate resources\n\n• Grid logs will indicate the total runtime of your processes when running on the GRID. \n**** Pipeline completed successfully (global runtime: 533.892s) *****\nexample script for anchored pp production\n\n• The expected runtime in seconds can be determined by:\n\n• Storage resources are computed by summing the sizes of all stored files, which can be obtained from MonALISA.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/ALICE-simulation-tutorial.pptx-1.pdf"
        }
    ],
    "fe7299a85a959a5294e720db2a7aeb741e740ec5bc6b19006a6a78b026189748": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "TUTORIALS ON EXECUTING MC SIMULATIONS WITH O2DPG\nFROM BEGINNER TO EXPERT\n\nAlberto Calivà for the DPG\n\nDPG\n\nALICE   DATA\n∙\nPOLICY FOR MC REQUESTS\n\nA new policy for MC requests was introduced by the DPG at the Physics Forum on January 17 [Link].\n\n1. The requesting PWG must prepare and test any software updates.\n\n2. Upon completion, the PWG should create a tag according to specified instructions and use it for a Grid test.\n\n3. Once the test is successful, the PWG must submit a request to the PB, accompanied by the initial quality control (QC) results from the test run.\n\n4. After approval, a JIRA ticket should be initiated. Essential fields include:",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "3b076a8ca0b1f58333988388716f7fdb4a6e4dccdf21c24361ea399fa52cd5ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "4. Upon approval, a JIRA ticket must be created. Required fields include:\n\n- Expected storage (in TB)\n- Running time (in days at 10k CPU)\n- Number of requested events\n- Link to the GRID folder containing configuration/JDL and AODs\n- QA contact (if omitted, PWG conveners will be assigned automatically)\n- Presentation PDF for the PB (only accessible by the production manager)\n\nPB approval is necessary if the running time exceeds 1 day at 10k CPU.\n\n1 / 38\n\fGeneral information\n\nContact details for the simulation developers:\n\n- Simulation e-group (for meeting updates) + WP12 meetings\n- Preferred Mattermost channels: O2-simulation + O2DPG \n- JIRA for submitting feature requests or reporting bugs (for components of simulation or O2DPG)\n\nWhere to find simulation-related information:\n\n-",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "9533a229dc244a7583c10e2ad1d761448d49d207280df2d8ab2a74baa4f4f3bd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Where to find information about simulation\n\nOnline documentation: https://aliceo2group.github.io/simulation/\nSimulation documentation in AliceO2: DetectorSimulation.md\nMore details in O2DPG: WorkflowRunner.md\nExamples can be found in O2/SimExamples or nightly-tests\nAnchored MC information: https://aliceo2group.github.io/simulation/docs/o2dpgworkflow/anchored.html\n\nInstalling O2DPG\n\nTo use O2DPG, first install it on your local machine (assuming you have O2 installed already).\n\nDownload the software:\n\n```\n$ cd ~/alice\n$ aliBuild init O2DPG\n```\n\nBuild the software:\n\n```\n$ aliBuild build O2sim —-defaults o2\n```\n\nLoad the environment:\n\n```\n$ alienv enter O2sim/latest\n```\n\nAlternatively, you could build O2PDPSuite, a meta package that guides the build of everything needed for simulation.\n\nLXPLUS\n\nIf you do not have a working installation locally,\n\nconnect to the LXPLUS cluster.\n\nLXPLUS (Linux Public Login User Service) is the interactive login service for the CERN computing grid.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "42502b619b0789c8b0a3f8ea616a5ef9be5f7a82001973a780d7a4d207585de8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "CONNECT TO THE LXPLUS CLUSTER\n\nLXPLUS (Linux Public Login User Service) serves as the interactive logon service for all CERN users accessing Linux. The LXPLUS cluster comprises public machines supplied by the CERN IT Department for interactive work. For more detailed information, consult the documentation maintained by the IT Department.\n\n4 / 38\n\fUSE PRECOMPILED PACKAGES ON LXPLUS\n\nTo connect to lxplus, use the Secure Shell protocol (SSH):\n\nalbertocaliva@MacBook-Pro-AlbertoCaliva1-3 ~ % ssh -X alcaliva@lxplus.cern.ch \n(alcaliva@lxplus.cern.ch) Password: \n\nEnter your CERN account password (matching your CERN email) \nNote that characters are not displayed while typing.\n\nTo load the environment, use the nightly precompiled builds:\n\n$ alienv enter O2sim::v20240120-1\n\nVersion: 20 January 2024\n\nYou can list all available packages:\n\n$ alienv q\n\nThis process can be quite time-consuming.\n\n5 / 38\n\fGRID CERTIFICATE\n\nTo execute MC simulations with O2DPG, you require a valid GRID certificate.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "9271219ab3e5432008f1b76f851586d7a117f518140afa284de2ccb61eac15ee": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To perform MC simulations with O2DPG, you require a valid GRID certificate for accessing information on the CCDB file.\n\nInstructions for obtaining your GRID user certificate and importing it to your browser for backup are provided.\n\nThe Condition and Calibration Data Base (CCDB) is a ROOT file utilized to store calibration and alignment data, such as centrality, TPC splines, and space-charge distortion calibration maps.\n\nFor more information, visit the following link.\n\nRunning MC simulations with O2DPG is straightforward: it requires just one script and a single command in the terminal.\n\nLoad the environment:\n\n$ alienv enter O2sim/latest\n\nObtain a token (valid for 24 hours)",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "9448ed547affd17fd32b486fa63ea7ae729b88001839e0de87b5cf9dc88c5b93": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Load the environment:\n\n$ alienv enter O2sim/latest\n\nObtain a token (valid for 24 hours)\n\n[O2Sim/latest] ~ %> alien-token-init \nEnter PEM pass phrase: \nDN >>> C=ch/O=AliEn2/CN=Users/CN=alcaliva/OU=alcaliva \nISSUER >>> C=ch/O=AliEn2/CN=AliEn CA \nBEGIN >>> 2024-01-26 14:01:56 \nEXPIRE >>> 2024-02-26 16:01:56\n\nEnter the password for your GRID \nUser certificate  \n(N.B. the characters are invisible)\n\nFirst example:\n\n[O2Sim/latest] ~ %>  o2-sim -e TGeant4 -g pythia8pp -n 10 -j 2\n\nSimulator\n\n\"engine\": the transport code \n(Geant4 is the default)\n\nGenerator\n\nNumber of \nevents\n\nNumber of parallel \nsimulation workers\n\n8 / 38\n\fo2-sim options\n\nList all options and their defaults:\n\n[O2Sim/latest] ~ %> o2-sim —h\n\nMain options:\n\n -e [ --mcEngine ] arg (=TGeant4)      \n\n -g [ --generator ] arg (=boxgen)       \n\ntransport code (default: Geant4)\nevent generator \n\n -t [ --trigger ] arg                \n\n -m [ --modules ] arg (=all modules)  \n\n --skipModules arg                   \n\n --readoutDetectors arg",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "ec8f0b1f2092ad3d1331ddf52d21079e5b5d9bd4ea7c4cd8fab0bf524c173292": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "--skipModules arg\n\n--readoutDetectors arg\n\n--skipReadoutDetectors arg\n\n-n [ --nEvents ] arg (=0)\n\nevent generator trigger\nmodules included in the geometry (impact on material budget)\nmodules to be skipped (take precedence over -m)\nlist of detectors generating hits (default=all)\nskip hit creation for these detectors\nnumber of events\n\n9 / 38\n\fo2-sim options\n\n--configKeyValues arg\n\nsemicolon-separated list of configuration keys paired with strings \nrepresenting configuration parameters\n(e.g.: 'TPC.gasDensity=1;...\n\n--configFile arg\n\n/path_to/configuration_file.ini/json\n\n--seed arg (=0)\n\n--field arg (=-5)\n\ninitial seed (default: 0 for random)\nMagnetic field strength in kGauss, valid values \nare -2, -5, 0, and uniform field indicated by -<intKGauss>U; \"ccdb\" to retrieve from CCDB\n\n-j [ --nworkers ] arg (=5)\n\nnumber of parallel simulation workers\n\n10 / 38\n\fLog files\n\nExample:",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "611bf6fb1d516a9be0dd0cd1d23ead44170dcc5697a6fa047e33d640ccb0c3d8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "NUMBER OF PARALLEL SIMULATION WORKERS\n\n10 / 38\n\fLog Files\n\nExample:\n\n[O2Sim/latest] ~ %> o2-sim -e TGeant4 -g pythia8pp -m PIPE ITS TPC TOF -- readoutDetectors TPC -n 10 --field -5 -j 2 --noemptyevents --configKeyValues \"PrimaryGenerator.id=202\"\n\no2-sim generates 3 internal log files that are helpful for monitoring the simulation process and troubleshooting issues:\n\n o2sim_serverlog\n\ngenerated by the generator (lists particles and their parents, properties, active processes, settings, etc.)\n\n o2sim_workerlog0\n\ngenerated by the propagation code (Geant4)\n\n o2sim_mergerlog\n\ngenerated by the merger service when it combines hits from all active detectors and writes them into specific files (e.g., o2sim_HitsITS.root, o2sim_HitsTOF.root, etc.)\n\n11 / 38\n\fKinematics File\n\no2sim_Kine.root contains details on:\n\n1. generated particles, their properties (px, py, pz, E, etc.), and parent particles  \n2. secondary particles produced during the transport process",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "fd41bcb9cab81f4ccb2183adb8306f4757520881d70647e0eee9e23510f3230e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    information about each simulated event is provided in a separate file:  \no2sim_MCHeader.root\n\nInteractively examining kinematics can be challenging \n(\"ROOT-IO boilerplate\") \n\n→\n\nIntroduce 2 key utility classes to simplify this process for users: \nMCKinematicsReader   \n\nClass to read and obtain tracks for specific \nevents or Monte Carlo labels\n\nMCTrackNavigator \n\nClass to traverse the mother-daughter hierarchy of \nMC tracks and to query physics properties\n\n12 / 38\n\fSimulators used in O2\n\nPythia8 is primarily utilized (recommended whenever feasible)\n\nPythia8 requires a configuration file (.cfg): \n\n[O2Sim/latest] ~ %> o2-sim -g pythia8 —-configKeyValues  \n\"GeneratorPythia8.config=/path_to/pythia8.cfg\"\n\nSpecify the location (path) \nfor the configuration file\n\nName of the \nconfiguration file\n\nExample of a configuration file\n\n### random  \nRandom:setSeed = on  \nRandom:seed = 0",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "ef8cf045d8620e6a9b61a7e55ebfb865967a4b6086459f231e7257e829f320ef": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Example of a configuration file\n\n### random  \nRandom:setSeed = on  \nRandom:seed = 0  \n\n### beams  \nBeams:idA = 2212  \nBeams:idB = 2212  \nBeams:eA = 6800.000000  \nBeams:eB = 6800.000000  \n\n### processes  \nSoftQCD:inelastic = on  \n\n### decays  \nParticleDecays:limitTau0 = on  \nParticleDecays:tau0Max = 10. \n\n13 / 38\n\fGenerators implemented in O2\n\nTo generate the configuration file, utilize the mkpy8cfg.py script.\n\nFirst, load the environment:\n\n$ alienv enter O2sim/latest \n\nThen, execute the script with the necessary parameters:\n\n[O2sim/latest] ~ %> ${O2DPG_ROOT}/MC/config/common/pythia8/utils/mkpy8cfg.py —-output=/\npath_to_your_dir/pythia8.cfg --seed=0 --idA 2212 --idB 2212 --eA 6800.0 --eB 6800.0 --\nprocess inel  \n\nThis will create the pythia8.cfg file that you \ncan use to run your desired pythia8 simulation\n\n14 / 38\n\fGenerators implemented in O2\n\nPreconfigured pythia8 for pp collisions: \n\n[O2sim/latest] ~ %>  o2-sim -g pythia8pp",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "bab162a73ace3c5e1df13aeea1cdf74b9fad6de09dbe041fc77a39dd5087b3cd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Preconfigured pythia8 for proton-proton collisions:\n\n[O2sim/latest] ~ %>  o2-sim -g pythia8pp\n\n### beams \nBeams:idA 2212   # proton \nBeams:idB 2212.  # proton \nBeams:eCM 14000. # GeV \n\n### processes \nSoftQCD:inelastic on # all inelastic processes \n\n### decays \nParticleDecays:limitTau0 on \nParticleDecays:tau0Max 10. \n\n15 / 38\n\fGenerators implemented in O2\n\nPreconfigured pythia8 for heavy-ion collisions:\n\n[O2sim/latest] ~ %>  o2-sim -g pythia8hi\n\n### beams \nBeams:idA 1000822080   \nBeams:idB 1000822080   \nBeams:eCM 5520.  \n\n# Pb \n# Pb \n# GeV \n\n### heavy-ion settings (valid for Pb-Pb 5520 only) \nHeavyIon:SigFitNGen 0 \nHeavyIon:SigFitDefPar 14.82,1.82,0.25,0.0,0.0,0.0,0.0,0.0 \nHeavyIon:bWidth \n\n15. \n\n# impact parameter from 0-x [fm] \n\n### processes (apparently not to be defined) \n\n### decays \nParticleDecays:limitTau0 on \nParticleDecays:tau0Max 10.\n\n16 / 38\n\fGenerators implemented in O2\n\nPreconfigured pythia8 for proton-proton collisions with heavy flavor:\n\n[O2sim/latest] ~ %>  o2-sim -g pythia8hf",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "1cda2e66279cc4867ba89058b79845e64246d9ef475f98ca1bf1a6fb18968766": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Preconfigured pythia8 for pp collisions to study heavy flavor\n\n[O2sim/latest] ~ %>  o2-sim -g pythia8hf\n\n### beams \nBeams:idA 2212 \nBeams:idB 2212  \nBeams:eCM 14000.  \n\n### processes \nHardQCD:hardccbar on   \nHardQCD:hardbbbar on   \n\n### decays \nParticleDecays:limitTau0 on \nParticleDecays:tau0Max 10. \n\n# proton \n# proton \n\n# GeV \n\n# scatterings g-g / q-qbar -> c-cbar \n# scatterings g-g / q-qbar -> b-bbar \n\nThe codes for all processes are detailed in the latest Pythia manual\n\n17 / 38\n\fBox Generator\n\nBox generator:",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "610df52841df06f988515c8592f5c9f4df00f305301ae97751492a32d083651f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Box Generator:\n\nBox generator: a straightforward mono-PDG particle generator that creates particles with uniform distributions in momentum (p), pseudorapidity (η), and azimuthal angle (ϕ), hence the name \"box\" (the 3D distribution of p, η, and ϕ appears like a box).\n\nη\n\nϕ\n\np\n\n[O2sim/latest] ~ %> o2-sim -e TGeant4 -g boxgen -m PIPE ITS --readoutDetectors ITS \n-n 1 --field -5 -j 2 --noemptyevents --configKeyValues \"BoxGun.pdg=211 ; \nBoxGun.eta[0]=-0.5 ; BoxGun.eta[1]=0.5; BoxGun.number=5 ; BoxGun.prange[0]=0.5 ; \nBoxGun.prange[1]=4.5 ; BoxGun.phirange[0]=0.0 ; BoxGun.phirange[1]=180.0\"\n\nYou can find the parameters and their default values here.\n\n18 / 38\n\fExtkin02 Generator:\n\nextkin02 uses particles from an existing MC kinematics file to simulate only the transport process. A kinematics file is generated by a previous run of o2-sim. \n\nNo transport occurs in the initial iteration.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "522c3f966556eeeace17a1d8995eb5764a992b607d793b522b1a96a7b74dee84": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "No transport in the first iteration\n\n[O2sim/latest] ~ %> o2-sim --noGeant -g boxgen -n 1 --configKeyValues \"BoxGun.pdg=211 \n; BoxGun.eta[0]=-0.5 ; BoxGun.eta[1]=0.5; BoxGun.number=5 ; BoxGun.prange[0]=0.5 ; \nBoxGun.prange[1]=4.5 ; BoxGun.phirange[0]=0.0 ; BoxGun.phirange[1]=180.0\"\n\n[O2sim/latest] ~ %> o2-sim -g extkinO2 -e TGeant4 -m PIPE ITS --readoutDetectors ITS --\nextKinFile /path_to/o2sim_Kine.root \n\n19 / 38\n\fLoading particles from an HepMC file\n\nAn HepMC file serves as an \"object-oriented event record written in C++ for High Energy \nPhysics Monte Carlo Generators\". \n\nThese files offer a practical and standardized method for storing all data from MC event generators.\n\nTo load primary particles for transport from an existing HepMC file, one can specify \"hepmc\" as an option for the generator:\n\n[O2sim/latest] ~ %> o2-sim -g hepmc --configKeyValues \"HepMC.fileName=/path_to/\nfile.hepmc\"\n\n20 / 38\n\fExternal Particle Generators",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "01550f7825a4a272aa77a3ae010e6475df49c9cf03117132206b40ffc58e964a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXTERNAL GENERATORS\n\nPWG-specific generators fall under the \"external\" category, which comprises just-in-time ROOT macros. They remain as macros until ROOT (or the LLVM machinery) processes them, at which point they are converted into machine code.\n\nGeneral syntax:\n\nTo designate a generator as external, you must specify this.\n\n[O2sim/latest] ~ %> o2-sim -g external --configKeyValues \n'GeneratorExternal.fileName=path_to/generator_name.C; \nGeneratorExternal.funcName=function(par1,par2,…)'\n\nExample:\n\nSpecify the path and name of the generator, along with the function name used to generate particles according to the desired scheme.\n\n[O2sim/latest] ~ %> o2-sim -n 2 -g external -m \"PIPE ITS TPC\" --configKeyValues \n'GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGLF/pythia8/\ngenerator_pythia8_LF.C;GeneratorExternal.funcName=generateLF({1000010020, \n1000010030}, {10, 10}, {0.5, 0.5}, {10, 10})'\n\n21 / 38",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "2eeb8d2c244f898939ecc2341d4e44fc9c3560359f0e6eadfaff20486f8ccf31": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Triggering\n\nYou can choose events featuring a specific characteristic (such as a certain particle, a decay pathway, particles within the acceptance range, particle count, etc.).\n\nGeneral syntax:\n\n[O2sim/latest] ~ %> o2-sim -g pythia8pp -t external --configKeyValues \n'TriggerExternal.fileName=path_to/triggerMacro.C; \nTriggerExternal.funcName=triggerFunction(par1,par2,…)'\n\nThis trigger function evaluates the list of all generator particles and returns true if the event meets the criteria of interest.\n\n22 / 38\n\fTriggering\n\nExternal generator, trigger, and other configurations can all be set in a single .ini file \nlocated inside the folder \n${O2DPG_ROOT}/MC/config/PWGxy/ini.\n\nRecommended approach:\n\n→\n\nGeneratorHF_ccbarToDielectrons.ini\n\nExample:\n\n[O2sim/latest] ~ %> o2-sim -n 2 -g external -t external --configFile $\n{O2DPG_ROOT}/MC/config/PWGEM/ini/GeneratorHF_ccbarToDielectrons.ini \n\n23 / 38\n\fGap-triggered generators\n\n\"Gap-triggered\" generator:",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "f330493a5333862a9101146ab8ee00f0def8547fff2286007df87cce588d0cdc": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "23 / 38\n\fGap-triggered generators\n\n\"Gap-triggered\" generator:  \n\nThe event of interest is chosen only once every n events, with the intervening \"gap\" filled by minimum bias events.\n\nevent of interest\n\nGap filled with MB events\n\nevent of interest\n\nEvents of interest and minimum bias (MB) events are distinguished by their respective sub-generator IDs:\n\n mcCollision::getSubGeneratorId()=0            event of interest \n mcCollision::getSubGeneratorId()=1            gap (MB event)\n\nThis feature simulates real data-taking conditions with continuous readout, requiring the proper \"dilution\" of events of interest within MB events (the optimal gap/trigger ratio needs to be determined).\n\n24 / 38\n\fGap-triggered generators\n\n\"Gap-triggered\" generator:  \n\nThe event of interest is chosen only once every n events, with the intervening \"gap\" filled by minimum bias events.\n\nGeneratorHFTrigger_Xi_Omega_C.ini\n\nevent of interest\n\nGap filled with MB events\n\nevent of interest",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "626ed9aec308d08d908b263c0efd41fbc4c74b5266dc55454c1079a2b529984e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Events of interest and minimum bias (MB) events are distinguished using distinct sub-generator IDs:\n\nmcCollision::getSubGeneratorId()=0 identifies events of interest,\nmcCollision::getSubGeneratorId()=1 identifies MB events.\n\nThis feature is used to simulate real data-taking conditions with continuous readout, requiring the proper \"dilution\" of events of interest within MB events (the optimal gap/trigger ratio to be studied).\n\n24 / 38\n\fEmbedding\n\nParticles of interest can be added on top of an underlying event (generated using Pythia, Hijing, etc.).\n\ninjected \nparticle 1\n\nThese injected particles and those from the underlying event have different source IDs:\n\ninjected \nparticle 2\n\nmcCollision::getSourceId()=0 denotes injected particles,\nmcCollision::getSourceId()=1 denotes background particles.\n\ninjected \nparticle 3",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "3de31ddf722e875c75b73fa8f6e8e1174b8bf1d9f76a4e2c6107e44461ff39f8": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "injected  \nparticle 3\n\nATTENTION: \nParticles of interest in real events may differ from those in minimum-bias events plus injected particles of interest.\n→\nRecommendations: Examine real event characteristics when a particle of interest is detected, quantify any biases, and adjust the injection method or properties of the simulated underlying event.\n\nPerforming your efficiency analysis on simulated events (minimum-bias + injected particles) can introduce biases!\n\n25 / 38\n\fDigitization and reconstruction\n\nEvent  \ngeneration\n\nTransport  \nsimulation\n\no2-sim is utilized solely for the initial two stages.\n\nDigitization\n\n(Raw detector \n\noutput)\n\nReconstruction\n\nAO2D.root\n\nTo generate simulated AODs, it is necessary to extend o2-sim and event generation by running the full pipeline, encompassing both digitization and reconstruction phases.\n\nThis is a highly intricate system, made up of numerous executables or tasks, necessitating a consistent and coordinated application of settings/configuration for seamless operation.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "d91a458e3e303b47fd8ada02c78f0be1b2b2b9eba491a8cf44afcd9b9003569a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To execute MC simulations on the GRID, from generation to AOD, follow these steps:\n\nCreate and run workflows by writing a shell script (my_script.sh) with the following two lines:\n\n${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 13600 -col pp -gen pythia8 -proc cdiff -tf 1 -ns 200 -e TGeant4 -interactionRate 500000\n\n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json -tt aod -cpu-limit 8\n\nTarget Task: AOD creation\n\nThe first line generates the workflow and creates a .json file, while the second script runs the workflow.\n\nSubmit jobs on the GRID using the command:\n\n[O2sim/latest] ~ %> ${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script my_script.sh --jobname test --outputspec \"*.log@disk=1\",\"*.root@disk=2\" --packagespec \"VO_ALICE@O2sim::v20240103-1\" --wait --fetch-output\n\nAssign a name for the job (this will be visible on MonALISA)",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "c7cb3ac41aff896e038eec0ab24181b95f9ecc95de78d3c7f837468b70be6b81": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Assign a name (which will be visible on MonALISA)\n\nUpon launching the jobs on the GRID, the system waits until they are completed and then automatically downloads the output files to your local disc.\n\nSpecify which files you want to save (all others will be deleted immediately in the workspace). The disk specifier indicates the number of replicas saved for security: \n1 replica for log files \n2 replicas for ROOT files \n\nTo retain ROOT files produced by reconstruction, add: \n\"tf*/*.root@disk=2\"\n\nUsing workflows requires at least 16 GB of RAM and an 8-core machine. You can try to bypass the memory limit (if running pp collisions, you likely won't hit it):\n% o2_dpg_workflow_runner.py -f workflow.json -tt aod --mem-limit 16000\n\n28 / 38\n\fOutput location\n\nWaiting for jobs to return ... Last status: - SJob done \nFetching results \nFetching result files for subjob 1 into /tmp/alien_work/test-20240204-082533",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "9fb222c60731214f46f64fa72b977b67e383b7074b4241bd10dbe20bb827e28e": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "This is where the output is saved.\n\nIt is located outside the current working directory!\n\n29 / 38\n\fEstimate expected resources\n\n1. Running time is listed in the logtmp file.\n\n[O2sim/latest] ~ %> cd /tmp/alien_work/test-20240204-082533 \n[O2sim/latest] ~ %> cd 001 \n[O2sim/latest] ~ %> vi logtmp_3014395312.txt\n\n**** Pipeline completed successfully (global_runtime : 533.892s) *****\n\nExpected running time is calculated as:\n\nNtarget\nevents\nNtest\n\nevents\n\n× Δttest ×\n\nNparallel workers\n10 000\n\n1 day = 24 × 60 × 60 s = 86400 s → 1s = 0.00001157407 days\n\n(\n\nNparallel workers = 8\n\n on the GRID)\n\nExpected running time is:\n\nNtarget\nevents\nNtest\n\nevents\n\n× Δttest ×\n\nNparallel workers\n10 000\n\n× 0.00001157407 [days@10kCPU]\n\n30 / 38\n\fEstimate expected resources\n\n2. Storage can be determined by summing the sizes of all produced files (bottom right number).\n\nExpected storage is:\n\nNtarget\nevents\nNtest\n\nevents\n\n× sizetest\n\n31 / 38\n\fScript examples",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "d985d4fc2c5d09fdb5eb1406570eb11ed117a3bca58368ca6fdafd55c9d621ca": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXPECTED STORAGE =\n\nNtarget\nevents\nNtest\n\nevents\n\n× sizetest\n\n31 / 38\n\fSCRIPT EXAMPLES\n\nMultiple workflow configuration scripts from various PWGs are available at  \nhttps://github.com/AliceO2Group/O2DPG/tree/master/MC/run\n\nExample: runPromptJpsi_midy_pp.sh\n\n#!/usr/bin/env bash \n\n# Ensure O2DPG and O2 are loaded \n[ ! \"${O2DPG_ROOT}\" ] && echo \"Error: This script requires O2DPG to be loaded\" && exit 1 \n[ ! \"${O2_ROOT}\" ] && echo \"Error: This script requires O2 to be loaded\" && exit 1 \n\n# ----------- LOAD UTILITY FUNCTIONS -------------------------- \n. ${O2_ROOT}/share/scripts/jobutils.sh  \n\nRNDSEED=${RNDSEED:-0} \nNSIGEVENTS=${NSIGEVENTS:-1} \nNBKGEVENTS=${NBKGEVENTS:-1} \nNWORKERS=${NWORKERS:-8} \nNTIMEFRAMES=${NTIMEFRAMES:-1}",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "d4123d50200e229764be875cc49ca7a980b3abae4a10e29b5e9ad7659d156302": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -gen external -j ${NWORKERS} -ns ${NSIGEVENTS} -tf ${NTIMEFRAMES} -e TGeant4 -mod \"--skipModules ZDC\" \\\n  -confKey \"GeneratorExternal.fileName=${O2DPG_ROOT}/MC/config/PWGDQ/external/generator/GeneratorParamPromptJpsiToElectronEvtGen_pp13TeV.C;GeneratorExternal.funcName=GeneratorParamPromptJpsiToElectronEvtGen_pp13TeV()\" \\\n         -genBkg pythia8 -procBkg inel -colBkg pp --embedding -nb ${NBKGEVENTS} \n\n# execute the workflow \n${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json\n\n32 / 38\n\fAnchored MC Productions\n\nAnchored MC simulations: real detector conditions (dead channels, distortions, alignment, etc.)\n\nExample of a script (run_anchored_mc.sh) to execute anchored MC simulation (more details here):",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "d5f0b6cb7aea2e2b800a0b2fcc70900f5677593d2f171a0a65860b9d9cb7ae9a": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "EXAMPLE OF A SCRIPT (run_anchored_mc.sh) TO EXECUTE AN ANCHORED MC SIMULATION (MORE DETAILS HERE):\n\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass2 \nexport ALIEN_JDL_MCANCHOR=apass2 \nexport ALIEN_JDL_COLLISIONSYSTEM=pp \nexport ALIEN_JDL_CPULIMIT=8 \nexport ALIEN_JDL_LPMPASSNAME=apass2 \nexport ALIEN_JDL_LPMRUNNUMBER=544167 \nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC \nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp \nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a1 \nexport ALIEN_JDL_LPMANCHORRUN=544167 \nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o \nexport ALIEN_JDL_LPMANCHORYEAR=2023 \nexport ALIEN_JDL_SIM_OPTIONS=\"-gen external -proc cdiff -ini ${O2DPG_ROOT}/MC/\nconfig/PWGLF/ini/GeneratorLFStrangenessTriggered.ini\" \n\nAT THE MOMENT, NOT IMPLEMENTED \n\nHOW TO RUN WITH DIFFERENT RUN NUMBERS? \n→\n→\n     potentially, create an additional script for that \n\n workaround: execute anchorMC.sh multiple",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "71188bfe97f40981d71c158b5c767c532b8e7d1424752fcba1cc0fe5a8ace010": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "WORKAROUND: execute anchorMC.sh multiple times\n\nexport NTIMEFRAMES=2 \nexport NSIGEVENTS=2 \nexport SPLITID=100 \nexport PRODSPLIT=153 \nexport CYCLE=0 \nexport ALIEN_PROC_ID=2963436952 \n\n${O2DPG_ROOT}/MC/run/ANCHOR/anchorMC.sh\n\n33 / 38\n\fAnchored MC Productions\n\nAnchored MC simulations: real detector conditions (dead channels, distortions, alignment, etc.)\n\nExample of a script (run_anchored_mc.sh) to run anchored MC simulation (more details here):",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "76d4402944cecdd71e8928ab8ba171416126c5c16896bc4247467b26620d2156": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Example of a script (run_anchored_mc.sh) to execute anchored MC simulation (more details here): \n\nexport ALIEN_JDL_LPMANCHORPASSNAME=apass2 \nexport ALIEN_JDL_MCANCHOR=apass2 \nexport ALIEN_JDL_COLLISIONSYSTEM=pp \nexport ALIEN_JDL_CPULIMIT=8 \nexport ALIEN_JDL_LPMPASSNAME=apass2 \nexport ALIEN_JDL_LPMRUNNUMBER=544167 \nexport ALIEN_JDL_LPMPRODUCTIONTYPE=MC \nexport ALIEN_JDL_LPMINTERACTIONTYPE=pp \nexport ALIEN_JDL_LPMPRODUCTIONTAG=LHC24a1 \nexport ALIEN_JDL_LPMANCHORRUN=544167 \nexport ALIEN_JDL_LPMANCHORPRODUCTION=LHC22o \nexport ALIEN_JDL_LPMANCHORYEAR=2023 \nexport ALIEN_JDL_SIM_OPTIONS=\"-gen external -proc cdiff -ini ${O2DPG_ROOT}/MC/\nconfig/PWGLF/ini/GeneratorLFStrangenessTriggered.ini\" \n\nHow to run for different run numbers? \n Execute anchorMC.sh multiple times with \n→\n     varying run numbers (consider creating another \n     script for this)\n\nexport NTIMEFRAMES=2 \nexport NSIGEVENTS=2 \nexport SPLITID=100 \nexport PRODSPLIT=153 \nexport CYCLE=0 \nexport ALIEN_PROC_ID=2963436952",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "94f78ebf57458c514a5de1b0c1b2b5d0d95161527ae637e972b69f23530e19a1": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To execute an anchored MC production on the GRID:\n\n[O2sim/latest] ~ %> ${O2DPG_ROOT}/GRID/utils/grid_submit.sh --script \nrun_anchored_mc.sh --jobname name --outputspec \"*.log@disk=1\",\"*.root@disk=2\" --\npackagespec \"VO_ALICE@O2sim::v20240221-1\" --wait --fetch-output \n\nScript created in the previous slide\n\nTo view all existing MC productions and their statuses (running, completed, software update, etc.):\n\n1. Access Monalisa\n2. Select \"MC production cycles\"\n\nRequesting an MC production:\n\n1. Conduct a test on the GRID with your chosen generator and settings\n\n2. Estimate the running time, storage needs, and the number of events\n\n3. Submit the link to the GRID folder containing the configuration/JDL used for the tests and results",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "dc92a2f28554676665433f02404a507690a2638429defc92fc39b7f19eb641fd": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "3. Supply the link to the GRID folder containing the configuration and JDL files used for the tests and results.\n\n37 / 38\n\fRequesting a MC production: repetition enhances understanding\n\n1. Conduct a test on the GRID with your chosen generator and settings\n\n2. Offer estimates for the execution time, expected storage, and the number of events\n\n3. Share the link to the GRID folder with the configuration and JDL files used for the tests and results\n\nThen, you have my approval to proceed!\n\n37 / 38\n\fSummary\n\nEnjoy running MC simulations\n\nShould you encounter issues or need support, please reach out to us:\n\nMattermost channels (preferred over private email): O2-simulation + O2DPG \nJIRA tickets for feature requests/bug reports (components simulation or O2DPG)\n\n38 / 38\n\fSummary\n\nEnjoy running MC simulations\n\nShould you encounter issues or need support, please reach out to us:",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "174f2e17e43506f0a5c3fea1fa79f842cf8e9623826d0be8e1fb0d12a5795d03": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "In case of issues or if you need support, please do not hesitate to reach out:\n\nPreferred method: Mattermost channels (O2-simulation and O2DPG)\nFor feature requests or bug reports, use JIRA tickets (related to simulation or O2DPG components)\n\nThank you for your attention!\n\n38 / 38\n\fBackup Slides\n\fGrid certificate\n\nTo run MC simulations with O2DPG, you require a valid GRID certificate  \n→\nessential for accessing CCDB data\n\nTo obtain your GRID certificate:\n\n1. Visit https://ca.cern.ch/ca/\n2. Click on \"New GRID User Certificate\"\n\n1 / 14\n\fGrid certificate\n\nTo run MC simulations with O2DPG, you need a valid GRID certificate  \n→\nnecessary to access CCDB information\n\nTo get your GRID certificate:\n\n1. Go to https://ca.cern.ch/ca/\n2. Click on \"New GRID User Certificate\"\n3.\n\nCreate a password to secure your certificate",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "4b9379eafbff89cfe6905c2c70afc1a22515c0bae37d272208b8b177dae6a0f7": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Invent a password to secure your certificate.\n\nThe Condition and Calibration Data Base (CCDB)  \nis a ROOT file designed to hold calibration and  \nalignment data.\n\n2 / 14\n\fGrid certificate\n\nFor running MC simulations with O2DPG, a valid GRID certificate is required  \n→\n\nnecessary for accessing CCDB information.\n\nTo obtain your GRID certificate, follow these steps:\n\n1. Visit https://ca.cern.ch/ca/\n2. Select \"New GRID User Certificate\"\n3.\n4. Proceed to \"Get Grid User Certificate\"\n\nInvent a password to secure your certificate.\n\nThe Condition and Calibration Data Base (CCDB)  \nis a ROOT file designed to hold calibration and  \nalignment data.\n\n3 / 14\n\fGrid certificate\n\nFor running MC simulations with O2DPG, a valid GRID certificate is required  \n→\n\nnecessary for accessing CCDB information.\n\nThe Condition and Calibration Data Base (CCDB)  \nis a ROOT file designed to hold calibration and  \nalignment data.\n\nTo get your GRID certificate",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "a83a6cde70b9f38d274220c1cfb89dd3823deb56dff0b7c03cde8cb704d6068f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To obtain your GRID certificate,\n\n1. visit https://ca.cern.ch/ca/\n2. select \"New GRID User Certificate\"\n3.\n4. then click on \"Get Grid User certificate\"\n5. download the certificate once it's ready\n\nChoose a password to secure your certificate\n\nFor running MC simulations with O2DPG, you require a valid GRID certificate  \nwhich is necessary to access the CCDB file\n\nThe Condition and Calibration Data Base (CCDB)  \nis a ROOT file storing calibration and  \nalignment data\n\nTo get your GRID certificate,\n\nInvent a password to protect your certificate\n\n1. go to https://ca.cern.ch/ca/\n2. Click on \"New GRID User Certificate\"\n3.\n4. click on \"Get Grid User certificate\"\n5. download the certificate when it's ready\n6. you will receive a file named \"myCertificate.p12\" which you can store as preferred (such as your Desktop)\n\nCreate the .globus directory (where the system expects your certificate) and place \"myCertificate.p12\" there.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "edea71234e26c44cdcbdcb25e07ed1473b7d8fe40d750f75efeb2d69322c205c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "DOCUMENT:\n    $ mkdir ~/.globus \n$ cp ~/Desktop/myCertificate.p12 ~/.globus\n\nNavigate to the .globus directory and extract the private and public keys from your certificate:\n\n$ cd ~/.globus \n$ openssl pkcs12 -in myCertificate.p12 -clcerts -nokeys -out usercert.pem \n$ openssl pkcs12 -in myCertificate.p12 -nocerts -out userkey.pem  \n\nAdjust the file permissions:\n\n$ chmod 400 userkey.pem \n$ chmod 400 usercert.pem \n\nchmod 400 means only the file owner can read the file.\n\nN.B. During both steps, you will be prompted to enter the password that protects your certificate.\n\n6 / 14\n\fGrid certificate\n\nYou are now ready to connect to the GRID!  \n\nLoad the environment and then attempt to obtain a token (valid for 24 hours):\n\n$ alien-token-init \nEnter PEM pass phrase: \nDN >>> C=ch/O=AliEn2/CN=Users/CN=alcaliva/OU=alcaliva \nISSUER >>> C=ch/O=AliEn2/CN=AliEn CA \nBEGIN >>> 2024-01-26 14:01:56 \nEXPIRE >>> 2024-02-26 16:01:56\n\nProvide the certificate password  \n(N.B. The characters will not be visible)",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "708119d4c2c938286e704bd4fef7d5060a1ddf55099f9ac16f6549be276be87c": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Enter the password for your certificate  \n(Keep in mind that the characters will not be visible)\n\nIf you fail to load the environment, you will encounter an error like:\n\n$ zsh: command not found: alien-token-init\n\n7 / 14\n\fGrid certificate on LXPLUS\n\nFor work on LXPLUS, you must copy your GRID certificate to your virtual space. \n\nFirst, navigate to your .globus directory and copy your certificate, userkey, and usercert to LXPLUS:\n\n$ cd ~/.globus \n$ scp *.* alcaliva@lxplus.cern.ch:/afs/cern.ch/user/a/alcaliva/\n\nSecure copy protocol (SCP) is used for secure file transfer between a local and a remote host, and you will need to enter your CERN account password.\n→\n\nLog into your virtual space on LXPLUS, create a .globus directory, and move all the files into it:\n\n$ ssh -X alcaliva@lxplus.cern.ch \n$ (alcaliva@lxplus.cern.ch) Password: \n$ mkdir .globus \n$ mv myCertificate.p12 userkey.pem usercert.pem .globus\n\nYou are now prepared to obtain a token from LXPLUS!\n\n8 / 14\n\fImporting your Grid certificate to the browser",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "27cc14c5a7ba9c376f04368e7928bdf5194862f23db49565902323b37b286d7f": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "To monitor your jobs running on the GRID, visit alimonitor. You need to import your GRID digital certificate into your browser to access it.\n\nFor Google Chrome, follow these steps:\n\n1. Click on the      symbol in the upper right corner of the browser and navigate to Settings.\n2. Select \"Privacy and security,\" then \"Security,\" and finally \"Manage certificates.\"",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "b40aa8ded6eac59a1d65223011b6e680f1824d1492650dc3b4a8440703d1011b": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "Instructions for Google Chrome:\n\n1. Click on the      icon (upper right corner of the web browser) and navigate to Settings.\n2. Select \"Privacy and security\", then \"Security\", and finally \"Manage certificates\".\n\nTo monitor jobs running on the GRID, visit alimonitor.\n\nTo access it, you need to import your GRID digital certificate into your browser.\n\nInstructions for Google Chrome:\n\n1. Click on the      icon (upper right corner of the web browser) and navigate to Settings.\n2. Select \"Privacy and security\", then \"Security\", and finally \"Manage certificates\".\n3. This will open the \"Keychain Access\" window.\n4. Ensure that \"login\" and \"Certificates\" are selected.",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ],
    "66638329f56bf20bacfd0a0349a25e527dc038bff8fcea86325e295ad679ebbb": [
        {
            "model": "Qwen2.5-7B-Instruct",
            "paraphrased_text": "INSTRUCTIONS FOR GOOGLE CHROME:\n\n1. Tap on the ⚙️ icon (located in the upper right corner of the web browser) and navigate to Settings.\n2. Select \"Privacy and security\", then click on \"Security\" and subsequently on \"Manage certificates\".\n3. This action will open the \"Keychain Access\" window.\n4. Ensure that \"login\" and \"Certificates\" are checked.\n5. Go to File and choose \"Import items\".\n6. Locate and select the \"myCertificate.p12\" file, then click \"Open\".\n7. Close Chrome and relaunch it.\n\n13 / 14\n\fIMPORTING YOUR GRID CERTIFICATE TO THE BROWSER\n\nHead to alimonitor and choose the GRID digital certificate\n\nYou are now ready to monitor your jobs on the GRID!\n\n14 / 14",
            "link": "https://github.com/ta5946/alice-rag/blob/master/data/knowledge_base/MC_Tutorials.pdf"
        }
    ]
}